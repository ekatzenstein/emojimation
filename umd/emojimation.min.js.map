{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///emojimation.min.js","webpack:///webpack/bootstrap 23d3a9113317dc632963","webpack:///./~/babel-runtime/~/core-js/library/modules/_core.js","webpack:///./~/babel-runtime/~/core-js/library/modules/_global.js","webpack:///./~/babel-runtime/~/core-js/library/modules/_descriptors.js","webpack:///./~/babel-runtime/~/core-js/library/modules/_export.js","webpack:///./~/babel-runtime/~/core-js/library/modules/_has.js","webpack:///./~/babel-runtime/~/core-js/library/modules/_object-dp.js","webpack:///./~/babel-runtime/~/core-js/library/modules/_to-iobject.js","webpack:///./~/babel-runtime/~/core-js/library/modules/_fails.js","webpack:///./~/babel-runtime/~/core-js/library/modules/_hide.js","webpack:///./~/babel-runtime/~/core-js/library/modules/_object-keys.js","webpack:///./~/babel-runtime/~/core-js/library/modules/_wks.js","webpack:///./~/babel-runtime/~/core-js/library/modules/_an-object.js","webpack:///./~/babel-runtime/~/core-js/library/modules/_is-object.js","webpack:///./~/d3-interpolate/src/color.js","webpack:///./~/babel-runtime/~/core-js/library/modules/_object-pie.js","webpack:///./~/babel-runtime/~/core-js/library/modules/_property-desc.js","webpack:///./~/babel-runtime/~/core-js/library/modules/_to-object.js","webpack:///./~/babel-runtime/~/core-js/library/modules/_uid.js","webpack:///./~/d3-interpolate/src/number.js","webpack:///./~/babel-runtime/helpers/extends.js","webpack:///./~/babel-runtime/helpers/typeof.js","webpack:///./~/babel-runtime/~/core-js/library/modules/_defined.js","webpack:///./~/babel-runtime/~/core-js/library/modules/_enum-bug-keys.js","webpack:///./~/babel-runtime/~/core-js/library/modules/_iterators.js","webpack:///./~/babel-runtime/~/core-js/library/modules/_library.js","webpack:///./~/babel-runtime/~/core-js/library/modules/_object-create.js","webpack:///./~/babel-runtime/~/core-js/library/modules/_object-gops.js","webpack:///./~/babel-runtime/~/core-js/library/modules/_set-to-string-tag.js","webpack:///./~/babel-runtime/~/core-js/library/modules/_shared-key.js","webpack:///./~/babel-runtime/~/core-js/library/modules/_shared.js","webpack:///./~/babel-runtime/~/core-js/library/modules/_to-integer.js","webpack:///./~/babel-runtime/~/core-js/library/modules/_to-primitive.js","webpack:///./~/babel-runtime/~/core-js/library/modules/_wks-define.js","webpack:///./~/babel-runtime/~/core-js/library/modules/_wks-ext.js","webpack:///./~/d3-color/src/color.js","webpack:///./~/d3-color/src/define.js","webpack:///./~/d3-interpolate/src/basis.js","webpack:///./~/d3-interpolate/src/value.js","webpack:///./~/d3-timer/src/timer.js","webpack:///external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}","webpack:///./~/babel-runtime/core-js/object/define-property.js","webpack:///./~/babel-runtime/core-js/object/get-prototype-of.js","webpack:///./~/babel-runtime/core-js/object/keys.js","webpack:///./~/babel-runtime/helpers/classCallCheck.js","webpack:///./~/babel-runtime/helpers/createClass.js","webpack:///./~/babel-runtime/helpers/defineProperty.js","webpack:///./~/babel-runtime/helpers/inherits.js","webpack:///./~/babel-runtime/helpers/possibleConstructorReturn.js","webpack:///./~/babel-runtime/~/core-js/library/modules/_cof.js","webpack:///./~/babel-runtime/~/core-js/library/modules/_ctx.js","webpack:///./~/babel-runtime/~/core-js/library/modules/_dom-create.js","webpack:///./~/babel-runtime/~/core-js/library/modules/_ie8-dom-define.js","webpack:///./~/babel-runtime/~/core-js/library/modules/_iobject.js","webpack:///./~/babel-runtime/~/core-js/library/modules/_iter-define.js","webpack:///./~/babel-runtime/~/core-js/library/modules/_object-gopd.js","webpack:///./~/babel-runtime/~/core-js/library/modules/_object-gopn.js","webpack:///./~/babel-runtime/~/core-js/library/modules/_object-gpo.js","webpack:///./~/babel-runtime/~/core-js/library/modules/_object-keys-internal.js","webpack:///./~/babel-runtime/~/core-js/library/modules/_object-sap.js","webpack:///./~/babel-runtime/~/core-js/library/modules/_redefine.js","webpack:///./~/d3-color/src/math.js","webpack:///./~/d3-interpolate/src/array.js","webpack:///./~/d3-interpolate/src/basisClosed.js","webpack:///./~/d3-interpolate/src/constant.js","webpack:///./~/d3-interpolate/src/date.js","webpack:///./~/d3-interpolate/src/object.js","webpack:///./~/d3-interpolate/src/rgb.js","webpack:///./~/d3-interpolate/src/string.js","webpack:///./~/resonance/NodeGroup/index.js","webpack:///./src/index.js","webpack:///./~/babel-runtime/core-js/object/assign.js","webpack:///./~/babel-runtime/core-js/object/create.js","webpack:///./~/babel-runtime/core-js/object/set-prototype-of.js","webpack:///./~/babel-runtime/core-js/symbol.js","webpack:///./~/babel-runtime/core-js/symbol/iterator.js","webpack:///./~/babel-runtime/~/core-js/library/fn/object/assign.js","webpack:///./~/babel-runtime/~/core-js/library/fn/object/create.js","webpack:///./~/babel-runtime/~/core-js/library/fn/object/define-property.js","webpack:///./~/babel-runtime/~/core-js/library/fn/object/get-prototype-of.js","webpack:///./~/babel-runtime/~/core-js/library/fn/object/keys.js","webpack:///./~/babel-runtime/~/core-js/library/fn/object/set-prototype-of.js","webpack:///./~/babel-runtime/~/core-js/library/fn/symbol/index.js","webpack:///./~/babel-runtime/~/core-js/library/fn/symbol/iterator.js","webpack:///./~/babel-runtime/~/core-js/library/modules/_a-function.js","webpack:///./~/babel-runtime/~/core-js/library/modules/_add-to-unscopables.js","webpack:///./~/babel-runtime/~/core-js/library/modules/_array-includes.js","webpack:///./~/babel-runtime/~/core-js/library/modules/_enum-keys.js","webpack:///./~/babel-runtime/~/core-js/library/modules/_html.js","webpack:///./~/babel-runtime/~/core-js/library/modules/_is-array.js","webpack:///./~/babel-runtime/~/core-js/library/modules/_iter-create.js","webpack:///./~/babel-runtime/~/core-js/library/modules/_iter-step.js","webpack:///./~/babel-runtime/~/core-js/library/modules/_keyof.js","webpack:///./~/babel-runtime/~/core-js/library/modules/_meta.js","webpack:///./~/babel-runtime/~/core-js/library/modules/_object-assign.js","webpack:///./~/babel-runtime/~/core-js/library/modules/_object-dps.js","webpack:///./~/babel-runtime/~/core-js/library/modules/_object-gopn-ext.js","webpack:///./~/babel-runtime/~/core-js/library/modules/_set-proto.js","webpack:///./~/babel-runtime/~/core-js/library/modules/_string-at.js","webpack:///./~/babel-runtime/~/core-js/library/modules/_to-index.js","webpack:///./~/babel-runtime/~/core-js/library/modules/_to-length.js","webpack:///./~/babel-runtime/~/core-js/library/modules/es6.array.iterator.js","webpack:///./~/babel-runtime/~/core-js/library/modules/es6.object.assign.js","webpack:///./~/babel-runtime/~/core-js/library/modules/es6.object.create.js","webpack:///./~/babel-runtime/~/core-js/library/modules/es6.object.define-property.js","webpack:///./~/babel-runtime/~/core-js/library/modules/es6.object.get-prototype-of.js","webpack:///./~/babel-runtime/~/core-js/library/modules/es6.object.keys.js","webpack:///./~/babel-runtime/~/core-js/library/modules/es6.object.set-prototype-of.js","webpack:///./~/babel-runtime/~/core-js/library/modules/es6.string.iterator.js","webpack:///./~/babel-runtime/~/core-js/library/modules/es6.symbol.js","webpack:///./~/babel-runtime/~/core-js/library/modules/es7.symbol.async-iterator.js","webpack:///./~/babel-runtime/~/core-js/library/modules/es7.symbol.observable.js","webpack:///./~/babel-runtime/~/core-js/library/modules/web.dom.iterable.js","webpack:///./~/d3-color/src/cubehelix.js","webpack:///./~/d3-color/src/lab.js","webpack:///./~/d3-interpolate/src/cubehelix.js","webpack:///./~/d3-interpolate/src/hcl.js","webpack:///./~/d3-interpolate/src/hsl.js","webpack:///./~/d3-interpolate/src/lab.js","webpack:///./~/d3-interpolate/src/quantize.js","webpack:///./~/d3-interpolate/src/round.js","webpack:///./~/d3-interpolate/src/transform/decompose.js","webpack:///./~/d3-interpolate/src/transform/index.js","webpack:///./~/d3-interpolate/src/transform/parse.js","webpack:///./~/d3-interpolate/src/zoom.js","webpack:///./~/d3-timer/src/interval.js","webpack:///./~/d3-timer/src/timeout.js","webpack:///./~/d3/build/d3.js","webpack:///./~/lodash.once/index.js","webpack:///./~/resonance/Node/Node.js","webpack:///./~/resonance/Node/index.js","webpack:///./~/resonance/NodeGroup/NodeGroup.js","webpack:///./~/resonance/TickGroup/TickGroup.js","webpack:///./~/resonance/TickGroup/index.js","webpack:///./~/resonance/core/mergeKeys.js","webpack:///./~/resonance/core/transition/index.js","webpack:///./~/resonance/core/transition/schedule.js","webpack:///./~/resonance/core/transition/stop.js","webpack:///./~/resonance/core/transition/transition.js","webpack:///./~/resonance/core/transition/tween.js","webpack:///./~/resonance/core/types.js","webpack:///./public/emotions.json","webpack:///./public/EmojiBackground.png"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_41__","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","core","version","__e","global","window","Math","self","Function","__g","a","ctx","hide","$export","type","source","key","own","out","IS_FORCED","F","IS_GLOBAL","G","IS_STATIC","S","IS_PROTO","P","IS_BIND","B","IS_WRAP","W","expProto","target","undefined","C","b","arguments","length","apply","virtual","R","U","it","anObject","IE8_DOM_DEFINE","toPrimitive","dP","f","O","Attributes","e","TypeError","IObject","defined","__webpack_exports__","__WEBPACK_IMPORTED_MODULE_0__src_color__","__WEBPACK_IMPORTED_MODULE_1__src_lab__","__WEBPACK_IMPORTED_MODULE_2__src_cubehelix__","exec","createDesc","$keys","enumBugKeys","keys","store","uid","Symbol","USE_SYMBOL","isObject","linear","t","exponential","y","pow","hue","round","__WEBPACK_IMPORTED_MODULE_0__constant__","isNaN","gamma","nogamma","propertyIsEnumerable","bitmap","writable","id","px","random","concat","toString","_assign","_assign2","obj","default","_interopRequireDefault","_iterator","_iterator2","_symbol","_symbol2","_typeof","constructor","split","dPs","IE_PROTO","Empty","createDict","iframeDocument","iframe","style","display","appendChild","src","contentWindow","document","open","write","lt","close","create","Properties","result","getOwnPropertySymbols","def","has","TAG","tag","stat","shared","ceil","floor","fn","val","valueOf","LIBRARY","wksExt","$Symbol","charAt","Color","color","format","trim","toLowerCase","reHex3","parseInt","Rgb","reHex6","rgbn","reRgbInteger","reRgbPercent","reRgbaInteger","rgba","reRgbaPercent","reHslPercent","hsla","reHslaPercent","named","NaN","r","g","rgbConvert","rgb","opacity","h","Hsl","hslConvert","min","max","hsl","hsl2rgb","m1","m2","darker","brighter","__WEBPACK_IMPORTED_MODULE_0__define__","reI","reN","reP","RegExp","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","displayable","k","extend","parent","definition","basis","t1","v0","v1","v2","v3","t2","t3","values","__WEBPACK_IMPORTED_MODULE_0_d3_color__","__WEBPACK_IMPORTED_MODULE_1__rgb__","__WEBPACK_IMPORTED_MODULE_2__array__","__WEBPACK_IMPORTED_MODULE_3__date__","__WEBPACK_IMPORTED_MODULE_4__number__","__WEBPACK_IMPORTED_MODULE_5__object__","__WEBPACK_IMPORTED_MODULE_6__string__","__WEBPACK_IMPORTED_MODULE_7__constant__","Date","Array","isArray","__WEBPACK_IMPORTED_MODULE_0__src_timer__","__WEBPACK_IMPORTED_MODULE_1__src_timeout__","__WEBPACK_IMPORTED_MODULE_2__src_interval__","now","clockNow","setFrame","clearNow","clock","clockSkew","Timer","_call","_time","_next","timer","callback","delay","time","restart","timerFlush","frame","taskHead","wake","clockLast","timeout","nap","poke","pokeDelay","t0","Infinity","taskTail","sleep","clearTimeout","setTimeout","interval","clearInterval","setInterval","performance","requestAnimationFrame","stop","instance","Constructor","_defineProperty","_defineProperty2","defineProperties","props","descriptor","protoProps","staticProps","_setPrototypeOf","_setPrototypeOf2","_create","_create2","_typeof2","_typeof3","subClass","superClass","__proto__","ReferenceError","slice","aFunction","that","is","createElement","cof","redefine","Iterators","$iterCreate","setToStringTag","getPrototypeOf","ITERATOR","BUGGY","returnThis","Base","NAME","next","DEFAULT","IS_SET","FORCED","methods","IteratorPrototype","getMethod","kind","proto","DEF_VALUES","VALUES_BUG","$native","$default","$entries","$anyNative","entries","pIE","toIObject","gOPD","getOwnPropertyDescriptor","hiddenKeys","getOwnPropertyNames","toObject","ObjectProto","arrayIndexOf","names","push","fails","KEY","exp","deg2rad","rad2deg","PI","__WEBPACK_IMPORTED_MODULE_0__value__","nb","na","x","__WEBPACK_IMPORTED_MODULE_0__basis__","setTime","rgbSpline","spline","colors","rgbBasis","rgbBasisClosed","__WEBPACK_IMPORTED_MODULE_1__basis__","__WEBPACK_IMPORTED_MODULE_2__basisClosed__","__WEBPACK_IMPORTED_MODULE_3__color__","rgbGamma","start","end","zero","one","__WEBPACK_IMPORTED_MODULE_0__number__","reA","reB","am","bm","bs","bi","lastIndex","q","index","join","_NodeGroup","_NodeGroup2","_classCallCheck","_possibleConstructorReturn","_inherits","setPrototypeOf","__WEBPACK_IMPORTED_MODULE_0_react__","__WEBPACK_IMPORTED_MODULE_0_react___default","__WEBPACK_IMPORTED_MODULE_1_d3__","__WEBPACK_IMPORTED_MODULE_2_resonance__","__WEBPACK_IMPORTED_MODULE_3__public_emotions_json__","__WEBPACK_IMPORTED_MODULE_3__public_emotions_json___default","__WEBPACK_IMPORTED_MODULE_4__public_EmojiBackground_png__","__WEBPACK_IMPORTED_MODULE_4__public_EmojiBackground_png___default","_extends","assign","Tweener","_Component","componentWillMount","rangeRound","line","curve","svgShading","height","width","viewBox","preserveAspectRatio","xlinkHref","render","_this2","emotion","_emotions$emotion","le","re","lb","rb","mouth","head","tongue","headColor","tongueColor","eyeColor","browColor","mouthColor","dataArray","data","fill","position","left","top","keyAccessor","update","transform","timing","duration","nodes","map","_ref","state","defaultProps","responsive","$Object","D","desc","toLength","toIndex","IS_INCLUDES","$this","el","fromIndex","getKeys","gOPS","getSymbols","symbols","isEnum","documentElement","arg","done","META","setDesc","isExtensible","FREEZE","preventExtensions","setMeta","w","fastKey","getWeak","onFreeze","meta","NEED","$assign","A","K","forEach","T","aLen","j","gOPN","windowNames","getWindowNames","check","set","test","buggy","toInteger","TO_STRING","pos","String","charCodeAt","addToUnscopables","step","iterated","_t","_i","_k","Arguments","$getPrototypeOf","$at","point","DESCRIPTORS","$fails","wks","wksDefine","keyOf","enumKeys","gOPNExt","$GOPD","$DP","$JSON","JSON","_stringify","stringify","HIDDEN","TO_PRIMITIVE","SymbolRegistry","AllSymbols","OPSymbols","USE_NATIVE","QObject","setter","findChild","setSymbolDesc","protoDesc","wrap","sym","isSymbol","iterator","$defineProperty","$defineProperties","$create","$propertyIsEnumerable","E","$getOwnPropertyDescriptor","$getOwnPropertyNames","$getOwnPropertySymbols","IS_OP","$set","for","keyFor","useSetter","useSimple","replacer","$replacer","args","TO_STRING_TAG","collections","Collection","cubehelixConvert","Cubehelix","__WEBPACK_IMPORTED_MODULE_1__color__","BC_DA","ED","EB","bl","sqrt","atan2","__WEBPACK_IMPORTED_MODULE_2__math__","cubehelix","cosh","cos","sinh","sin","labConvert","Lab","Hcl","rgb2xyz","xyz2lab","Xn","Yn","Zn","lab","lab2xyz","xyz2rgb","hclConvert","hcl","z","__WEBPACK_IMPORTED_MODULE_0__src_value__","__WEBPACK_IMPORTED_MODULE_1__src_array__","__WEBPACK_IMPORTED_MODULE_2__src_basis__","__WEBPACK_IMPORTED_MODULE_3__src_basisClosed__","__WEBPACK_IMPORTED_MODULE_4__src_date__","__WEBPACK_IMPORTED_MODULE_5__src_number__","__WEBPACK_IMPORTED_MODULE_6__src_object__","__WEBPACK_IMPORTED_MODULE_7__src_round__","__WEBPACK_IMPORTED_MODULE_8__src_string__","__WEBPACK_IMPORTED_MODULE_9__src_transform_index__","__WEBPACK_IMPORTED_MODULE_10__src_zoom__","__WEBPACK_IMPORTED_MODULE_11__src_rgb__","__WEBPACK_IMPORTED_MODULE_12__src_hsl__","__WEBPACK_IMPORTED_MODULE_13__src_lab__","__WEBPACK_IMPORTED_MODULE_14__src_hcl__","__WEBPACK_IMPORTED_MODULE_15__src_cubehelix__","__WEBPACK_IMPORTED_MODULE_16__src_quantize__","cubehelixGamma","cubehelixLong","hclLong","hslLong","interpolator","samples","identity","degrees","translateX","translateY","rotate","skewX","scaleX","scaleY","atan","interpolateTransform","parse","pxComma","pxParen","degParen","pop","translate","xa","ya","xb","yb","scale","interpolateTransformCss","interpolateTransformSvg","__WEBPACK_IMPORTED_MODULE_1__parse__","parseCss","__WEBPACK_IMPORTED_MODULE_0__decompose__","cssNode","cssRoot","cssView","defaultView","getComputedStyle","getPropertyValue","removeChild","parseSvg","svgNode","createElementNS","setAttribute","baseVal","consolidate","matrix","tanh","rho","SQRT2","p0","p1","ux0","uy0","w0","ux1","uy1","w1","dx","dy","d2","log","d1","b0","b1","r0","r1","coshr0","u","__WEBPACK_IMPORTED_MODULE_0__timer__","total","tick","elapsed","ascendingComparator","ascending","pair","tickIncrement","count","power","LN10","error","e10","e5","e2","tickStep","step0","abs","step1","center","offset","bandwidth","entering","__axis","axis","orient","context","tickValues","ticks","tickArguments","domain","tickFormat","identity$1","spacing","tickSizeInner","tickPadding","range","range0","range1","copy","selection","path","selectAll","order","tickExit","exit","tickEnter","enter","append","attr","select","text","merge","insert","bottom","transition","epsilon","isFinite","getAttribute","parentNode","remove","right","tickSizeOuter","filter","each","_","slice$1","tickSize","axisTop","axisRight","axisBottom","axisLeft","dispatch","Error","Dispatch","parseTypenames","typenames","types","indexOf","noop","creatorInherit","ownerDocument","uri","namespaceURI","xhtml","creatorFixed","fullname","space","local","local$1","Local","nextId","filterContextListener","listener","group","contextListener","event","related","relatedTarget","compareDocumentPosition","event1","event0","__data__","parseTypenames$1","onRemove","typename","on","__on","removeEventListener","capture","onAdd","filterEvents","addEventListener","customEvent","sourceEvent","none","empty$1","EnterNode","datum","_parent","bindIndex","node","groupLength","dataLength","bindKey","keyValue","nodeByKeyValue","keyValues","keyPrefix","ascending$1","attrRemove","removeAttribute","attrRemoveNS","removeAttributeNS","attrConstant","attrConstantNS","setAttributeNS","attrFunction","v","attrFunctionNS","styleRemove","removeProperty","styleConstant","priority","setProperty","styleFunction","styleValue","propertyRemove","propertyConstant","propertyFunction","classArray","string","classList","ClassList","_node","_names","classedAdd","list","add","classedRemove","classedTrue","classedFalse","classedFunction","textRemove","textContent","textConstant","textFunction","htmlRemove","innerHTML","htmlConstant","htmlFunction","raise","nextSibling","lower","previousSibling","insertBefore","firstChild","constantNull","dispatchEvent","params","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","dispatchConstant","dispatchFunction","Selection","groups","parents","_groups","_parents","nopropagation","stopImmediatePropagation","yesdrag","view","noclick","selection$$1","noevent","MozUserSelect","__noselect","DragEvent","subject","active","identifier","defaultFilter$1","button","defaultContainer","defaultSubject","constant$3","color$$1","identity$2","decompose","reinterpolate","hsl$1","hue$$1","lab$1","hcl$1","cubehelix$1","cubehelix$$1","init","schedule","__transition","CREATED","set$1","STARTING","get$1","SCHEDULED","schedules","STARTED","timeout$1","RUNNING","ENDED","tween","ease","ENDING","tweenRemove","tween0","tween1","splice","tweenFunction","tweenValue","_id","attrRemove$1","attrRemoveNS$1","attrConstant$1","interpolate$$1","value1","value00","interpolate0","value0","attrConstantNS$1","getAttributeNS","attrFunction$1","value10","attrFunctionNS$1","attrTweenNS","_value","attrTween","delayFunction","delayConstant","durationFunction","durationConstant","easeConstant","every","onFunction","on0","on1","sit","removeFunction","styleRemove$1","interpolate$$2","styleRemoveEnd","styleConstant$1","styleFunction$1","styleTween","textConstant$1","textFunction$1","Transition","_name","newId","linear$1","quadIn","quadOut","quadInOut","cubicIn","cubicOut","cubicInOut","sinIn","halfPi","sinOut","sinInOut","pi","expIn","expOut","expInOut","circleIn","circleOut","circleInOut","bounceIn","bounceOut","b3","b2","b4","b6","b5","b7","b8","b9","bounceInOut","inherit","defaultTiming","nopropagation$1","defaultFilter","defaultExtent","svg","ownerSVGElement","local$$1","__brush","empty","extent","brushSelection","dim","output","brushX","brush$1","X","brushY","Y","brush","overlay","initialize","cursors","handle","handles","redraw","started","handleSize","emitter","Emitter","moved","point1","mouse","shifting","lockX","lockY","moving","noevent$1","move","point0","mode","MODE_SPACE","MODE_DRAG","signX","e0","e1","signY","N","n0","s0","n1","s1","MODE_HANDLE","MODE_CENTER","flipX","flipY","emit","ended","touches","touchending","keydowned","keyCode","keyupped","altKey","changedTouches","metaKey","signsX","signsY","shiftKey","beforestart","dragDisable","interrupt","listeners","selection1","selection0","input","interpolateValue","starting","BrushEvent","constant$4","compareValue","compare","Path","_x0","_y0","_x1","_y1","defaultSource","defaultTarget","defaultRadius","radius","defaultStartAngle","startAngle","defaultEndAngle","endAngle","Map","map$1","createObject","setObject","createMap","setMap","Set","set$2","objectConverter","columns","customConverter","row","inferColumns","rows","columnSet","column","tree","xm","ym","xp","yp","_root","leaf","x0","y0","x1","y1","_x","_y","addAll","xz","yz","cover","removeAll","defaultX","defaultY","quadtree","Quadtree","leaf_copy","vx","vy","find","nodeById","nodeId","x$1","y$1","formatSpecifier","specifier","FormatSpecifier","match","align","sign","symbol","comma","precision","formatTypes","defaultLocale","locale$1","formatLocale","formatPrefix","Adder","reset","add$1","adder","bv","av","acos","pi$3","asin","halfPi$2","haversin","sin$1","noop$1","streamGeometry","geometry","stream","streamGeometryType","streamLine","coordinates","closed","coordinate","lineStart","lineEnd","streamPolygon","polygonStart","polygonEnd","areaRingStart","areaStream","areaPointFirst","areaRingEnd","areaPoint","lambda00","phi00","lambda","phi","radians","lambda0","cosPhi0","cos$1","quarterPi","sinPhi0","dLambda","sdLambda","adLambda","cosPhi","sinPhi","areaRingSum","spherical","cartesian","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","boundsPoint","ranges","lambda0$1","lambda1","phi0","phi1","linePoint","normal","equatorial","inflection","phii","delta","lambda2","sign$$1","lambdai","degrees$1","antimeridian","angle","boundsLineStart","boundsStream","boundsLineEnd","boundsRingPoint","deltaSum","lambda00$1","phi00$1","boundsRingStart","boundsRingEnd","epsilon$2","rangeCompare","rangeContains","centroidPoint","centroidPointCartesian","W0","X0","Y0","Z0","centroidLineStart","centroidStream","centroidLinePointFirst","z0","centroidLinePoint","W1","X1","Y1","Z1","centroidLineEnd","centroidRingStart","centroidRingPointFirst","centroidRingEnd","centroidRingPoint","lambda00$2","phi00$2","cx","cy","cz","X2","Y2","Z2","rotationIdentity","tau$3","rotateRadians","deltaLambda","deltaPhi","deltaGamma","compose","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","invert","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","circleStream","direction","cosRadius","sinRadius","circleRadius","Intersection","points","other","entry","link$1","array","clipExtent","visible","interpolate","from","to","a1","corner","comparePoint","compareIntersection","ca","cb","activeStream","polygonInside","winding","polygon","a0","ring","bufferStream","segments","clean","startInside","cleanInside","clipPolygon","clipStream","first","v_","x_","y_","x__","y__","v__","rejoin","clipMin","clipMax","clipLine","clipBuffer","lengthLineStart","lengthStream","lengthPointFirst","lengthLineEnd","lambda0$2","sinPhi0$1","cosPhi0$1","lengthPoint","cosDelta","sinDelta","lengthSum","containsGeometry","containsGeometryType","containsPoint","distance","containsLine","ab","containsPolygon","polygonContains","ringRadians","pointRadians","graticuleX","sequence","graticuleY","graticule","lines","DX","DY","outline","reverse","extentMajor","extentMinor","stepMajor","stepMinor","graticule10","areaRingStart$1","areaStream$1","areaPointFirst$1","areaPoint$1","x00","x0$1","y00","y0$1","areaRingSum$1","areaRingEnd$1","boundsPoint$1","x0$2","y0$2","centroidPoint$1","X0$1","Y0$1","Z0$1","centroidLineStart$1","centroidStream$1","centroidPointFirstLine","centroidPointLine","x0$3","y0$3","X1$1","Y1$1","Z1$1","centroidLineEnd$1","centroidRingStart$1","centroidPointFirstRing","centroidRingEnd$1","centroidPointRing","x00$1","y00$1","X2$1","Y2$1","Z2$1","PathContext","_context","lengthPointFirst$1","lengthStream$1","lengthPoint$1","x00$2","x0$4","y00$2","y0$4","lengthSum$1","PathString","_string","circle$1","validSegment","segment","clipAntimeridianLine","sign0","sign1","clipAntimeridianIntersect","cosPhi1","sinLambda0Lambda1","clipAntimeridianInterpolate","transformer","TransformStream","fitExtent","projection","clip","geoStream","boundsStream$1","fitSize","size","resampleNone","project","resample$1","delta2","resampleLineTo","c0","c1","depth","phi2","x2","y2","dx2","dy2","dz","cosMinDistance","resampleStream","maxDepth","ringStart","ringPoint","ringEnd","a00","b00","c00","projectionMutator","projectAt","projectRotate","projectTransform","recenter","cache","cacheStream","theta","preclip","clipAntimeridian","postclip","identity$4","projectResample","resample","transformRadians","clipAngle","clipCircle","conicProjection","parallels","cylindricalEqualAreaRaw","forward","conicEqualAreaRaw","sy0","r0y","multiplex","streams","sphere","azimuthalRaw","azimuthalInvert","sc","cc","mercatorRaw","mercatorProjection","reclip","tany","conicConformalRaw","cy0","fy","equirectangularRaw","conicEquidistantRaw","gy","nx","gnomonicRaw","scaleTranslate","kx","ky","tx","ty","orthographicRaw","stereographicRaw","transverseMercatorRaw","defaultSeparation","meanX","children","reduce","meanXReduce","maxY","maxYReduce","leafLeft","leafRight","sum","leastCommonAncestor","aNodes","ancestors","bNodes","hierarchy","child","childs","Node","valued","defaultChildren","eachBefore","computeHeight","node_copy","copyData","Node$2","encloses","dr","encloseN","L","circle","l2","l0","l1","enclose1","enclose2","enclose3","tail","r2","x21","y21","r21","x3","y3","r3","a2","c2","a3","c3","d3","place","ax","ay","da","db","dc","intersects","distance2","Node$1","previous","packEnclose","circles","sj","sk","aa","ba","oa","ox","oy","pack","enclose","optional","required","constantZero","defaultRadius$1","radiusLeaf","packChildren","padding","translateChild","defaultId","defaultParentId","parentId","defaultSeparation$1","nextLeft","nextRight","moveSubtree","wm","wp","shift","change","executeShifts","nextAncestor","vim","ancestor","TreeNode","treeRoot","squarifyRatio","ratio","nodeValue","sumValue","minValue","maxValue","newRatio","minRatio","alpha","beta","i0","i1","dice","treemapDice","treemapSlice","lexicographicOrder","computeUpperHullIndexes","indexes","cross$1","Queue","_size","_error","_tasks","_data","_waiting","_active","_ended","_start","poke$1","start$1","abort","noabort","maybeNotify","queue","concurrency","fixCallback","xhr","hasResponse","responseType","response","responseText","responseOf","request$$1","ordinal","unknown","implicit","slice$4","band","rescale","range$$1","paddingInner","paddingOuter","ordinalRange","pointish","point$1","deinterpolateLinear","constant$9","deinterpolateClamp","deinterpolate","reinterpolateClamp","bimap","d0","polymap","bisectRight","clamp","continuous","piecewise","unit","map$3","number$1","interpolateRound","linearish","nice","linear$2","identity$6","reinterpolate$1","pow10","powp","base","logp","log10","log2","reflect","log$1","logs","pows","raise$1","exponent","pow$1","sqrt$1","quantile$$1","thresholds","threshold","invertExtent","sort","quantiles","quantize$1","threshold$1","newInterval","floori","offseti","field","date","t0$1","t1$1","weekday","setDate","getDate","getDay","setHours","getTimezoneOffset","durationMinute$1","durationWeek$1","utcWeekday","setUTCDate","getUTCDate","getUTCDay","setUTCHours","localDate","H","M","setFullYear","utcDate","UTC","setUTCFullYear","newYear","formatLocale$1","locale","newFormat","formats","pad","pads","newParse","newDate","parseSpecifier","day$$1","Z","parses","parsePeriod","periodRe","periodLookup","parseShortWeekday","shortWeekdayRe","shortWeekdayLookup","parseWeekday","weekdayRe","weekdayLookup","parseShortMonth","shortMonthRe","shortMonthLookup","parseMonth","monthRe","monthLookup","parseLocaleDateTime","locale_dateTime","parseLocaleDate","locale_date","parseLocaleTime","locale_time","formatShortWeekday","locale_shortWeekdays","formatWeekday","locale_weekdays","formatShortMonth","locale_shortMonths","getMonth","formatMonth","locale_months","formatPeriod","locale_periods","getHours","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","getUTCMonth","formatUTCMonth","formatUTCPeriod","getUTCHours","dateTime","periods","days","shortDays","months","shortMonths","formatRe","formatLookup","formatDayOfMonth","formatHour24","I","formatHour12","formatDayOfYear","formatMilliseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekNumberSunday","formatWeekdayNumber","formatWeekNumberMonday","formatYear","formatFullYear","formatZone","%","formatLiteralPercent","utcFormats","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekNumberSunday","formatUTCWeekdayNumber","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","parseDayOfMonth","parseHour24","parseDayOfYear","parseMilliseconds","parseMonthNumber","parseMinutes","parseSeconds","parseWeekNumberSunday","parseWeekdayNumber","parseWeekNumberMonday","parseYear","parseFullYear","parseZone","parseLiteralPercent","utcFormat","utcParse","requote","replace","requoteRe","numberRe","percentRe","day","year","getMilliseconds","getMinutes","getSeconds","sunday","monday","getFullYear","utcDay","utcYear","getUTCMilliseconds","getUTCMinutes","getUTCSeconds","utcSunday","utcMonday","getUTCFullYear","defaultLocale$1","locale$2","timeFormat","timeParse","formatIsoNative","toISOString","parseIsoNative","date$1","number$2","calendar","year$$1","month$$1","week","hour$$1","minute$$1","second$$1","millisecond$$1","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","tickInterval","bisector","tickIntervals","durationYear","durationSecond","durationMinute","durationHour","durationDay","durationWeek","durationMonth","ramp","sequential","acos$1","pi$4","asin$1","halfPi$3","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","arcEndAngle","arcPadAngle","padAngle","intersect","x10","y10","x32","y32","cornerTangents","rc","cw","x01","y01","lo","sqrt$2","x11","y11","max$2","cx0","cx1","cy1","dx0","dy0","dx1","dy1","Linear","x$3","y$3","Radial","_curve","curveRadial","radial","radialLine","linkSource","linkTarget","link$2","link","buffer","argv","slice$5","x$$1","y$$1","constant$10","curveHorizontal","moveTo","bezierCurveTo","curveVertical","curveRadial$1","radialPoint","p2","p3","linkHorizontal","linkVertical","linkRadial","point$2","Basis","BasisClosed","BasisOpen","Bundle","_basis","_beta","point$3","_x2","_y2","Cardinal","tension","CardinalClosed","CardinalOpen","point$4","_l01_a","epsilon$3","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","_alpha","CatmullRomClosed","CatmullRomOpen","LinearClosed","sign$1","slope3","h0","h1","slope2","point$5","MonotoneX","MonotoneY","ReflectContext","monotoneX","monotoneY","Natural","controlPoints","Step","stepBefore","stepAfter","stackValue","sum$2","series","x$4","y$4","RedBlackTree","RedBlackNode","RedBlackRotateLeft","RedBlackRotateRight","RedBlackFirst","createEdge","edge","edges","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","bx","by","connectEdge","fm","fb","lx","ly","rx","ry","fx","clipEdges","epsilon$4","createCell","site","cellHalfedgeAngle","cell","va","vb","cellHalfedgeStart","cellHalfedgeEnd","sortCellHalfedges","clipCells","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","v00","v01","v11","v10","Circle","arc","attachCircle","lArc","rArc","lSite","cSite","rSite","epsilon2$2","ha","hc","circlePool","before","firstCircle","detachCircle","Beach","createBeach","beach","beachPool","detachBeach","beaches","removeBeach","disappearing","unshift","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","triangleArea","lexicographic","Diagram","sites","ZoomEvent","Transform","transform$1","__zoom","identity$8","nopropagation$2","defaultFilter$2","defaultExtent$1","SVGElement","clientWidth","clientHeight","defaultTransform","hi","mid","ascendingBisect","bisectLeft","pairs","cross","values0","values1","descending","number","variance","valueof","mean","deviation","constant","sturges","LN2","histogram","tz","bin","bins","freedmanDiaconis","scott","median","numbers","arrays","merged","permute","permutes","scan","xi","xj","shuffle","transpose","zip","namespaces","xlink","xml","xmlns","namespace","prefix","creator","matcher","selector","matches","element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","matcher$1","mouseenter","mouseleave","selection_on","current","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","rect","getBoundingClientRect","clientLeft","clientTop","querySelector","selection_select","subgroups","subnode","subgroup","selectorAll","querySelectorAll","selection_selectAll","selection_filter","sparse","selection_enter","_enter","constant$1","selection_data","bind","enterGroup","updateGroup","_exit","selection_exit","selection_merge","groups0","groups1","m0","merges","group0","group1","selection_order","selection_sort","compareNode","sortgroups","sortgroup","selection_call","selection_nodes","selection_node","selection_size","selection_empty","selection_each","selection_attr","selection_style","selection_property","contains","selection_classed","selection_text","selection_html","selection_raise","selection_lower","selection_append","selection_insert","selection_remove","selection_datum","selection_dispatch","classed","html","touch","preventDefault","constant$2","drag","mousedowned","touchstarted","touchmoved","touchended","gesture","container","mousemoved","mouseupped","mousemoving","mousedownx","mousedowny","clickDistance2","gestures","touches$$1","sublisteners","clickDistance","basis$1","basisClosed","interpolateRgb","rgb$$1","array$1","interpolateString","interpolateZoom","hsl$2","hcl$2","cubehelix$2","quantize","interval$1","emptyOn","emptyTween","selection_interrupt","transition_tween","transition_attr","transition_attrTween","transition_delay","transition_duration","transition_ease","transition_filter","transition_merge","transition_on","transition_remove","transition_select","select$$1","transition_selectAll","Selection$1","transition_selection","transition_style","transition_styleTween","transition_text","transition_transition","id0","id1","selection_prototype","polyIn","custom","polyOut","polyInOut","backIn","overshoot","backOut","backInOut","tau","elasticIn","amplitude","period","elasticOut","elasticInOut","selection_transition","root$1","xy","XY","nw","ne","se","sw","pi$1","halfPi$1","tau$1","max$1","chord","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","slice$2","constant$5","pi$2","tau$2","tauEpsilon","closePath","lineTo","quadraticCurveTo","arcTo","l01_2","x20","y20","l21_2","l20_2","l21","l01","t01","t21","ccw","ribbon","sr","sa0","sa1","sx0","tr","ta0","ta1","clear","nest","createResult","setResult","rollup","sortValues","valuesByKey","sortKey","sortKeys","dsv","delimiter","convert","parseRows","token","EOF","eol","EOL","delimiterCode","formatValue","formatRows","formatRow","reFormat","csv","csvParse","csvParseRows","csvFormat","csvFormatRows","tsv","tsvParse","tsvParseRows","tsvFormat","tsvFormatRows","center$1","force","sx","sy","constant$6","jiggle","tree_add","tree_cover","tree_data","visit","tree_extent","Quad","tree_find","quads","tree_remove","retainer","tree_root","tree_size","tree_visit","tree_visitAfter","tree_x","tree_y","treeProto","visitAfter","prefixExponent","collide","quad","rj","ri","yi","strength","ri2","iterations","prepare","radii","links","defaultStrength","distances","strengths","bias","initializeStrength","initializeDistance","initialRadius","initialAngle","simulation","alphaMin","stepper","alphaTarget","alphaDecay","forces","velocityDecay","initializeNodes","initializeForce","closest","manyBody","accumulate","theta2","distanceMax2","distanceMin2","distanceMin","distanceMax","x$2","y$2","formatDecimal","toExponential","coefficient","exponent$1","formatGroup","grouping","thousands","substring","formatNumerals","numerals","formatDefault","toPrecision","formatPrefixAuto","formatRounded","","toFixed","toUpperCase","identity$3","prefixes","valuePrefix","valueSuffix","suffix","formatType","valueNegative","maybeSuffix","decimal","currency","percent","precisionFixed","precisionPrefix","precisionRound","temp","streamObjectType","Feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","areaSum","areaRing","area","bounds","feature","deltaMax","centroid","constant$7","pointEqual","isSubject","extent$1","sum$1","sinPhi1","absDelta","intersection","phiArc","length$1","object$1","containsObjectType","interpolate$1","sy1","kx0","ky0","kx1","ky1","areaSum$1","_radius","pointRadius","_line","_point","lengthRing","_circle","index$1","contextStream","projectionStream","measure","pointVisible","sink","pointLine","pointRing","ringSink","ringSegments","ringBuffer","polygonStarted","rotatedStart","cr","point2","smallRadius","code","notHemisphere","two","pa","pb","n2","n2n2","n1n2","determinant","n1xn2","uu","polar","meridian","q1","conicEqualArea","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","azimuthalEqualAreaRaw","cxcy","azimuthalEqualArea","azimuthalEquidistantRaw","azimuthalEquidistant","mercator","conicConformal","equirectangular","conicEquidistant","gnomonic","identity$5","reflectX","reflectY","orthographic","stereographic","transverseMercator","cluster","previousNode","eachAfter","separation","nodeSize","node_count","node_each","node_eachBefore","node_eachAfter","node_sum","node_sort","node_path","node_ancestors","node_descendants","node_leaves","leaves","node_links","descendants","shuffle$1","siblings","constant$8","index$2","roundNode","partition","positionNode","keyPrefix$1","preroot","ambiguous","stratify","nodeKey","nodeByKey","firstWalk","secondWalk","sizeNode","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","squarify","index$3","treemap","paddingStack","paddingLeft","paddingTop","paddingRight","paddingBottom","tile","binary","valueOffset","sums","valueTarget","valueLeft","valueRight","xk","yk","sliceDice","resquarify","_squarify","area$1","centroid$1","hull","sortedPoints","flippedPoints","upperIndexes","lowerIndexes","skipLeft","skipRight","contains$1","inside","length$2","perimeter","slice$3","defer","await","results","awaitAll","defaultSource$1","uniform","sourceRandomUniform","randomUniform","sourceRandomNormal","randomNormal","mu","sigma","logNormal","sourceRandomLogNormal","randomLogNormal","irwinHall","sourceRandomIrwinHall","randomIrwinHall","bates","sourceRandomBates","randomBates","exponential$1","sourceRandomExponential","randomExponential","request","url","respond","status","mimeType","headers","XMLHttpRequest","user","password","XDomainRequest","onload","onerror","ontimeout","onreadystatechange","readyState","onprogress","header","send","post","method","setRequestHeader","overrideMimeType","type$1","defaultMimeType","createRange","createContextualFragment","json","responseXML","dsv$1","csv$1","tsv$1","array$2","millisecond","milliseconds","second","seconds","minute","minutes","hour","hours","tuesday","wednesday","thursday","friday","saturday","sundays","mondays","tuesdays","wednesdays","thursdays","fridays","saturdays","month","setMonth","years","utcMinute","setUTCSeconds","utcMinutes","utcHour","setUTCMinutes","utcHours","utcDays","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcSundays","utcMondays","utcTuesdays","utcWednesdays","utcThursdays","utcFridays","utcSaturdays","utcMonth","setUTCMonth","utcMonths","utcYears","-","0","formatIso","parseIso","utcTime","category10","category20b","category20c","category20","cubehelix$3","warm","cool","rainbow","rainbow$1","ts","viridis","magma","inferno","plasma","abs$1","atan2$1","cos$2","min$1","sin$2","tau$4","a01","a11","a10","da0","da1","ap","rp","padRadius","cornerRadius","rc0","rc1","oc","kc","lc","areaStart","areaEnd","curveLinear","defined0","area$2","x0z","y0z","arealine","lineX0","lineY0","lineY1","lineX1","descending$1","identity$7","pie","arcs","curveRadialLinear","radialLine$1","radialArea","lineStartAngle","lineEndAngle","lineInnerRadius","lineOuterRadius","circle$2","draw","cross$2","tan30","tan30_2","diamond","kr","star","square","sqrt3","triangle","wye","noop$2","basis$2","_x3","_x4","_y3","_y4","basisClosed$1","basisOpen","bundle","cardinal","_x5","_y5","cardinalClosed","cardinalOpen","x23","y23","catmullRom","catmullRomClosed","catmullRomOpen","linearClosed","_t0","py","natural","none$1","none$2","stack","oz","kz","sz","sij","ki","si","expand","diverging","yn","silhouette","wiggle","s2","sij0","sij1","s3","ascending$2","descending$2","insideOut","tops","bottoms","constant$11","after","grandpa","uncle","sibling","polygons","triangles","_found","voronoi","constant$12","applyX","applyY","location","invertX","invertY","rescaleX","rescaleY","noevent$2","zoom","wheeled","dblclicked","k0","k1","constrain","transition$$1","Gesture","wheelidled","wheel","deltaY","deltaMode","wheelDelay","touch0","touch1","touchstarting","touchDelay","dp","dl","collection","scaleBy","scaleTo","translateBy","scaleExtent","translateExtent","bisect","thresholdFreedmanDiaconis","thresholdScott","thresholdSturges","quantile","dragEnable","dsvFormat","easeLinear","easeQuad","easeQuadIn","easeQuadOut","easeQuadInOut","easeCubic","easeCubicIn","easeCubicOut","easeCubicInOut","easePoly","easePolyIn","easePolyOut","easePolyInOut","easeSin","easeSinIn","easeSinOut","easeSinInOut","easeExp","easeExpIn","easeExpOut","easeExpInOut","easeCircle","easeCircleIn","easeCircleOut","easeCircleInOut","easeBounce","easeBounceIn","easeBounceOut","easeBounceInOut","easeBack","easeBackIn","easeBackOut","easeBackInOut","easeElastic","easeElasticIn","easeElasticOut","easeElasticInOut","forceCenter","forceCollide","forceLink","forceManyBody","forceSimulation","forceX","forceY","formatDefaultLocale","geoArea","geoBounds","geoCentroid","geoCircle","geoClipExtent","geoContains","geoDistance","geoGraticule","geoGraticule10","geoInterpolate","geoLength","geoPath","geoAlbers","geoAlbersUsa","geoAzimuthalEqualArea","geoAzimuthalEqualAreaRaw","geoAzimuthalEquidistant","geoAzimuthalEquidistantRaw","geoConicConformal","geoConicConformalRaw","geoConicEqualArea","geoConicEqualAreaRaw","geoConicEquidistant","geoConicEquidistantRaw","geoEquirectangular","geoEquirectangularRaw","geoGnomonic","geoGnomonicRaw","geoIdentity","geoProjection","geoProjectionMutator","geoMercator","geoMercatorRaw","geoOrthographic","geoOrthographicRaw","geoStereographic","geoStereographicRaw","geoTransverseMercator","geoTransverseMercatorRaw","geoRotation","geoTransform","packSiblings","treemapBinary","treemapSliceDice","treemapSquarify","treemapResquarify","interpolateArray","interpolateBasis","interpolateBasisClosed","interpolateDate","interpolateNumber","interpolateObject","interpolateRgbBasis","interpolateRgbBasisClosed","interpolateHsl","interpolateHslLong","interpolateLab","interpolateHcl","interpolateHclLong","interpolateCubehelix","interpolateCubehelixLong","polygonArea","polygonCentroid","polygonHull","polygonLength","scaleBand","scalePoint","scaleIdentity","scaleLinear","scaleLog","scaleOrdinal","scaleImplicit","scalePow","scaleSqrt","scaleQuantile","scaleQuantize","scaleThreshold","scaleTime","scaleUtc","schemeCategory10","schemeCategory20b","schemeCategory20c","schemeCategory20","interpolateCubehelixDefault","interpolateRainbow","interpolateWarm","interpolateCool","interpolateViridis","interpolateMagma","interpolateInferno","interpolatePlasma","scaleSequential","symbolCircle","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolTriangle","symbolWye","curveBasisClosed","curveBasisOpen","curveBasis","curveBundle","curveCardinalClosed","curveCardinalOpen","curveCardinal","curveCatmullRomClosed","curveCatmullRomOpen","curveCatmullRom","curveLinearClosed","curveMonotoneX","curveMonotoneY","curveNatural","curveStep","curveStepAfter","curveStepBefore","stackOffsetExpand","stackOffsetDiverging","stackOffsetNone","stackOffsetSilhouette","stackOffsetWiggle","stackOrderAscending","stackOrderDescending","stackOrderInsideOut","stackOrderNone","stackOrderReverse","timeInterval","timeMillisecond","timeMilliseconds","utcMillisecond","utcMilliseconds","timeSecond","timeSeconds","utcSecond","utcSeconds","timeMinute","timeMinutes","timeHour","timeHours","timeDay","timeDays","timeWeek","timeWeeks","timeSunday","timeSundays","timeMonday","timeMondays","timeTuesday","timeTuesdays","timeWednesday","timeWednesdays","timeThursday","timeThursdays","timeFriday","timeFridays","timeSaturday","timeSaturdays","timeMonth","timeMonths","timeYear","timeYears","utcWeek","utcWeeks","timeFormatDefaultLocale","timeFormatLocale","isoFormat","isoParse","zoomTransform","zoomIdentity","func","FUNC_ERROR_TEXT","once","isObjectLike","objectToString","symbolTag","toFinite","toNumber","INFINITY","MAX_INTEGER","remainder","NAN","reTrim","isBinary","reIsBinary","reIsOctal","freeParseInt","reIsBadHex","objectProto","setState","updateData","updateType","_Node","_Node2","_getPrototypeOf","_getPrototypeOf2","_classCallCheck2","_classCallCheck3","_createClass2","_createClass3","_possibleConstructorReturn2","_possibleConstructorReturn3","_inherits2","_inherits3","_react","_react2","_d3Timer","_mergeKeys","_mergeKeys2","_types","_transition","NodeGroup","_temp","_this","_ret","_len","_key","animate","unmounting","pending","nextNodeKeys","nodeKeys","nodeHash","TRANSITION_SCHEDULES","LEAVE","renderNodes","updateNodes","leave","currKeyIndex","currNodeKeys","currNodeKeysLength","nextKeyIndex","ENTER","_i2","UPDATE","_i3","_k2","_n","_d","_this3","renderedChildren","Children","only","Component","tickKeyAccessor","TickGroup","_props","tickCount","updateTicks","_scale","_tickCount","_props2","_TickGroup","_TickGroup2","mergeKeys","allKeys","nextOrderA","nextOrderB","currOrderA","currOrderB","pivot","_pivot","_stop","config","sid","stateKey","events","res","tweens","_extends3","_extends2","_keys2","_keys","scheduleTransitions","transitions","_extends6","_lodash2","_tween2","_defineProperty3","getResonanceCustomTween","timingConfig","preset","_schedule2","_extends5","_lodash","_tween","_schedule","getTween","nameSpace","interpol","_extends4","getInterpolator","_d3Interpolate","_d3Color","__WEBPACK_IMPORTED_MODULE_0__NodeGroup__","__WEBPACK_IMPORTED_MODULE_0__NodeGroup___default","__WEBPACK_IMPORTED_MODULE_1__TickGroup__","joy","sadness","disgust","anger","fear","grimacing","grin","smiley","smile","laughing","wink","slightly_smiling_face","upside_down_face","relaxed","blush","yum","relieved","heart_eyes","kissing_heart","kissing","kissing_smiling_eyes","kissing_closed_eyes","stuck_out_tongue_winking_eye","stuck_out_tongue_closed_eyes","stuck_out_tongue","sunglasses","smirk","no_mouth","neutral_face","expressionless","disappointed","worried","pensive","confused","slightly_frowning_face","white_frowning_face","persevere","tired_face","weary","open_mouth","hushed","frowning","anguished","dizzy_face"],"mappings":"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GAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAic,KAEA9D,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGA8b,KAEA3D,EAAA,QACAnY,EAAA,QAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,MACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,QAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,MACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGA+b,KAEA5D,EAAA,QACAnY,EAAA,QAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,MACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,QAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAm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AnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAoc,SAEAjE,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,MAIA0sG,SACA1wF,KAEA7D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,QAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAic,KAEA9D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,OAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGA8b,KAEA3D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,MACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,OAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,QAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGA+b,KAEA5D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmc,OAEAhE,EAAA,EACAnY,EAAA,KAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,IAGAmY,EAAA,QACAnY,EAAA,IAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,EACAnY,EAAA,KAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,IAGAmY,EAAA,QACAnY,EAAA,aAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAkc,QAEA/D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,MACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAoc,SAEAjE,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,MAIA2sG,SACA3wF,KAEA7D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,MACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,MACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAic,KAEA9D,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGA8b,KAEA3D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGA+b,KAEA5D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,MACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,QAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EA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EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAoc,SAEAjE,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,MAIA4sG,OACA5wF,KAEA7D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,QAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,MACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,QAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,MACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,MACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAic,KAEA9D,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,QAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,SAGAmY,EAAA,OACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGA8b,KAEA3D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGA+b,KAEA5D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmc,OAEAhE,EAAA,EACAnY,EAAA,KAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,IAGAmY,EAAA,QACAnY,EAAA,IAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,EACAnY,EAAA,KAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,IAGAmY,EAAA,QACAnY,EAAA,aAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAkc,QAEA/D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,QAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,QAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAoc,SAEAjE,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,MAIA6sG,MACA7wF,KAEA7D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAic,KAEA9D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,QAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,MACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,QAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGA8b,KAEA3D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,QAGAmY,EAAA,QACAnY,EAAA,QAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGA+b,KAEA5D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,Q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,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAoc,SAEAjE,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,MAIA8sG,WACA9wF,KAEA7D,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAic,KAEA9D,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGA8b,KAEA3D,EAAA,QACAnY,EAAA,QAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,MACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,QAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,MACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGA+b,KAEA5D,EAAA,QACAnY,EAAA,QAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,MACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAG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,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,MAIA+sG,MACA/wF,KAEA7D,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAic,KAEA9D,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGA8b,KAEA3D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,MACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,MACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGA+b,KAEA5D,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,MACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAn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AAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,MAIAgtG,QACAhxF,KAEA7D,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAic,KAEA9D,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGA8b,KAEA3D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGA+b,KAEA5D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,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Y,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAoc,SAEAjE,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,MAIAitG,OACAjxF,KAEA7D,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAic,KAEA9D,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGA8b,KAEA3D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGA+b,KAEA5D,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,MACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EA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EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAoc,SAEAjE,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,MAIAktG,UACAlxF,KAEA7D,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAic,KAEA9D,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGA8b,KAEA3D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,QAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,QAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGA+b,KAEA5D,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA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CAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,MAIAmtG,MACAnxF,KAEA7D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAic,KAEA9D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,MAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGA8b,KAEA3D,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,MACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGA+b,KAEA5D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmc,OAEAhE,EAAA,EACAnY,EAAA,KAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY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mY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,MAIAotG,uBACApxF,KAEA7D,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAic,KAEA9D,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGA8b,KAEA3D,EAAA,QACAnY,EAAA,QAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,MACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,QAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,MACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGA+b,KAEA5D,EAAA,QACAnY,EAAA,QAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QA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Y,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,MAIAqtG,kBACArxF,KAEA7D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,QAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAic,KAEA9D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,QAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGA8b,KAEA3D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGA+b,KAEA5D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmc,OAEAhE,EAAA,EACAnY,EAAA,KAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,E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,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,MAIAstG,SACAtxF,KAEA7D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,QAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAic,KAEA9D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,QAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGA8b,KAEA3D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGA+b,KAEA5D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmc,OAEAhE,EAAA,EACAnY,EAAA,KAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAA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AAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,MAIAutG,OACAvxF,KAEA7D,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAic,KAEA9D,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGA8b,KAEA3D,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGA+b,KAEA5D,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,SAGAmc,OAEAhE,EAAA,EACAnY,EAAA,KAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,IAGAmY,EAAA,QACAnY,EAAA,IAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,EACAnY,EAAA,KAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,IAGAmY,EAAA,QACAnY,EAAA,aAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAkc,QAEA/D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,MACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAoc,SAEAjE,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,MAIAwtG,KACAxxF,KAEA7D,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAic,KAEA9D,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGA8b,KAEA3D,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,MACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGA+b,KAEA5D,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmc,OAEAhE,EAAA,EACAnY,EAAA,KAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,IAGAmY,EAAA,QACAnY,EAAA,IAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,EACAnY,EAAA,KAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,IAGAmY,EAAA,QACAnY,EAAA,aAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAkc,QAEA/D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,QAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAoc,SAEAjE,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,WAIAytG,UACAzxF,KAEA7D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAic,KAEA9D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGA8b,KAEA3D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,QAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGA+b,KAEA5D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,QAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmc,OAEAhE,EAAA,EACAnY,EAAA,KAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,IAGAmY,EAAA,QACAnY,EAAA,IAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,EACAnY,EAAA,KAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,IAGAmY,EAAA,QACAnY,EAAA,aAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAkc,QAEA/D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,QAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,QAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,QAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,QAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAoc,SAEAjE,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,MAIA0tG,YACA1xF,KAEA7D,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAic,KAEA9D,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGA8b,KAEA3D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGA+b,KAEA5D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmc,OAEAhE,EAAA,EACAnY,EAAA,KAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,IAGAmY,EAAA,QACAnY,EAAA,IAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,EACAnY,EAAA,KAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,IAGAmY,EAAA,QACAnY,EAAA,aAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAkc,QAEA/D,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAoc,SAEAjE,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,MAIA2tG,eACA3xF,KAEA7D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,QAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,MACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,QAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAic,KAEA9D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,QAGAmY,EAAA,QACAnY,EAAA,UAGA8b,KAEA3D,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,QAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,MACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGA+b,KAEA5D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,OAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,OAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QAC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AGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAoc,SAEAjE,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,QAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,EACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,WAIA4tG,SACA5xF,KAEA7D,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAic,KAEA9D,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGA8b,KAEA3D,EAAA,QACAnY,EAAA,QAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,MACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,QAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,MACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGA+b,KAEA5D,EAAA,QACAnY,EAAA,QAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,MACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,QAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAm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AnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,MACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAoc,SAEAjE,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,MAIA6tG,sBACA7xF,KAEA7D,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAic,KAEA9D,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGA8b,KAEA3D,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGA+b,KAEA5D,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY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mY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,MACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAoc,SAEAjE,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,MAIA8tG,qBACA9xF,KAEA7D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,QAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAic,KAEA9D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,QAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGA8b,KAEA3D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGA+b,KAEA5D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,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A,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,MAIA+tG,8BACA/xF,KAEA7D,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAic,KAEA9D,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGA8b,KAEA3D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGA+b,KAEA5D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,MACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,MACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmc,OAEAhE,EAAA,EACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,IAGAmY,EAAA,QACAnY,EAAA,IAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,EACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAkc,QAEA/D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,QAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,MACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAoc,SAEAjE,EAAA,OACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,IAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,WAIAguG,8BACAhyF,KAEA7D,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAic,KAEA9D,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGA8b,KAEA3D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGA+b,KAEA5D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmc,OAEAhE,EAAA,EACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,IAGAmY,EAAA,QACAnY,EAAA,IAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,EACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAkc,QAEA/D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,QAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,MACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAoc,SAEAjE,EAAA,OACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,IAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,WAIAiuG,kBACAjyF,KAEA7D,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAic,KAEA9D,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGA8b,KAEA3D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,QAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,MACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,QAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,MACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGA+b,KAEA5D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,QAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,MACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,QAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,MACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmc,OAEAhE,EAAA,EACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,IAGAmY,EAAA,QACAnY,EAAA,IAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,EACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAkc,QAEA/D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,E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AA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAic,KAEA9D,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGA8b,KAEA3D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGA+b,KAEA5D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,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A,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAoc,SAEAjE,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,MAIAmuG,OACAnyF,KAEA7D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAic,KAEA9D,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGA8b,KAEA3D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGA+b,KAEA5D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,MACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UA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QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAoc,SAEAjE,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,MAIAouG,UACApyF,KAEA7D,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAic,KAEA9D,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGA8b,KAEA3D,EAAA,QACAnY,EAAA,QAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,MACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,QAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,MACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGA+b,KAEA5D,EAAA,QACAnY,EAAA,QAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,MACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACA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GAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,GACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAoc,SAEAjE,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,MAIAquG,cACAryF,KAEA7D,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAic,KAEA9D,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGA8b,KAEA3D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,OAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,OAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGA+b,KAEA5D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,OAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY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AA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,MAIAsuG,gBACAtyF,KAEA7D,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAic,KAEA9D,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGA8b,KAEA3D,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,QAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,QAGAmY,EAAA,QACAnY,EAAA,UAGA+b,KAEA5D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,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A,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,MAIAuuG,cACAvyF,KAEA7D,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAic,KAEA9D,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGA8b,KAEA3D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGA+b,KAEA5D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EA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EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAoc,SAEAjE,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,MAIAwuG,SACAxyF,KAEA7D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAic,KAEA9D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGA8b,KAEA3D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,MACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,OACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,QAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,MACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,QAGA+b,KAEA5D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,MACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,OACAnY,EAAA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AA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAoc,SAEAjE,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,MAIAyuG,SACAzyF,KAEA7D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,QAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAic,KAEA9D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,QAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGA8b,KAEA3D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGA+b,KAEA5D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmc,OAEAhE,EAAA,EACAnY,EAAA,KAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY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nY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,MAIA0uG,UACA1yF,KAEA7D,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAic,KAEA9D,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGA8b,KAEA3D,EAAA,QACAnY,EAAA,QAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,MACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,QAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,MACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGA+b,KAEA5D,EAAA,QACAnY,EAAA,QAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAG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ACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAoc,SAEAjE,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,MAIA2uG,wBACA3yF,KAEA7D,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAic,KAEA9D,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGA8b,KAEA3D,EAAA,QACAnY,EAAA,QAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,MACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,QAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,MACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGA+b,KAEA5D,EAAA,QACAnY,EAAA,QAGAmY,EAAA,QACA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EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,MAIA4uG,qBACA5yF,KAEA7D,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAic,KAEA9D,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGA8b,KAEA3D,EAAA,QACAnY,EAAA,QAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,MACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,QAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,MACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGA+b,KAEA5D,EAAA,QACAnY,EAAA,QAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,MACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,QAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,MACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmc,OAEAhE,EAAA,EACAnY,EAAA,KAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,IAGAmY,EAAA,QACAnY,EAAA,IAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,EACAnY,EAAA,KAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,IAGAmY,EAAA,QACAnY,EAAA,aAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAkc,QAEA/D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,QAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,MACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAoc,SAEAjE,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,MAIA6uG,WACA7yF,KAEA7D,EAAA,OACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,QAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,SAGAic,KAEA9D,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,MACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,QAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,QAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,QAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,QAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGA8b,KAEA3D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGA+b,KAEA5D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmc,OAEAhE,EAAA,EACAnY,EAAA,KAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,IAGAmY,EAAA,QACAnY,EAAA,IAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,EACAnY,EAAA,KAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,IAGAmY,EAAA,QACAnY,EAAA,aAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAkc,QAEA/D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAoc,SAEAjE,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,MAIA8uG,YACA9yF,KAEA7D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAic,KAEA9D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGA8b,KAEA3D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,OACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGA+b,KAEA5D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,OAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmc,OAEAhE,EAAA,EACAnY,EAAA,KAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,IAGAmY,EAAA,QACAnY,EAAA,IAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,EACAnY,EAAA,KAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,IAGAmY,EAAA,QACAnY,EAAA,aAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAkc,QAEA/D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,QAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAoc,SAEAjE,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,MAIA+uG,OACA/yF,KAEA7D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAic,KAEA9D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGA8b,KAEA3D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGA+b,KAEA5D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmc,OAEAhE,EAAA,EACAnY,EAAA,KAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,IAGAmY,EAAA,QACAnY,EAAA,IAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,EACAnY,EAAA,KAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,IAGAmY,EAAA,QACAnY,EAAA,aAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAkc,QAEA/D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,QAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAoc,SAEAjE,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,MAIAgvG,YACAhzF,KAEA7D,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAic,KAEA9D,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGA8b,KAEA3D,EAAA,QACAnY,EAAA,QAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,MACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,QAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,MACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGA+b,KAEA5D,EAAA,QACAnY,EAAA,QAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,MACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,QAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,MACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmc,OAEAhE,EAAA,EACAnY,EAAA,KAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,IAGAmY,EAAA,QACAnY,EAAA,IAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,EACAnY,EAAA,KAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,IAGAmY,EAAA,QACAnY,EAAA,aAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAkc,QAEA/D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,MACAnY,EAAA,UAGAmY,EAAA,MACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,MACAnY,EAAA,UAGAmY,EAAA,MACAnY,EAAA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UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAic,KAEA9D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGA8b,KAEA3D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,MACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,OACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,QAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,MACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,QAGA+b,KAEA5D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,MACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,OACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,QAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAG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ACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAoc,SAEAjE,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,MAIAkvG,UACAlzF,KAEA7D,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAic,KAEA9D,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGA8b,KAEA3D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,MACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,OACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,QAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,MACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,QAGA+b,KAEA5D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,MACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,OACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,QAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAn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AmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAoc,SAEAjE,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,MAIAmvG,WACAnzF,KAEA7D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAic,KAEA9D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGA8b,KAEA3D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,MACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,OACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,QAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,MACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,QAGA+b,KAEA5D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,MACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,OACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,QAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,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Y,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAoc,SAEAjE,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,MAIAovG,YACApzF,KAEA7D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAic,KAEA9D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGA8b,KAEA3D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,MACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGA+b,KAEA5D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,MACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmc,OAEAhE,EAAA,EACAnY,EAAA,KAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,IAGAmY,EAAA,QACAnY,EAAA,IAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,EACAnY,EAAA,KAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,IAGAmY,EAAA,QACAnY,EAAA,aAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAkc,QAEA/D,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,SAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,OACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAmY,EAAA,QACAnY,EAAA,UAGAoc,SAEAjE,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,KAGAmY,EAAA,GACAnY,EAAA,Q9IwvqBM,SAAUvG,EAAQD,EAASQ,G+IrlkFjCP,EAAAD,QAAAQ,EAAAwB,EAAA,gC/I2lkFM,SAAU/B,EAAQD,EAASQ,GAEjCP,EAAOD,QAAUQ,EAAoB","file":"emojimation.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Emojimation\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"Emojimation\"] = factory(root[\"React\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_41__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Emojimation\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"Emojimation\"] = factory(root[\"React\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_41__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 147);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\nvar core = module.exports = {version: '2.4.0'};\nif(typeof __e == 'number')__e = core; // eslint-disable-line no-undef\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\nif(typeof __g == 'number')__g = global; // eslint-disable-line no-undef\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// Thank's IE8 for his funny defineProperty\nmodule.exports = !__webpack_require__(8)(function(){\n  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;\n});\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar global    = __webpack_require__(1)\n  , core      = __webpack_require__(0)\n  , ctx       = __webpack_require__(51)\n  , hide      = __webpack_require__(9)\n  , PROTOTYPE = 'prototype';\n\nvar $export = function(type, name, source){\n  var IS_FORCED = type & $export.F\n    , IS_GLOBAL = type & $export.G\n    , IS_STATIC = type & $export.S\n    , IS_PROTO  = type & $export.P\n    , IS_BIND   = type & $export.B\n    , IS_WRAP   = type & $export.W\n    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})\n    , expProto  = exports[PROTOTYPE]\n    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE]\n    , key, own, out;\n  if(IS_GLOBAL)source = name;\n  for(key in source){\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if(own && key in exports)continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function(C){\n      var F = function(a, b, c){\n        if(this instanceof C){\n          switch(arguments.length){\n            case 0: return new C;\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if(IS_PROTO){\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if(type & $export.R && expProto && !expProto[key])hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library` \nmodule.exports = $export;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\nvar hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function(it, key){\n  return hasOwnProperty.call(it, key);\n};\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar anObject       = __webpack_require__(12)\n  , IE8_DOM_DEFINE = __webpack_require__(53)\n  , toPrimitive    = __webpack_require__(32)\n  , dP             = Object.defineProperty;\n\nexports.f = __webpack_require__(2) ? Object.defineProperty : function defineProperty(O, P, Attributes){\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if(IE8_DOM_DEFINE)try {\n    return dP(O, P, Attributes);\n  } catch(e){ /* empty */ }\n  if('get' in Attributes || 'set' in Attributes)throw TypeError('Accessors not supported!');\n  if('value' in Attributes)O[P] = Attributes.value;\n  return O;\n};\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = __webpack_require__(54)\n  , defined = __webpack_require__(22);\nmodule.exports = function(it){\n  return IObject(defined(it));\n};\n\n/***/ }),\n/* 7 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__src_color__ = __webpack_require__(35);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"color\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_color__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"rgb\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_color__[\"b\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"hsl\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_color__[\"c\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__src_lab__ = __webpack_require__(116);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"lab\", function() { return __WEBPACK_IMPORTED_MODULE_1__src_lab__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"hcl\", function() { return __WEBPACK_IMPORTED_MODULE_1__src_lab__[\"b\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__src_cubehelix__ = __webpack_require__(115);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"cubehelix\", function() { return __WEBPACK_IMPORTED_MODULE_2__src_cubehelix__[\"a\"]; });\n\n\n\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports) {\n\nmodule.exports = function(exec){\n  try {\n    return !!exec();\n  } catch(e){\n    return true;\n  }\n};\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar dP         = __webpack_require__(5)\n  , createDesc = __webpack_require__(16);\nmodule.exports = __webpack_require__(2) ? function(object, key, value){\n  return dP.f(object, key, createDesc(1, value));\n} : function(object, key, value){\n  object[key] = value;\n  return object;\n};\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys       = __webpack_require__(59)\n  , enumBugKeys = __webpack_require__(23);\n\nmodule.exports = Object.keys || function keys(O){\n  return $keys(O, enumBugKeys);\n};\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar store      = __webpack_require__(30)('wks')\n  , uid        = __webpack_require__(18)\n  , Symbol     = __webpack_require__(1).Symbol\n  , USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function(name){\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isObject = __webpack_require__(13);\nmodule.exports = function(it){\n  if(!isObject(it))throw TypeError(it + ' is not an object!');\n  return it;\n};\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports) {\n\nmodule.exports = function(it){\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n\n/***/ }),\n/* 14 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = hue;\n/* harmony export (immutable) */ __webpack_exports__[\"c\"] = gamma;\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = nogamma;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__constant__ = __webpack_require__(65);\n\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nfunction hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__constant__[\"a\" /* default */])(isNaN(a) ? b : a);\n}\n\nfunction gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__constant__[\"a\" /* default */])(isNaN(a) ? b : a);\n  };\n}\n\nfunction nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__constant__[\"a\" /* default */])(isNaN(a) ? b : a);\n}\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports) {\n\nexports.f = {}.propertyIsEnumerable;\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports) {\n\nmodule.exports = function(bitmap, value){\n  return {\n    enumerable  : !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable    : !(bitmap & 4),\n    value       : value\n  };\n};\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 7.1.13 ToObject(argument)\nvar defined = __webpack_require__(22);\nmodule.exports = function(it){\n  return Object(defined(it));\n};\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports) {\n\nvar id = 0\n  , px = Math.random();\nmodule.exports = function(key){\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n\n/***/ }),\n/* 19 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = (function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n});\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _assign = __webpack_require__(72);\n\nvar _assign2 = _interopRequireDefault(_assign);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _assign2.default || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _iterator = __webpack_require__(76);\n\nvar _iterator2 = _interopRequireDefault(_iterator);\n\nvar _symbol = __webpack_require__(75);\n\nvar _symbol2 = _interopRequireDefault(_symbol);\n\nvar _typeof = typeof _symbol2.default === \"function\" && typeof _iterator2.default === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof _symbol2.default === \"function\" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? \"symbol\" : typeof obj; };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = typeof _symbol2.default === \"function\" && _typeof(_iterator2.default) === \"symbol\" ? function (obj) {\n  return typeof obj === \"undefined\" ? \"undefined\" : _typeof(obj);\n} : function (obj) {\n  return obj && typeof _symbol2.default === \"function\" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? \"symbol\" : typeof obj === \"undefined\" ? \"undefined\" : _typeof(obj);\n};\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports) {\n\n// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function(it){\n  if(it == undefined)throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports) {\n\n// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports) {\n\nmodule.exports = {};\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports) {\n\nmodule.exports = true;\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\nvar anObject    = __webpack_require__(12)\n  , dPs         = __webpack_require__(96)\n  , enumBugKeys = __webpack_require__(23)\n  , IE_PROTO    = __webpack_require__(29)('IE_PROTO')\n  , Empty       = function(){ /* empty */ }\n  , PROTOTYPE   = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function(){\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = __webpack_require__(52)('iframe')\n    , i      = enumBugKeys.length\n    , lt     = '<'\n    , gt     = '>'\n    , iframeDocument;\n  iframe.style.display = 'none';\n  __webpack_require__(89).appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while(i--)delete createDict[PROTOTYPE][enumBugKeys[i]];\n  return createDict();\n};\n\nmodule.exports = Object.create || function create(O, Properties){\n  var result;\n  if(O !== null){\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty;\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports) {\n\nexports.f = Object.getOwnPropertySymbols;\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar def = __webpack_require__(5).f\n  , has = __webpack_require__(4)\n  , TAG = __webpack_require__(11)('toStringTag');\n\nmodule.exports = function(it, tag, stat){\n  if(it && !has(it = stat ? it : it.prototype, TAG))def(it, TAG, {configurable: true, value: tag});\n};\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar shared = __webpack_require__(30)('keys')\n  , uid    = __webpack_require__(18);\nmodule.exports = function(key){\n  return shared[key] || (shared[key] = uid(key));\n};\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar global = __webpack_require__(1)\n  , SHARED = '__core-js_shared__'\n  , store  = global[SHARED] || (global[SHARED] = {});\nmodule.exports = function(key){\n  return store[key] || (store[key] = {});\n};\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports) {\n\n// 7.1.4 ToInteger\nvar ceil  = Math.ceil\n  , floor = Math.floor;\nmodule.exports = function(it){\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = __webpack_require__(13);\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function(it, S){\n  if(!isObject(it))return it;\n  var fn, val;\n  if(S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;\n  if(typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it)))return val;\n  if(!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar global         = __webpack_require__(1)\n  , core           = __webpack_require__(0)\n  , LIBRARY        = __webpack_require__(25)\n  , wksExt         = __webpack_require__(34)\n  , defineProperty = __webpack_require__(5).f;\nmodule.exports = function(name){\n  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});\n  if(name.charAt(0) != '_' && !(name in $Symbol))defineProperty($Symbol, name, {value: wksExt.f(name)});\n};\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports.f = __webpack_require__(11);\n\n/***/ }),\n/* 35 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"f\"] = Color;\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"h\", function() { return darker; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return brighter; });\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = color;\n/* harmony export (immutable) */ __webpack_exports__[\"e\"] = rgbConvert;\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = rgb;\n/* harmony export (immutable) */ __webpack_exports__[\"d\"] = Rgb;\n/* unused harmony export hslConvert */\n/* harmony export (immutable) */ __webpack_exports__[\"c\"] = hsl;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__define__ = __webpack_require__(36);\n\n\nfunction Color() {}\n\nvar darker = 0.7;\nvar brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex3 = /^#([0-9a-f]{3})$/,\n    reHex6 = /^#([0-9a-f]{6})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\n__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__define__[\"a\" /* default */])(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nfunction color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nfunction rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nfunction rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nfunction Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\n__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__define__[\"a\" /* default */])(Rgb, rgb, __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__define__[\"b\" /* extend */])(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nfunction hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nfunction hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\n__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__define__[\"a\" /* default */])(Hsl, hsl, __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__define__[\"b\" /* extend */])(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n\n\n/***/ }),\n/* 36 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = extend;\n/* harmony default export */ __webpack_exports__[\"a\"] = (function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n});\n\nfunction extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n\n\n/***/ }),\n/* 37 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = basis;\nfunction basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n});\n\n\n/***/ }),\n/* 38 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_d3_color__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__rgb__ = __webpack_require__(68);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__array__ = __webpack_require__(63);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__date__ = __webpack_require__(66);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__number__ = __webpack_require__(19);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__object__ = __webpack_require__(67);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__string__ = __webpack_require__(69);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__constant__ = __webpack_require__(65);\n\n\n\n\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_7__constant__[\"a\" /* default */])(b)\n      : (t === \"number\" ? __WEBPACK_IMPORTED_MODULE_4__number__[\"a\" /* default */]\n      : t === \"string\" ? ((c = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_d3_color__[\"color\"])(b)) ? (b = c, __WEBPACK_IMPORTED_MODULE_1__rgb__[\"a\" /* default */]) : __WEBPACK_IMPORTED_MODULE_6__string__[\"a\" /* default */])\n      : b instanceof __WEBPACK_IMPORTED_MODULE_0_d3_color__[\"color\"] ? __WEBPACK_IMPORTED_MODULE_1__rgb__[\"a\" /* default */]\n      : b instanceof Date ? __WEBPACK_IMPORTED_MODULE_3__date__[\"a\" /* default */]\n      : Array.isArray(b) ? __WEBPACK_IMPORTED_MODULE_2__array__[\"a\" /* default */]\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? __WEBPACK_IMPORTED_MODULE_5__object__[\"a\" /* default */]\n      : __WEBPACK_IMPORTED_MODULE_4__number__[\"a\" /* default */])(a, b);\n});\n\n\n/***/ }),\n/* 39 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__src_timer__ = __webpack_require__(40);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"now\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_timer__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"timer\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_timer__[\"b\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"timerFlush\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_timer__[\"c\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__src_timeout__ = __webpack_require__(129);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"timeout\", function() { return __WEBPACK_IMPORTED_MODULE_1__src_timeout__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__src_interval__ = __webpack_require__(128);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"interval\", function() { return __WEBPACK_IMPORTED_MODULE_2__src_interval__[\"a\"]; });\n\n\n\n\n\n\n\n/***/ }),\n/* 40 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = now;\n/* harmony export (immutable) */ __webpack_exports__[\"d\"] = Timer;\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = timer;\n/* harmony export (immutable) */ __webpack_exports__[\"c\"] = timerFlush;\nvar frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof requestAnimationFrame === \"function\" ? requestAnimationFrame : function(f) { setTimeout(f, 17); };\n\nfunction now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nfunction Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nfunction timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nfunction timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow;\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, delay);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clockNow, interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_41__;\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(79), __esModule: true };\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(80), __esModule: true };\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(81), __esModule: true };\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nexports.default = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _defineProperty = __webpack_require__(42);\n\nvar _defineProperty2 = _interopRequireDefault(_defineProperty);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      (0, _defineProperty2.default)(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _defineProperty = __webpack_require__(42);\n\nvar _defineProperty2 = _interopRequireDefault(_defineProperty);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (obj, key, value) {\n  if (key in obj) {\n    (0, _defineProperty2.default)(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n};\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _setPrototypeOf = __webpack_require__(74);\n\nvar _setPrototypeOf2 = _interopRequireDefault(_setPrototypeOf);\n\nvar _create = __webpack_require__(73);\n\nvar _create2 = _interopRequireDefault(_create);\n\nvar _typeof2 = __webpack_require__(21);\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : (0, _typeof3.default)(superClass)));\n  }\n\n  subClass.prototype = (0, _create2.default)(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf2.default ? (0, _setPrototypeOf2.default)(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _typeof2 = __webpack_require__(21);\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && ((typeof call === \"undefined\" ? \"undefined\" : (0, _typeof3.default)(call)) === \"object\" || typeof call === \"function\") ? call : self;\n};\n\n/***/ }),\n/* 50 */\n/***/ (function(module, exports) {\n\nvar toString = {}.toString;\n\nmodule.exports = function(it){\n  return toString.call(it).slice(8, -1);\n};\n\n/***/ }),\n/* 51 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// optional / simple context binding\nvar aFunction = __webpack_require__(85);\nmodule.exports = function(fn, that, length){\n  aFunction(fn);\n  if(that === undefined)return fn;\n  switch(length){\n    case 1: return function(a){\n      return fn.call(that, a);\n    };\n    case 2: return function(a, b){\n      return fn.call(that, a, b);\n    };\n    case 3: return function(a, b, c){\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function(/* ...args */){\n    return fn.apply(that, arguments);\n  };\n};\n\n/***/ }),\n/* 52 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isObject = __webpack_require__(13)\n  , document = __webpack_require__(1).document\n  // in old IE typeof document.createElement is 'object'\n  , is = isObject(document) && isObject(document.createElement);\nmodule.exports = function(it){\n  return is ? document.createElement(it) : {};\n};\n\n/***/ }),\n/* 53 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = !__webpack_require__(2) && !__webpack_require__(8)(function(){\n  return Object.defineProperty(__webpack_require__(52)('div'), 'a', {get: function(){ return 7; }}).a != 7;\n});\n\n/***/ }),\n/* 54 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = __webpack_require__(50);\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n\n/***/ }),\n/* 55 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar LIBRARY        = __webpack_require__(25)\n  , $export        = __webpack_require__(3)\n  , redefine       = __webpack_require__(61)\n  , hide           = __webpack_require__(9)\n  , has            = __webpack_require__(4)\n  , Iterators      = __webpack_require__(24)\n  , $iterCreate    = __webpack_require__(91)\n  , setToStringTag = __webpack_require__(28)\n  , getPrototypeOf = __webpack_require__(58)\n  , ITERATOR       = __webpack_require__(11)('iterator')\n  , BUGGY          = !([].keys && 'next' in [].keys()) // Safari has buggy iterators w/o `next`\n  , FF_ITERATOR    = '@@iterator'\n  , KEYS           = 'keys'\n  , VALUES         = 'values';\n\nvar returnThis = function(){ return this; };\n\nmodule.exports = function(Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED){\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function(kind){\n    if(!BUGGY && kind in proto)return proto[kind];\n    switch(kind){\n      case KEYS: return function keys(){ return new Constructor(this, kind); };\n      case VALUES: return function values(){ return new Constructor(this, kind); };\n    } return function entries(){ return new Constructor(this, kind); };\n  };\n  var TAG        = NAME + ' Iterator'\n    , DEF_VALUES = DEFAULT == VALUES\n    , VALUES_BUG = false\n    , proto      = Base.prototype\n    , $native    = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT]\n    , $default   = $native || getMethod(DEFAULT)\n    , $entries   = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined\n    , $anyNative = NAME == 'Array' ? proto.entries || $native : $native\n    , methods, key, IteratorPrototype;\n  // Fix native\n  if($anyNative){\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base));\n    if(IteratorPrototype !== Object.prototype){\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if(!LIBRARY && !has(IteratorPrototype, ITERATOR))hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if(DEF_VALUES && $native && $native.name !== VALUES){\n    VALUES_BUG = true;\n    $default = function values(){ return $native.call(this); };\n  }\n  // Define iterator\n  if((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])){\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG]  = returnThis;\n  if(DEFAULT){\n    methods = {\n      values:  DEF_VALUES ? $default : getMethod(VALUES),\n      keys:    IS_SET     ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if(FORCED)for(key in methods){\n      if(!(key in proto))redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n\n/***/ }),\n/* 56 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar pIE            = __webpack_require__(15)\n  , createDesc     = __webpack_require__(16)\n  , toIObject      = __webpack_require__(6)\n  , toPrimitive    = __webpack_require__(32)\n  , has            = __webpack_require__(4)\n  , IE8_DOM_DEFINE = __webpack_require__(53)\n  , gOPD           = Object.getOwnPropertyDescriptor;\n\nexports.f = __webpack_require__(2) ? gOPD : function getOwnPropertyDescriptor(O, P){\n  O = toIObject(O);\n  P = toPrimitive(P, true);\n  if(IE8_DOM_DEFINE)try {\n    return gOPD(O, P);\n  } catch(e){ /* empty */ }\n  if(has(O, P))return createDesc(!pIE.f.call(O, P), O[P]);\n};\n\n/***/ }),\n/* 57 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)\nvar $keys      = __webpack_require__(59)\n  , hiddenKeys = __webpack_require__(23).concat('length', 'prototype');\n\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O){\n  return $keys(O, hiddenKeys);\n};\n\n/***/ }),\n/* 58 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\nvar has         = __webpack_require__(4)\n  , toObject    = __webpack_require__(17)\n  , IE_PROTO    = __webpack_require__(29)('IE_PROTO')\n  , ObjectProto = Object.prototype;\n\nmodule.exports = Object.getPrototypeOf || function(O){\n  O = toObject(O);\n  if(has(O, IE_PROTO))return O[IE_PROTO];\n  if(typeof O.constructor == 'function' && O instanceof O.constructor){\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto : null;\n};\n\n/***/ }),\n/* 59 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar has          = __webpack_require__(4)\n  , toIObject    = __webpack_require__(6)\n  , arrayIndexOf = __webpack_require__(87)(false)\n  , IE_PROTO     = __webpack_require__(29)('IE_PROTO');\n\nmodule.exports = function(object, names){\n  var O      = toIObject(object)\n    , i      = 0\n    , result = []\n    , key;\n  for(key in O)if(key != IE_PROTO)has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while(names.length > i)if(has(O, key = names[i++])){\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n\n/***/ }),\n/* 60 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// most Object methods by ES6 should accept primitives\nvar $export = __webpack_require__(3)\n  , core    = __webpack_require__(0)\n  , fails   = __webpack_require__(8);\nmodule.exports = function(KEY, exec){\n  var fn  = (core.Object || {})[KEY] || Object[KEY]\n    , exp = {};\n  exp[KEY] = exec(fn);\n  $export($export.S + $export.F * fails(function(){ fn(1); }), 'Object', exp);\n};\n\n/***/ }),\n/* 61 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(9);\n\n/***/ }),\n/* 62 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return deg2rad; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return rad2deg; });\nvar deg2rad = Math.PI / 180;\nvar rad2deg = 180 / Math.PI;\n\n\n/***/ }),\n/* 63 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__value__ = __webpack_require__(38);\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(nb),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__value__[\"a\" /* default */])(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n});\n\n\n/***/ }),\n/* 64 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__basis__ = __webpack_require__(37);\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__basis__[\"b\" /* basis */])((t - i / n) * n, v0, v1, v2, v3);\n  };\n});\n\n\n/***/ }),\n/* 65 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = (function(x) {\n  return function() {\n    return x;\n  };\n});\n\n\n/***/ }),\n/* 66 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = (function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n});\n\n\n/***/ }),\n/* 67 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__value__ = __webpack_require__(38);\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__value__[\"a\" /* default */])(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n});\n\n\n/***/ }),\n/* 68 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return rgbBasis; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return rgbBasisClosed; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_d3_color__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__basis__ = __webpack_require__(37);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__basisClosed__ = __webpack_require__(64);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__color__ = __webpack_require__(14);\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ((function rgbGamma(y) {\n  var color = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__color__[\"c\" /* gamma */])(y);\n\n  function rgb(start, end) {\n    var r = color((start = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_d3_color__[\"rgb\"])(start)).r, (end = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_d3_color__[\"rgb\"])(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__color__[\"a\" /* default */])(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1));\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_d3_color__[\"rgb\"])(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nvar rgbBasis = rgbSpline(__WEBPACK_IMPORTED_MODULE_1__basis__[\"a\" /* default */]);\nvar rgbBasisClosed = rgbSpline(__WEBPACK_IMPORTED_MODULE_2__basisClosed__[\"a\" /* default */]);\n\n\n/***/ }),\n/* 69 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__number__ = __webpack_require__(19);\n\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__number__[\"a\" /* default */])(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n});\n\n\n/***/ }),\n/* 70 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _NodeGroup = __webpack_require__(134);\n\nvar _NodeGroup2 = _interopRequireDefault(_NodeGroup);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _NodeGroup2.default; /* eslint-disable flowtype/require-valid-file-annotation */\n\n/***/ }),\n/* 71 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(41);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_d3__ = __webpack_require__(130);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_d3___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_d3__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_resonance__ = __webpack_require__(144);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__public_emotions_json__ = __webpack_require__(145);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__public_emotions_json___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__public_emotions_json__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__public_EmojiBackground_png__ = __webpack_require__(146);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__public_EmojiBackground_png___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4__public_EmojiBackground_png__);\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\n\n\n\n\n\n\n\nvar Tweener = function (_Component) {\n  _inherits(Tweener, _Component);\n\n  function Tweener() {\n    _classCallCheck(this, Tweener);\n\n    return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  Tweener.prototype.componentWillMount = function componentWillMount() {\n    //define d3 drawing functions\n    var x = __WEBPACK_IMPORTED_MODULE_1_d3__[\"scaleLinear\"]().rangeRound([0, 1000]);\n    var y = __WEBPACK_IMPORTED_MODULE_1_d3__[\"scaleLinear\"]().rangeRound([0, 1000]);\n    this.line = __WEBPACK_IMPORTED_MODULE_1_d3__[\"line\"]().curve(__WEBPACK_IMPORTED_MODULE_1_d3__[\"curveBasisClosed\"]).x(function (d) {\n      return x(+d.x);\n    }).y(function (d) {\n      return y(1 - +d.y);\n    });\n    //create svg shading def\n    this.svgShading = __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n      'defs',\n      null,\n      __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n        'pattern',\n        { id: 'image0', x: '0%', y: '0%', height: '100%', width: '100%',\n          viewBox: '0 0 512 512',\n          preserveAspectRatio: 'none'\n        },\n        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('image', { x: '0%', y: '0%', width: '512', height: '512', xlinkHref: __WEBPACK_IMPORTED_MODULE_4__public_EmojiBackground_png___default.a })\n      )\n    );\n  };\n\n  Tweener.prototype.render = function render() {\n    var _this2 = this;\n\n    var emotion = this.props.emotion === 'upside_down_face' ? 'slightly_smiling_face' : this.props.emotion;\n\n    var _emotions$emotion = __WEBPACK_IMPORTED_MODULE_3__public_emotions_json___default.a[emotion],\n        le = _emotions$emotion.le,\n        re = _emotions$emotion.re,\n        lb = _emotions$emotion.lb,\n        rb = _emotions$emotion.rb,\n        mouth = _emotions$emotion.mouth,\n        head = _emotions$emotion.head,\n        tongue = _emotions$emotion.tongue;\n\n    var headColor = this.props.headColor;\n    var tongueColor = this.props.tongueColor;\n    var eyeColor = this.props.eyeColor;\n    var browColor = this.props.browColor;\n    var mouthColor = this.props.mouthColor;\n\n    var dataArray = [{ key: \"head\", data: head, fill: headColor }, { key: \"headImg\", data: head, fill: \"url(#image0)\" }, { key: \"le\", data: le, fill: eyeColor }, { key: \"re\", data: re, fill: eyeColor }, { key: \"lb\", data: lb, fill: browColor }, { key: \"rb\", data: rb, fill: browColor }, { key: \"mouth\", data: mouth, fill: mouthColor }, { key: \"tongue\", data: tongue, fill: tongueColor }];\n\n    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n      'div',\n      { style: _extends({ width: this.props.width, height: this.props.height, position: 'relative' }, this.props.style) },\n      __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n        'svg',\n        {\n          viewBox: '0 0 1000 1000',\n          preserveAspectRatio: 'none',\n          style: {\n            position: 'absolute',\n            left: 0, top: 0, width: '100%', height: '100%'\n          }\n        },\n        this.svgShading,\n        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n          __WEBPACK_IMPORTED_MODULE_2_resonance__[\"a\" /* NodeGroup */],\n          {\n            data: dataArray,\n            keyAccessor: function keyAccessor(d, i) {\n              return d.key;\n            },\n            start: function start(data) {\n              return {\n                opacity: 1,\n                fill: [data.fill],\n                d: [_this2.line(data.data)]\n              };\n            },\n            update: function update(data, i) {\n              return {\n                opacity: [1],\n                fill: [data.fill],\n                transform: [_this2.props.emotion === \"upside_down_face\" ? \"rotate(180, 500, 500)\" : \"rotate(0, 500, 500)\"],\n                d: [_this2.line(data.data)],\n                timing: { duration: _this2.props.duration }\n              };\n            }\n          },\n          function (nodes) {\n            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n              'g',\n              null,\n              nodes.map(function (_ref) {\n                var key = _ref.key,\n                    data = _ref.data,\n                    state = _ref.state;\n\n                return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('path', _extends({ key: key }, state));\n              })\n            );\n          }\n        )\n      )\n    );\n  };\n\n  return Tweener;\n}(__WEBPACK_IMPORTED_MODULE_0_react__[\"Component\"]);\n\nTweener.defaultProps = {\n  width: '200px',\n  height: '200px',\n  emotion: 'joy',\n  responsive: true,\n  headColor: 'yellow',\n  tongueColor: 'red',\n  eyeColor: 'black',\n  mouthColor: 'black',\n  browColor: 'black',\n  duration: 800\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Tweener);\n\n/***/ }),\n/* 72 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(77), __esModule: true };\n\n/***/ }),\n/* 73 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(78), __esModule: true };\n\n/***/ }),\n/* 74 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(82), __esModule: true };\n\n/***/ }),\n/* 75 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(83), __esModule: true };\n\n/***/ }),\n/* 76 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(84), __esModule: true };\n\n/***/ }),\n/* 77 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(103);\nmodule.exports = __webpack_require__(0).Object.assign;\n\n/***/ }),\n/* 78 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(104);\nvar $Object = __webpack_require__(0).Object;\nmodule.exports = function create(P, D){\n  return $Object.create(P, D);\n};\n\n/***/ }),\n/* 79 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(105);\nvar $Object = __webpack_require__(0).Object;\nmodule.exports = function defineProperty(it, key, desc){\n  return $Object.defineProperty(it, key, desc);\n};\n\n/***/ }),\n/* 80 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(106);\nmodule.exports = __webpack_require__(0).Object.getPrototypeOf;\n\n/***/ }),\n/* 81 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(107);\nmodule.exports = __webpack_require__(0).Object.keys;\n\n/***/ }),\n/* 82 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(108);\nmodule.exports = __webpack_require__(0).Object.setPrototypeOf;\n\n/***/ }),\n/* 83 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(111);\n__webpack_require__(109);\n__webpack_require__(112);\n__webpack_require__(113);\nmodule.exports = __webpack_require__(0).Symbol;\n\n/***/ }),\n/* 84 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(110);\n__webpack_require__(114);\nmodule.exports = __webpack_require__(34).f('iterator');\n\n/***/ }),\n/* 85 */\n/***/ (function(module, exports) {\n\nmodule.exports = function(it){\n  if(typeof it != 'function')throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n/***/ }),\n/* 86 */\n/***/ (function(module, exports) {\n\nmodule.exports = function(){ /* empty */ };\n\n/***/ }),\n/* 87 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = __webpack_require__(6)\n  , toLength  = __webpack_require__(101)\n  , toIndex   = __webpack_require__(100);\nmodule.exports = function(IS_INCLUDES){\n  return function($this, el, fromIndex){\n    var O      = toIObject($this)\n      , length = toLength(O.length)\n      , index  = toIndex(fromIndex, length)\n      , value;\n    // Array#includes uses SameValueZero equality algorithm\n    if(IS_INCLUDES && el != el)while(length > index){\n      value = O[index++];\n      if(value != value)return true;\n    // Array#toIndex ignores holes, Array#includes - not\n    } else for(;length > index; index++)if(IS_INCLUDES || index in O){\n      if(O[index] === el)return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\n/***/ }),\n/* 88 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// all enumerable object keys, includes symbols\nvar getKeys = __webpack_require__(10)\n  , gOPS    = __webpack_require__(27)\n  , pIE     = __webpack_require__(15);\nmodule.exports = function(it){\n  var result     = getKeys(it)\n    , getSymbols = gOPS.f;\n  if(getSymbols){\n    var symbols = getSymbols(it)\n      , isEnum  = pIE.f\n      , i       = 0\n      , key;\n    while(symbols.length > i)if(isEnum.call(it, key = symbols[i++]))result.push(key);\n  } return result;\n};\n\n/***/ }),\n/* 89 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(1).document && document.documentElement;\n\n/***/ }),\n/* 90 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 7.2.2 IsArray(argument)\nvar cof = __webpack_require__(50);\nmodule.exports = Array.isArray || function isArray(arg){\n  return cof(arg) == 'Array';\n};\n\n/***/ }),\n/* 91 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar create         = __webpack_require__(26)\n  , descriptor     = __webpack_require__(16)\n  , setToStringTag = __webpack_require__(28)\n  , IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\n__webpack_require__(9)(IteratorPrototype, __webpack_require__(11)('iterator'), function(){ return this; });\n\nmodule.exports = function(Constructor, NAME, next){\n  Constructor.prototype = create(IteratorPrototype, {next: descriptor(1, next)});\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n\n/***/ }),\n/* 92 */\n/***/ (function(module, exports) {\n\nmodule.exports = function(done, value){\n  return {value: value, done: !!done};\n};\n\n/***/ }),\n/* 93 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar getKeys   = __webpack_require__(10)\n  , toIObject = __webpack_require__(6);\nmodule.exports = function(object, el){\n  var O      = toIObject(object)\n    , keys   = getKeys(O)\n    , length = keys.length\n    , index  = 0\n    , key;\n  while(length > index)if(O[key = keys[index++]] === el)return key;\n};\n\n/***/ }),\n/* 94 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar META     = __webpack_require__(18)('meta')\n  , isObject = __webpack_require__(13)\n  , has      = __webpack_require__(4)\n  , setDesc  = __webpack_require__(5).f\n  , id       = 0;\nvar isExtensible = Object.isExtensible || function(){\n  return true;\n};\nvar FREEZE = !__webpack_require__(8)(function(){\n  return isExtensible(Object.preventExtensions({}));\n});\nvar setMeta = function(it){\n  setDesc(it, META, {value: {\n    i: 'O' + ++id, // object ID\n    w: {}          // weak collections IDs\n  }});\n};\nvar fastKey = function(it, create){\n  // return primitive with prefix\n  if(!isObject(it))return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if(!has(it, META)){\n    // can't set metadata to uncaught frozen object\n    if(!isExtensible(it))return 'F';\n    // not necessary to add metadata\n    if(!create)return 'E';\n    // add missing metadata\n    setMeta(it);\n  // return object ID\n  } return it[META].i;\n};\nvar getWeak = function(it, create){\n  if(!has(it, META)){\n    // can't set metadata to uncaught frozen object\n    if(!isExtensible(it))return true;\n    // not necessary to add metadata\n    if(!create)return false;\n    // add missing metadata\n    setMeta(it);\n  // return hash weak collections IDs\n  } return it[META].w;\n};\n// add metadata on freeze-family methods calling\nvar onFreeze = function(it){\n  if(FREEZE && meta.NEED && isExtensible(it) && !has(it, META))setMeta(it);\n  return it;\n};\nvar meta = module.exports = {\n  KEY:      META,\n  NEED:     false,\n  fastKey:  fastKey,\n  getWeak:  getWeak,\n  onFreeze: onFreeze\n};\n\n/***/ }),\n/* 95 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// 19.1.2.1 Object.assign(target, source, ...)\nvar getKeys  = __webpack_require__(10)\n  , gOPS     = __webpack_require__(27)\n  , pIE      = __webpack_require__(15)\n  , toObject = __webpack_require__(17)\n  , IObject  = __webpack_require__(54)\n  , $assign  = Object.assign;\n\n// should work with symbols and should have deterministic property order (V8 bug)\nmodule.exports = !$assign || __webpack_require__(8)(function(){\n  var A = {}\n    , B = {}\n    , S = Symbol()\n    , K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function(k){ B[k] = k; });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source){ // eslint-disable-line no-unused-vars\n  var T     = toObject(target)\n    , aLen  = arguments.length\n    , index = 1\n    , getSymbols = gOPS.f\n    , isEnum     = pIE.f;\n  while(aLen > index){\n    var S      = IObject(arguments[index++])\n      , keys   = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S)\n      , length = keys.length\n      , j      = 0\n      , key;\n    while(length > j)if(isEnum.call(S, key = keys[j++]))T[key] = S[key];\n  } return T;\n} : $assign;\n\n/***/ }),\n/* 96 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar dP       = __webpack_require__(5)\n  , anObject = __webpack_require__(12)\n  , getKeys  = __webpack_require__(10);\n\nmodule.exports = __webpack_require__(2) ? Object.defineProperties : function defineProperties(O, Properties){\n  anObject(O);\n  var keys   = getKeys(Properties)\n    , length = keys.length\n    , i = 0\n    , P;\n  while(length > i)dP.f(O, P = keys[i++], Properties[P]);\n  return O;\n};\n\n/***/ }),\n/* 97 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\nvar toIObject = __webpack_require__(6)\n  , gOPN      = __webpack_require__(57).f\n  , toString  = {}.toString;\n\nvar windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames\n  ? Object.getOwnPropertyNames(window) : [];\n\nvar getWindowNames = function(it){\n  try {\n    return gOPN(it);\n  } catch(e){\n    return windowNames.slice();\n  }\n};\n\nmodule.exports.f = function getOwnPropertyNames(it){\n  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));\n};\n\n\n/***/ }),\n/* 98 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// Works with __proto__ only. Old v8 can't work with null proto objects.\n/* eslint-disable no-proto */\nvar isObject = __webpack_require__(13)\n  , anObject = __webpack_require__(12);\nvar check = function(O, proto){\n  anObject(O);\n  if(!isObject(proto) && proto !== null)throw TypeError(proto + \": can't set as prototype!\");\n};\nmodule.exports = {\n  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line\n    function(test, buggy, set){\n      try {\n        set = __webpack_require__(51)(Function.call, __webpack_require__(56).f(Object.prototype, '__proto__').set, 2);\n        set(test, []);\n        buggy = !(test instanceof Array);\n      } catch(e){ buggy = true; }\n      return function setPrototypeOf(O, proto){\n        check(O, proto);\n        if(buggy)O.__proto__ = proto;\n        else set(O, proto);\n        return O;\n      };\n    }({}, false) : undefined),\n  check: check\n};\n\n/***/ }),\n/* 99 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar toInteger = __webpack_require__(31)\n  , defined   = __webpack_require__(22);\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function(TO_STRING){\n  return function(that, pos){\n    var s = String(defined(that))\n      , i = toInteger(pos)\n      , l = s.length\n      , a, b;\n    if(i < 0 || i >= l)return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n\n/***/ }),\n/* 100 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar toInteger = __webpack_require__(31)\n  , max       = Math.max\n  , min       = Math.min;\nmodule.exports = function(index, length){\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n\n/***/ }),\n/* 101 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 7.1.15 ToLength\nvar toInteger = __webpack_require__(31)\n  , min       = Math.min;\nmodule.exports = function(it){\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n\n/***/ }),\n/* 102 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar addToUnscopables = __webpack_require__(86)\n  , step             = __webpack_require__(92)\n  , Iterators        = __webpack_require__(24)\n  , toIObject        = __webpack_require__(6);\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = __webpack_require__(55)(Array, 'Array', function(iterated, kind){\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function(){\n  var O     = this._t\n    , kind  = this._k\n    , index = this._i++;\n  if(!O || index >= O.length){\n    this._t = undefined;\n    return step(1);\n  }\n  if(kind == 'keys'  )return step(0, index);\n  if(kind == 'values')return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n\n/***/ }),\n/* 103 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 19.1.3.1 Object.assign(target, source)\nvar $export = __webpack_require__(3);\n\n$export($export.S + $export.F, 'Object', {assign: __webpack_require__(95)});\n\n/***/ }),\n/* 104 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar $export = __webpack_require__(3)\n// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\n$export($export.S, 'Object', {create: __webpack_require__(26)});\n\n/***/ }),\n/* 105 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar $export = __webpack_require__(3);\n// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)\n$export($export.S + $export.F * !__webpack_require__(2), 'Object', {defineProperty: __webpack_require__(5).f});\n\n/***/ }),\n/* 106 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 19.1.2.9 Object.getPrototypeOf(O)\nvar toObject        = __webpack_require__(17)\n  , $getPrototypeOf = __webpack_require__(58);\n\n__webpack_require__(60)('getPrototypeOf', function(){\n  return function getPrototypeOf(it){\n    return $getPrototypeOf(toObject(it));\n  };\n});\n\n/***/ }),\n/* 107 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 19.1.2.14 Object.keys(O)\nvar toObject = __webpack_require__(17)\n  , $keys    = __webpack_require__(10);\n\n__webpack_require__(60)('keys', function(){\n  return function keys(it){\n    return $keys(toObject(it));\n  };\n});\n\n/***/ }),\n/* 108 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 19.1.3.19 Object.setPrototypeOf(O, proto)\nvar $export = __webpack_require__(3);\n$export($export.S, 'Object', {setPrototypeOf: __webpack_require__(98).set});\n\n/***/ }),\n/* 109 */\n/***/ (function(module, exports) {\n\n\n\n/***/ }),\n/* 110 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar $at  = __webpack_require__(99)(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\n__webpack_require__(55)(String, 'String', function(iterated){\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function(){\n  var O     = this._t\n    , index = this._i\n    , point;\n  if(index >= O.length)return {value: undefined, done: true};\n  point = $at(O, index);\n  this._i += point.length;\n  return {value: point, done: false};\n});\n\n/***/ }),\n/* 111 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// ECMAScript 6 symbols shim\nvar global         = __webpack_require__(1)\n  , has            = __webpack_require__(4)\n  , DESCRIPTORS    = __webpack_require__(2)\n  , $export        = __webpack_require__(3)\n  , redefine       = __webpack_require__(61)\n  , META           = __webpack_require__(94).KEY\n  , $fails         = __webpack_require__(8)\n  , shared         = __webpack_require__(30)\n  , setToStringTag = __webpack_require__(28)\n  , uid            = __webpack_require__(18)\n  , wks            = __webpack_require__(11)\n  , wksExt         = __webpack_require__(34)\n  , wksDefine      = __webpack_require__(33)\n  , keyOf          = __webpack_require__(93)\n  , enumKeys       = __webpack_require__(88)\n  , isArray        = __webpack_require__(90)\n  , anObject       = __webpack_require__(12)\n  , toIObject      = __webpack_require__(6)\n  , toPrimitive    = __webpack_require__(32)\n  , createDesc     = __webpack_require__(16)\n  , _create        = __webpack_require__(26)\n  , gOPNExt        = __webpack_require__(97)\n  , $GOPD          = __webpack_require__(56)\n  , $DP            = __webpack_require__(5)\n  , $keys          = __webpack_require__(10)\n  , gOPD           = $GOPD.f\n  , dP             = $DP.f\n  , gOPN           = gOPNExt.f\n  , $Symbol        = global.Symbol\n  , $JSON          = global.JSON\n  , _stringify     = $JSON && $JSON.stringify\n  , PROTOTYPE      = 'prototype'\n  , HIDDEN         = wks('_hidden')\n  , TO_PRIMITIVE   = wks('toPrimitive')\n  , isEnum         = {}.propertyIsEnumerable\n  , SymbolRegistry = shared('symbol-registry')\n  , AllSymbols     = shared('symbols')\n  , OPSymbols      = shared('op-symbols')\n  , ObjectProto    = Object[PROTOTYPE]\n  , USE_NATIVE     = typeof $Symbol == 'function'\n  , QObject        = global.QObject;\n// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173\nvar setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;\n\n// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687\nvar setSymbolDesc = DESCRIPTORS && $fails(function(){\n  return _create(dP({}, 'a', {\n    get: function(){ return dP(this, 'a', {value: 7}).a; }\n  })).a != 7;\n}) ? function(it, key, D){\n  var protoDesc = gOPD(ObjectProto, key);\n  if(protoDesc)delete ObjectProto[key];\n  dP(it, key, D);\n  if(protoDesc && it !== ObjectProto)dP(ObjectProto, key, protoDesc);\n} : dP;\n\nvar wrap = function(tag){\n  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);\n  sym._k = tag;\n  return sym;\n};\n\nvar isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function(it){\n  return typeof it == 'symbol';\n} : function(it){\n  return it instanceof $Symbol;\n};\n\nvar $defineProperty = function defineProperty(it, key, D){\n  if(it === ObjectProto)$defineProperty(OPSymbols, key, D);\n  anObject(it);\n  key = toPrimitive(key, true);\n  anObject(D);\n  if(has(AllSymbols, key)){\n    if(!D.enumerable){\n      if(!has(it, HIDDEN))dP(it, HIDDEN, createDesc(1, {}));\n      it[HIDDEN][key] = true;\n    } else {\n      if(has(it, HIDDEN) && it[HIDDEN][key])it[HIDDEN][key] = false;\n      D = _create(D, {enumerable: createDesc(0, false)});\n    } return setSymbolDesc(it, key, D);\n  } return dP(it, key, D);\n};\nvar $defineProperties = function defineProperties(it, P){\n  anObject(it);\n  var keys = enumKeys(P = toIObject(P))\n    , i    = 0\n    , l = keys.length\n    , key;\n  while(l > i)$defineProperty(it, key = keys[i++], P[key]);\n  return it;\n};\nvar $create = function create(it, P){\n  return P === undefined ? _create(it) : $defineProperties(_create(it), P);\n};\nvar $propertyIsEnumerable = function propertyIsEnumerable(key){\n  var E = isEnum.call(this, key = toPrimitive(key, true));\n  if(this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key))return false;\n  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;\n};\nvar $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key){\n  it  = toIObject(it);\n  key = toPrimitive(key, true);\n  if(it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key))return;\n  var D = gOPD(it, key);\n  if(D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key]))D.enumerable = true;\n  return D;\n};\nvar $getOwnPropertyNames = function getOwnPropertyNames(it){\n  var names  = gOPN(toIObject(it))\n    , result = []\n    , i      = 0\n    , key;\n  while(names.length > i){\n    if(!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META)result.push(key);\n  } return result;\n};\nvar $getOwnPropertySymbols = function getOwnPropertySymbols(it){\n  var IS_OP  = it === ObjectProto\n    , names  = gOPN(IS_OP ? OPSymbols : toIObject(it))\n    , result = []\n    , i      = 0\n    , key;\n  while(names.length > i){\n    if(has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true))result.push(AllSymbols[key]);\n  } return result;\n};\n\n// 19.4.1.1 Symbol([description])\nif(!USE_NATIVE){\n  $Symbol = function Symbol(){\n    if(this instanceof $Symbol)throw TypeError('Symbol is not a constructor!');\n    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);\n    var $set = function(value){\n      if(this === ObjectProto)$set.call(OPSymbols, value);\n      if(has(this, HIDDEN) && has(this[HIDDEN], tag))this[HIDDEN][tag] = false;\n      setSymbolDesc(this, tag, createDesc(1, value));\n    };\n    if(DESCRIPTORS && setter)setSymbolDesc(ObjectProto, tag, {configurable: true, set: $set});\n    return wrap(tag);\n  };\n  redefine($Symbol[PROTOTYPE], 'toString', function toString(){\n    return this._k;\n  });\n\n  $GOPD.f = $getOwnPropertyDescriptor;\n  $DP.f   = $defineProperty;\n  __webpack_require__(57).f = gOPNExt.f = $getOwnPropertyNames;\n  __webpack_require__(15).f  = $propertyIsEnumerable;\n  __webpack_require__(27).f = $getOwnPropertySymbols;\n\n  if(DESCRIPTORS && !__webpack_require__(25)){\n    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);\n  }\n\n  wksExt.f = function(name){\n    return wrap(wks(name));\n  }\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, {Symbol: $Symbol});\n\nfor(var symbols = (\n  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14\n  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'\n).split(','), i = 0; symbols.length > i; )wks(symbols[i++]);\n\nfor(var symbols = $keys(wks.store), i = 0; symbols.length > i; )wksDefine(symbols[i++]);\n\n$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {\n  // 19.4.2.1 Symbol.for(key)\n  'for': function(key){\n    return has(SymbolRegistry, key += '')\n      ? SymbolRegistry[key]\n      : SymbolRegistry[key] = $Symbol(key);\n  },\n  // 19.4.2.5 Symbol.keyFor(sym)\n  keyFor: function keyFor(key){\n    if(isSymbol(key))return keyOf(SymbolRegistry, key);\n    throw TypeError(key + ' is not a symbol!');\n  },\n  useSetter: function(){ setter = true; },\n  useSimple: function(){ setter = false; }\n});\n\n$export($export.S + $export.F * !USE_NATIVE, 'Object', {\n  // 19.1.2.2 Object.create(O [, Properties])\n  create: $create,\n  // 19.1.2.4 Object.defineProperty(O, P, Attributes)\n  defineProperty: $defineProperty,\n  // 19.1.2.3 Object.defineProperties(O, Properties)\n  defineProperties: $defineProperties,\n  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)\n  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,\n  // 19.1.2.7 Object.getOwnPropertyNames(O)\n  getOwnPropertyNames: $getOwnPropertyNames,\n  // 19.1.2.8 Object.getOwnPropertySymbols(O)\n  getOwnPropertySymbols: $getOwnPropertySymbols\n});\n\n// 24.3.2 JSON.stringify(value [, replacer [, space]])\n$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function(){\n  var S = $Symbol();\n  // MS Edge converts symbol values to JSON as {}\n  // WebKit converts symbol values to JSON as null\n  // V8 throws on boxed symbols\n  return _stringify([S]) != '[null]' || _stringify({a: S}) != '{}' || _stringify(Object(S)) != '{}';\n})), 'JSON', {\n  stringify: function stringify(it){\n    if(it === undefined || isSymbol(it))return; // IE8 returns string on undefined\n    var args = [it]\n      , i    = 1\n      , replacer, $replacer;\n    while(arguments.length > i)args.push(arguments[i++]);\n    replacer = args[1];\n    if(typeof replacer == 'function')$replacer = replacer;\n    if($replacer || !isArray(replacer))replacer = function(key, value){\n      if($replacer)value = $replacer.call(this, key, value);\n      if(!isSymbol(value))return value;\n    };\n    args[1] = replacer;\n    return _stringify.apply($JSON, args);\n  }\n});\n\n// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)\n$Symbol[PROTOTYPE][TO_PRIMITIVE] || __webpack_require__(9)($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);\n// 19.4.3.5 Symbol.prototype[@@toStringTag]\nsetToStringTag($Symbol, 'Symbol');\n// 20.2.1.9 Math[@@toStringTag]\nsetToStringTag(Math, 'Math', true);\n// 24.3.3 JSON[@@toStringTag]\nsetToStringTag(global.JSON, 'JSON', true);\n\n/***/ }),\n/* 112 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(33)('asyncIterator');\n\n/***/ }),\n/* 113 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(33)('observable');\n\n/***/ }),\n/* 114 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(102);\nvar global        = __webpack_require__(1)\n  , hide          = __webpack_require__(9)\n  , Iterators     = __webpack_require__(24)\n  , TO_STRING_TAG = __webpack_require__(11)('toStringTag');\n\nfor(var collections = ['NodeList', 'DOMTokenList', 'MediaList', 'StyleSheetList', 'CSSRuleList'], i = 0; i < 5; i++){\n  var NAME       = collections[i]\n    , Collection = global[NAME]\n    , proto      = Collection && Collection.prototype;\n  if(proto && !proto[TO_STRING_TAG])hide(proto, TO_STRING_TAG, NAME);\n  Iterators[NAME] = Iterators.Array;\n}\n\n/***/ }),\n/* 115 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = cubehelix;\n/* unused harmony export Cubehelix */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__define__ = __webpack_require__(36);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__color__ = __webpack_require__(35);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__math__ = __webpack_require__(62);\n\n\n\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof __WEBPACK_IMPORTED_MODULE_1__color__[\"d\" /* Rgb */])) o = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__color__[\"e\" /* rgbConvert */])(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * __WEBPACK_IMPORTED_MODULE_2__math__[\"a\" /* rad2deg */] - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nfunction cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\n__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__define__[\"a\" /* default */])(Cubehelix, cubehelix, __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__define__[\"b\" /* extend */])(__WEBPACK_IMPORTED_MODULE_1__color__[\"f\" /* Color */], {\n  brighter: function(k) {\n    k = k == null ? __WEBPACK_IMPORTED_MODULE_1__color__[\"g\" /* brighter */] : Math.pow(__WEBPACK_IMPORTED_MODULE_1__color__[\"g\" /* brighter */], k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? __WEBPACK_IMPORTED_MODULE_1__color__[\"h\" /* darker */] : Math.pow(__WEBPACK_IMPORTED_MODULE_1__color__[\"h\" /* darker */], k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * __WEBPACK_IMPORTED_MODULE_2__math__[\"b\" /* deg2rad */],\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new __WEBPACK_IMPORTED_MODULE_1__color__[\"d\" /* Rgb */](\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n\n\n/***/ }),\n/* 116 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = lab;\n/* unused harmony export Lab */\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = hcl;\n/* unused harmony export Hcl */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__define__ = __webpack_require__(36);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__color__ = __webpack_require__(35);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__math__ = __webpack_require__(62);\n\n\n\n\nvar Kn = 18,\n    Xn = 0.950470, // D65 standard referent\n    Yn = 1,\n    Zn = 1.088830,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    var h = o.h * __WEBPACK_IMPORTED_MODULE_2__math__[\"b\" /* deg2rad */];\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof __WEBPACK_IMPORTED_MODULE_1__color__[\"d\" /* Rgb */])) o = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__color__[\"e\" /* rgbConvert */])(o);\n  var b = rgb2xyz(o.r),\n      a = rgb2xyz(o.g),\n      l = rgb2xyz(o.b),\n      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nfunction lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nfunction Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\n__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__define__[\"a\" /* default */])(Lab, lab, __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__define__[\"b\" /* extend */])(__WEBPACK_IMPORTED_MODULE_1__color__[\"f\" /* Color */], {\n  brighter: function(k) {\n    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new __WEBPACK_IMPORTED_MODULE_1__color__[\"d\" /* Rgb */](\n      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  var h = Math.atan2(o.b, o.a) * __WEBPACK_IMPORTED_MODULE_2__math__[\"a\" /* rad2deg */];\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nfunction hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\n__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__define__[\"a\" /* default */])(Hcl, hcl, __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__define__[\"b\" /* extend */])(__WEBPACK_IMPORTED_MODULE_1__color__[\"f\" /* Color */], {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n\n\n/***/ }),\n/* 117 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__src_value__ = __webpack_require__(38);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"interpolate\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_value__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__src_array__ = __webpack_require__(63);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"interpolateArray\", function() { return __WEBPACK_IMPORTED_MODULE_1__src_array__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__src_basis__ = __webpack_require__(37);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"interpolateBasis\", function() { return __WEBPACK_IMPORTED_MODULE_2__src_basis__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__src_basisClosed__ = __webpack_require__(64);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"interpolateBasisClosed\", function() { return __WEBPACK_IMPORTED_MODULE_3__src_basisClosed__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__src_date__ = __webpack_require__(66);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"interpolateDate\", function() { return __WEBPACK_IMPORTED_MODULE_4__src_date__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__src_number__ = __webpack_require__(19);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"interpolateNumber\", function() { return __WEBPACK_IMPORTED_MODULE_5__src_number__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__src_object__ = __webpack_require__(67);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"interpolateObject\", function() { return __WEBPACK_IMPORTED_MODULE_6__src_object__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__src_round__ = __webpack_require__(123);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"interpolateRound\", function() { return __WEBPACK_IMPORTED_MODULE_7__src_round__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__src_string__ = __webpack_require__(69);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"interpolateString\", function() { return __WEBPACK_IMPORTED_MODULE_8__src_string__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__src_transform_index__ = __webpack_require__(125);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"interpolateTransformCss\", function() { return __WEBPACK_IMPORTED_MODULE_9__src_transform_index__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"interpolateTransformSvg\", function() { return __WEBPACK_IMPORTED_MODULE_9__src_transform_index__[\"b\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__src_zoom__ = __webpack_require__(127);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"interpolateZoom\", function() { return __WEBPACK_IMPORTED_MODULE_10__src_zoom__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__src_rgb__ = __webpack_require__(68);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"interpolateRgb\", function() { return __WEBPACK_IMPORTED_MODULE_11__src_rgb__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"interpolateRgbBasis\", function() { return __WEBPACK_IMPORTED_MODULE_11__src_rgb__[\"b\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"interpolateRgbBasisClosed\", function() { return __WEBPACK_IMPORTED_MODULE_11__src_rgb__[\"c\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__src_hsl__ = __webpack_require__(120);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"interpolateHsl\", function() { return __WEBPACK_IMPORTED_MODULE_12__src_hsl__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"interpolateHslLong\", function() { return __WEBPACK_IMPORTED_MODULE_12__src_hsl__[\"b\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__src_lab__ = __webpack_require__(121);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"interpolateLab\", function() { return __WEBPACK_IMPORTED_MODULE_13__src_lab__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__src_hcl__ = __webpack_require__(119);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"interpolateHcl\", function() { return __WEBPACK_IMPORTED_MODULE_14__src_hcl__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"interpolateHclLong\", function() { return __WEBPACK_IMPORTED_MODULE_14__src_hcl__[\"b\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__src_cubehelix__ = __webpack_require__(118);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"interpolateCubehelix\", function() { return __WEBPACK_IMPORTED_MODULE_15__src_cubehelix__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"interpolateCubehelixLong\", function() { return __WEBPACK_IMPORTED_MODULE_15__src_cubehelix__[\"b\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__src_quantize__ = __webpack_require__(122);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"quantize\", function() { return __WEBPACK_IMPORTED_MODULE_16__src_quantize__[\"a\"]; });\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/***/ }),\n/* 118 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return cubehelixLong; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_d3_color__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__color__ = __webpack_require__(14);\n\n\n\nfunction cubehelix(hue) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_d3_color__[\"cubehelix\"])(start)).h, (end = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_d3_color__[\"cubehelix\"])(end)).h),\n          s = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__color__[\"a\" /* default */])(start.s, end.s),\n          l = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__color__[\"a\" /* default */])(start.l, end.l),\n          opacity = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__color__[\"a\" /* default */])(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (cubehelix(__WEBPACK_IMPORTED_MODULE_1__color__[\"b\" /* hue */]));\nvar cubehelixLong = cubehelix(__WEBPACK_IMPORTED_MODULE_1__color__[\"a\" /* default */]);\n\n\n/***/ }),\n/* 119 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return hclLong; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_d3_color__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__color__ = __webpack_require__(14);\n\n\n\nfunction hcl(hue) {\n  return function(start, end) {\n    var h = hue((start = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_d3_color__[\"hcl\"])(start)).h, (end = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_d3_color__[\"hcl\"])(end)).h),\n        c = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__color__[\"a\" /* default */])(start.c, end.c),\n        l = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__color__[\"a\" /* default */])(start.l, end.l),\n        opacity = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__color__[\"a\" /* default */])(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (hcl(__WEBPACK_IMPORTED_MODULE_1__color__[\"b\" /* hue */]));\nvar hclLong = hcl(__WEBPACK_IMPORTED_MODULE_1__color__[\"a\" /* default */]);\n\n\n/***/ }),\n/* 120 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return hslLong; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_d3_color__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__color__ = __webpack_require__(14);\n\n\n\nfunction hsl(hue) {\n  return function(start, end) {\n    var h = hue((start = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_d3_color__[\"hsl\"])(start)).h, (end = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_d3_color__[\"hsl\"])(end)).h),\n        s = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__color__[\"a\" /* default */])(start.s, end.s),\n        l = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__color__[\"a\" /* default */])(start.l, end.l),\n        opacity = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__color__[\"a\" /* default */])(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (hsl(__WEBPACK_IMPORTED_MODULE_1__color__[\"b\" /* hue */]));\nvar hslLong = hsl(__WEBPACK_IMPORTED_MODULE_1__color__[\"a\" /* default */]);\n\n\n/***/ }),\n/* 121 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = lab;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_d3_color__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__color__ = __webpack_require__(14);\n\n\n\nfunction lab(start, end) {\n  var l = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__color__[\"a\" /* default */])((start = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_d3_color__[\"lab\"])(start)).l, (end = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_d3_color__[\"lab\"])(end)).l),\n      a = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__color__[\"a\" /* default */])(start.a, end.a),\n      b = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__color__[\"a\" /* default */])(start.b, end.b),\n      opacity = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__color__[\"a\" /* default */])(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n\n\n/***/ }),\n/* 122 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = (function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n});\n\n\n/***/ }),\n/* 123 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = (function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n});\n\n\n/***/ }),\n/* 124 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return identity; });\nvar degrees = 180 / Math.PI;\n\nvar identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\n/* harmony default export */ __webpack_exports__[\"b\"] = (function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n});\n\n\n/***/ }),\n/* 125 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return interpolateTransformCss; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return interpolateTransformSvg; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__number__ = __webpack_require__(19);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__parse__ = __webpack_require__(126);\n\n\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__number__[\"a\" /* default */])(xa, xb)}, {i: i - 2, x: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__number__[\"a\" /* default */])(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__number__[\"a\" /* default */])(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__number__[\"a\" /* default */])(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__number__[\"a\" /* default */])(xa, xb)}, {i: i - 2, x: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__number__[\"a\" /* default */])(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nvar interpolateTransformCss = interpolateTransform(__WEBPACK_IMPORTED_MODULE_1__parse__[\"a\" /* parseCss */], \"px, \", \"px)\", \"deg)\");\nvar interpolateTransformSvg = interpolateTransform(__WEBPACK_IMPORTED_MODULE_1__parse__[\"b\" /* parseSvg */], \", \", \")\", \")\");\n\n\n/***/ }),\n/* 126 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = parseCss;\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = parseSvg;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__decompose__ = __webpack_require__(124);\n\n\nvar cssNode,\n    cssRoot,\n    cssView,\n    svgNode;\n\nfunction parseCss(value) {\n  if (value === \"none\") return __WEBPACK_IMPORTED_MODULE_0__decompose__[\"a\" /* identity */];\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__decompose__[\"b\" /* default */])(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nfunction parseSvg(value) {\n  if (value == null) return __WEBPACK_IMPORTED_MODULE_0__decompose__[\"a\" /* identity */];\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return __WEBPACK_IMPORTED_MODULE_0__decompose__[\"a\" /* identity */];\n  value = value.matrix;\n  return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__decompose__[\"b\" /* default */])(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n\n\n/***/ }),\n/* 127 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar rho = Math.SQRT2,\n    rho2 = 2,\n    rho4 = 4,\n    epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\n/* harmony default export */ __webpack_exports__[\"a\"] = (function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    }\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    }\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n});\n\n\n/***/ }),\n/* 128 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__timer__ = __webpack_require__(40);\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function(callback, delay, time) {\n  var t = new __WEBPACK_IMPORTED_MODULE_0__timer__[\"d\" /* Timer */], total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__timer__[\"a\" /* now */])() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n});\n\n\n/***/ }),\n/* 129 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__timer__ = __webpack_require__(40);\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function(callback, delay, time) {\n  var t = new __WEBPACK_IMPORTED_MODULE_0__timer__[\"d\" /* Timer */];\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n});\n\n\n/***/ }),\n/* 130 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// https://d3js.org Version 4.9.1. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\t true ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar version = \"4.9.1\";\n\nvar ascending = function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n};\n\nvar bisector = function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n};\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n\nvar ascendingBisect = bisector(ascending);\nvar bisectRight = ascendingBisect.right;\nvar bisectLeft = ascendingBisect.left;\n\nvar pairs = function(array, f) {\n  if (f == null) f = pair;\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = f(p, p = array[++i]);\n  return pairs;\n};\n\nfunction pair(a, b) {\n  return [a, b];\n}\n\nvar cross = function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n};\n\nvar descending = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar number = function(x) {\n  return x === null ? NaN : +x;\n};\n\nvar variance = function(values, valueof) {\n  var n = values.length,\n      m = 0,\n      i = -1,\n      mean = 0,\n      value,\n      delta,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  if (m > 1) return sum / (m - 1);\n};\n\nvar deviation = function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n};\n\nvar extent = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return [min, max];\n};\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\nvar map = array.map;\n\nvar constant = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar identity = function(x) {\n  return x;\n};\n\nvar sequence = function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n};\n\nvar e10 = Math.sqrt(50);\nvar e5 = Math.sqrt(10);\nvar e2 = Math.sqrt(2);\n\nvar ticks = function(start, stop, count) {\n  var reverse = stop < start,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  if (reverse) n = start, start = stop, stop = n;\n\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n};\n\nfunction tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nfunction tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n\nvar sturges = function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n};\n\nvar histogram = function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      tz = tickStep(x0, x1, tz);\n      tz = sequence(Math.ceil(x0 / tz) * tz, Math.floor(x1 / tz) * tz, tz); // exclusive\n    }\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] > x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n};\n\nvar threshold = function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n};\n\nvar freedmanDiaconis = function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n};\n\nvar scott = function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n};\n\nvar max = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return max;\n};\n\nvar mean = function(values, valueof) {\n  var n = values.length,\n      m = n,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) sum += value;\n      else --m;\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n      else --m;\n    }\n  }\n\n  if (m) return sum / m;\n};\n\nvar median = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      numbers = [];\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  return threshold(numbers.sort(ascending), 0.5);\n};\n\nvar merge = function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n};\n\nvar min = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  return min;\n};\n\nvar permute = function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n};\n\nvar scan = function(values, compare) {\n  if (!(n = values.length)) return;\n  var n,\n      i = 0,\n      j = 0,\n      xi,\n      xj = values[j];\n\n  if (compare == null) compare = ascending;\n\n  while (++i < n) {\n    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n      xj = xi, j = i;\n    }\n  }\n\n  if (compare(xj, xj) === 0) return j;\n};\n\nvar shuffle = function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n};\n\nvar sum = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (value = +valueof(values[i], i, values)) sum += value;\n    }\n  }\n\n  return sum;\n};\n\nvar transpose = function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n};\n\nfunction length(d) {\n  return d.length;\n}\n\nvar zip = function() {\n  return transpose(arguments);\n};\n\nvar slice$1 = Array.prototype.slice;\n\nvar identity$1 = function(x) {\n  return x;\n};\n\nvar top = 1;\nvar right = 2;\nvar bottom = 3;\nvar left = 4;\nvar epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + (x + 0.5) + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + (y + 0.5) + \")\";\n}\n\nfunction center(scale) {\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$1) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = range[0] + 0.5,\n        range1 = range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : identity$1)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice$1.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice$1.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice$1.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nfunction axisTop(scale) {\n  return axis(top, scale);\n}\n\nfunction axisRight(scale) {\n  return axis(right, scale);\n}\n\nfunction axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nfunction axisLeft(scale) {\n  return axis(left, scale);\n}\n\nvar noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\nvar namespaces = {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n\nvar namespace = function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n};\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nvar creator = function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n};\n\nvar nextId = 0;\n\nfunction local$1() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local$1.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nvar matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nvar matcher$1 = matcher;\n\nvar filterEvents = {};\n\nexports.event = null;\n\nif (typeof document !== \"undefined\") {\n  var element$1 = document.documentElement;\n  if (!(\"onmouseenter\" in element$1)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n    exports.event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      exports.event = event0;\n    }\n  };\n}\n\nfunction parseTypenames$1(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nvar selection_on = function(typename, value, capture) {\n  var typenames = parseTypenames$1(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n};\n\nfunction customEvent(event1, listener, that, args) {\n  var event0 = exports.event;\n  event1.sourceEvent = exports.event;\n  exports.event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    exports.event = event0;\n  }\n}\n\nvar sourceEvent = function() {\n  var current = exports.event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n};\n\nvar point = function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n};\n\nvar mouse = function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n};\n\nfunction none() {}\n\nvar selector = function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n};\n\nvar selection_select = function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nfunction empty$1() {\n  return [];\n}\n\nvar selectorAll = function(selector) {\n  return selector == null ? empty$1 : function() {\n    return this.querySelectorAll(selector);\n  };\n};\n\nvar selection_selectAll = function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n};\n\nvar selection_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nvar sparse = function(update) {\n  return new Array(update.length);\n};\n\nvar selection_enter = function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n};\n\nfunction EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n\nvar constant$1 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nvar selection_data = function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant$1(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n};\n\nvar selection_exit = function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n};\n\nvar selection_merge = function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n};\n\nvar selection_order = function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n};\n\nvar selection_sort = function(compare) {\n  if (!compare) compare = ascending$1;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n};\n\nfunction ascending$1(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nvar selection_call = function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n};\n\nvar selection_nodes = function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n};\n\nvar selection_node = function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n};\n\nvar selection_size = function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n};\n\nvar selection_empty = function() {\n  return !this.node();\n};\n\nvar selection_each = function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n};\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nvar selection_attr = function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n};\n\nvar defaultView = function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n};\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nvar selection_style = function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n};\n\nfunction styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n\nfunction propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nvar selection_property = function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n};\n\nfunction classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nvar selection_classed = function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n};\n\nfunction textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nvar selection_text = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n};\n\nfunction htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nvar selection_html = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n};\n\nfunction raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nvar selection_raise = function() {\n  return this.each(raise);\n};\n\nfunction lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nvar selection_lower = function() {\n  return this.each(lower);\n};\n\nvar selection_append = function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n};\n\nfunction constantNull() {\n  return null;\n}\n\nvar selection_insert = function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n};\n\nfunction remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nvar selection_remove = function() {\n  return this.each(remove);\n};\n\nvar selection_datum = function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n};\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nvar selection_dispatch = function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n};\n\nvar root = [null];\n\nfunction Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nvar select = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n};\n\nvar selectAll = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n};\n\nvar touch = function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n};\n\nvar touches = function(node, touches) {\n  if (touches == null) touches = sourceEvent().touches;\n\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n    points[i] = point(node, touches[i]);\n  }\n\n  return points;\n};\n\nfunction nopropagation() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar dragDisable = function(view) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n};\n\nfunction yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection$$1.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection$$1.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n\nvar constant$2 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$1() {\n  return !exports.event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n}\n\nvar drag = function() {\n  var filter = defaultFilter$1,\n      container = defaultContainer,\n      subject = defaultSubject,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection$$1) {\n    selection$$1\n        .on(\"mousedown.drag\", mousedowned)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(exports.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    dragDisable(exports.event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = exports.event.clientX;\n    mousedowny = exports.event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = exports.event.clientX - mousedownx, dy = exports.event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(exports.event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(exports.event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches$$1 = exports.event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches$$1[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$2(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$2(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$2(_), drag) : subject;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n};\n\nvar define = function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n};\n\nfunction extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n\nfunction Color() {}\n\nvar darker = 0.7;\nvar brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\";\nvar reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\";\nvar reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\";\nvar reHex3 = /^#([0-9a-f]{3})$/;\nvar reHex6 = /^#([0-9a-f]{6})$/;\nvar reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\");\nvar reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\");\nvar reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\");\nvar reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\");\nvar reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\");\nvar reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nfunction color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nfunction rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nfunction rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nfunction Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nfunction hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nfunction hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n\nvar deg2rad = Math.PI / 180;\nvar rad2deg = 180 / Math.PI;\n\nvar Kn = 18;\nvar Xn = 0.950470;\nvar Yn = 1;\nvar Zn = 1.088830;\nvar t0 = 4 / 29;\nvar t1 = 6 / 29;\nvar t2 = 3 * t1 * t1;\nvar t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var b = rgb2xyz(o.r),\n      a = rgb2xyz(o.g),\n      l = rgb2xyz(o.b),\n      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nfunction lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nfunction Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nfunction hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n\nvar A = -0.14861;\nvar B = +1.78277;\nvar C = -0.29227;\nvar D = -0.90649;\nvar E = +1.97294;\nvar ED = E * D;\nvar EB = E * B;\nvar BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nfunction cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n\nfunction basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nvar basis$1 = function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar basisClosed = function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar constant$3 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nfunction hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$3(isNaN(a) ? b : a);\n}\n\nfunction gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant$3(isNaN(a) ? b : a);\n  };\n}\n\nfunction nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant$3(isNaN(a) ? b : a);\n}\n\nvar interpolateRgb = ((function rgbGamma(y) {\n  var color$$1 = gamma(y);\n\n  function rgb$$1(start, end) {\n    var r = color$$1((start = rgb(start)).r, (end = rgb(end)).r),\n        g = color$$1(start.g, end.g),\n        b = color$$1(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb$$1.gamma = rgbGamma;\n\n  return rgb$$1;\n}))(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color$$1;\n    for (i = 0; i < n; ++i) {\n      color$$1 = rgb(colors[i]);\n      r[i] = color$$1.r || 0;\n      g[i] = color$$1.g || 0;\n      b[i] = color$$1.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color$$1.opacity = 1;\n    return function(t) {\n      color$$1.r = r(t);\n      color$$1.g = g(t);\n      color$$1.b = b(t);\n      return color$$1 + \"\";\n    };\n  };\n}\n\nvar rgbBasis = rgbSpline(basis$1);\nvar rgbBasisClosed = rgbSpline(basisClosed);\n\nvar array$1 = function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(nb),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = interpolateValue(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n};\n\nvar date = function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n};\n\nvar reinterpolate = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n};\n\nvar object = function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = interpolateValue(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n};\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\nvar reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nvar interpolateString = function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: reinterpolate(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n};\n\nvar interpolateValue = function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant$3(b)\n      : (t === \"number\" ? reinterpolate\n      : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n      : b instanceof color ? interpolateRgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array$1\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : reinterpolate)(a, b);\n};\n\nvar interpolateRound = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n};\n\nvar degrees = 180 / Math.PI;\n\nvar identity$2 = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nvar decompose = function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n};\n\nvar cssNode;\nvar cssRoot;\nvar cssView;\nvar svgNode;\n\nfunction parseCss(value) {\n  if (value === \"none\") return identity$2;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nfunction parseSvg(value) {\n  if (value == null) return identity$2;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: reinterpolate(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: reinterpolate(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\nvar rho = Math.SQRT2;\nvar rho2 = 2;\nvar rho4 = 4;\nvar epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nvar interpolateZoom = function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    };\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    };\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n};\n\nfunction hsl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hsl(start)).h, (end = hsl(end)).h),\n        s = nogamma(start.s, end.s),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hsl$2 = hsl$1(hue);\nvar hslLong = hsl$1(nogamma);\n\nfunction lab$1(start, end) {\n  var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n      a = nogamma(start.a, end.a),\n      b = nogamma(start.b, end.b),\n      opacity = nogamma(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n\nfunction hcl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hcl(start)).h, (end = hcl(end)).h),\n        c = nogamma(start.c, end.c),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hcl$2 = hcl$1(hue);\nvar hclLong = hcl$1(nogamma);\n\nfunction cubehelix$1(hue$$1) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix$$1(start, end) {\n      var h = hue$$1((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n          s = nogamma(start.s, end.s),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix$$1.gamma = cubehelixGamma;\n\n    return cubehelix$$1;\n  })(1);\n}\n\nvar cubehelix$2 = cubehelix$1(hue);\nvar cubehelixLong = cubehelix$1(nogamma);\n\nvar quantize = function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n};\n\nvar frame = 0;\nvar timeout = 0;\nvar interval = 0;\nvar pokeDelay = 1000;\nvar taskHead;\nvar taskTail;\nvar clockLast = 0;\nvar clockNow = 0;\nvar clockSkew = 0;\nvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\nvar setFrame = typeof requestAnimationFrame === \"function\" ? requestAnimationFrame : function(f) { setTimeout(f, 17); };\n\nfunction now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nfunction Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nfunction timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nfunction timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow;\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, delay);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clockNow, interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n\nvar timeout$1 = function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n};\n\nvar interval$1 = function(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n};\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nvar CREATED = 0;\nvar SCHEDULED = 1;\nvar STARTING = 2;\nvar STARTED = 3;\nvar RUNNING = 4;\nvar ENDING = 5;\nvar ENDED = 6;\n\nvar schedule = function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n};\n\nfunction init(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction set$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction get$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout$1(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout$1(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n\nvar interrupt = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n};\n\nvar selection_interrupt = function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n};\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set$1(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set$1(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nvar transition_tween = function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get$1(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n};\n\nfunction tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set$1(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get$1(node, id).value[name];\n  };\n}\n\nvar interpolate$$1 = function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? reinterpolate\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n};\n\nfunction attrRemove$1(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS$1(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant$1(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS$1(fullname, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction$1(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS$1(fullname, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_attr = function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransformSvg : interpolate$$1;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n      : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value + \"\"));\n};\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_attrTween = function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n};\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nvar transition_delay = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get$1(this.node(), id).delay;\n};\n\nfunction durationFunction(id, value) {\n  return function() {\n    set$1(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set$1(this, id).duration = value;\n  };\n}\n\nvar transition_duration = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get$1(this.node(), id).duration;\n};\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set$1(this, id).ease = value;\n  };\n}\n\nvar transition_ease = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get$1(this.node(), id).ease;\n};\n\nvar transition_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n};\n\nvar transition_merge = function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n};\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set$1;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nvar transition_on = function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get$1(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n};\n\nfunction removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nvar transition_remove = function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n};\n\nvar transition_select = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selector(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select$$1.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n};\n\nvar transition_selectAll = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selectorAll(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select$$1.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n};\n\nvar Selection$1 = selection.prototype.constructor;\n\nvar transition_selection = function() {\n  return new Selection$1(this._groups, this._parents);\n};\n\nfunction styleRemove$1(name, interpolate$$2) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = styleValue(this, name),\n        value1 = (this.style.removeProperty(name), styleValue(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$2(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant$1(name, interpolate$$2, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = styleValue(this, name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$2(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction$1(name, interpolate$$2, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = styleValue(this, name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), styleValue(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$2(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_style = function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransformCss : interpolate$$1;\n  return value == null ? this\n          .styleTween(name, styleRemove$1(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant$1(name, i, value + \"\"), priority);\n};\n\nfunction styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_styleTween = function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n};\n\nfunction textConstant$1(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction$1(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nvar transition_text = function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction$1(tweenValue(this, \"text\", value))\n      : textConstant$1(value == null ? \"\" : value + \"\"));\n};\n\nvar transition_transition = function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get$1(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n};\n\nvar id = 0;\n\nfunction Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nfunction transition(name) {\n  return selection().transition(name);\n}\n\nfunction newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n\nfunction linear$1(t) {\n  return +t;\n}\n\nfunction quadIn(t) {\n  return t * t;\n}\n\nfunction quadOut(t) {\n  return t * (2 - t);\n}\n\nfunction quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n\nfunction cubicIn(t) {\n  return t * t * t;\n}\n\nfunction cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nfunction cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n\nvar exponent = 3;\n\nvar polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nvar polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nvar polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n\nvar pi = Math.PI;\nvar halfPi = pi / 2;\n\nfunction sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nfunction sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nfunction sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n\nfunction expIn(t) {\n  return Math.pow(2, 10 * t - 10);\n}\n\nfunction expOut(t) {\n  return 1 - Math.pow(2, -10 * t);\n}\n\nfunction expInOut(t) {\n  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n}\n\nfunction circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nfunction circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nfunction circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n\nvar b1 = 4 / 11;\nvar b2 = 6 / 11;\nvar b3 = 8 / 11;\nvar b4 = 3 / 4;\nvar b5 = 9 / 11;\nvar b6 = 10 / 11;\nvar b7 = 15 / 16;\nvar b8 = 21 / 22;\nvar b9 = 63 / 64;\nvar b0 = 1 / b1 / b1;\n\nfunction bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nfunction bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nfunction bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n\nvar overshoot = 1.70158;\n\nvar backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nvar backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nvar backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n\nvar tau = 2 * Math.PI;\nvar amplitude = 1;\nvar period = 0.3;\n\nvar elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nvar elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nvar elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: cubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nvar selection_transition = function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n};\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n\nvar root$1 = [null];\n\nvar active = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n        return new Transition([[node]], root$1, name, +i);\n      }\n    }\n  }\n\n  return null;\n};\n\nvar constant$4 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar BrushEvent = function(target, type, selection) {\n  this.target = target;\n  this.type = type;\n  this.selection = selection;\n};\n\nfunction nopropagation$1() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$1 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar MODE_DRAG = {name: \"drag\"};\nvar MODE_SPACE = {name: \"space\"};\nvar MODE_HANDLE = {name: \"handle\"};\nvar MODE_CENTER = {name: \"center\"};\n\nvar X = {\n  name: \"x\",\n  handles: [\"e\", \"w\"].map(type),\n  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type),\n  input: function(xy) { return xy; },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local$$1(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nfunction brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nfunction brushX() {\n  return brush$1(X);\n}\n\nfunction brushY() {\n  return brush$1(Y);\n}\n\nvar brush = function() {\n  return brush$1(XY);\n};\n\nfunction brush$1(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local$$1(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .on(\"mousedown.brush touchstart.brush\", started);\n  }\n\n  brush.move = function(group, selection$$1) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(this, arguments) : selection$$1, state.extent),\n                i = interpolateValue(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && empty(selection1) ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 && selection1 ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(that, args) : selection$$1, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 == null || empty(selection1) ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection$$1 = local$$1(this).selection;\n\n    if (selection$$1) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection$$1[0][0])\n          .attr(\"y\", selection$$1[0][1])\n          .attr(\"width\", selection$$1[1][0] - selection$$1[0][0])\n          .attr(\"height\", selection$$1[1][1] - selection$$1[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection$$1[1][0] - handleSize / 2 : selection$$1[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection$$1[1][1] - handleSize / 2 : selection$$1[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection$$1[1][0] - selection$$1[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection$$1[1][1] - selection$$1[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$1(); }\n    else if (touchending) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = exports.event.target.__data__.type,\n        mode = (exports.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local$$1(that),\n        extent = state.extent,\n        selection$$1 = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && exports.event.shiftKey,\n        lockX,\n        lockY,\n        point0 = mouse(that),\n        point = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === \"overlay\") {\n      state.selection = selection$$1 = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection$$1[0][0];\n      n0 = selection$$1[0][1];\n      e0 = selection$$1[1][0];\n      s0 = selection$$1[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (exports.event.touches) {\n      group\n          .on(\"touchmove.brush\", moved, true)\n          .on(\"touchend.brush touchcancel.brush\", ended, true);\n    } else {\n      var view = select(exports.event.view)\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n\n      dragDisable(exports.event.view);\n    }\n\n    nopropagation$1();\n    interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = mouse(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent$1();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection$$1[0][0], e1 = selection$$1[1][0];\n      if (lockY) n1 = selection$$1[0][1], s1 = selection$$1[1][1];\n\n      if (selection$$1[0][0] !== w1\n          || selection$$1[0][1] !== n1\n          || selection$$1[1][0] !== e1\n          || selection$$1[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation$1();\n      if (exports.event.touches) {\n        if (exports.event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n      } else {\n        yesdrag(exports.event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection$$1)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$1();\n    }\n\n    function keyupped() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (exports.event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$1();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$4([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$4(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n\nvar cos = Math.cos;\nvar sin = Math.sin;\nvar pi$1 = Math.PI;\nvar halfPi$1 = pi$1 / 2;\nvar tau$1 = pi$1 * 2;\nvar max$1 = Math.max;\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nvar chord = function() {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = [],\n        groupIndex = sequence(n),\n        subgroupIndex = [],\n        chords = [],\n        groups = chords.groups = new Array(n),\n        subgroups = new Array(n * n),\n        k,\n        x,\n        x0,\n        dx,\n        i,\n        j;\n\n    // Compute the sum.\n    k = 0, i = -1; while (++i < n) {\n      x = 0, j = -1; while (++j < n) {\n        x += matrix[i][j];\n      }\n      groupSums.push(x);\n      subgroupIndex.push(sequence(n));\n      k += x;\n    }\n\n    // Sort groups…\n    if (sortGroups) groupIndex.sort(function(a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    });\n\n    // Sort subgroups…\n    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n      d.sort(function(a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    });\n\n    // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n    k = max$1(0, tau$1 - padAngle * n) / k;\n    dx = k ? padAngle : tau$1 / n;\n\n    // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n    x = 0, i = -1; while (++i < n) {\n      x0 = x, j = -1; while (++j < n) {\n        var di = groupIndex[i],\n            dj = subgroupIndex[di][j],\n            v = matrix[di][dj],\n            a0 = x,\n            a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    }\n\n    // Generate chords for each (non-empty) subgroup-subgroup link.\n    i = -1; while (++i < n) {\n      j = i - 1; while (++j < n) {\n        var source = subgroups[j * n + i],\n            target = subgroups[i * n + j];\n        if (source.value || target.value) {\n          chords.push(source.value < target.value\n              ? {source: target, target: source}\n              : {source: source, target: target});\n        }\n      }\n    }\n\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n};\n\nvar slice$2 = Array.prototype.slice;\n\nvar constant$5 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar pi$2 = Math.PI;\nvar tau$2 = 2 * pi$2;\nvar epsilon$1 = 1e-6;\nvar tauEpsilon = tau$2 - epsilon$1;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon$1)) {}\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon$1) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi$2 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon$1) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon$1 || Math.abs(this._y1 - y0) > epsilon$1) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau$2 + tau$2;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon$1) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi$2)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nvar ribbon = function() {\n  var source = defaultSource,\n      target = defaultTarget,\n      radius = defaultRadius,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        argv = slice$2.call(arguments),\n        s = source.apply(this, argv),\n        t = target.apply(this, argv),\n        sr = +radius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi$1,\n        sa1 = endAngle.apply(this, argv) - halfPi$1,\n        sx0 = sr * cos(sa0),\n        sy0 = sr * sin(sa0),\n        tr = +radius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi$1,\n        ta1 = endAngle.apply(this, argv) - halfPi$1;\n\n    if (!context) context = buffer = path();\n\n    context.moveTo(sx0, sy0);\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n      context.arc(0, 0, tr, ta0, ta1);\n    }\n    context.quadraticCurveTo(0, 0, sx0, sy0);\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  ribbon.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : radius;\n  };\n\n  ribbon.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : endAngle;\n  };\n\n  ribbon.source = function(_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function(_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n  };\n\n  return ribbon;\n};\n\nvar prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map$1.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map$1(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nvar nest = function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) return rollup != null\n        ? rollup(array) : (sortValues != null\n        ? array.sort(sortValues)\n        : array);\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map$1(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n};\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map$1();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n\nfunction Set() {}\n\nvar proto = map$1.prototype;\n\nSet.prototype = set$2.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set$2(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nvar keys = function(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n};\n\nvar values = function(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n};\n\nvar entries = function(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n};\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nvar dsv = function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      delimiterCode = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns;\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var EOL = {}, // sentinel value for end-of-line\n        EOF = {}, // sentinel value for end-of-file\n        rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // the current line number\n        t, // the current token\n        eol; // is the current token followed by EOL?\n\n    function token() {\n      if (I >= N) return EOF; // special case: end of file\n      if (eol) return eol = false, EOL; // special case: end of line\n\n      // special case: quotes\n      var j = I, c;\n      if (text.charCodeAt(j) === 34) {\n        var i = j;\n        while (i++ < N) {\n          if (text.charCodeAt(i) === 34) {\n            if (text.charCodeAt(i + 1) !== 34) break;\n            ++i;\n          }\n        }\n        I = i + 2;\n        c = text.charCodeAt(i + 1);\n        if (c === 13) {\n          eol = true;\n          if (text.charCodeAt(i + 2) === 10) ++I;\n        } else if (c === 10) {\n          eol = true;\n        }\n        return text.slice(j + 1, i).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // common case: find next delimiter or newline\n      while (I < N) {\n        var k = 1;\n        c = text.charCodeAt(I++);\n        if (c === 10) eol = true; // \\n\n        else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } // \\r|\\r\\n\n        else if (c !== delimiterCode) continue;\n        return text.slice(j, I - k);\n      }\n\n      // special case: last token before EOF\n      return text.slice(j);\n    }\n\n    while ((t = token()) !== EOF) {\n      var a = [];\n      while (t !== EOL && t !== EOF) {\n        a.push(t);\n        t = token();\n      }\n      if (f && (a = f(a, n++)) == null) continue;\n      rows.push(a);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\\\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n};\n\nvar csv = dsv(\",\");\n\nvar csvParse = csv.parse;\nvar csvParseRows = csv.parseRows;\nvar csvFormat = csv.format;\nvar csvFormatRows = csv.formatRows;\n\nvar tsv = dsv(\"\\t\");\n\nvar tsvParse = tsv.parse;\nvar tsvParseRows = tsv.parseRows;\nvar tsvFormat = tsv.format;\nvar tsvFormatRows = tsv.formatRows;\n\nvar center$1 = function(x, y) {\n  var nodes;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n};\n\nvar constant$6 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar jiggle = function() {\n  return (Math.random() - 0.5) * 1e-6;\n};\n\nvar tree_add = function(d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n};\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nfunction addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, inherit the existing extent.\n  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n\nvar tree_cover = function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n      case 0: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n        break;\n      }\n      case 1: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n        break;\n      }\n      case 2: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n        break;\n      }\n      case 3: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n        break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  // If the quadtree covers the point already, just return.\n  else return this;\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n};\n\nvar tree_data = function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n};\n\nvar tree_extent = function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n};\n\nvar Quad = function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n};\n\nvar tree_find = function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n};\n\nvar tree_remove = function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n};\n\nfunction removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n\nvar tree_root = function() {\n  return this._root;\n};\n\nvar tree_size = function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n};\n\nvar tree_visit = function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n};\n\nvar tree_visitAfter = function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n};\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nvar tree_x = function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n};\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nvar tree_y = function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n};\n\nfunction quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nvar collide = function(radius) {\n  var nodes,\n      radii,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant$6(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(), l += x * x;\n            if (y === 0) y = jiggle(), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : radius;\n  };\n\n  return force;\n};\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"missing: \" + nodeId);\n  return node;\n}\n\nvar link = function(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant$6(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle();\n        y = target.y + target.vy - source.y - source.vy || jiggle();\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = map$1(nodes, id),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$6(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n};\n\nfunction x$1(d) {\n  return d.x;\n}\n\nfunction y$1(d) {\n  return d.y;\n}\n\nvar initialRadius = 10;\nvar initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nvar simulation = function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = map$1(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick() {\n    var i, n = nodes.length, node;\n\n    alpha += (alphaTarget - alpha) * alphaDecay;\n\n    forces.each(function(force) {\n      force(alpha);\n    });\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i];\n      if (node.fx == null) node.x += node.vx *= velocityDecay;\n      else node.x = node.fx, node.vx = 0;\n      if (node.fy == null) node.y += node.vy *= velocityDecay;\n      else node.y = node.fy, node.vy = 0;\n    }\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n};\n\nvar manyBody = function() {\n  var nodes,\n      node,\n      alpha,\n      strength = constant$6(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x$1, y$1).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, x$$1, y$$1, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x$$1 = y$$1 = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = q.value)) {\n          strength += c, x$$1 += c * q.x, y$$1 += c * q.y;\n        }\n      }\n      quad.x = x$$1 / strength;\n      quad.y = y$$1 / strength;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x$$1 = quad.x - node.x,\n        y$$1 = quad.y - node.y,\n        w = x2 - x1,\n        l = x$$1 * x$$1 + y$$1 * y$$1;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n        if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x$$1 * quad.value * alpha / l;\n        node.vy += y$$1 * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n      if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x$$1 * w;\n      node.vy += y$$1 * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n};\n\nvar x$2 = function(x) {\n  var strength = constant$6(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant$6(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : x;\n  };\n\n  return force;\n};\n\nvar y$2 = function(y) {\n  var strength = constant$6(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant$6(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : y;\n  };\n\n  return force;\n};\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nvar formatDecimal = function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n};\n\nvar exponent$1 = function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n};\n\nvar formatGroup = function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n};\n\nvar formatNumerals = function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n};\n\nvar formatDefault = function(x, p) {\n  x = x.toPrecision(p);\n\n  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (x[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      case \"e\": break out;\n      default: if (i0 > 0) i0 = 0; break;\n    }\n  }\n\n  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n};\n\nvar prefixExponent;\n\nvar formatPrefixAuto = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n};\n\nvar formatRounded = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n};\n\nvar formatTypes = {\n  \"\": formatDefault,\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n\n// [[fill]align][sign][symbol][0][width][,][.precision][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\nfunction formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\n  var match,\n      fill = match[1] || \" \",\n      align = match[2] || \">\",\n      sign = match[3] || \"-\",\n      symbol = match[4] || \"\",\n      zero = !!match[5],\n      width = match[6] && +match[6],\n      comma = !!match[7],\n      precision = match[8] && +match[8].slice(1),\n      type = match[9] || \"\";\n\n  // The \"n\" type is an alias for \",g\".\n  if (type === \"n\") comma = true, type = \"g\";\n\n  // Map invalid types to the default format.\n  else if (!formatTypes[type]) type = \"\";\n\n  // If zero fill is specified, padding goes after sign and before digits.\n  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n  this.fill = fill;\n  this.align = align;\n  this.sign = sign;\n  this.symbol = symbol;\n  this.zero = zero;\n  this.width = width;\n  this.comma = comma;\n  this.precision = precision;\n  this.type = type;\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + this.type;\n};\n\nvar identity$3 = function(x) {\n  return x;\n};\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\\xB5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nvar formatLocale = function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity$3,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        type = specifier.type;\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = !type || /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? (type ? 6 : 12)\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n};\n\nvar locale$1;\n\n\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nfunction defaultLocale(definition) {\n  locale$1 = formatLocale(definition);\n  exports.format = locale$1.format;\n  exports.formatPrefix = locale$1.formatPrefix;\n  return locale$1;\n}\n\nvar precisionFixed = function(step) {\n  return Math.max(0, -exponent$1(Math.abs(step)));\n};\n\nvar precisionPrefix = function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n};\n\nvar precisionRound = function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n};\n\n// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nvar adder = function() {\n  return new Adder;\n};\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add$1(temp, y, this.t);\n    add$1(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add$1(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n\nvar epsilon$2 = 1e-6;\nvar epsilon2$1 = 1e-12;\nvar pi$3 = Math.PI;\nvar halfPi$2 = pi$3 / 2;\nvar quarterPi = pi$3 / 4;\nvar tau$3 = pi$3 * 2;\n\nvar degrees$1 = 180 / pi$3;\nvar radians = pi$3 / 180;\n\nvar abs = Math.abs;\nvar atan = Math.atan;\nvar atan2 = Math.atan2;\nvar cos$1 = Math.cos;\nvar ceil = Math.ceil;\nvar exp = Math.exp;\n\nvar log = Math.log;\nvar pow = Math.pow;\nvar sin$1 = Math.sin;\nvar sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nvar sqrt = Math.sqrt;\nvar tan = Math.tan;\n\nfunction acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi$3 : Math.acos(x);\n}\n\nfunction asin(x) {\n  return x > 1 ? halfPi$2 : x < -1 ? -halfPi$2 : Math.asin(x);\n}\n\nfunction haversin(x) {\n  return (x = sin$1(x / 2)) * x;\n}\n\nfunction noop$1() {}\n\nfunction streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nvar geoStream = function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n};\n\nvar areaRingSum = adder();\n\nvar areaSum = adder();\nvar lambda00;\nvar phi00;\nvar lambda0;\nvar cosPhi0;\nvar sinPhi0;\n\nvar areaStream = {\n  point: noop$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau$3 + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop$1;\n  },\n  sphere: function() {\n    areaSum.add(tau$3);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos$1(phi),\n      sinPhi = sin$1(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n      v = k * sdLambda * sin$1(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nvar area = function(object) {\n  areaSum.reset();\n  geoStream(object, areaStream);\n  return areaSum * 2;\n};\n\nfunction spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nfunction cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n  return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n}\n\nfunction cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nfunction cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nfunction cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nfunction cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nfunction cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n\nvar lambda0$1;\nvar phi0;\nvar lambda1;\nvar phi1;\nvar lambda2;\nvar lambda00$1;\nvar phi00$1;\nvar p0;\nvar deltaSum = adder();\nvar ranges;\nvar range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon$2) phi1 = 90;\n    else if (deltaSum < -epsilon$2) phi0 = -90;\n    range[0] = lambda0$1, range[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign$$1 = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees$1 * sign$$1,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = inflection[1] * degrees$1;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = -inflection[1] * degrees$1;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0$1) {\n        if (lambda < lambda0$1) lambda0$1 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0$1, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00$1 = lambda, phi00$1 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00$1, phi00$1);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon$2) lambda0$1 = -(lambda1 = 180);\n  range[0] = lambda0$1, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nvar bounds = function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n  ranges = [];\n  geoStream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0$1 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0$1, phi0], [lambda1, phi1]];\n};\n\nvar W0;\nvar W1;\nvar X0;\nvar Y0;\nvar Z0;\nvar X1;\nvar Y1;\nvar Z1;\nvar X2;\nvar Y2;\nvar Z2;\nvar lambda00$2;\nvar phi00$2;\nvar x0;\nvar y0;\nvar z0; // previous point\n\nvar centroidStream = {\n  sphere: noop$1,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00$2, phi00$2);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00$2 = lambda, phi00$2 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nvar centroid = function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  geoStream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2$1) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon$2) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2$1) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees$1, asin(z / sqrt(m)) * degrees$1];\n};\n\nvar constant$7 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar compose = function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n};\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau$3) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos$1(deltaPhi),\n      sinDeltaPhi = sin$1(deltaPhi),\n      cosDeltaGamma = cos$1(deltaGamma),\n      sinDeltaGamma = sin$1(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nvar rotation = function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  };\n\n  return forward;\n};\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nfunction circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos$1(radius),\n      sinRadius = sin$1(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau$3;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$3;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau$3 - epsilon$2) % tau$3;\n}\n\nvar circle = function() {\n  var center = constant$7([0, 0]),\n      radius = constant$7(90),\n      precision = constant$7(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees$1, x[1] *= degrees$1;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$7([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$7(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$7(+_), circle) : precision;\n  };\n\n  return circle;\n};\n\nvar clipBuffer = function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop$1,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n};\n\nvar clipLine = function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n};\n\nvar pointEqual = function(a, b) {\n  return abs(a[0] - b[0]) < epsilon$2 && abs(a[1] - b[1]) < epsilon$2;\n};\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nvar clipPolygon = function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link$1(subject);\n  link$1(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n};\n\nfunction link$1(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n\nvar clipMax = 1e9;\nvar clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nfunction clipExtent(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon$2 ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon$2 ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon$2 ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipPolygon(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n\nvar extent$1 = function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n};\n\nvar sum$1 = adder();\n\nvar polygonContains = function(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      normal = [sin$1(lambda), -cos$1(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum$1.reset();\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin$1(phi0),\n        cosPhi0 = cos$1(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin$1(phi1),\n          cosPhi1 = cos$1(phi1),\n          delta = lambda1 - lambda0,\n          sign$$1 = delta >= 0 ? 1 : -1,\n          absDelta = sign$$1 * delta,\n          antimeridian = absDelta > pi$3,\n          k = sinPhi0 * sinPhi1;\n\n      sum$1.add(atan2(k * sign$$1 * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n      angle += antimeridian ? delta + sign$$1 * tau$3 : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon$2 || angle < epsilon$2 && sum$1 < -epsilon$2) ^ (winding & 1);\n};\n\nvar lengthSum = adder();\nvar lambda0$2;\nvar sinPhi0$1;\nvar cosPhi0$1;\n\nvar lengthStream = {\n  sphere: noop$1,\n  point: noop$1,\n  lineStart: lengthLineStart,\n  lineEnd: noop$1,\n  polygonStart: noop$1,\n  polygonEnd: noop$1\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop$1;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin$1(phi),\n      cosPhi = cos$1(phi),\n      delta = abs(lambda - lambda0$2),\n      cosDelta = cos$1(delta),\n      sinDelta = sin$1(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n}\n\nvar length$1 = function(object) {\n  lengthSum.reset();\n  geoStream(object, lengthStream);\n  return +lengthSum;\n};\n\nvar coordinates = [null, null];\nvar object$1 = {type: \"LineString\", coordinates: coordinates};\n\nvar distance = function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length$1(object$1);\n};\n\nvar containsObjectType = {\n  Feature: function(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function(object, point) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n    return false;\n  }\n};\n\nvar containsGeometryType = {\n  Sphere: function() {\n    return true;\n  },\n  Point: function(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n    return false;\n  },\n  LineString: function(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n    return false;\n  },\n  Polygon: function(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n    return false;\n  },\n  GeometryCollection: function(object, point) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n      ? containsGeometryType[geometry.type](geometry, point)\n      : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ab = distance(coordinates[0], coordinates[1]),\n      ao = distance(coordinates[0], point),\n      ob = distance(point, coordinates[1]);\n  return ao + ob <= ab + epsilon$2;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nvar contains = function(object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type)\n      ? containsObjectType[object.type]\n      : containsGeometry)(object, point);\n};\n\nfunction graticuleX(y0, y1, dy) {\n  var y = sequence(y0, y1 - epsilon$2, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = sequence(x0, x1 - epsilon$2, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nfunction graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return sequence(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(sequence(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(sequence(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$2; }).map(x))\n        .concat(sequence(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$2; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon$2], [180, 90 - epsilon$2]])\n      .extentMinor([[-180, -80 - epsilon$2], [180, 80 + epsilon$2]]);\n}\n\nfunction graticule10() {\n  return graticule()();\n}\n\nvar interpolate$1 = function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos$1(y0),\n      sy0 = sin$1(y0),\n      cy1 = cos$1(y1),\n      sy1 = sin$1(y1),\n      kx0 = cy0 * cos$1(x0),\n      ky0 = cy0 * sin$1(x0),\n      kx1 = cy1 * cos$1(x1),\n      ky1 = cy1 * sin$1(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin$1(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin$1(t *= d) / k,\n        A = sin$1(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees$1,\n      atan2(z, sqrt(x * x + y * y)) * degrees$1\n    ];\n  } : function() {\n    return [x0 * degrees$1, y0 * degrees$1];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n};\n\nvar identity$4 = function(x) {\n  return x;\n};\n\nvar areaSum$1 = adder();\nvar areaRingSum$1 = adder();\nvar x00;\nvar y00;\nvar x0$1;\nvar y0$1;\n\nvar areaStream$1 = {\n  point: noop$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: function() {\n    areaStream$1.lineStart = areaRingStart$1;\n    areaStream$1.lineEnd = areaRingEnd$1;\n  },\n  polygonEnd: function() {\n    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$1;\n    areaSum$1.add(abs(areaRingSum$1));\n    areaRingSum$1.reset();\n  },\n  result: function() {\n    var area = areaSum$1 / 2;\n    areaSum$1.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart$1() {\n  areaStream$1.point = areaPointFirst$1;\n}\n\nfunction areaPointFirst$1(x, y) {\n  areaStream$1.point = areaPoint$1;\n  x00 = x0$1 = x, y00 = y0$1 = y;\n}\n\nfunction areaPoint$1(x, y) {\n  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n  x0$1 = x, y0$1 = y;\n}\n\nfunction areaRingEnd$1() {\n  areaPoint$1(x00, y00);\n}\n\nvar x0$2 = Infinity;\nvar y0$2 = x0$2;\nvar x1 = -x0$2;\nvar y1 = x1;\n\nvar boundsStream$1 = {\n  point: boundsPoint$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: noop$1,\n  polygonEnd: noop$1,\n  result: function() {\n    var bounds = [[x0$2, y0$2], [x1, y1]];\n    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint$1(x, y) {\n  if (x < x0$2) x0$2 = x;\n  if (x > x1) x1 = x;\n  if (y < y0$2) y0$2 = y;\n  if (y > y1) y1 = y;\n}\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0$1 = 0;\nvar Y0$1 = 0;\nvar Z0$1 = 0;\nvar X1$1 = 0;\nvar Y1$1 = 0;\nvar Z1$1 = 0;\nvar X2$1 = 0;\nvar Y2$1 = 0;\nvar Z2$1 = 0;\nvar x00$1;\nvar y00$1;\nvar x0$3;\nvar y0$3;\n\nvar centroidStream$1 = {\n  point: centroidPoint$1,\n  lineStart: centroidLineStart$1,\n  lineEnd: centroidLineEnd$1,\n  polygonStart: function() {\n    centroidStream$1.lineStart = centroidRingStart$1;\n    centroidStream$1.lineEnd = centroidRingEnd$1;\n  },\n  polygonEnd: function() {\n    centroidStream$1.point = centroidPoint$1;\n    centroidStream$1.lineStart = centroidLineStart$1;\n    centroidStream$1.lineEnd = centroidLineEnd$1;\n  },\n  result: function() {\n    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n        : [NaN, NaN];\n    X0$1 = Y0$1 = Z0$1 =\n    X1$1 = Y1$1 = Z1$1 =\n    X2$1 = Y2$1 = Z2$1 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint$1(x, y) {\n  X0$1 += x;\n  Y0$1 += y;\n  ++Z0$1;\n}\n\nfunction centroidLineStart$1() {\n  centroidStream$1.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream$1.point = centroidPointLine;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0$3, dy = y - y0$3, z = sqrt(dx * dx + dy * dy);\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidLineEnd$1() {\n  centroidStream$1.point = centroidPoint$1;\n}\n\nfunction centroidRingStart$1() {\n  centroidStream$1.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd$1() {\n  centroidPointRing(x00$1, y00$1);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream$1.point = centroidPointRing;\n  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0$3,\n      dy = y - y0$3,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n\n  z = y0$3 * x - x0$3 * y;\n  X2$1 += z * (x0$3 + x);\n  Y2$1 += z * (y0$3 + y);\n  Z2$1 += z * 3;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau$3);\n        break;\n      }\n    }\n  },\n  result: noop$1\n};\n\nvar lengthSum$1 = adder();\nvar lengthRing;\nvar x00$2;\nvar y00$2;\nvar x0$4;\nvar y0$4;\n\nvar lengthStream$1 = {\n  point: noop$1,\n  lineStart: function() {\n    lengthStream$1.point = lengthPointFirst$1;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint$1(x00$2, y00$2);\n    lengthStream$1.point = noop$1;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum$1;\n    lengthSum$1.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst$1(x, y) {\n  lengthStream$1.point = lengthPoint$1;\n  x00$2 = x0$4 = x, y00$2 = y0$4 = y;\n}\n\nfunction lengthPoint$1(x, y) {\n  x0$4 -= x, y0$4 -= y;\n  lengthSum$1.add(sqrt(x0$4 * x0$4 + y0$4 * y0$4));\n  x0$4 = x, y0$4 = y;\n}\n\nfunction PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle$1(4.5),\n  pointRadius: function(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        if (this._circle == null) this._circle = circle$1(this._radius);\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle$1(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n\nvar index$1 = function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      geoStream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    geoStream(object, projectionStream(areaStream$1));\n    return areaStream$1.result();\n  };\n\n  path.measure = function(object) {\n    geoStream(object, projectionStream(lengthStream$1));\n    return lengthStream$1.result();\n  };\n\n  path.bounds = function(object) {\n    geoStream(object, projectionStream(boundsStream$1));\n    return boundsStream$1.result();\n  };\n\n  path.centroid = function(object) {\n    geoStream(object, projectionStream(centroidStream$1));\n    return centroidStream$1.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity$4) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n};\n\nvar clip = function(pointVisible, clipLine, interpolate, start) {\n  return function(rotate, sink) {\n    var line = clipLine(sink),\n        rotatedStart = rotate.invert(start[0], start[1]),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, rotatedStart);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipPolygon(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      var point = rotate(lambda, phi);\n      if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      var point = rotate(lambda, phi);\n      line.point(point[0], point[1]);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      var point = rotate(lambda, phi);\n      ringSink.point(point[0], point[1]);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n};\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi$2 - epsilon$2 : halfPi$2 - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi$2 - epsilon$2 : halfPi$2 - b[1]);\n}\n\nvar clipAntimeridian = clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi$3, -halfPi$2]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi$3 : -pi$3,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi$3) < epsilon$2) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$2 : -halfPi$2);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi$3) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon$2) lambda0 -= sign0 * epsilon$2; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon$2) lambda1 -= sign1 * epsilon$2;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon$2\n      ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n          - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi$2;\n    stream.point(-pi$3, phi);\n    stream.point(0, phi);\n    stream.point(pi$3, phi);\n    stream.point(pi$3, 0);\n    stream.point(pi$3, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi$3, -phi);\n    stream.point(-pi$3, 0);\n    stream.point(-pi$3, phi);\n  } else if (abs(from[0] - to[0]) > epsilon$2) {\n    var lambda = from[0] < to[0] ? pi$3 : -pi$3;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n\nvar clipCircle = function(radius, delta) {\n  var cr = cos$1(radius),\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon$2; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos$1(lambda) * cos$1(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi$3 : -pi$3), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon$2;\n            point1[1] += epsilon$2;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi$3) < epsilon$2,\n        meridian = polar || delta < epsilon$2;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$2 ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi$3 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi$3 - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$3, radius - pi$3]);\n};\n\nvar transform = function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n};\n\nfunction transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n\nfunction fitExtent(projection, extent, object) {\n  var w = extent[1][0] - extent[0][0],\n      h = extent[1][1] - extent[0][1],\n      clip = projection.clipExtent && projection.clipExtent();\n\n  projection\n      .scale(150)\n      .translate([0, 0]);\n\n  if (clip != null) projection.clipExtent(null);\n\n  geoStream(object, projection.stream(boundsStream$1));\n\n  var b = boundsStream$1.result(),\n      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\n  if (clip != null) projection.clipExtent(clip);\n\n  return projection\n      .scale(k * 150)\n      .translate([x, y]);\n}\n\nfunction fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nvar maxDepth = 16;\nvar cosMinDistance = cos$1(30 * radians); // cos(minimum angular distance)\n\nvar resample = function(project, delta2) {\n  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n};\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample$1(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon$2 || abs(lambda0 - lambda1) < epsilon$2 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nfunction projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      dx, dy, lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n      theta = null, preclip = clipAntimeridian, // clip angle\n      x0 = null, y0, x1, y1, postclip = identity$4, // clip extent\n      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    point = projectRotate(point[0] * radians, point[1] * radians);\n    return [point[0] * k + dx, dy - point[1] * k];\n  }\n\n  function invert(point) {\n    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n    return point && [point[0] * degrees$1, point[1] * degrees$1];\n  }\n\n  function projectTransform(x, y) {\n    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  function recenter() {\n    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n    var center = project(lambda, phi);\n    dx = x - center[0] * k;\n    dy = y + center[1] * k;\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n\nfunction conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi$3 / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n  };\n\n  return p;\n}\n\nfunction cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos$1(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin$1(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n\nfunction conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin$1(y0), n = (sy0 + sin$1(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon$2) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin$1(y)) / n;\n    return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nvar conicEqualArea = function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n};\n\nvar albers = function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n};\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nvar albersUsa = function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon$2, y + 0.120 * k + epsilon$2], [x - 0.214 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon$2, y + 0.166 * k + epsilon$2], [x - 0.115 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n};\n\nfunction azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos$1(x),\n        cy = cos$1(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin$1(x),\n      k * sin$1(y)\n    ];\n  }\n}\n\nfunction azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin$1(c),\n        cc = cos$1(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n\nvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nvar azimuthalEqualArea = function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n};\n\nvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin$1(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nvar azimuthalEquidistant = function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n};\n\nfunction mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi$2 + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi$2];\n};\n\nvar mercator = function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau$3);\n};\n\nfunction mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi$3 * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n\nfunction tany(y) {\n  return tan((halfPi$2 + y) / 2);\n}\n\nfunction conicConformalRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : log(cy0 / cos$1(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi$2 + epsilon$2) y = -halfPi$2 + epsilon$2; }\n    else { if (y > halfPi$2 - epsilon$2) y = halfPi$2 - epsilon$2; }\n    var r = f / pow(tany(y), n);\n    return [r * sin$1(n * x), f - r * cos$1(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy);\n    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi$2];\n  };\n\n  return project;\n}\n\nvar conicConformal = function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n};\n\nfunction equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nvar equirectangular = function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n};\n\nfunction conicEquidistantRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon$2) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin$1(nx), g - gy * cos$1(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nvar conicEquidistant = function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n};\n\nfunction gnomonicRaw(x, y) {\n  var cy = cos$1(y), k = cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nvar gnomonic = function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n};\n\nfunction scaleTranslate(kx, ky, tx, ty) {\n  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity$4 : transformer({\n    point: function(x, y) {\n      this.stream.point(x * kx + tx, y * ky + ty);\n    }\n  });\n}\n\nvar identity$5 = function() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform = identity$4, // scale, translate and reflect\n      x0 = null, y0, x1, y1, clip = identity$4, // clip extent\n      cache,\n      cacheStream,\n      projection;\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return projection = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = transform(clip(cacheStream = stream));\n    },\n    clipExtent: function(_) {\n      return arguments.length ? (clip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    },\n    scale: function(_) {\n      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n    },\n    translate: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n    },\n    reflectX: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n    },\n    reflectY: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n    },\n    fitExtent: function(extent, object) {\n      return fitExtent(projection, extent, object);\n    },\n    fitSize: function(size, object) {\n      return fitSize(projection, size, object);\n    }\n  };\n};\n\nfunction orthographicRaw(x, y) {\n  return [cos$1(y) * sin$1(x), sin$1(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nvar orthographic = function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon$2);\n};\n\nfunction stereographicRaw(x, y) {\n  var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nvar stereographic = function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n};\n\nfunction transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi$2 + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi$2];\n};\n\nvar transverseMercator = function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n};\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nvar cluster = function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n};\n\nfunction count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nvar node_count = function() {\n  return this.eachAfter(count);\n};\n\nvar node_each = function(callback) {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n  return this;\n};\n\nvar node_eachBefore = function(callback) {\n  var node = this, nodes = [node], children, i;\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n  return this;\n};\n\nvar node_eachAfter = function(callback) {\n  var node = this, nodes = [node], next = [], children, i, n;\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n  while (node = next.pop()) {\n    callback(node);\n  }\n  return this;\n};\n\nvar node_sum = function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n};\n\nvar node_sort = function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n};\n\nvar node_path = function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n};\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n\nvar node_ancestors = function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n};\n\nvar node_descendants = function() {\n  var nodes = [];\n  this.each(function(node) {\n    nodes.push(node);\n  });\n  return nodes;\n};\n\nvar node_leaves = function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n};\n\nvar node_links = function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n};\n\nfunction hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nfunction computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nfunction Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n\nfunction Node$2(value) {\n  this._ = value;\n  this.next = null;\n}\n\nvar shuffle$1 = function(array) {\n  var i,\n      n = (array = array.slice()).length,\n      head = null,\n      node = head;\n\n  while (n) {\n    var next = new Node$2(array[n - 1]);\n    if (node) node = node.next = next;\n    else node = head = next;\n    array[i] = array[--n];\n  }\n\n  return {\n    head: head,\n    tail: node\n  };\n};\n\nvar enclose = function(circles) {\n  return encloseN(shuffle$1(circles), []);\n};\n\nfunction encloses(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r - b.r;\n  return dr * dr + 1e-6 > dx * dx + dy * dy;\n}\n\n// Returns the smallest circle that contains circles L and intersects circles B.\nfunction encloseN(L, B) {\n  var circle,\n      l0 = null,\n      l1 = L.head,\n      l2,\n      p1;\n\n  switch (B.length) {\n    case 1: circle = enclose1(B[0]); break;\n    case 2: circle = enclose2(B[0], B[1]); break;\n    case 3: circle = enclose3(B[0], B[1], B[2]); break;\n  }\n\n  while (l1) {\n    p1 = l1._, l2 = l1.next;\n    if (!circle || !encloses(circle, p1)) {\n\n      // Temporarily truncate L before l1.\n      if (l0) L.tail = l0, l0.next = null;\n      else L.head = L.tail = null;\n\n      B.push(p1);\n      circle = encloseN(L, B); // Note: reorders L!\n      B.pop();\n\n      // Move l1 to the front of L and reconnect the truncated list L.\n      if (L.head) l1.next = L.head, L.head = l1;\n      else l1.next = null, L.head = L.tail = l1;\n      l0 = L.tail, l0.next = l2;\n\n    } else {\n      l0 = l1;\n    }\n    l1 = l2;\n  }\n\n  L.tail = l0;\n  return circle;\n}\n\nfunction enclose1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction enclose2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction enclose3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = 2 * (x1 - x2),\n      b2 = 2 * (y1 - y2),\n      c2 = 2 * (r2 - r1),\n      d2 = x1 * x1 + y1 * y1 - r1 * r1 - x2 * x2 - y2 * y2 + r2 * r2,\n      a3 = 2 * (x1 - x3),\n      b3 = 2 * (y1 - y3),\n      c3 = 2 * (r3 - r1),\n      d3 = x1 * x1 + y1 * y1 - r1 * r1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / ab - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / ab - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (xa * xb + ya * yb + r1),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = (-B - Math.sqrt(B * B - 4 * A * C)) / (2 * A);\n  return {\n    x: xa + xb * r + x1,\n    y: ya + yb * r + y1,\n    r: r\n  };\n}\n\nfunction place(a, b, c) {\n  var ax = a.x,\n      ay = a.y,\n      da = b.r + c.r,\n      db = a.r + c.r,\n      dx = b.x - ax,\n      dy = b.y - ay,\n      dc = dx * dx + dy * dy;\n  if (dc) {\n    var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n        y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n    c.x = ax + x * dx + y * dy;\n    c.y = ay + x * dy - y * dx;\n  } else {\n    c.x = ax + db;\n    c.y = ay;\n  }\n}\n\nfunction intersects(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r + b.r;\n  return dr * dr - 1e-6 > dx * dx + dy * dy;\n}\n\nfunction distance2(node, x, y) {\n  var a = node._,\n      b = node.next._,\n      ab = a.r + b.r,\n      dx = (a.x * b.r + b.x * a.r) / ab - x,\n      dy = (a.y * b.r + b.y * a.r) / ab - y;\n  return dx * dx + dy * dy;\n}\n\nfunction Node$1(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nfunction packEnclose(circles) {\n  if (!(n = circles.length)) return 0;\n\n  var a, b, c, n;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the weighted centroid.\n  var aa = a.r * a.r,\n      ba = b.r * b.r,\n      ca = c.r * c.r,\n      oa = aa + ba + ca,\n      ox = aa * a.x + ba * b.x + ca * c.x,\n      oy = aa * a.y + ba * b.y + ca * c.y,\n      cx, cy, i, j, k, sj, sk;\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    // “Closeness” is determined by linear distance along the front-chain.\n    // “Ahead” or “behind” is likewise determined by linear distance.\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          b = j, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sj += j._.r, j = j.next;\n      } else {\n        if (intersects(k._, c._)) {\n          a = k, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sk += k._.r, k = k.previous;\n      }\n    } while (j !== k.next);\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Update the weighted centroid.\n    oa += ca = c._.r * c._.r;\n    ox += ca * c._.x;\n    oy += ca * c._.y;\n\n    // Compute the new closest circle pair to the centroid.\n    aa = distance2(a, cx = ox / oa, cy = oy / oa);\n    while ((c = c.next) !== b) {\n      if ((ca = distance2(c, cx, cy)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nvar siblings = function(circles) {\n  packEnclose(circles);\n  return circles;\n};\n\nfunction optional(f) {\n  return f == null ? null : required(f);\n}\n\nfunction required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n\nfunction constantZero() {\n  return 0;\n}\n\nvar constant$8 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction defaultRadius$1(d) {\n  return Math.sqrt(d.value);\n}\n\nvar index$2 = function() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildren(padding, 0.5))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius$1))\n          .eachAfter(packChildren(constantZero, 1))\n          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant$8(+x), pack) : padding;\n  };\n\n  return pack;\n};\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n\nvar roundNode = function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n};\n\nvar treemapDice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n};\n\nvar partition = function() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n};\n\nvar keyPrefix$1 = \"$\";\nvar preroot = {depth: -1};\nvar ambiguous = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nvar stratify = function() {\n  var id = defaultId,\n      parentId = defaultParentId;\n\n  function stratify(data) {\n    var d,\n        i,\n        n = data.length,\n        root,\n        parent,\n        node,\n        nodes = new Array(n),\n        nodeId,\n        nodeKey,\n        nodeByKey = {};\n\n    for (i = 0; i < n; ++i) {\n      d = data[i], node = nodes[i] = new Node(d);\n      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = keyPrefix$1 + (node.id = nodeId);\n        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], nodeId = parentId(data[i], i, data);\n      if (nodeId == null || !(nodeId += \"\")) {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      } else {\n        parent = nodeByKey[keyPrefix$1 + nodeId];\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = required(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = required(x), stratify) : parentId;\n  };\n\n  return stratify;\n};\n\nfunction defaultSeparation$1(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nvar tree = function() {\n  var separation = defaultSeparation$1,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n};\n\nvar treemapSlice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n};\n\nvar phi = (1 + Math.sqrt(5)) / 2;\n\nfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nvar squarify = ((function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n}))(phi);\n\nvar index$3 = function() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n};\n\nvar binary = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((x1 - x0) > (y1 - y0)) {\n      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    } else {\n      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    }\n  }\n};\n\nvar sliceDice = function(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n};\n\nvar resquarify = ((function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n}))(phi);\n\nvar area$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      a,\n      b = polygon[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    area += a[1] * b[0] - a[0] * b[1];\n  }\n\n  return area / 2;\n};\n\nvar centroid$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      x = 0,\n      y = 0,\n      a,\n      b = polygon[n - 1],\n      c,\n      k = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    k += c = a[0] * b[1] - b[0] * a[1];\n    x += (a[0] + b[0]) * c;\n    y += (a[1] + b[1]) * c;\n  }\n\n  return k *= 3, [x / k, y / k];\n};\n\n// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n// negative if clockwise, and zero if the points are collinear.\nvar cross$1 = function(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n};\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n}\n\n// Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\nfunction computeUpperHullIndexes(points) {\n  var n = points.length,\n      indexes = [0, 1],\n      size = 2;\n\n  for (var i = 2; i < n; ++i) {\n    while (size > 1 && cross$1(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nvar hull = function(points) {\n  if ((n = points.length) < 3) return null;\n\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  sortedPoints.sort(lexicographicOrder);\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n  // Construct the hull polygon, removing possible duplicate endpoints.\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = [];\n\n  // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n  return hull;\n};\n\nvar contains$1 = function(polygon, point) {\n  var n = polygon.length,\n      p = polygon[n - 1],\n      x = point[0], y = point[1],\n      x0 = p[0], y0 = p[1],\n      x1, y1,\n      inside = false;\n\n  for (var i = 0; i < n; ++i) {\n    p = polygon[i], x1 = p[0], y1 = p[1];\n    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n    x0 = x1, y0 = y1;\n  }\n\n  return inside;\n};\n\nvar length$2 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      b = polygon[n - 1],\n      xa,\n      ya,\n      xb = b[0],\n      yb = b[1],\n      perimeter = 0;\n\n  while (++i < n) {\n    xa = xb;\n    ya = yb;\n    b = polygon[i];\n    xb = b[0];\n    yb = b[1];\n    xa -= xb;\n    ya -= yb;\n    perimeter += Math.sqrt(xa * xa + ya * ya);\n  }\n\n  return perimeter;\n};\n\nvar slice$3 = [].slice;\n\nvar noabort = {};\n\nfunction Queue(size) {\n  this._size = size;\n  this._call =\n  this._error = null;\n  this._tasks = [];\n  this._data = [];\n  this._waiting =\n  this._active =\n  this._ended =\n  this._start = 0; // inside a synchronous task callback?\n}\n\nQueue.prototype = queue.prototype = {\n  constructor: Queue,\n  defer: function(callback) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n    if (this._call) throw new Error(\"defer after await\");\n    if (this._error != null) return this;\n    var t = slice$3.call(arguments, 1);\n    t.push(callback);\n    ++this._waiting, this._tasks.push(t);\n    poke$1(this);\n    return this;\n  },\n  abort: function() {\n    if (this._error == null) abort(this, new Error(\"abort\"));\n    return this;\n  },\n  await: function(callback) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n    if (this._call) throw new Error(\"multiple await\");\n    this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n    maybeNotify(this);\n    return this;\n  },\n  awaitAll: function(callback) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n    if (this._call) throw new Error(\"multiple await\");\n    this._call = callback;\n    maybeNotify(this);\n    return this;\n  }\n};\n\nfunction poke$1(q) {\n  if (!q._start) {\n    try { start$1(q); } // let the current task complete\n    catch (e) {\n      if (q._tasks[q._ended + q._active - 1]) abort(q, e); // task errored synchronously\n      else if (!q._data) throw e; // await callback errored synchronously\n    }\n  }\n}\n\nfunction start$1(q) {\n  while (q._start = q._waiting && q._active < q._size) {\n    var i = q._ended + q._active,\n        t = q._tasks[i],\n        j = t.length - 1,\n        c = t[j];\n    t[j] = end(q, i);\n    --q._waiting, ++q._active;\n    t = c.apply(null, t);\n    if (!q._tasks[i]) continue; // task finished synchronously\n    q._tasks[i] = t || noabort;\n  }\n}\n\nfunction end(q, i) {\n  return function(e, r) {\n    if (!q._tasks[i]) return; // ignore multiple callbacks\n    --q._active, ++q._ended;\n    q._tasks[i] = null;\n    if (q._error != null) return; // ignore secondary errors\n    if (e != null) {\n      abort(q, e);\n    } else {\n      q._data[i] = r;\n      if (q._waiting) poke$1(q);\n      else maybeNotify(q);\n    }\n  };\n}\n\nfunction abort(q, e) {\n  var i = q._tasks.length, t;\n  q._error = e; // ignore active callbacks\n  q._data = undefined; // allow gc\n  q._waiting = NaN; // prevent starting\n\n  while (--i >= 0) {\n    if (t = q._tasks[i]) {\n      q._tasks[i] = null;\n      if (t.abort) {\n        try { t.abort(); }\n        catch (e) { /* ignore */ }\n      }\n    }\n  }\n\n  q._active = NaN; // allow notification\n  maybeNotify(q);\n}\n\nfunction maybeNotify(q) {\n  if (!q._active && q._call) {\n    var d = q._data;\n    q._data = undefined; // allow gc\n    q._call(q._error, d);\n  }\n}\n\nfunction queue(concurrency) {\n  if (concurrency == null) concurrency = Infinity;\n  else if (!((concurrency = +concurrency) >= 1)) throw new Error(\"invalid concurrency\");\n  return new Queue(concurrency);\n}\n\nvar defaultSource$1 = function() {\n  return Math.random();\n};\n\nvar uniform = ((function sourceRandomUniform(source) {\n  function randomUniform(min, max) {\n    min = min == null ? 0 : +min;\n    max = max == null ? 1 : +max;\n    if (arguments.length === 1) max = min, min = 0;\n    else max -= min;\n    return function() {\n      return source() * max + min;\n    };\n  }\n\n  randomUniform.source = sourceRandomUniform;\n\n  return randomUniform;\n}))(defaultSource$1);\n\nvar normal = ((function sourceRandomNormal(source) {\n  function randomNormal(mu, sigma) {\n    var x, r;\n    mu = mu == null ? 0 : +mu;\n    sigma = sigma == null ? 1 : +sigma;\n    return function() {\n      var y;\n\n      // If available, use the second previously-generated uniform random.\n      if (x != null) y = x, x = null;\n\n      // Otherwise, generate a new x and y.\n      else do {\n        x = source() * 2 - 1;\n        y = source() * 2 - 1;\n        r = x * x + y * y;\n      } while (!r || r > 1);\n\n      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n    };\n  }\n\n  randomNormal.source = sourceRandomNormal;\n\n  return randomNormal;\n}))(defaultSource$1);\n\nvar logNormal = ((function sourceRandomLogNormal(source) {\n  function randomLogNormal() {\n    var randomNormal = normal.source(source).apply(this, arguments);\n    return function() {\n      return Math.exp(randomNormal());\n    };\n  }\n\n  randomLogNormal.source = sourceRandomLogNormal;\n\n  return randomLogNormal;\n}))(defaultSource$1);\n\nvar irwinHall = ((function sourceRandomIrwinHall(source) {\n  function randomIrwinHall(n) {\n    return function() {\n      for (var sum = 0, i = 0; i < n; ++i) sum += source();\n      return sum;\n    };\n  }\n\n  randomIrwinHall.source = sourceRandomIrwinHall;\n\n  return randomIrwinHall;\n}))(defaultSource$1);\n\nvar bates = ((function sourceRandomBates(source) {\n  function randomBates(n) {\n    var randomIrwinHall = irwinHall.source(source)(n);\n    return function() {\n      return randomIrwinHall() / n;\n    };\n  }\n\n  randomBates.source = sourceRandomBates;\n\n  return randomBates;\n}))(defaultSource$1);\n\nvar exponential$1 = ((function sourceRandomExponential(source) {\n  function randomExponential(lambda) {\n    return function() {\n      return -Math.log(1 - source()) / lambda;\n    };\n  }\n\n  randomExponential.source = sourceRandomExponential;\n\n  return randomExponential;\n}))(defaultSource$1);\n\nvar request = function(url, callback) {\n  var request,\n      event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n      mimeType,\n      headers = map$1(),\n      xhr = new XMLHttpRequest,\n      user = null,\n      password = null,\n      response,\n      responseType,\n      timeout = 0;\n\n  // If IE does not support CORS, use XDomainRequest.\n  if (typeof XDomainRequest !== \"undefined\"\n      && !(\"withCredentials\" in xhr)\n      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\n  \"onload\" in xhr\n      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\n  function respond(o) {\n    var status = xhr.status, result;\n    if (!status && hasResponse(xhr)\n        || status >= 200 && status < 300\n        || status === 304) {\n      if (response) {\n        try {\n          result = response.call(request, xhr);\n        } catch (e) {\n          event.call(\"error\", request, e);\n          return;\n        }\n      } else {\n        result = xhr;\n      }\n      event.call(\"load\", request, result);\n    } else {\n      event.call(\"error\", request, o);\n    }\n  }\n\n  xhr.onprogress = function(e) {\n    event.call(\"progress\", request, e);\n  };\n\n  request = {\n    header: function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers.get(name);\n      if (value == null) headers.remove(name);\n      else headers.set(name, value + \"\");\n      return request;\n    },\n\n    // If mimeType is non-null and no Accept header is set, a default is used.\n    mimeType: function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return request;\n    },\n\n    // Specifies what type the response value should take;\n    // for instance, arraybuffer, blob, document, or text.\n    responseType: function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return request;\n    },\n\n    timeout: function(value) {\n      if (!arguments.length) return timeout;\n      timeout = +value;\n      return request;\n    },\n\n    user: function(value) {\n      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n    },\n\n    password: function(value) {\n      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n    },\n\n    // Specify how to convert the response content to a specific type;\n    // changes the callback value on \"load\" events.\n    response: function(value) {\n      response = value;\n      return request;\n    },\n\n    // Alias for send(\"GET\", …).\n    get: function(data, callback) {\n      return request.send(\"GET\", data, callback);\n    },\n\n    // Alias for send(\"POST\", …).\n    post: function(data, callback) {\n      return request.send(\"POST\", data, callback);\n    },\n\n    // If callback is non-null, it will be used for error and load events.\n    send: function(method, data, callback) {\n      xhr.open(method, url, true, user, password);\n      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n      if (responseType != null) xhr.responseType = responseType;\n      if (timeout > 0) xhr.timeout = timeout;\n      if (callback == null && typeof data === \"function\") callback = data, data = null;\n      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n      if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n      event.call(\"beforesend\", request, xhr);\n      xhr.send(data == null ? null : data);\n      return request;\n    },\n\n    abort: function() {\n      xhr.abort();\n      return request;\n    },\n\n    on: function() {\n      var value = event.on.apply(event, arguments);\n      return value === event ? request : value;\n    }\n  };\n\n  if (callback != null) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    return request.get(callback);\n  }\n\n  return request;\n};\n\nfunction fixCallback(callback) {\n  return function(error, xhr) {\n    callback(error == null ? xhr : null);\n  };\n}\n\nfunction hasResponse(xhr) {\n  var type = xhr.responseType;\n  return type && type !== \"text\"\n      ? xhr.response // null on error\n      : xhr.responseText; // \"\" on error\n}\n\nvar type$1 = function(defaultMimeType, response) {\n  return function(url, callback) {\n    var r = request(url).mimeType(defaultMimeType).response(response);\n    if (callback != null) {\n      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n      return r.get(callback);\n    }\n    return r;\n  };\n};\n\nvar html = type$1(\"text/html\", function(xhr) {\n  return document.createRange().createContextualFragment(xhr.responseText);\n});\n\nvar json = type$1(\"application/json\", function(xhr) {\n  return JSON.parse(xhr.responseText);\n});\n\nvar text = type$1(\"text/plain\", function(xhr) {\n  return xhr.responseText;\n});\n\nvar xml = type$1(\"application/xml\", function(xhr) {\n  var xml = xhr.responseXML;\n  if (!xml) throw new Error(\"parse error\");\n  return xml;\n});\n\nvar dsv$1 = function(defaultMimeType, parse) {\n  return function(url, row, callback) {\n    if (arguments.length < 3) callback = row, row = null;\n    var r = request(url).mimeType(defaultMimeType);\n    r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n    r.row(row);\n    return callback ? r.get(callback) : r;\n  };\n};\n\nfunction responseOf(parse, row) {\n  return function(request$$1) {\n    return parse(request$$1.responseText, row);\n  };\n}\n\nvar csv$1 = dsv$1(\"text/csv\", csvParse);\n\nvar tsv$1 = dsv$1(\"text/tab-separated-values\", tsvParse);\n\nvar array$2 = Array.prototype;\n\nvar map$3 = array$2.map;\nvar slice$4 = array$2.slice;\n\nvar implicit = {name: \"implicit\"};\n\nfunction ordinal(range) {\n  var index = map$1(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice$4.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map$1();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$4.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n\nfunction band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range$$1 = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range$$1[1] < range$$1[0],\n        start = range$$1[reverse - 0],\n        stop = range$$1[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range$$1)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nfunction point$1() {\n  return pointish(band().paddingInner(1));\n}\n\nvar constant$9 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar number$1 = function(x) {\n  return +x;\n};\n\nvar unit = [0, 1];\n\nfunction deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant$9(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range$$1, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range$$1[0], r1 = range$$1[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range$$1, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range$$1.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range$$1 = range$$1.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range$$1[i], range$$1[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisectRight(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nfunction copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nfunction continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range$$1 = unit,\n      interpolate$$1 = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range$$1.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range$$1, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range$$1, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$4.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = slice$4.call(_), interpolate$$1 = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n  };\n\n  return rescale();\n}\n\nvar tickFormat = function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return exports.formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return exports.format(specifier);\n};\n\nfunction linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nfunction linear$2() {\n  var scale = continuous(deinterpolateLinear, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear$2());\n  };\n\n  return linearish(scale);\n}\n\nfunction identity$6() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity$6().domain(domain);\n  };\n\n  return linearish(scale);\n}\n\nvar nice = function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n};\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant$9(b);\n}\n\nfunction reinterpolate$1(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nfunction log$1() {\n  var scale = continuous(deinterpolate, reinterpolate$1).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log$1().base(base));\n  };\n\n  return scale;\n}\n\nfunction raise$1(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nfunction pow$1() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise$1(b, exponent) - (a = raise$1(a, exponent)))\n        ? function(x) { return (raise$1(x, exponent) - a) / b; }\n        : constant$9(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise$1(b, exponent) - (a = raise$1(a, exponent));\n    return function(t) { return raise$1(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow$1().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nfunction sqrt$1() {\n  return pow$1().exponent(0.5);\n}\n\nfunction quantile$$1() {\n  var domain = [],\n      range$$1 = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range$$1.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range$$1[bisectRight(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$4.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile$$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nfunction quantize$1() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range$$1 = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range$$1 = slice$4.call(_)).length - 1, rescale()) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize$1()\n        .domain([x0, x1])\n        .range(range$$1);\n  };\n\n  return linearish(scale);\n}\n\nfunction threshold$1() {\n  var domain = [0.5],\n      range$$1 = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice$4.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$4.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nvar t0$1 = new Date;\nvar t1$1 = new Date;\n\nfunction newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [];\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) while (--step >= 0) while (offseti(date, 1), !test(date)) {} // eslint-disable-line no-empty\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0$1.setTime(+start), t1$1.setTime(+end);\n      floori(t0$1), floori(t1$1);\n      return Math.floor(count(t0$1, t1$1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n\nvar millisecond = newInterval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return newInterval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nvar milliseconds = millisecond.range;\n\nvar durationSecond$1 = 1e3;\nvar durationMinute$1 = 6e4;\nvar durationHour$1 = 36e5;\nvar durationDay$1 = 864e5;\nvar durationWeek$1 = 6048e5;\n\nvar second = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationSecond$1) * durationSecond$1);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond$1);\n}, function(start, end) {\n  return (end - start) / durationSecond$1;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nvar seconds = second.range;\n\nvar minute = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationMinute$1) * durationMinute$1);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute$1);\n}, function(start, end) {\n  return (end - start) / durationMinute$1;\n}, function(date) {\n  return date.getMinutes();\n});\n\nvar minutes = minute.range;\n\nvar hour = newInterval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute$1 % durationHour$1;\n  if (offset < 0) offset += durationHour$1;\n  date.setTime(Math.floor((+date - offset) / durationHour$1) * durationHour$1 + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour$1);\n}, function(start, end) {\n  return (end - start) / durationHour$1;\n}, function(date) {\n  return date.getHours();\n});\n\nvar hours = hour.range;\n\nvar day = newInterval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationDay$1;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nvar days = day.range;\n\nfunction weekday(i) {\n  return newInterval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationWeek$1;\n  });\n}\n\nvar sunday = weekday(0);\nvar monday = weekday(1);\nvar tuesday = weekday(2);\nvar wednesday = weekday(3);\nvar thursday = weekday(4);\nvar friday = weekday(5);\nvar saturday = weekday(6);\n\nvar sundays = sunday.range;\nvar mondays = monday.range;\nvar tuesdays = tuesday.range;\nvar wednesdays = wednesday.range;\nvar thursdays = thursday.range;\nvar fridays = friday.range;\nvar saturdays = saturday.range;\n\nvar month = newInterval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nvar months = month.range;\n\nvar year = newInterval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nvar years = year.range;\n\nvar utcMinute = newInterval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute$1);\n}, function(start, end) {\n  return (end - start) / durationMinute$1;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nvar utcMinutes = utcMinute.range;\n\nvar utcHour = newInterval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour$1);\n}, function(start, end) {\n  return (end - start) / durationHour$1;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nvar utcHours = utcHour.range;\n\nvar utcDay = newInterval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay$1;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nvar utcDays = utcDay.range;\n\nfunction utcWeekday(i) {\n  return newInterval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek$1;\n  });\n}\n\nvar utcSunday = utcWeekday(0);\nvar utcMonday = utcWeekday(1);\nvar utcTuesday = utcWeekday(2);\nvar utcWednesday = utcWeekday(3);\nvar utcThursday = utcWeekday(4);\nvar utcFriday = utcWeekday(5);\nvar utcSaturday = utcWeekday(6);\n\nvar utcSundays = utcSunday.range;\nvar utcMondays = utcMonday.range;\nvar utcTuesdays = utcTuesday.range;\nvar utcWednesdays = utcWednesday.range;\nvar utcThursdays = utcThursday.range;\nvar utcFridays = utcFriday.range;\nvar utcSaturdays = utcSaturday.range;\n\nvar utcMonth = newInterval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nvar utcMonths = utcMonth.range;\n\nvar utcYear = newInterval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nvar utcYears = utcYear.range;\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nfunction formatLocale$1(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"S\": formatSeconds,\n    \"U\": formatWeekNumberSunday,\n    \"w\": formatWeekdayNumber,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"S\": formatUTCSeconds,\n    \"U\": formatUTCWeekNumberSunday,\n    \"w\": formatUTCWeekdayNumber,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"S\": parseSeconds,\n    \"U\": parseWeekNumberSunday,\n    \"w\": parseWeekdayNumber,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0);\n      if (i != string.length) return null;\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n        var day$$1 = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day$$1 + 5) % 7 : d.w + d.U * 7 - (day$$1 + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\nvar numberRe = /^\\s*\\d+/;\nvar percentRe = /^%/;\nvar requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + day.count(year(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(sunday.count(year(d), d), p, 2);\n}\n\nfunction formatWeekdayNumber(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(monday.count(year(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekdayNumber(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nvar locale$2;\n\n\n\n\n\ndefaultLocale$1({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nfunction defaultLocale$1(definition) {\n  locale$2 = formatLocale$1(definition);\n  exports.timeFormat = locale$2.format;\n  exports.timeParse = locale$2.parse;\n  exports.utcFormat = locale$2.utcFormat;\n  exports.utcParse = locale$2.utcParse;\n  return locale$2;\n}\n\nvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : exports.utcFormat(isoSpecifier);\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : exports.utcParse(isoSpecifier);\n\nvar durationSecond = 1000;\nvar durationMinute = durationSecond * 60;\nvar durationHour = durationMinute * 60;\nvar durationDay = durationHour * 24;\nvar durationWeek = durationDay * 7;\nvar durationMonth = durationDay * 30;\nvar durationYear = durationDay * 365;\n\nfunction date$1(t) {\n  return new Date(t);\n}\n\nfunction number$2(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nfunction calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format) {\n  var scale = continuous(deinterpolateLinear, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second$$1,  1,      durationSecond],\n    [second$$1,  5,  5 * durationSecond],\n    [second$$1, 15, 15 * durationSecond],\n    [second$$1, 30, 30 * durationSecond],\n    [minute$$1,  1,      durationMinute],\n    [minute$$1,  5,  5 * durationMinute],\n    [minute$$1, 15, 15 * durationMinute],\n    [minute$$1, 30, 30 * durationMinute],\n    [  hour$$1,  1,      durationHour  ],\n    [  hour$$1,  3,  3 * durationHour  ],\n    [  hour$$1,  6,  6 * durationHour  ],\n    [  hour$$1, 12, 12 * durationHour  ],\n    [   day$$1,  1,      durationDay   ],\n    [   day$$1,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month$$1,  1,      durationMonth ],\n    [ month$$1,  3,  3 * durationMonth ],\n    [  year$$1,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second$$1(date) < date ? formatMillisecond\n        : minute$$1(date) < date ? formatSecond\n        : hour$$1(date) < date ? formatMinute\n        : day$$1(date) < date ? formatHour\n        : month$$1(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year$$1(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year$$1;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = tickStep(start, stop, interval);\n        interval = millisecond$$1;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map$3.call(_, number$2)) : domain().map(date$1);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format));\n  };\n\n  return scale;\n}\n\nvar time = function() {\n  return calendar(year, month, sunday, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n};\n\nvar utcTime = function() {\n  return calendar(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n};\n\nvar colors = function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n};\n\nvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\nvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\nvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\nvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\nvar cubehelix$3 = cubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\nvar warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nvar rainbow$1 = function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n};\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\nfunction sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n\nvar constant$10 = function(x) {\n  return function constant() {\n    return x;\n  };\n};\n\nvar abs$1 = Math.abs;\nvar atan2$1 = Math.atan2;\nvar cos$2 = Math.cos;\nvar max$2 = Math.max;\nvar min$1 = Math.min;\nvar sin$2 = Math.sin;\nvar sqrt$2 = Math.sqrt;\n\nvar epsilon$3 = 1e-12;\nvar pi$4 = Math.PI;\nvar halfPi$3 = pi$4 / 2;\nvar tau$4 = 2 * pi$4;\n\nfunction acos$1(x) {\n  return x > 1 ? 0 : x < -1 ? pi$4 : Math.acos(x);\n}\n\nfunction asin$1(x) {\n  return x >= 1 ? halfPi$3 : x <= -1 ? -halfPi$3 : Math.asin(x);\n}\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt$2(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt$2(max$2(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nvar arc = function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant$10(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi$3,\n        a1 = endAngle.apply(this, arguments) - halfPi$3,\n        da = abs$1(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon$3)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau$4 - epsilon$3) {\n      context.moveTo(r1 * cos$2(a0), r1 * sin$2(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon$3) {\n        context.moveTo(r0 * cos$2(a1), r0 * sin$2(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon$3) && (padRadius ? +padRadius.apply(this, arguments) : sqrt$2(r0 * r0 + r1 * r1)),\n          rc = min$1(abs$1(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon$3) {\n        var p0 = asin$1(rp / r0 * sin$2(ap)),\n            p1 = asin$1(rp / r1 * sin$2(ap));\n        if ((da0 -= p0 * 2) > epsilon$3) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon$3) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos$2(a01),\n          y01 = r1 * sin$2(a01),\n          x10 = r0 * cos$2(a10),\n          y10 = r0 * sin$2(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon$3) {\n        var x11 = r1 * cos$2(a11),\n            y11 = r1 * sin$2(a11),\n            x00 = r0 * cos$2(a00),\n            y00 = r0 * sin$2(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi$4) {\n          var oc = da0 > epsilon$3 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin$2(acos$1((ax * bx + ay * by) / (sqrt$2(ax * ax + ay * ay) * sqrt$2(bx * bx + by * by))) / 2),\n              lc = sqrt$2(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min$1(rc, (r0 - lc) / (kc - 1));\n          rc1 = min$1(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon$3)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon$3) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon$3) || !(da0 > epsilon$3)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon$3) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$4 / 2;\n    return [cos$2(a) * r, sin$2(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n};\n\nfunction Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nvar curveLinear = function(context) {\n  return new Linear(context);\n};\n\nfunction x$3(p) {\n  return p[0];\n}\n\nfunction y$3(p) {\n  return p[1];\n}\n\nvar line = function() {\n  var x$$1 = x$3,\n      y$$1 = y$3,\n      defined = constant$10(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : x$$1;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : y$$1;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n};\n\nvar area$2 = function() {\n  var x0 = x$3,\n      x1 = null,\n      y0 = constant$10(0),\n      y1 = y$3,\n      defined = constant$10(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n};\n\nvar descending$1 = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar identity$7 = function(d) {\n  return d;\n};\n\nvar pie = function() {\n  var value = identity$7,\n      sortValues = descending$1,\n      sort = null,\n      startAngle = constant$10(0),\n      endAngle = constant$10(tau$4),\n      padAngle = constant$10(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau$4, Math.max(-tau$4, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : padAngle;\n  };\n\n  return pie;\n};\n\nvar curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nfunction curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n\nfunction radialLine(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nvar radialLine$1 = function() {\n  return radialLine(line().curve(curveRadialLinear));\n};\n\nvar radialArea = function() {\n  var a = area$2().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return radialLine(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return radialLine(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return radialLine(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return radialLine(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n};\n\nvar slice$5 = Array.prototype.slice;\n\nvar radialPoint = function(x, y) {\n  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];\n};\n\nfunction linkSource(d) {\n  return d.source;\n}\n\nfunction linkTarget(d) {\n  return d.target;\n}\n\nfunction link$2(curve) {\n  var source = linkSource,\n      target = linkTarget,\n      x$$1 = x$3,\n      y$$1 = y$3,\n      context = null;\n\n  function link() {\n    var buffer, argv = slice$5.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);\n    if (!context) context = buffer = path();\n    curve(context, +x$$1.apply(this, (argv[0] = s, argv)), +y$$1.apply(this, argv), +x$$1.apply(this, (argv[0] = t, argv)), +y$$1.apply(this, argv));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  link.source = function(_) {\n    return arguments.length ? (source = _, link) : source;\n  };\n\n  link.target = function(_) {\n    return arguments.length ? (target = _, link) : target;\n  };\n\n  link.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$10(+_), link) : x$$1;\n  };\n\n  link.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$10(+_), link) : y$$1;\n  };\n\n  link.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), link) : context;\n  };\n\n  return link;\n}\n\nfunction curveHorizontal(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);\n}\n\nfunction curveVertical(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);\n}\n\nfunction curveRadial$1(context, x0, y0, x1, y1) {\n  var p0 = radialPoint(x0, y0),\n      p1 = radialPoint(x0, y0 = (y0 + y1) / 2),\n      p2 = radialPoint(x1, y0),\n      p3 = radialPoint(x1, y1);\n  context.moveTo(p0[0], p0[1]);\n  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n}\n\nfunction linkHorizontal() {\n  return link$2(curveHorizontal);\n}\n\nfunction linkVertical() {\n  return link$2(curveVertical);\n}\n\nfunction linkRadial() {\n  var l = link$2(curveRadial$1);\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n  return l;\n}\n\nvar circle$2 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi$4);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau$4);\n  }\n};\n\nvar cross$2 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n\nvar tan30 = Math.sqrt(1 / 3);\nvar tan30_2 = tan30 * 2;\n\nvar diamond = {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n\nvar ka = 0.89081309152928522810;\nvar kr = Math.sin(pi$4 / 10) / Math.sin(7 * pi$4 / 10);\nvar kx = Math.sin(tau$4 / 10) * kr;\nvar ky = -Math.cos(tau$4 / 10) * kr;\n\nvar star = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau$4 * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n\nvar square = {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n\nvar sqrt3 = Math.sqrt(3);\n\nvar triangle = {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n\nvar c = -0.5;\nvar s = Math.sqrt(3) / 2;\nvar k = 1 / Math.sqrt(12);\nvar a = (k / 2 + 1) * 3;\n\nvar wye = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n\nvar symbols = [\n  circle$2,\n  cross$2,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nvar symbol = function() {\n  var type = constant$10(circle$2),\n      size = constant$10(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$10(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$10(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n};\n\nvar noop$2 = function() {};\n\nfunction point$2(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nfunction Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point$2(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basis$2 = function(context) {\n  return new Basis(context);\n};\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisClosed$1 = function(context) {\n  return new BasisClosed(context);\n};\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisOpen = function(context) {\n  return new BasisOpen(context);\n};\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nvar bundle = ((function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n}))(0.85);\n\nfunction point$3(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nfunction Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point$3(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinal = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalClosed = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalOpen = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction point$4(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon$3) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon$3) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRom = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomClosed = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomOpen = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nvar linearClosed = function(context) {\n  return new LinearClosed(context);\n};\n\nfunction sign$1(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign$1(s0) + sign$1(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point$5(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point$5(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point$5(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point$5(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n};\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nfunction monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nfunction monotoneY(context) {\n  return new MonotoneY(context);\n}\n\nfunction Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nvar natural = function(context) {\n  return new Natural(context);\n};\n\nfunction Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nvar step = function(context) {\n  return new Step(context, 0.5);\n};\n\nfunction stepBefore(context) {\n  return new Step(context, 0);\n}\n\nfunction stepAfter(context) {\n  return new Step(context, 1);\n}\n\nvar none$1 = function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n};\n\nvar none$2 = function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n};\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nvar stack = function() {\n  var keys = constant$10([]),\n      order = none$2,\n      offset = none$1,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$10(slice$5.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? none$2 : typeof _ === \"function\" ? _ : constant$10(slice$5.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? none$1 : _, stack) : offset;\n  };\n\n  return stack;\n};\n\nvar expand = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none$1(series, order);\n};\n\nvar diverging = function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = yp;\n      }\n    }\n  }\n};\n\nvar silhouette = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none$1(series, order);\n};\n\nvar wiggle = function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none$1(series, order);\n};\n\nvar ascending$2 = function(series) {\n  var sums = series.map(sum$2);\n  return none$2(series).sort(function(a, b) { return sums[a] - sums[b]; });\n};\n\nfunction sum$2(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n\nvar descending$2 = function(series) {\n  return ascending$2(series).reverse();\n};\n\nvar insideOut = function(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum$2),\n      order = none$2(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n};\n\nvar reverse = function(series) {\n  return none$2(series).reverse();\n};\n\nvar constant$11 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction x$4(d) {\n  return d[0];\n}\n\nfunction y$4(d) {\n  return d[1];\n}\n\nfunction RedBlackTree() {\n  this._ = null; // root node\n}\n\nfunction RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nfunction createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nfunction createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nfunction setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nfunction clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$4\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon$4)) {\n      delete edges[i];\n    }\n  }\n}\n\nfunction createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nfunction cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nfunction cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nfunction sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nfunction clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon$4 || Math.abs(endY - startY) > epsilon$4) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon$4 && y1 - endY > epsilon$4 ? [x0, Math.abs(startX - x0) < epsilon$4 ? startY : y1]\n              : Math.abs(endY - y1) < epsilon$4 && x1 - endX > epsilon$4 ? [Math.abs(startY - y1) < epsilon$4 ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon$4 && endY - y0 > epsilon$4 ? [x1, Math.abs(startX - x1) < epsilon$4 ? startY : y0]\n              : Math.abs(endY - y0) < epsilon$4 && endX - x0 > epsilon$4 ? [Math.abs(startY - y0) < epsilon$4 ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n\nvar circlePool = [];\n\nvar firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nfunction attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2$2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nfunction detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nfunction removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon$4\n      && Math.abs(y - lArc.circle.cy) < epsilon$4) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon$4\n      && Math.abs(y - rArc.circle.cy) < epsilon$4) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon$4) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon$4) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon$4) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon$4) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n\nvar epsilon$4 = 1e-6;\nvar epsilon2$2 = 1e-12;\nvar beaches;\nvar cells;\nvar circles;\nvar edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nfunction Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n};\n\nvar voronoi = function() {\n  var x$$1 = x$4,\n      y$$1 = y$4,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x$$1(d, i, data) / epsilon$4) * epsilon$4, Math.round(y$$1(d, i, data) / epsilon$4) * epsilon$4];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : x$$1;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : y$$1;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n};\n\nvar constant$12 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction ZoomEvent(target, type, transform) {\n  this.target = target;\n  this.type = type;\n  this.transform = transform;\n}\n\nfunction Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nvar identity$8 = new Transform(1, 0, 0);\n\ntransform$1.prototype = Transform.prototype;\n\nfunction transform$1(node) {\n  return node.__zoom || identity$8;\n}\n\nfunction nopropagation$2() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$2 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$2() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent$1() {\n  var e = this, w, h;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    w = e.width.baseVal.value;\n    h = e.height.baseVal.value;\n  } else {\n    w = e.clientWidth;\n    h = e.clientHeight;\n  }\n  return [[0, 0], [w, h]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity$8;\n}\n\nvar zoom = function() {\n  var filter = defaultFilter$2,\n      extent = defaultExtent$1,\n      k0 = 0,\n      k1 = Infinity,\n      x0 = -k1,\n      x1 = k1,\n      y0 = x0,\n      y1 = x1,\n      duration = 250,\n      interpolate$$1 = interpolateZoom,\n      gestures = [],\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150,\n      clickDistance2 = 0;\n\n  function zoom(selection$$1) {\n    selection$$1\n        .on(\"wheel.zoom\", wheeled)\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .property(\"__zoom\", defaultTransform);\n  }\n\n  zoom.transform = function(collection, transform) {\n    var selection$$1 = collection.selection ? collection.selection() : collection;\n    selection$$1.property(\"__zoom\", defaultTransform);\n    if (collection !== selection$$1) {\n      schedule(collection, transform);\n    } else {\n      selection$$1.interrupt().each(function() {\n        gesture(this, arguments)\n            .start()\n            .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n            .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection$$1, k) {\n    zoom.scaleTo(selection$$1, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    });\n  };\n\n  zoom.scaleTo = function(selection$$1, k) {\n    zoom.transform(selection$$1, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = centroid(e),\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e);\n    });\n  };\n\n  zoom.translateBy = function(selection$$1, x, y) {\n    zoom.transform(selection$$1, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments));\n    });\n  };\n\n  function scale(transform, k) {\n    k = Math.max(k0, Math.min(k1, k));\n    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n  }\n\n  function translate(transform, p0, p1) {\n    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n  }\n\n  function constrain(transform, extent) {\n    var dx0 = transform.invertX(extent[0][0]) - x0,\n        dx1 = transform.invertX(extent[1][0]) - x1,\n        dy0 = transform.invertY(extent[0][1]) - y0,\n        dy1 = transform.invertY(extent[1][1]) - y1;\n    return transform.translate(\n      dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n      dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n    );\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition$$1, transform, center) {\n    transition$$1\n        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args),\n              e = extent.apply(that, args),\n              p = center || centroid(e),\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n              i = interpolate$$1(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args) {\n    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n      if ((g = gestures[i]).that === that) {\n        return g;\n      }\n    }\n    return new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.index = -1;\n    this.active = 0;\n    this.extent = extent.apply(that, args);\n  }\n\n  Gesture.prototype = {\n    start: function() {\n      if (++this.active === 1) {\n        this.index = gestures.push(this) - 1;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n      this.that.__zoom = transform;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        gestures.splice(this.index, 1);\n        this.index = -1;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function wheeled() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        t = this.__zoom,\n        k = Math.max(k0, Math.min(k1, t.k * Math.pow(2, -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500))),\n        p = mouse(this);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent$2();\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        v = select(exports.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = mouse(this),\n        x0 = exports.event.clientX,\n        y0 = exports.event.clientY;\n\n    dragDisable(exports.event.view);\n    nopropagation$2();\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved() {\n      noevent$2();\n      if (!g.moved) {\n        var dx = exports.event.clientX - x0, dy = exports.event.clientY - y0;\n        g.moved = dx * dx + dy * dy > clickDistance2;\n      }\n      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent));\n    }\n\n    function mouseupped() {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      yesdrag(exports.event.view, g.moved);\n      noevent$2();\n      g.end();\n    }\n  }\n\n  function dblclicked() {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = mouse(this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments));\n\n    noevent$2();\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n    else select(this).call(zoom.transform, t1);\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        started,\n        n = touches$$1.length, i, t, p;\n\n    nopropagation$2();\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p, started = true;\n      else if (!g.touch1) g.touch1 = p;\n    }\n\n    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n    if (touchstarting) {\n      touchstarting = clearTimeout(touchstarting);\n      if (!g.touch1) {\n        g.end();\n        p = select(this).on(\"dblclick.zoom\");\n        if (p) p.apply(this, arguments);\n        return;\n      }\n    }\n\n    if (started) {\n      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t, p, l;\n\n    noevent$2();\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent));\n  }\n\n  function touchended() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t;\n\n    nopropagation$2();\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);\n    else g.end();\n  }\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$12(!!_), zoom) : filter;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$12([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (k0 = +_[0], k1 = +_[1], zoom) : [k0, k1];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], zoom) : [[x0, y0], [x1, y1]];\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, zoom) : interpolate$$1;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  zoom.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);\n  };\n    \n  return zoom;\n};\n\nexports.version = version;\nexports.bisect = bisectRight;\nexports.bisectRight = bisectRight;\nexports.bisectLeft = bisectLeft;\nexports.ascending = ascending;\nexports.bisector = bisector;\nexports.cross = cross;\nexports.descending = descending;\nexports.deviation = deviation;\nexports.extent = extent;\nexports.histogram = histogram;\nexports.thresholdFreedmanDiaconis = freedmanDiaconis;\nexports.thresholdScott = scott;\nexports.thresholdSturges = sturges;\nexports.max = max;\nexports.mean = mean;\nexports.median = median;\nexports.merge = merge;\nexports.min = min;\nexports.pairs = pairs;\nexports.permute = permute;\nexports.quantile = threshold;\nexports.range = sequence;\nexports.scan = scan;\nexports.shuffle = shuffle;\nexports.sum = sum;\nexports.ticks = ticks;\nexports.tickIncrement = tickIncrement;\nexports.tickStep = tickStep;\nexports.transpose = transpose;\nexports.variance = variance;\nexports.zip = zip;\nexports.axisTop = axisTop;\nexports.axisRight = axisRight;\nexports.axisBottom = axisBottom;\nexports.axisLeft = axisLeft;\nexports.brush = brush;\nexports.brushX = brushX;\nexports.brushY = brushY;\nexports.brushSelection = brushSelection;\nexports.chord = chord;\nexports.ribbon = ribbon;\nexports.nest = nest;\nexports.set = set$2;\nexports.map = map$1;\nexports.keys = keys;\nexports.values = values;\nexports.entries = entries;\nexports.color = color;\nexports.rgb = rgb;\nexports.hsl = hsl;\nexports.lab = lab;\nexports.hcl = hcl;\nexports.cubehelix = cubehelix;\nexports.dispatch = dispatch;\nexports.drag = drag;\nexports.dragDisable = dragDisable;\nexports.dragEnable = yesdrag;\nexports.dsvFormat = dsv;\nexports.csvParse = csvParse;\nexports.csvParseRows = csvParseRows;\nexports.csvFormat = csvFormat;\nexports.csvFormatRows = csvFormatRows;\nexports.tsvParse = tsvParse;\nexports.tsvParseRows = tsvParseRows;\nexports.tsvFormat = tsvFormat;\nexports.tsvFormatRows = tsvFormatRows;\nexports.easeLinear = linear$1;\nexports.easeQuad = quadInOut;\nexports.easeQuadIn = quadIn;\nexports.easeQuadOut = quadOut;\nexports.easeQuadInOut = quadInOut;\nexports.easeCubic = cubicInOut;\nexports.easeCubicIn = cubicIn;\nexports.easeCubicOut = cubicOut;\nexports.easeCubicInOut = cubicInOut;\nexports.easePoly = polyInOut;\nexports.easePolyIn = polyIn;\nexports.easePolyOut = polyOut;\nexports.easePolyInOut = polyInOut;\nexports.easeSin = sinInOut;\nexports.easeSinIn = sinIn;\nexports.easeSinOut = sinOut;\nexports.easeSinInOut = sinInOut;\nexports.easeExp = expInOut;\nexports.easeExpIn = expIn;\nexports.easeExpOut = expOut;\nexports.easeExpInOut = expInOut;\nexports.easeCircle = circleInOut;\nexports.easeCircleIn = circleIn;\nexports.easeCircleOut = circleOut;\nexports.easeCircleInOut = circleInOut;\nexports.easeBounce = bounceOut;\nexports.easeBounceIn = bounceIn;\nexports.easeBounceOut = bounceOut;\nexports.easeBounceInOut = bounceInOut;\nexports.easeBack = backInOut;\nexports.easeBackIn = backIn;\nexports.easeBackOut = backOut;\nexports.easeBackInOut = backInOut;\nexports.easeElastic = elasticOut;\nexports.easeElasticIn = elasticIn;\nexports.easeElasticOut = elasticOut;\nexports.easeElasticInOut = elasticInOut;\nexports.forceCenter = center$1;\nexports.forceCollide = collide;\nexports.forceLink = link;\nexports.forceManyBody = manyBody;\nexports.forceSimulation = simulation;\nexports.forceX = x$2;\nexports.forceY = y$2;\nexports.formatDefaultLocale = defaultLocale;\nexports.formatLocale = formatLocale;\nexports.formatSpecifier = formatSpecifier;\nexports.precisionFixed = precisionFixed;\nexports.precisionPrefix = precisionPrefix;\nexports.precisionRound = precisionRound;\nexports.geoArea = area;\nexports.geoBounds = bounds;\nexports.geoCentroid = centroid;\nexports.geoCircle = circle;\nexports.geoClipExtent = extent$1;\nexports.geoContains = contains;\nexports.geoDistance = distance;\nexports.geoGraticule = graticule;\nexports.geoGraticule10 = graticule10;\nexports.geoInterpolate = interpolate$1;\nexports.geoLength = length$1;\nexports.geoPath = index$1;\nexports.geoAlbers = albers;\nexports.geoAlbersUsa = albersUsa;\nexports.geoAzimuthalEqualArea = azimuthalEqualArea;\nexports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\nexports.geoAzimuthalEquidistant = azimuthalEquidistant;\nexports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\nexports.geoConicConformal = conicConformal;\nexports.geoConicConformalRaw = conicConformalRaw;\nexports.geoConicEqualArea = conicEqualArea;\nexports.geoConicEqualAreaRaw = conicEqualAreaRaw;\nexports.geoConicEquidistant = conicEquidistant;\nexports.geoConicEquidistantRaw = conicEquidistantRaw;\nexports.geoEquirectangular = equirectangular;\nexports.geoEquirectangularRaw = equirectangularRaw;\nexports.geoGnomonic = gnomonic;\nexports.geoGnomonicRaw = gnomonicRaw;\nexports.geoIdentity = identity$5;\nexports.geoProjection = projection;\nexports.geoProjectionMutator = projectionMutator;\nexports.geoMercator = mercator;\nexports.geoMercatorRaw = mercatorRaw;\nexports.geoOrthographic = orthographic;\nexports.geoOrthographicRaw = orthographicRaw;\nexports.geoStereographic = stereographic;\nexports.geoStereographicRaw = stereographicRaw;\nexports.geoTransverseMercator = transverseMercator;\nexports.geoTransverseMercatorRaw = transverseMercatorRaw;\nexports.geoRotation = rotation;\nexports.geoStream = geoStream;\nexports.geoTransform = transform;\nexports.cluster = cluster;\nexports.hierarchy = hierarchy;\nexports.pack = index$2;\nexports.packSiblings = siblings;\nexports.packEnclose = enclose;\nexports.partition = partition;\nexports.stratify = stratify;\nexports.tree = tree;\nexports.treemap = index$3;\nexports.treemapBinary = binary;\nexports.treemapDice = treemapDice;\nexports.treemapSlice = treemapSlice;\nexports.treemapSliceDice = sliceDice;\nexports.treemapSquarify = squarify;\nexports.treemapResquarify = resquarify;\nexports.interpolate = interpolateValue;\nexports.interpolateArray = array$1;\nexports.interpolateBasis = basis$1;\nexports.interpolateBasisClosed = basisClosed;\nexports.interpolateDate = date;\nexports.interpolateNumber = reinterpolate;\nexports.interpolateObject = object;\nexports.interpolateRound = interpolateRound;\nexports.interpolateString = interpolateString;\nexports.interpolateTransformCss = interpolateTransformCss;\nexports.interpolateTransformSvg = interpolateTransformSvg;\nexports.interpolateZoom = interpolateZoom;\nexports.interpolateRgb = interpolateRgb;\nexports.interpolateRgbBasis = rgbBasis;\nexports.interpolateRgbBasisClosed = rgbBasisClosed;\nexports.interpolateHsl = hsl$2;\nexports.interpolateHslLong = hslLong;\nexports.interpolateLab = lab$1;\nexports.interpolateHcl = hcl$2;\nexports.interpolateHclLong = hclLong;\nexports.interpolateCubehelix = cubehelix$2;\nexports.interpolateCubehelixLong = cubehelixLong;\nexports.quantize = quantize;\nexports.path = path;\nexports.polygonArea = area$1;\nexports.polygonCentroid = centroid$1;\nexports.polygonHull = hull;\nexports.polygonContains = contains$1;\nexports.polygonLength = length$2;\nexports.quadtree = quadtree;\nexports.queue = queue;\nexports.randomUniform = uniform;\nexports.randomNormal = normal;\nexports.randomLogNormal = logNormal;\nexports.randomBates = bates;\nexports.randomIrwinHall = irwinHall;\nexports.randomExponential = exponential$1;\nexports.request = request;\nexports.html = html;\nexports.json = json;\nexports.text = text;\nexports.xml = xml;\nexports.csv = csv$1;\nexports.tsv = tsv$1;\nexports.scaleBand = band;\nexports.scalePoint = point$1;\nexports.scaleIdentity = identity$6;\nexports.scaleLinear = linear$2;\nexports.scaleLog = log$1;\nexports.scaleOrdinal = ordinal;\nexports.scaleImplicit = implicit;\nexports.scalePow = pow$1;\nexports.scaleSqrt = sqrt$1;\nexports.scaleQuantile = quantile$$1;\nexports.scaleQuantize = quantize$1;\nexports.scaleThreshold = threshold$1;\nexports.scaleTime = time;\nexports.scaleUtc = utcTime;\nexports.schemeCategory10 = category10;\nexports.schemeCategory20b = category20b;\nexports.schemeCategory20c = category20c;\nexports.schemeCategory20 = category20;\nexports.interpolateCubehelixDefault = cubehelix$3;\nexports.interpolateRainbow = rainbow$1;\nexports.interpolateWarm = warm;\nexports.interpolateCool = cool;\nexports.interpolateViridis = viridis;\nexports.interpolateMagma = magma;\nexports.interpolateInferno = inferno;\nexports.interpolatePlasma = plasma;\nexports.scaleSequential = sequential;\nexports.creator = creator;\nexports.local = local$1;\nexports.matcher = matcher$1;\nexports.mouse = mouse;\nexports.namespace = namespace;\nexports.namespaces = namespaces;\nexports.select = select;\nexports.selectAll = selectAll;\nexports.selection = selection;\nexports.selector = selector;\nexports.selectorAll = selectorAll;\nexports.style = styleValue;\nexports.touch = touch;\nexports.touches = touches;\nexports.window = defaultView;\nexports.customEvent = customEvent;\nexports.arc = arc;\nexports.area = area$2;\nexports.line = line;\nexports.pie = pie;\nexports.radialArea = radialArea;\nexports.radialLine = radialLine$1;\nexports.linkHorizontal = linkHorizontal;\nexports.linkVertical = linkVertical;\nexports.linkRadial = linkRadial;\nexports.symbol = symbol;\nexports.symbols = symbols;\nexports.symbolCircle = circle$2;\nexports.symbolCross = cross$2;\nexports.symbolDiamond = diamond;\nexports.symbolSquare = square;\nexports.symbolStar = star;\nexports.symbolTriangle = triangle;\nexports.symbolWye = wye;\nexports.curveBasisClosed = basisClosed$1;\nexports.curveBasisOpen = basisOpen;\nexports.curveBasis = basis$2;\nexports.curveBundle = bundle;\nexports.curveCardinalClosed = cardinalClosed;\nexports.curveCardinalOpen = cardinalOpen;\nexports.curveCardinal = cardinal;\nexports.curveCatmullRomClosed = catmullRomClosed;\nexports.curveCatmullRomOpen = catmullRomOpen;\nexports.curveCatmullRom = catmullRom;\nexports.curveLinearClosed = linearClosed;\nexports.curveLinear = curveLinear;\nexports.curveMonotoneX = monotoneX;\nexports.curveMonotoneY = monotoneY;\nexports.curveNatural = natural;\nexports.curveStep = step;\nexports.curveStepAfter = stepAfter;\nexports.curveStepBefore = stepBefore;\nexports.stack = stack;\nexports.stackOffsetExpand = expand;\nexports.stackOffsetDiverging = diverging;\nexports.stackOffsetNone = none$1;\nexports.stackOffsetSilhouette = silhouette;\nexports.stackOffsetWiggle = wiggle;\nexports.stackOrderAscending = ascending$2;\nexports.stackOrderDescending = descending$2;\nexports.stackOrderInsideOut = insideOut;\nexports.stackOrderNone = none$2;\nexports.stackOrderReverse = reverse;\nexports.timeInterval = newInterval;\nexports.timeMillisecond = millisecond;\nexports.timeMilliseconds = milliseconds;\nexports.utcMillisecond = millisecond;\nexports.utcMilliseconds = milliseconds;\nexports.timeSecond = second;\nexports.timeSeconds = seconds;\nexports.utcSecond = second;\nexports.utcSeconds = seconds;\nexports.timeMinute = minute;\nexports.timeMinutes = minutes;\nexports.timeHour = hour;\nexports.timeHours = hours;\nexports.timeDay = day;\nexports.timeDays = days;\nexports.timeWeek = sunday;\nexports.timeWeeks = sundays;\nexports.timeSunday = sunday;\nexports.timeSundays = sundays;\nexports.timeMonday = monday;\nexports.timeMondays = mondays;\nexports.timeTuesday = tuesday;\nexports.timeTuesdays = tuesdays;\nexports.timeWednesday = wednesday;\nexports.timeWednesdays = wednesdays;\nexports.timeThursday = thursday;\nexports.timeThursdays = thursdays;\nexports.timeFriday = friday;\nexports.timeFridays = fridays;\nexports.timeSaturday = saturday;\nexports.timeSaturdays = saturdays;\nexports.timeMonth = month;\nexports.timeMonths = months;\nexports.timeYear = year;\nexports.timeYears = years;\nexports.utcMinute = utcMinute;\nexports.utcMinutes = utcMinutes;\nexports.utcHour = utcHour;\nexports.utcHours = utcHours;\nexports.utcDay = utcDay;\nexports.utcDays = utcDays;\nexports.utcWeek = utcSunday;\nexports.utcWeeks = utcSundays;\nexports.utcSunday = utcSunday;\nexports.utcSundays = utcSundays;\nexports.utcMonday = utcMonday;\nexports.utcMondays = utcMondays;\nexports.utcTuesday = utcTuesday;\nexports.utcTuesdays = utcTuesdays;\nexports.utcWednesday = utcWednesday;\nexports.utcWednesdays = utcWednesdays;\nexports.utcThursday = utcThursday;\nexports.utcThursdays = utcThursdays;\nexports.utcFriday = utcFriday;\nexports.utcFridays = utcFridays;\nexports.utcSaturday = utcSaturday;\nexports.utcSaturdays = utcSaturdays;\nexports.utcMonth = utcMonth;\nexports.utcMonths = utcMonths;\nexports.utcYear = utcYear;\nexports.utcYears = utcYears;\nexports.timeFormatDefaultLocale = defaultLocale$1;\nexports.timeFormatLocale = formatLocale$1;\nexports.isoFormat = formatIso;\nexports.isoParse = parseIso;\nexports.now = now;\nexports.timer = timer;\nexports.timerFlush = timerFlush;\nexports.timeout = timeout$1;\nexports.interval = interval$1;\nexports.transition = transition;\nexports.active = active;\nexports.interrupt = interrupt;\nexports.voronoi = voronoi;\nexports.zoom = zoom;\nexports.zoomTransform = transform$1;\nexports.zoomIdentity = identity$8;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n/***/ }),\n/* 131 */\n/***/ (function(module, exports) {\n\n/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308,\n    NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Creates a function that invokes `func`, with the `this` binding and arguments\n * of the created function, while it's called less than `n` times. Subsequent\n * calls to the created function return the result of the last `func` invocation.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Function\n * @param {number} n The number of calls at which `func` is no longer invoked.\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new restricted function.\n * @example\n *\n * jQuery(element).on('click', _.before(5, addContactToList));\n * // => Allows adding up to 4 contacts to the list.\n */\nfunction before(n, func) {\n  var result;\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  n = toInteger(n);\n  return function() {\n    if (--n > 0) {\n      result = func.apply(this, arguments);\n    }\n    if (n <= 1) {\n      func = undefined;\n    }\n    return result;\n  };\n}\n\n/**\n * Creates a function that is restricted to invoking `func` once. Repeat calls\n * to the function return the value of the first invocation. The `func` is\n * invoked with the `this` binding and arguments of the created function.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new restricted function.\n * @example\n *\n * var initialize = _.once(createApplication);\n * initialize();\n * initialize();\n * // => `createApplication` is invoked once\n */\nfunction once(func) {\n  return before(2, func);\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = once;\n\n\n/***/ }),\n/* 132 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n//  weak\n/* eslint guard-for-in: \"off\", no-restricted-syntax: \"off\" */\n// Node constructor used to manage transitions internally\n// Basically a modified preact component (https://github.com/developit/preact)\n\nfunction extend(obj, props) {\n  for (var i in props) {\n    obj[i] = props[i]; // eslint-disable-line no-param-reassign\n  }\n\n  return obj;\n}\n\nfunction Node(key, data, type) {\n  this.key = key;\n  this.data = data;\n  this.type = type;\n  this.state = {};\n}\n\nextend(Node.prototype, {\n  setState: function setState(state) {\n    var s = this.state;\n    extend(s, typeof state === 'function' ? state(s) : state);\n  },\n  updateData: function updateData(data) {\n    this.data = data;\n\n    return this;\n  },\n  updateType: function updateType(type) {\n    this.type = type;\n\n    return this;\n  }\n});\n\nexports.default = Node;\n\n/***/ }),\n/* 133 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _Node = __webpack_require__(132);\n\nvar _Node2 = _interopRequireDefault(_Node);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _Node2.default; /* eslint-disable flowtype/require-valid-file-annotation */\n\n/***/ }),\n/* 134 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _getPrototypeOf = __webpack_require__(43);\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = __webpack_require__(45);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(46);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = __webpack_require__(49);\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = __webpack_require__(48);\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = __webpack_require__(41);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _d3Timer = __webpack_require__(39);\n\nvar _Node = __webpack_require__(133);\n\nvar _Node2 = _interopRequireDefault(_Node);\n\nvar _mergeKeys = __webpack_require__(137);\n\nvar _mergeKeys2 = _interopRequireDefault(_mergeKeys);\n\nvar _types = __webpack_require__(143);\n\nvar _transition = __webpack_require__(138);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//  weak\n/* eslint max-len: \"off\" */\n\nvar NodeGroup = function (_Component) {\n  (0, _inherits3.default)(NodeGroup, _Component);\n\n  function NodeGroup() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    (0, _classCallCheck3.default)(this, NodeGroup);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = NodeGroup.__proto__ || (0, _getPrototypeOf2.default)(NodeGroup)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      nodes: []\n    }, _this.animate = function () {\n      if (_this.unmounting) {\n        return;\n      }\n\n      var pending = false;\n\n      var nextNodeKeys = [];\n      var length = _this.nodeKeys.length;\n\n      for (var i = 0; i < length; i++) {\n        var k = _this.nodeKeys[i];\n        var n = _this.nodeHash[k];\n\n        if (n.TRANSITION_SCHEDULES) {\n          pending = true;\n        }\n\n        if (n.type === _types.LEAVE && !n.TRANSITION_SCHEDULES) {\n          delete _this.nodeHash[k];\n        } else {\n          nextNodeKeys.push(k);\n        }\n      }\n\n      if (!pending) {\n        _this.interval.stop();\n      }\n\n      _this.nodeKeys = nextNodeKeys;\n      _this.renderNodes();\n    }, _this.nodeHash = {}, _this.nodeKeys = [], _this.interval = null, _this.unmounting = false, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);\n  }\n\n  (0, _createClass3.default)(NodeGroup, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.updateNodes(this.props);\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(next) {\n      if (next.data !== this.props.data) {\n        this.updateNodes(next);\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      var _this2 = this;\n\n      this.unmounting = true;\n\n      if (this.interval) {\n        this.interval.stop();\n      }\n\n      this.nodeKeys.forEach(function (key) {\n        _transition.stop.call(_this2.nodeHash[key]);\n      });\n    }\n  }, {\n    key: 'updateNodes',\n    value: function updateNodes(props) {\n      var data = props.data,\n          keyAccessor = props.keyAccessor,\n          start = props.start,\n          enter = props.enter,\n          update = props.update,\n          leave = props.leave;\n\n\n      var currKeyIndex = {};\n      var currNodeKeys = this.nodeKeys;\n      var currNodeKeysLength = this.nodeKeys.length;\n\n      for (var i = 0; i < currNodeKeysLength; i++) {\n        currKeyIndex[currNodeKeys[i]] = i;\n      }\n\n      var nextKeyIndex = {};\n      var nextNodeKeys = [];\n\n      for (var _i = 0; _i < data.length; _i++) {\n        var d = data[_i];\n        var k = keyAccessor(d);\n\n        nextKeyIndex[k] = _i;\n        nextNodeKeys.push(k);\n\n        if (currKeyIndex[k] === undefined) {\n          this.nodeHash[k] = new _Node2.default(k, d, _types.ENTER);\n        }\n      }\n\n      for (var _i2 = 0; _i2 < currNodeKeysLength; _i2++) {\n        var _k = currNodeKeys[_i2];\n        var n = this.nodeHash[_k];\n\n        if (nextKeyIndex[_k] !== undefined) {\n          n.updateData(data[nextKeyIndex[_k]]);\n          n.updateType(_types.UPDATE);\n        } else {\n          n.updateType(_types.LEAVE);\n        }\n      }\n\n      this.nodeKeys = (0, _mergeKeys2.default)(currNodeKeys, currKeyIndex, nextNodeKeys, nextKeyIndex);\n\n      for (var _i3 = 0; _i3 < this.nodeKeys.length; _i3++) {\n        var _k2 = this.nodeKeys[_i3];\n        var _n = this.nodeHash[_k2];\n        var _d = _n.data;\n\n        if (_n.type === _types.ENTER) {\n          _n.setState(start(_d, nextKeyIndex[_k2]));\n          _transition.transition.call(_n, enter(_d, nextKeyIndex[_k2]));\n        } else if (_n.type === _types.LEAVE) {\n          _transition.transition.call(_n, leave(_d, currKeyIndex[_k2]));\n        } else {\n          _transition.transition.call(_n, update(_d, nextKeyIndex[_k2]));\n        }\n      }\n\n      if (!this.interval) {\n        this.interval = (0, _d3Timer.interval)(this.animate);\n      } else {\n        this.interval.restart(this.animate);\n      }\n\n      this.renderNodes();\n    }\n  }, {\n    key: 'renderNodes',\n    value: function renderNodes() {\n      var _this3 = this;\n\n      this.setState(function () {\n        return {\n          nodes: _this3.nodeKeys.map(function (key) {\n            return _this3.nodeHash[key];\n          })\n        };\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var renderedChildren = this.props.children(this.state.nodes);\n      return renderedChildren && _react2.default.Children.only(renderedChildren);\n    }\n  }]);\n  return NodeGroup;\n}(_react.Component);\n\nNodeGroup.defaultProps = {\n  enter: function enter() {},\n  update: function update() {},\n  leave: function leave() {}\n};\nexports.default = NodeGroup;\n\n/***/ }),\n/* 135 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _getPrototypeOf = __webpack_require__(43);\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = __webpack_require__(45);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(46);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = __webpack_require__(49);\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = __webpack_require__(48);\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = __webpack_require__(41);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _NodeGroup = __webpack_require__(70);\n\nvar _NodeGroup2 = _interopRequireDefault(_NodeGroup);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//  weak\n/* eslint max-len: \"off\" */\n\nvar tickKeyAccessor = function tickKeyAccessor(d) {\n  return 'tick-' + d.val;\n};\n\nvar TickGroup = function (_Component) {\n  (0, _inherits3.default)(TickGroup, _Component);\n\n  function TickGroup() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    (0, _classCallCheck3.default)(this, TickGroup);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = TickGroup.__proto__ || (0, _getPrototypeOf2.default)(TickGroup)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      ticks: []\n    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);\n  }\n\n  (0, _createClass3.default)(TickGroup, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _props = this.props,\n          scale = _props.scale,\n          tickCount = _props.tickCount;\n\n      var ticks = scale.ticks ? scale.ticks(tickCount) : [];\n      this.updateTicks(ticks.map(function (d) {\n        return { val: d };\n      }));\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(next) {\n      if (next.scale !== this.props.scale) {\n        var _scale = next.scale,\n            _tickCount = next.tickCount;\n\n        var ticks = _scale.ticks ? _scale.ticks(_tickCount) : [];\n        this.updateTicks(ticks.map(function (d) {\n          return { val: d };\n        }));\n      }\n    }\n  }, {\n    key: 'updateTicks',\n    value: function updateTicks(ticks) {\n      this.setState(function () {\n        return { ticks: ticks };\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props2 = this.props,\n          start = _props2.start,\n          enter = _props2.enter,\n          update = _props2.update,\n          leave = _props2.leave,\n          children = _props2.children;\n\n\n      return _react2.default.createElement(\n        _NodeGroup2.default,\n        {\n          data: this.state.ticks,\n          keyAccessor: tickKeyAccessor,\n          start: start,\n          enter: enter,\n          update: update,\n          leave: leave\n        },\n        children\n      );\n    }\n  }]);\n  return TickGroup;\n}(_react.Component);\n\nTickGroup.defaultProps = {\n  enter: function enter() {},\n  update: function update() {},\n  leave: function leave() {}\n};\nexports.default = TickGroup;\n\n/***/ }),\n/* 136 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _TickGroup = __webpack_require__(135);\n\nvar _TickGroup2 = _interopRequireDefault(_TickGroup);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _TickGroup2.default; /* eslint-disable flowtype/require-valid-file-annotation */\n\n/***/ }),\n/* 137 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n//  weak\n/* eslint no-continue: \"off\" */\n/* based on react-motion's mergeDiff (https://github.com/chenglou/react-motion) */\n\nfunction mergeKeys(currNodeKeys, currKeyIndex, nextNodeKeys, nextKeyIndex) {\n  var allKeys = [];\n\n  for (var i = 0; i < nextNodeKeys.length; i++) {\n    allKeys[i] = nextNodeKeys[i];\n  }\n\n  for (var _i = 0; _i < currNodeKeys.length; _i++) {\n    if (nextKeyIndex[currNodeKeys[_i]] === undefined) {\n      allKeys.push(currNodeKeys[_i]);\n    }\n  }\n\n  return allKeys.sort(function (a, b) {\n    var nextOrderA = nextKeyIndex[a];\n    var nextOrderB = nextKeyIndex[b];\n    var currOrderA = currKeyIndex[a];\n    var currOrderB = currKeyIndex[b];\n\n    if (nextOrderA != null && nextOrderB != null) {\n      return nextKeyIndex[a] - nextKeyIndex[b];\n    } else if (currOrderA != null && currOrderB != null) {\n      return currKeyIndex[a] - currKeyIndex[b];\n    } else if (nextOrderA != null) {\n      for (var _i2 = 0; _i2 < nextNodeKeys.length; _i2++) {\n        var pivot = nextNodeKeys[_i2];\n\n        if (!currKeyIndex[pivot]) {\n          continue;\n        }\n\n        if (nextOrderA < nextKeyIndex[pivot] && currOrderB > currKeyIndex[pivot]) {\n          return -1;\n        } else if (nextOrderA > nextKeyIndex[pivot] && currOrderB < currKeyIndex[pivot]) {\n          return 1;\n        }\n      }\n\n      return 1;\n    }\n\n    for (var _i3 = 0; _i3 < nextNodeKeys.length; _i3++) {\n      var _pivot = nextNodeKeys[_i3];\n\n      if (!currKeyIndex[_pivot]) {\n        continue;\n      }\n\n      if (nextOrderB < nextKeyIndex[_pivot] && currOrderA > currKeyIndex[_pivot]) {\n        return 1;\n      } else if (nextOrderB > nextKeyIndex[_pivot] && currOrderA < currKeyIndex[_pivot]) {\n        return -1;\n      }\n    }\n\n    return -1;\n  });\n}\n\nexports.default = mergeKeys;\n\n/***/ }),\n/* 138 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _transition = __webpack_require__(141);\n\nObject.defineProperty(exports, 'transition', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_transition).default;\n  }\n});\n\nvar _stop = __webpack_require__(140);\n\nObject.defineProperty(exports, 'stop', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_stop).default;\n  }\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/***/ }),\n/* 139 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = __webpack_require__(20);\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nexports.default = function (node, stateKey, id, timing, tweens) {\n  var events = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n\n  var schedules = node.TRANSITION_SCHEDULES;\n  if (!schedules) {\n    node.TRANSITION_SCHEDULES = {}; // eslint-disable-line no-param-reassign\n  } else if (id in schedules) {\n    return;\n  }\n\n  var config = (0, _extends3.default)({ stateKey: stateKey, events: events, tweens: tweens }, timing, { timer: null, state: CREATED });\n  create(node, id, config);\n};\n\nvar _d3Timer = __webpack_require__(39);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar CREATED = 0; //  weak\n/* eslint no-use-before-define: \"off\" */\n// Apapted from https://github.com/d3/d3-transition/blob/master/src/transition/schedule.js\n\nvar SCHEDULED = 1;\nvar STARTING = 2;\nvar STARTED = 3;\nvar RUNNING = 4;\nvar ENDING = 5;\nvar ENDED = 6;\n\nfunction create(node, id, config) {\n  var schedules = node.TRANSITION_SCHEDULES;\n\n  // Initialize the transition timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  var transition = (0, _extends3.default)({}, config);\n  var n = transition.tweens.length;\n  var tweens = new Array(n);\n\n  schedules[id] = transition;\n  transition.timer = (0, _d3Timer.timer)(schedule, 0, transition.time);\n\n  function schedule(elapsed) {\n    transition.state = SCHEDULED;\n    transition.timer.restart(start, transition.delay, transition.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (transition.delay <= elapsed) {\n      start(elapsed - transition.delay);\n    }\n  }\n\n  function start(elapsed) {\n    // eslint-disable-line consistent-return\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (transition.state !== SCHEDULED) return stop();\n\n    for (var sid in schedules) {\n      // eslint-disable-line\n      var s = schedules[sid];\n\n      if (s.stateKey !== transition.stateKey) {\n        continue; // eslint-disable-line no-continue\n      }\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (s.state === STARTED) return (0, _d3Timer.timeout)(start);\n\n      // 1. Interrupt the active transition, if any. dispatch the interrupt event.\n      // 2. Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n\n      if (s.state === RUNNING) {\n        s.state = ENDED;\n        s.timer.stop();\n        if (s.events.interrupt && typeof s.events.interrupt === 'function') {\n          s.events.interrupt.call(this);\n        }\n        delete schedules[sid];\n      } else if (+sid < id) {\n        s.state = ENDED;\n        s.timer.stop();\n        delete schedules[sid];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    (0, _d3Timer.timeout)(function () {\n      if (transition.state === STARTED) {\n        transition.state = RUNNING;\n        transition.timer.restart(tick, transition.delay, transition.time);\n        tick(elapsed);\n      }\n    });\n\n    transition.state = STARTING;\n    if (transition.events.start && typeof transition.events.start === 'function') {\n      transition.events.start.call(node);\n    }\n\n    if (transition.state !== STARTING) {\n      // interrupted\n      return; // eslint-disable-line consistent-return\n    }\n\n    transition.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    var j = -1;\n\n    for (var i = 0; i < n; ++i) {\n      var res = transition.tweens[i].call(node);\n\n      if (res) {\n        tweens[++j] = res;\n      }\n    }\n\n    tweens.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = 1;\n\n    if (elapsed < transition.duration) {\n      t = transition.ease.call(null, elapsed / transition.duration);\n    } else {\n      transition.timer.restart(stop);\n      transition.state = ENDING;\n    }\n\n    var i = -1;\n\n    while (++i < tweens.length) {\n      tweens[i].call(null, t);\n    }\n\n    if (transition.state === ENDING) {\n      if (transition.events.end && typeof transition.events.end === 'function') {\n        transition.events.end.call(node);\n      }\n      stop();\n    }\n  }\n\n  function stop() {\n    transition.state = ENDED;\n    transition.timer.stop();\n\n    delete schedules[id];\n    for (var i in schedules) {\n      return;\n    } // eslint-disable-line guard-for-in, no-restricted-syntax\n    delete node.TRANSITION_SCHEDULES; // eslint-disable-line no-param-reassign\n  }\n}\n\n/***/ }),\n/* 140 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _keys = __webpack_require__(44);\n\nvar _keys2 = _interopRequireDefault(_keys);\n\nexports.default = stop;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//  weak\n\nfunction stop() {\n  var ts = this.TRANSITION_SCHEDULES;\n\n  if (ts) {\n    (0, _keys2.default)(ts).forEach(function (s) {\n      ts[s].timer.stop();\n    });\n  }\n}\n\n/***/ }),\n/* 141 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.preset = undefined;\n\nvar _defineProperty2 = __webpack_require__(47);\n\nvar _defineProperty3 = _interopRequireDefault(_defineProperty2);\n\nvar _typeof2 = __webpack_require__(21);\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nvar _keys = __webpack_require__(44);\n\nvar _keys2 = _interopRequireDefault(_keys);\n\nvar _extends5 = __webpack_require__(20);\n\nvar _extends6 = _interopRequireDefault(_extends5);\n\nexports.newId = newId;\nexports.default = transition;\n\nvar _d3Timer = __webpack_require__(39);\n\nvar _lodash = __webpack_require__(131);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _tween = __webpack_require__(142);\n\nvar _tween2 = _interopRequireDefault(_tween);\n\nvar _schedule = __webpack_require__(139);\n\nvar _schedule2 = _interopRequireDefault(_schedule);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//  weak\n\nvar id = 0;\n\nfunction newId() {\n  return ++id;\n}\n\n// from https://github.com/d3/d3-ease/blob/master/src/cubic.js\nfunction easeCubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2; // eslint-disable-line\n}\n\nvar preset = exports.preset = {\n  time: null,\n  delay: 0,\n  duration: 250,\n  ease: easeCubicInOut\n};\n\nfunction scheduleTransitions() {\n  var _this = this;\n\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var transitions = (0, _extends6.default)({}, config);\n\n  var events = transitions.events || {};\n  delete transitions.events;\n\n  // each event handler should be called only once\n  (0, _keys2.default)(events).forEach(function (d) {\n    if (typeof events[d] !== 'function') {\n      throw new Error('Event handlers must be a function');\n    } else {\n      events[d] = (0, _lodash2.default)(events[d]);\n    }\n  });\n\n  var timing = transitions.timing || {};\n  delete transitions.timing;\n\n  (0, _keys2.default)(transitions).forEach(function (stateKey) {\n    var tweens = [];\n\n    if ((0, _typeof3.default)(transitions[stateKey]) === 'object' && Array.isArray(transitions[stateKey]) === false) {\n      (0, _keys2.default)(transitions[stateKey]).forEach(function (attr) {\n        var val = transitions[stateKey][attr];\n\n        if (Array.isArray(val)) {\n          if (val.length === 1) {\n            tweens.push(_tween2.default.call(_this, stateKey, attr, val[0]));\n          } else {\n            _this.setState(function (state) {\n              return (0, _defineProperty3.default)({}, stateKey, (0, _extends6.default)({}, state[stateKey], (0, _defineProperty3.default)({}, attr, val[0])));\n            });\n\n            tweens.push(_tween2.default.call(_this, stateKey, attr, val[1]));\n          }\n        } else if (typeof val === 'function') {\n          var getResonanceCustomTween = function getResonanceCustomTween() {\n            var resonanceCustomTween = function resonanceCustomTween(t) {\n              _this.setState(function (state) {\n                return (0, _defineProperty3.default)({}, stateKey, (0, _extends6.default)({}, state[stateKey], (0, _defineProperty3.default)({}, attr, val(t))));\n              });\n            };\n\n            return resonanceCustomTween;\n          };\n\n          tweens.push(getResonanceCustomTween);\n        } else {\n          _this.setState(function (state) {\n            return (0, _defineProperty3.default)({}, stateKey, (0, _extends6.default)({}, state[stateKey], (0, _defineProperty3.default)({}, attr, val)));\n          });\n          // This assures any existing transitions are stopped\n          tweens.push(_tween2.default.call(_this, stateKey, attr, val));\n        }\n      });\n    } else {\n      var val = transitions[stateKey];\n\n      if (Array.isArray(val)) {\n        if (val.length === 1) {\n          tweens.push(_tween2.default.call(_this, null, stateKey, val[0]));\n        } else {\n          _this.setState(function () {\n            return (0, _defineProperty3.default)({}, stateKey, val[0]);\n          });\n\n          tweens.push(_tween2.default.call(_this, null, stateKey, val[1]));\n        }\n      } else if (typeof val === 'function') {\n        var getResonanceCustomTween = function getResonanceCustomTween() {\n          var resonanceCustomTween = function resonanceCustomTween(t) {\n            _this.setState(function () {\n              return (0, _defineProperty3.default)({}, stateKey, val(t));\n            });\n          };\n\n          return resonanceCustomTween;\n        };\n\n        tweens.push(getResonanceCustomTween);\n      } else {\n        _this.setState(function () {\n          return (0, _defineProperty3.default)({}, stateKey, val);\n        });\n        // This assures any existing transitions are stopped\n        tweens.push(_tween2.default.call(_this, null, stateKey, val));\n      }\n    }\n\n    var timingConfig = (0, _extends6.default)({}, preset, timing, { time: (0, _d3Timer.now)() });\n    (0, _schedule2.default)(_this, stateKey, newId(), timingConfig, tweens, events);\n  });\n}\n\nfunction transition(config) {\n  var _this2 = this;\n\n  if (Array.isArray(config)) {\n    config.forEach(function (c) {\n      scheduleTransitions.call(_this2, c);\n    });\n  } else {\n    scheduleTransitions.call(this, config);\n  }\n}\n\n/***/ }),\n/* 142 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends3 = __webpack_require__(20);\n\nvar _extends4 = _interopRequireDefault(_extends3);\n\nvar _defineProperty2 = __webpack_require__(47);\n\nvar _defineProperty3 = _interopRequireDefault(_defineProperty2);\n\nexports.getInterpolator = getInterpolator;\n\nexports.default = function (nameSpace, attr, value) {\n  return getTween.call(this, nameSpace, attr, getInterpolator(attr, value), value);\n};\n\nvar _d3Interpolate = __webpack_require__(117);\n\nvar _d3Color = __webpack_require__(7);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//  weak\n\nfunction getTween(nameSpace, attr, interpol, value1) {\n  return function tween() {\n    var _this = this;\n\n    var value0 = nameSpace ? this.state[nameSpace][attr] : this.state[attr];\n\n    if (value0 === value1) {\n      return null;\n    }\n\n    var i = interpol(value0, value1);\n\n    var stateTween = void 0;\n\n    if (nameSpace === null) {\n      stateTween = function stateTween(t) {\n        _this.setState(function () {\n          return (0, _defineProperty3.default)({}, attr, i(t));\n        });\n      };\n    } else {\n      stateTween = function stateTween(t) {\n        _this.setState(function (state) {\n          return (0, _defineProperty3.default)({}, nameSpace, (0, _extends4.default)({}, state[nameSpace], (0, _defineProperty3.default)({}, attr, i(t))));\n        });\n      };\n    }\n\n    return stateTween;\n  };\n}\n\nfunction getInterpolator(attr, value) {\n  if (attr === 'transform') {\n    return _d3Interpolate.interpolateTransformSvg;\n  } else if (typeof value === 'number') {\n    return _d3Interpolate.interpolateNumber;\n  } else if (value instanceof _d3Color.color || (0, _d3Color.color)(value) !== null) {\n    return _d3Interpolate.interpolateRgb;\n  }\n\n  return _d3Interpolate.interpolateString;\n}\n\n/***/ }),\n/* 143 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n//  weak\n\nvar ENTER = exports.ENTER = 'ENTER';\nvar UPDATE = exports.UPDATE = 'UPDATE';\nvar LEAVE = exports.LEAVE = 'LEAVE';\n\n/***/ }),\n/* 144 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__NodeGroup__ = __webpack_require__(70);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__NodeGroup___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__NodeGroup__);\n/* harmony reexport (default from non-hamory) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_0__NodeGroup___default.a; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__TickGroup__ = __webpack_require__(136);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__TickGroup___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__TickGroup__);\n/* unused harmony reexport TickGroup */\n/* eslint-disable flowtype/require-valid-file-annotation */\n\n\n\n\n\n\n\n/***/ }),\n/* 145 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"joy\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.80942,\n\t\t\t\t\"y\": 0.656686\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.805027,\n\t\t\t\t\"y\": 0.665678\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.800255,\n\t\t\t\t\"y\": 0.674474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.795113,\n\t\t\t\t\"y\": 0.683058\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.789609,\n\t\t\t\t\"y\": 0.691414\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.783755,\n\t\t\t\t\"y\": 0.699527\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.77756,\n\t\t\t\t\"y\": 0.707382\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.771036,\n\t\t\t\t\"y\": 0.714965\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.764195,\n\t\t\t\t\"y\": 0.722262\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.757049,\n\t\t\t\t\"y\": 0.72926\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.749611,\n\t\t\t\t\"y\": 0.735945\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.741896,\n\t\t\t\t\"y\": 0.742307\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.733916,\n\t\t\t\t\"y\": 0.748332\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.725687,\n\t\t\t\t\"y\": 0.754011\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.717223,\n\t\t\t\t\"y\": 0.759332\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.708541,\n\t\t\t\t\"y\": 0.764287\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.699655,\n\t\t\t\t\"y\": 0.768865\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.690582,\n\t\t\t\t\"y\": 0.773059\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.681339,\n\t\t\t\t\"y\": 0.776862\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.671942,\n\t\t\t\t\"y\": 0.780265\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.662409,\n\t\t\t\t\"y\": 0.783263\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.652756,\n\t\t\t\t\"y\": 0.785851\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.643003,\n\t\t\t\t\"y\": 0.788024\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.646177,\n\t\t\t\t\"y\": 0.791121\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.655697,\n\t\t\t\t\"y\": 0.794152\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.665429,\n\t\t\t\t\"y\": 0.796415\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.675309,\n\t\t\t\t\"y\": 0.797893\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.685276,\n\t\t\t\t\"y\": 0.798578\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.695265,\n\t\t\t\t\"y\": 0.798466\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.705214,\n\t\t\t\t\"y\": 0.797557\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.715059,\n\t\t\t\t\"y\": 0.795857\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.724737,\n\t\t\t\t\"y\": 0.793377\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.734188,\n\t\t\t\t\"y\": 0.790132\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.743351,\n\t\t\t\t\"y\": 0.786144\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.752167,\n\t\t\t\t\"y\": 0.781437\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.760581,\n\t\t\t\t\"y\": 0.776041\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.76854,\n\t\t\t\t\"y\": 0.769991\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.775993,\n\t\t\t\t\"y\": 0.763325\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.782892,\n\t\t\t\t\"y\": 0.756086\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.789194,\n\t\t\t\t\"y\": 0.748319\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.794858,\n\t\t\t\t\"y\": 0.740074\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.799849,\n\t\t\t\t\"y\": 0.731403\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.804135,\n\t\t\t\t\"y\": 0.722361\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.807689,\n\t\t\t\t\"y\": 0.713006\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.810488,\n\t\t\t\t\"y\": 0.703397\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.812514,\n\t\t\t\t\"y\": 0.693595\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.813754,\n\t\t\t\t\"y\": 0.683663\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.814201,\n\t\t\t\t\"y\": 0.673663\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.813852,\n\t\t\t\t\"y\": 0.66366\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.812709,\n\t\t\t\t\"y\": 0.653716\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.187977,\n\t\t\t\t\"y\": 0.65085\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.192123,\n\t\t\t\t\"y\": 0.659958\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.196654,\n\t\t\t\t\"y\": 0.668882\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.201561,\n\t\t\t\t\"y\": 0.677603\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.206836,\n\t\t\t\t\"y\": 0.686106\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.212467,\n\t\t\t\t\"y\": 0.694376\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.218446,\n\t\t\t\t\"y\": 0.702397\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.224761,\n\t\t\t\t\"y\": 0.710156\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.231401,\n\t\t\t\t\"y\": 0.717637\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.238354,\n\t\t\t\t\"y\": 0.724827\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.245607,\n\t\t\t\t\"y\": 0.731714\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.253147,\n\t\t\t\t\"y\": 0.738283\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.260959,\n\t\t\t\t\"y\": 0.744524\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.269031,\n\t\t\t\t\"y\": 0.750426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.277347,\n\t\t\t\t\"y\": 0.755976\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.285891,\n\t\t\t\t\"y\": 0.761166\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.294649,\n\t\t\t\t\"y\": 0.765986\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.303604,\n\t\t\t\t\"y\": 0.770426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.312741,\n\t\t\t\t\"y\": 0.77448\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.322041,\n\t\t\t\t\"y\": 0.778138\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.33149,\n\t\t\t\t\"y\": 0.781396\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.341068,\n\t\t\t\t\"y\": 0.784247\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.350759,\n\t\t\t\t\"y\": 0.786685\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.359764,\n\t\t\t\t\"y\": 0.788791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.350409,\n\t\t\t\t\"y\": 0.792304\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.340805,\n\t\t\t\t\"y\": 0.79506\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.331013,\n\t\t\t\t\"y\": 0.79704\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.321094,\n\t\t\t\t\"y\": 0.798233\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.311112,\n\t\t\t\t\"y\": 0.79863\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.30113,\n\t\t\t\t\"y\": 0.798229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.291212,\n\t\t\t\t\"y\": 0.797033\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28142,\n\t\t\t\t\"y\": 0.79505\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.271817,\n\t\t\t\t\"y\": 0.792291\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.262463,\n\t\t\t\t\"y\": 0.788775\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.253419,\n\t\t\t\t\"y\": 0.784523\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.244742,\n\t\t\t\t\"y\": 0.779564\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.236486,\n\t\t\t\t\"y\": 0.773927\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.228704,\n\t\t\t\t\"y\": 0.76765\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.221447,\n\t\t\t\t\"y\": 0.760772\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.214759,\n\t\t\t\t\"y\": 0.753336\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.208683,\n\t\t\t\t\"y\": 0.74539\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.203258,\n\t\t\t\t\"y\": 0.736985\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.198518,\n\t\t\t\t\"y\": 0.728174\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.194494,\n\t\t\t\t\"y\": 0.719012\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.191211,\n\t\t\t\t\"y\": 0.709558\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.18869,\n\t\t\t\t\"y\": 0.699872\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.186947,\n\t\t\t\t\"y\": 0.690016\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.185992,\n\t\t\t\t\"y\": 0.680052\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.185833,\n\t\t\t\t\"y\": 0.670044\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.18647,\n\t\t\t\t\"y\": 0.660055\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.708191,\n\t\t\t\t\"y\": 0.6214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.707865,\n\t\t\t\t\"y\": 0.614079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.706885,\n\t\t\t\t\"y\": 0.606817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.705245,\n\t\t\t\t\"y\": 0.599675\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.702935,\n\t\t\t\t\"y\": 0.592722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.699944,\n\t\t\t\t\"y\": 0.586036\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.696261,\n\t\t\t\t\"y\": 0.579706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.691878,\n\t\t\t\t\"y\": 0.573841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.6868,\n\t\t\t\t\"y\": 0.568571\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.681053,\n\t\t\t\t\"y\": 0.564045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.674695,\n\t\t\t\t\"y\": 0.560432\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.667839,\n\t\t\t\t\"y\": 0.557899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.66065,\n\t\t\t\t\"y\": 0.556591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.653343,\n\t\t\t\t\"y\": 0.556591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.646154,\n\t\t\t\t\"y\": 0.557899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.639298,\n\t\t\t\t\"y\": 0.560432\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.632941,\n\t\t\t\t\"y\": 0.564045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.627193,\n\t\t\t\t\"y\": 0.568571\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.622115,\n\t\t\t\t\"y\": 0.573841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.617732,\n\t\t\t\t\"y\": 0.579706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.614049,\n\t\t\t\t\"y\": 0.586036\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.611058,\n\t\t\t\t\"y\": 0.592722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.608748,\n\t\t\t\t\"y\": 0.599675\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.607108,\n\t\t\t\t\"y\": 0.606817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606128,\n\t\t\t\t\"y\": 0.614079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.605802,\n\t\t\t\t\"y\": 0.6214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606128,\n\t\t\t\t\"y\": 0.628721\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.607108,\n\t\t\t\t\"y\": 0.635983\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.608748,\n\t\t\t\t\"y\": 0.643125\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.611058,\n\t\t\t\t\"y\": 0.650077\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.614049,\n\t\t\t\t\"y\": 0.656764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.617732,\n\t\t\t\t\"y\": 0.663094\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.622115,\n\t\t\t\t\"y\": 0.668959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.627193,\n\t\t\t\t\"y\": 0.674229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.632941,\n\t\t\t\t\"y\": 0.678755\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.639298,\n\t\t\t\t\"y\": 0.682368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.646154,\n\t\t\t\t\"y\": 0.684901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.653343,\n\t\t\t\t\"y\": 0.686209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.66065,\n\t\t\t\t\"y\": 0.686209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.667839,\n\t\t\t\t\"y\": 0.684901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.674695,\n\t\t\t\t\"y\": 0.682368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.681053,\n\t\t\t\t\"y\": 0.678755\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.6868,\n\t\t\t\t\"y\": 0.674229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.691878,\n\t\t\t\t\"y\": 0.668959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.696261,\n\t\t\t\t\"y\": 0.663094\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.699944,\n\t\t\t\t\"y\": 0.656764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.702935,\n\t\t\t\t\"y\": 0.650077\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.705245,\n\t\t\t\t\"y\": 0.643125\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.706885,\n\t\t\t\t\"y\": 0.635983\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.707865,\n\t\t\t\t\"y\": 0.628721\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.291809,\n\t\t\t\t\"y\": 0.6214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.292135,\n\t\t\t\t\"y\": 0.614079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.293115,\n\t\t\t\t\"y\": 0.606817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.294755,\n\t\t\t\t\"y\": 0.599675\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.297065,\n\t\t\t\t\"y\": 0.592722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.300056,\n\t\t\t\t\"y\": 0.586036\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.303739,\n\t\t\t\t\"y\": 0.579706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.308122,\n\t\t\t\t\"y\": 0.573841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.3132,\n\t\t\t\t\"y\": 0.568571\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.318947,\n\t\t\t\t\"y\": 0.564045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.325305,\n\t\t\t\t\"y\": 0.560432\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.332161,\n\t\t\t\t\"y\": 0.557899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.33935,\n\t\t\t\t\"y\": 0.556591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.346657,\n\t\t\t\t\"y\": 0.556591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.353846,\n\t\t\t\t\"y\": 0.557899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.360702,\n\t\t\t\t\"y\": 0.560432\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.367059,\n\t\t\t\t\"y\": 0.564045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.372807,\n\t\t\t\t\"y\": 0.568571\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.377885,\n\t\t\t\t\"y\": 0.573841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.382268,\n\t\t\t\t\"y\": 0.579706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.385951,\n\t\t\t\t\"y\": 0.586036\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.388942,\n\t\t\t\t\"y\": 0.592722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.391252,\n\t\t\t\t\"y\": 0.599675\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.392892,\n\t\t\t\t\"y\": 0.606817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.393872,\n\t\t\t\t\"y\": 0.614079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.394198,\n\t\t\t\t\"y\": 0.6214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.393872,\n\t\t\t\t\"y\": 0.628721\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.392892,\n\t\t\t\t\"y\": 0.635983\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.391252,\n\t\t\t\t\"y\": 0.643125\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.388942,\n\t\t\t\t\"y\": 0.650077\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.385951,\n\t\t\t\t\"y\": 0.656764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.382268,\n\t\t\t\t\"y\": 0.663094\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.377885,\n\t\t\t\t\"y\": 0.668959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.372807,\n\t\t\t\t\"y\": 0.674229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.367059,\n\t\t\t\t\"y\": 0.678755\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.360702,\n\t\t\t\t\"y\": 0.682368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.353846,\n\t\t\t\t\"y\": 0.684901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.346657,\n\t\t\t\t\"y\": 0.686209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.33935,\n\t\t\t\t\"y\": 0.686209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.332161,\n\t\t\t\t\"y\": 0.684901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.325305,\n\t\t\t\t\"y\": 0.682368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.318947,\n\t\t\t\t\"y\": 0.678755\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.3132,\n\t\t\t\t\"y\": 0.674229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.308122,\n\t\t\t\t\"y\": 0.668959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.303739,\n\t\t\t\t\"y\": 0.663094\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.300056,\n\t\t\t\t\"y\": 0.656764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.297065,\n\t\t\t\t\"y\": 0.650077\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.294755,\n\t\t\t\t\"y\": 0.643125\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.293115,\n\t\t\t\t\"y\": 0.635983\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.292135,\n\t\t\t\t\"y\": 0.628721\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.437209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 3.4834e-10\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.437209\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.168942,\n\t\t\t\t\"y\": 0.440155\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.170863,\n\t\t\t\t\"y\": 0.4065\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.176591,\n\t\t\t\t\"y\": 0.373281\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.18603,\n\t\t\t\t\"y\": 0.340924\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.199024,\n\t\t\t\t\"y\": 0.309829\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.215366,\n\t\t\t\t\"y\": 0.280361\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.234809,\n\t\t\t\t\"y\": 0.252847\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.257076,\n\t\t\t\t\"y\": 0.227573\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.281866,\n\t\t\t\t\"y\": 0.204778\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.30887,\n\t\t\t\t\"y\": 0.184665\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.337769,\n\t\t\t\t\"y\": 0.167396\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.368243,\n\t\t\t\t\"y\": 0.1531\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.399972,\n\t\t\t\t\"y\": 0.141876\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.43264,\n\t\t\t\t\"y\": 0.133796\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.465935,\n\t\t\t\t\"y\": 0.128912\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.499543,\n\t\t\t\t\"y\": 0.127251\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.533156,\n\t\t\t\t\"y\": 0.128824\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.566462,\n\t\t\t\t\"y\": 0.133621\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.599152,\n\t\t\t\t\"y\": 0.141614\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.630911,\n\t\t\t\t\"y\": 0.152754\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.661423,\n\t\t\t\t\"y\": 0.166968\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.690368,\n\t\t\t\t\"y\": 0.184158\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.717428,\n\t\t\t\t\"y\": 0.204196\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.742283,\n\t\t\t\t\"y\": 0.22692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.764622,\n\t\t\t\t\"y\": 0.25213\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.784146,\n\t\t\t\t\"y\": 0.279586\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.800575,\n\t\t\t\t\"y\": 0.309005\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.813663,\n\t\t\t\t\"y\": 0.340062\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.823201,\n\t\t\t\t\"y\": 0.372389\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.829032,\n\t\t\t\t\"y\": 0.40559\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.831057,\n\t\t\t\t\"y\": 0.439239\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.80007,\n\t\t\t\t\"y\": 0.429581\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767515,\n\t\t\t\t\"y\": 0.421019\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.734605,\n\t\t\t\t\"y\": 0.413936\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.701476,\n\t\t\t\t\"y\": 0.407967\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.668192,\n\t\t\t\t\"y\": 0.402934\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.634791,\n\t\t\t\t\"y\": 0.398746\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.601298,\n\t\t\t\t\"y\": 0.395373\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.567733,\n\t\t\t\t\"y\": 0.392829\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.534112,\n\t\t\t\t\"y\": 0.391181\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.500457,\n\t\t\t\t\"y\": 0.390569\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.466802,\n\t\t\t\t\"y\": 0.391149\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.433179,\n\t\t\t\t\"y\": 0.392772\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.399612,\n\t\t\t\t\"y\": 0.395293\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.366118,\n\t\t\t\t\"y\": 0.398644\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.332714,\n\t\t\t\t\"y\": 0.402809\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.299426,\n\t\t\t\t\"y\": 0.407819\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.266292,\n\t\t\t\t\"y\": 0.41376\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.233375,\n\t\t\t\t\"y\": 0.42081\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.200807,\n\t\t\t\t\"y\": 0.429324\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t]\n\t},\n\t\"sadness\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.871404,\n\t\t\t\t\"y\": 0.591322\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.862798,\n\t\t\t\t\"y\": 0.586881\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.85383,\n\t\t\t\t\"y\": 0.583232\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.844581,\n\t\t\t\t\"y\": 0.58037\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.835127,\n\t\t\t\t\"y\": 0.578284\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.825537,\n\t\t\t\t\"y\": 0.576958\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.815874,\n\t\t\t\t\"y\": 0.576371\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.806195,\n\t\t\t\t\"y\": 0.576503\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.796549,\n\t\t\t\t\"y\": 0.577331\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.786985,\n\t\t\t\t\"y\": 0.578834\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.777545,\n\t\t\t\t\"y\": 0.580988\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.768272,\n\t\t\t\t\"y\": 0.583773\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.759204,\n\t\t\t\t\"y\": 0.587169\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.750378,\n\t\t\t\t\"y\": 0.591157\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.741833,\n\t\t\t\t\"y\": 0.595716\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.733606,\n\t\t\t\t\"y\": 0.600829\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.725735,\n\t\t\t\t\"y\": 0.606477\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71826,\n\t\t\t\t\"y\": 0.612641\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.711222,\n\t\t\t\t\"y\": 0.619302\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.704664,\n\t\t\t\t\"y\": 0.626437\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.698632,\n\t\t\t\t\"y\": 0.634024\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.693174,\n\t\t\t\t\"y\": 0.642035\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.68834,\n\t\t\t\t\"y\": 0.650439\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.684184,\n\t\t\t\t\"y\": 0.659199\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.680759,\n\t\t\t\t\"y\": 0.668271\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.678122,\n\t\t\t\t\"y\": 0.677603\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.676325,\n\t\t\t\t\"y\": 0.687133\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.679812,\n\t\t\t\t\"y\": 0.686535\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.686508,\n\t\t\t\t\"y\": 0.679527\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.693438,\n\t\t\t\t\"y\": 0.672752\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.700591,\n\t\t\t\t\"y\": 0.666213\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.707955,\n\t\t\t\t\"y\": 0.659914\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.715521,\n\t\t\t\t\"y\": 0.65386\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.723278,\n\t\t\t\t\"y\": 0.648054\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.731217,\n\t\t\t\t\"y\": 0.6425\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.739329,\n\t\t\t\t\"y\": 0.637203\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.747605,\n\t\t\t\t\"y\": 0.632167\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.756036,\n\t\t\t\t\"y\": 0.627398\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.764615,\n\t\t\t\t\"y\": 0.622899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.773332,\n\t\t\t\t\"y\": 0.618676\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.78218,\n\t\t\t\t\"y\": 0.614736\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.791151,\n\t\t\t\t\"y\": 0.611084\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.800235,\n\t\t\t\t\"y\": 0.607726\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.809424,\n\t\t\t\t\"y\": 0.60467\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818711,\n\t\t\t\t\"y\": 0.601923\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.828084,\n\t\t\t\t\"y\": 0.599493\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.837536,\n\t\t\t\t\"y\": 0.597389\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.847056,\n\t\t\t\t\"y\": 0.595619\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.856634,\n\t\t\t\t\"y\": 0.594193\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.866257,\n\t\t\t\t\"y\": 0.593122\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.126508,\n\t\t\t\t\"y\": 0.592557\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135009,\n\t\t\t\t\"y\": 0.587919\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.143894,\n\t\t\t\t\"y\": 0.584072\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.15308,\n\t\t\t\t\"y\": 0.581013\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.16249,\n\t\t\t\t\"y\": 0.578734\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.172051,\n\t\t\t\t\"y\": 0.57722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181701,\n\t\t\t\t\"y\": 0.57645\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.191382,\n\t\t\t\t\"y\": 0.576404\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.201041,\n\t\t\t\t\"y\": 0.57706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.21063,\n\t\t\t\t\"y\": 0.578395\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.220104,\n\t\t\t\t\"y\": 0.580388\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.229423,\n\t\t\t\t\"y\": 0.583017\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.238546,\n\t\t\t\t\"y\": 0.586262\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.247436,\n\t\t\t\t\"y\": 0.590103\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.256055,\n\t\t\t\t\"y\": 0.594521\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.264365,\n\t\t\t\t\"y\": 0.599497\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.272329,\n\t\t\t\t\"y\": 0.605013\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.279907,\n\t\t\t\t\"y\": 0.61105\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.287059,\n\t\t\t\t\"y\": 0.617588\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.293741,\n\t\t\t\t\"y\": 0.624607\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.299909,\n\t\t\t\t\"y\": 0.632083\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.305516,\n\t\t\t\t\"y\": 0.63999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.310511,\n\t\t\t\t\"y\": 0.648299\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.314842,\n\t\t\t\t\"y\": 0.656974\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.318455,\n\t\t\t\t\"y\": 0.665972\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.321294,\n\t\t\t\t\"y\": 0.675244\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.323307,\n\t\t\t\t\"y\": 0.684731\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.321827,\n\t\t\t\t\"y\": 0.688326\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.315192,\n\t\t\t\t\"y\": 0.681261\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.308319,\n\t\t\t\t\"y\": 0.674427\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.301221,\n\t\t\t\t\"y\": 0.667828\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.293909,\n\t\t\t\t\"y\": 0.661469\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.286393,\n\t\t\t\t\"y\": 0.655353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.278683,\n\t\t\t\t\"y\": 0.649485\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.270788,\n\t\t\t\t\"y\": 0.643867\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.262719,\n\t\t\t\t\"y\": 0.638506\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.254483,\n\t\t\t\t\"y\": 0.633404\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.24609,\n\t\t\t\t\"y\": 0.628567\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.237547,\n\t\t\t\t\"y\": 0.624\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.228864,\n\t\t\t\t\"y\": 0.619708\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.220048,\n\t\t\t\t\"y\": 0.615696\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.211107,\n\t\t\t\t\"y\": 0.611971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.202051,\n\t\t\t\t\"y\": 0.608539\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.192887,\n\t\t\t\t\"y\": 0.605407\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.183624,\n\t\t\t\t\"y\": 0.602582\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.174271,\n\t\t\t\t\"y\": 0.600072\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.164838,\n\t\t\t\t\"y\": 0.597885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.155334,\n\t\t\t\t\"y\": 0.59603\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.14577,\n\t\t\t\t\"y\": 0.594518\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.136157,\n\t\t\t\t\"y\": 0.593356\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.820623,\n\t\t\t\t\"y\": 0.450304\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.81908,\n\t\t\t\t\"y\": 0.437928\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.815172,\n\t\t\t\t\"y\": 0.426085\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.809222,\n\t\t\t\t\"y\": 0.415123\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.801621,\n\t\t\t\t\"y\": 0.405235\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.792734,\n\t\t\t\t\"y\": 0.396486\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.782862,\n\t\t\t\t\"y\": 0.388866\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.772241,\n\t\t\t\t\"y\": 0.382332\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.761053,\n\t\t\t\t\"y\": 0.376829\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.749436,\n\t\t\t\t\"y\": 0.372301\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.7375,\n\t\t\t\t\"y\": 0.368701\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.725332,\n\t\t\t\t\"y\": 0.365989\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.713005,\n\t\t\t\t\"y\": 0.364135\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.700581,\n\t\t\t\t\"y\": 0.363118\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.688117,\n\t\t\t\t\"y\": 0.362924\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.675667,\n\t\t\t\t\"y\": 0.36355\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.663285,\n\t\t\t\t\"y\": 0.365\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.65103,\n\t\t\t\t\"y\": 0.367285\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.638966,\n\t\t\t\t\"y\": 0.370428\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.627168,\n\t\t\t\t\"y\": 0.374457\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.615726,\n\t\t\t\t\"y\": 0.379413\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.604756,\n\t\t\t\t\"y\": 0.38534\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.594402,\n\t\t\t\t\"y\": 0.39229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.584854,\n\t\t\t\t\"y\": 0.400313\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.576359,\n\t\t\t\t\"y\": 0.409444\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.569227,\n\t\t\t\t\"y\": 0.419677\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.563828,\n\t\t\t\t\"y\": 0.430921\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.560545,\n\t\t\t\t\"y\": 0.442953\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.560362,\n\t\t\t\t\"y\": 0.453381\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.569957,\n\t\t\t\t\"y\": 0.445477\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.580968,\n\t\t\t\t\"y\": 0.439636\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.59254,\n\t\t\t\t\"y\": 0.434997\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.604415,\n\t\t\t\t\"y\": 0.431196\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.616479,\n\t\t\t\t\"y\": 0.428045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.628672,\n\t\t\t\t\"y\": 0.42544\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.640958,\n\t\t\t\t\"y\": 0.423319\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.653313,\n\t\t\t\t\"y\": 0.421647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.665719,\n\t\t\t\t\"y\": 0.420408\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.67816,\n\t\t\t\t\"y\": 0.419602\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.690622,\n\t\t\t\t\"y\": 0.419245\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.703089,\n\t\t\t\t\"y\": 0.419354\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.715544,\n\t\t\t\t\"y\": 0.41991\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.727972,\n\t\t\t\t\"y\": 0.420898\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.740358,\n\t\t\t\t\"y\": 0.422322\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.752684,\n\t\t\t\t\"y\": 0.4242\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.764924,\n\t\t\t\t\"y\": 0.426572\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.777042,\n\t\t\t\t\"y\": 0.429505\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.788976,\n\t\t\t\t\"y\": 0.433113\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.800606,\n\t\t\t\t\"y\": 0.437605\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.811641,\n\t\t\t\t\"y\": 0.443395\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.179374,\n\t\t\t\t\"y\": 0.450451\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.180888,\n\t\t\t\t\"y\": 0.438072\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.18477,\n\t\t\t\t\"y\": 0.426219\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.190698,\n\t\t\t\t\"y\": 0.415246\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.198281,\n\t\t\t\t\"y\": 0.405345\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.207156,\n\t\t\t\t\"y\": 0.396582\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.217018,\n\t\t\t\t\"y\": 0.388949\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.227631,\n\t\t\t\t\"y\": 0.382403\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.238813,\n\t\t\t\t\"y\": 0.376888\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.250425,\n\t\t\t\t\"y\": 0.372349\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.262358,\n\t\t\t\t\"y\": 0.368738\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.274524,\n\t\t\t\t\"y\": 0.366016\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28685,\n\t\t\t\t\"y\": 0.364152\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.299273,\n\t\t\t\t\"y\": 0.363125\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.311737,\n\t\t\t\t\"y\": 0.362922\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.324187,\n\t\t\t\t\"y\": 0.363538\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.33657,\n\t\t\t\t\"y\": 0.364978\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.348827,\n\t\t\t\t\"y\": 0.367253\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.360894,\n\t\t\t\t\"y\": 0.370386\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.372696,\n\t\t\t\t\"y\": 0.374405\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.384142,\n\t\t\t\t\"y\": 0.379349\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.395119,\n\t\t\t\t\"y\": 0.385264\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.405481,\n\t\t\t\t\"y\": 0.392202\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.415039,\n\t\t\t\t\"y\": 0.400212\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.423549,\n\t\t\t\t\"y\": 0.409331\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.430699,\n\t\t\t\t\"y\": 0.41955\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.43612,\n\t\t\t\t\"y\": 0.430783\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.43943,\n\t\t\t\t\"y\": 0.442808\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.439733,\n\t\t\t\t\"y\": 0.453493\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.430166,\n\t\t\t\t\"y\": 0.445555\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.419166,\n\t\t\t\t\"y\": 0.439697\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.407598,\n\t\t\t\t\"y\": 0.435047\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.395726,\n\t\t\t\t\"y\": 0.431236\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.383664,\n\t\t\t\t\"y\": 0.428079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.371472,\n\t\t\t\t\"y\": 0.425468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.359187,\n\t\t\t\t\"y\": 0.423341\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.346833,\n\t\t\t\t\"y\": 0.421664\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.334427,\n\t\t\t\t\"y\": 0.42042\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.321986,\n\t\t\t\t\"y\": 0.419609\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.309524,\n\t\t\t\t\"y\": 0.419246\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.297058,\n\t\t\t\t\"y\": 0.41935\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.284602,\n\t\t\t\t\"y\": 0.419901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.272174,\n\t\t\t\t\"y\": 0.420884\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.259787,\n\t\t\t\t\"y\": 0.422303\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.247461,\n\t\t\t\t\"y\": 0.424176\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.235219,\n\t\t\t\t\"y\": 0.426541\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.223099,\n\t\t\t\t\"y\": 0.429466\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.211163,\n\t\t\t\t\"y\": 0.433066\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.199528,\n\t\t\t\t\"y\": 0.437546\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.188483,\n\t\t\t\t\"y\": 0.443317\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.437209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 3.4834e-10\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.437209\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.408498,\n\t\t\t\t\"y\": 0.218355\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.403853,\n\t\t\t\t\"y\": 0.210108\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.403338,\n\t\t\t\t\"y\": 0.200563\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.40481,\n\t\t\t\t\"y\": 0.191179\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.410777,\n\t\t\t\t\"y\": 0.183835\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.419674,\n\t\t\t\t\"y\": 0.180638\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.429241,\n\t\t\t\t\"y\": 0.180591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.43881,\n\t\t\t\t\"y\": 0.180591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.448378,\n\t\t\t\t\"y\": 0.180591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.457947,\n\t\t\t\t\"y\": 0.180591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.467515,\n\t\t\t\t\"y\": 0.180591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.477083,\n\t\t\t\t\"y\": 0.180591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.486652,\n\t\t\t\t\"y\": 0.180591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.49622,\n\t\t\t\t\"y\": 0.180591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.505789,\n\t\t\t\t\"y\": 0.180591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.515357,\n\t\t\t\t\"y\": 0.180591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.524926,\n\t\t\t\t\"y\": 0.180591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.534494,\n\t\t\t\t\"y\": 0.180591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.544063,\n\t\t\t\t\"y\": 0.180591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.553631,\n\t\t\t\t\"y\": 0.180591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5632,\n\t\t\t\t\"y\": 0.180591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.572768,\n\t\t\t\t\"y\": 0.180591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.582337,\n\t\t\t\t\"y\": 0.180591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.591905,\n\t\t\t\t\"y\": 0.180591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.601432,\n\t\t\t\t\"y\": 0.181106\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.609663,\n\t\t\t\t\"y\": 0.185761\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.614308,\n\t\t\t\t\"y\": 0.194008\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.614823,\n\t\t\t\t\"y\": 0.203554\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.613351,\n\t\t\t\t\"y\": 0.212938\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.607383,\n\t\t\t\t\"y\": 0.220282\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.598487,\n\t\t\t\t\"y\": 0.223479\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.58892,\n\t\t\t\t\"y\": 0.223525\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.579351,\n\t\t\t\t\"y\": 0.223525\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.569783,\n\t\t\t\t\"y\": 0.223525\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.560214,\n\t\t\t\t\"y\": 0.223525\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.550646,\n\t\t\t\t\"y\": 0.223525\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.541077,\n\t\t\t\t\"y\": 0.223525\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531509,\n\t\t\t\t\"y\": 0.223525\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.52194,\n\t\t\t\t\"y\": 0.223525\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.512372,\n\t\t\t\t\"y\": 0.223525\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.502804,\n\t\t\t\t\"y\": 0.223525\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.493235,\n\t\t\t\t\"y\": 0.223525\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.483667,\n\t\t\t\t\"y\": 0.223525\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.474098,\n\t\t\t\t\"y\": 0.223525\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.46453,\n\t\t\t\t\"y\": 0.223525\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.454961,\n\t\t\t\t\"y\": 0.223525\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.445393,\n\t\t\t\t\"y\": 0.223525\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.435824,\n\t\t\t\t\"y\": 0.223525\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.426256,\n\t\t\t\t\"y\": 0.223525\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.416729,\n\t\t\t\t\"y\": 0.22301\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t]\n\t},\n\t\"disgust\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.888628,\n\t\t\t\t\"y\": 0.549601\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.882432,\n\t\t\t\t\"y\": 0.55825\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.876457,\n\t\t\t\t\"y\": 0.567056\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.8704,\n\t\t\t\t\"y\": 0.575806\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864155,\n\t\t\t\t\"y\": 0.584421\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.857651,\n\t\t\t\t\"y\": 0.592841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.850828,\n\t\t\t\t\"y\": 0.601004\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.843624,\n\t\t\t\t\"y\": 0.608831\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.835975,\n\t\t\t\t\"y\": 0.616221\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.827811,\n\t\t\t\t\"y\": 0.623033\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.819063,\n\t\t\t\t\"y\": 0.62907\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.80969,\n\t\t\t\t\"y\": 0.634075\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.799785,\n\t\t\t\t\"y\": 0.637918\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.789523,\n\t\t\t\t\"y\": 0.640668\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.779048,\n\t\t\t\t\"y\": 0.642446\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.768465,\n\t\t\t\t\"y\": 0.643388\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.757842,\n\t\t\t\t\"y\": 0.643636\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.74722,\n\t\t\t\t\"y\": 0.643325\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.736618,\n\t\t\t\t\"y\": 0.642596\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.726036,\n\t\t\t\t\"y\": 0.641613\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.715455,\n\t\t\t\t\"y\": 0.640627\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.70484,\n\t\t\t\t\"y\": 0.640274\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.695899,\n\t\t\t\t\"y\": 0.644645\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.699633,\n\t\t\t\t\"y\": 0.654235\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.7073,\n\t\t\t\t\"y\": 0.661579\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.716064,\n\t\t\t\t\"y\": 0.667589\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.72546,\n\t\t\t\t\"y\": 0.672554\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.735309,\n\t\t\t\t\"y\": 0.676542\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.745503,\n\t\t\t\t\"y\": 0.679534\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.755943,\n\t\t\t\t\"y\": 0.681507\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.766522,\n\t\t\t\t\"y\": 0.682475\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.777145,\n\t\t\t\t\"y\": 0.68244\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.787717,\n\t\t\t\t\"y\": 0.681391\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.798136,\n\t\t\t\t\"y\": 0.679316\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.808296,\n\t\t\t\t\"y\": 0.676208\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818085,\n\t\t\t\t\"y\": 0.672075\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.827391,\n\t\t\t\t\"y\": 0.666944\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.836113,\n\t\t\t\t\"y\": 0.660868\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.844163,\n\t\t\t\t\"y\": 0.653924\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.851483,\n\t\t\t\t\"y\": 0.64621\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.85807,\n\t\t\t\t\"y\": 0.637857\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864025,\n\t\t\t\t\"y\": 0.62904\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.86944,\n\t\t\t\t\"y\": 0.619879\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.874381,\n\t\t\t\t\"y\": 0.610453\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.878893,\n\t\t\t\t\"y\": 0.600813\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.882998,\n\t\t\t\t\"y\": 0.590992\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.886698,\n\t\t\t\t\"y\": 0.58101\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.889954,\n\t\t\t\t\"y\": 0.570875\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.892645,\n\t\t\t\t\"y\": 0.560576\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.894244,\n\t\t\t\t\"y\": 0.550063\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.114958,\n\t\t\t\t\"y\": 0.55447\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.120963,\n\t\t\t\t\"y\": 0.563255\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.126967,\n\t\t\t\t\"y\": 0.572041\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.133121,\n\t\t\t\t\"y\": 0.580722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.139506,\n\t\t\t\t\"y\": 0.589234\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.146184,\n\t\t\t\t\"y\": 0.597516\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.153216,\n\t\t\t\t\"y\": 0.605499\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.160664,\n\t\t\t\t\"y\": 0.613093\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.168597,\n\t\t\t\t\"y\": 0.620174\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.177086,\n\t\t\t\t\"y\": 0.626575\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.186189,\n\t\t\t\t\"y\": 0.632058\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.195886,\n\t\t\t\t\"y\": 0.636399\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.206014,\n\t\t\t\t\"y\": 0.639608\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.216412,\n\t\t\t\t\"y\": 0.641789\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.226959,\n\t\t\t\t\"y\": 0.643075\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.237571,\n\t\t\t\t\"y\": 0.643605\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.248197,\n\t\t\t\t\"y\": 0.643519\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.258808,\n\t\t\t\t\"y\": 0.642953\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.269398,\n\t\t\t\t\"y\": 0.642056\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.279975,\n\t\t\t\t\"y\": 0.641028\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.290574,\n\t\t\t\t\"y\": 0.640263\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.301057,\n\t\t\t\t\"y\": 0.641417\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.302948,\n\t\t\t\t\"y\": 0.650443\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.296197,\n\t\t\t\t\"y\": 0.658605\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.287813,\n\t\t\t\t\"y\": 0.665132\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.278659,\n\t\t\t\t\"y\": 0.670531\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.268991,\n\t\t\t\t\"y\": 0.67494\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.258934,\n\t\t\t\t\"y\": 0.678368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.248587,\n\t\t\t\t\"y\": 0.680779\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.238056,\n\t\t\t\t\"y\": 0.68218\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.22744,\n\t\t\t\t\"y\": 0.682579\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.216834,\n\t\t\t\t\"y\": 0.681969\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.206336,\n\t\t\t\t\"y\": 0.680338\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.196051,\n\t\t\t\t\"y\": 0.677676\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.186088,\n\t\t\t\t\"y\": 0.673984\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.17656,\n\t\t\t\t\"y\": 0.669279\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.167574,\n\t\t\t\t\"y\": 0.663602\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.159225,\n\t\t\t\t\"y\": 0.657022\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.151584,\n\t\t\t\t\"y\": 0.649627\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.144689,\n\t\t\t\t\"y\": 0.641529\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.138474,\n\t\t\t\t\"y\": 0.632894\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.132836,\n\t\t\t\t\"y\": 0.62387\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.127697,\n\t\t\t\t\"y\": 0.614551\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.123004,\n\t\t\t\t\"y\": 0.604998\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.118725,\n\t\t\t\t\"y\": 0.595252\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.114848,\n\t\t\t\t\"y\": 0.585338\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.111392,\n\t\t\t\t\"y\": 0.575269\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.108432,\n\t\t\t\t\"y\": 0.565044\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.106222,\n\t\t\t\t\"y\": 0.554633\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.10821,\n\t\t\t\t\"y\": 0.546289\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.839714,\n\t\t\t\t\"y\": 0.457489\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.838428,\n\t\t\t\t\"y\": 0.446948\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.834509,\n\t\t\t\t\"y\": 0.43708\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.828409,\n\t\t\t\t\"y\": 0.428386\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.820668,\n\t\t\t\t\"y\": 0.421116\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.811708,\n\t\t\t\t\"y\": 0.415417\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.801864,\n\t\t\t\t\"y\": 0.411446\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.791455,\n\t\t\t\t\"y\": 0.409381\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.780846,\n\t\t\t\t\"y\": 0.409361\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.770487,\n\t\t\t\t\"y\": 0.411624\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.76107,\n\t\t\t\t\"y\": 0.41648\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.753604,\n\t\t\t\t\"y\": 0.423989\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.748536,\n\t\t\t\t\"y\": 0.433326\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.744822,\n\t\t\t\t\"y\": 0.443299\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.741361,\n\t\t\t\t\"y\": 0.453366\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.736919,\n\t\t\t\t\"y\": 0.463022\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.729486,\n\t\t\t\t\"y\": 0.470445\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.719266,\n\t\t\t\t\"y\": 0.47305\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.708662,\n\t\t\t\t\"y\": 0.472623\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.698168,\n\t\t\t\t\"y\": 0.470955\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.687753,\n\t\t\t\t\"y\": 0.468838\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.677348,\n\t\t\t\t\"y\": 0.466674\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.66691,\n\t\t\t\t\"y\": 0.464674\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.656429,\n\t\t\t\t\"y\": 0.462917\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.645891,\n\t\t\t\t\"y\": 0.461548\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.635285,\n\t\t\t\t\"y\": 0.460995\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.627605,\n\t\t\t\t\"y\": 0.465407\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.634864,\n\t\t\t\t\"y\": 0.47307\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.643514,\n\t\t\t\t\"y\": 0.47925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.652542,\n\t\t\t\t\"y\": 0.484866\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.661798,\n\t\t\t\t\"y\": 0.490096\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.671246,\n\t\t\t\t\"y\": 0.494968\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.680904,\n\t\t\t\t\"y\": 0.499409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.690797,\n\t\t\t\t\"y\": 0.503293\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.700925,\n\t\t\t\t\"y\": 0.50651\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.711248,\n\t\t\t\t\"y\": 0.509031\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.721698,\n\t\t\t\t\"y\": 0.51096\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.732221,\n\t\t\t\t\"y\": 0.512441\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.742797,\n\t\t\t\t\"y\": 0.513481\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.753408,\n\t\t\t\t\"y\": 0.514048\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.764034,\n\t\t\t\t\"y\": 0.514104\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.774648,\n\t\t\t\t\"y\": 0.513599\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.785209,\n\t\t\t\t\"y\": 0.512436\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.795631,\n\t\t\t\t\"y\": 0.510376\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.805736,\n\t\t\t\t\"y\": 0.507109\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.815204,\n\t\t\t\t\"y\": 0.502304\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.823542,\n\t\t\t\t\"y\": 0.495734\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.830297,\n\t\t\t\t\"y\": 0.487538\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.835344,\n\t\t\t\t\"y\": 0.478186\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.838564,\n\t\t\t\t\"y\": 0.468055\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.176752,\n\t\t\t\t\"y\": 0.463582\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.186543,\n\t\t\t\t\"y\": 0.460986\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.197139,\n\t\t\t\t\"y\": 0.46175\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.207665,\n\t\t\t\t\"y\": 0.463204\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.218138,\n\t\t\t\t\"y\": 0.465011\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.228569,\n\t\t\t\t\"y\": 0.467047\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.238972,\n\t\t\t\t\"y\": 0.469223\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.249395,\n\t\t\t\t\"y\": 0.471297\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.259909,\n\t\t\t\t\"y\": 0.472821\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.270517,\n\t\t\t\t\"y\": 0.472885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.280473,\n\t\t\t\t\"y\": 0.469473\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.287236,\n\t\t\t\t\"y\": 0.461394\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.291386,\n\t\t\t\t\"y\": 0.451603\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.294814,\n\t\t\t\t\"y\": 0.441524\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.298683,\n\t\t\t\t\"y\": 0.431611\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.304117,\n\t\t\t\t\"y\": 0.422492\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.312004,\n\t\t\t\t\"y\": 0.415426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.321653,\n\t\t\t\t\"y\": 0.411046\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.332097,\n\t\t\t\t\"y\": 0.409207\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.3427,\n\t\t\t\t\"y\": 0.409601\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.353035,\n\t\t\t\t\"y\": 0.412012\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.362746,\n\t\t\t\t\"y\": 0.4163\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.371516,\n\t\t\t\t\"y\": 0.422287\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.379003,\n\t\t\t\t\"y\": 0.42982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.38476,\n\t\t\t\t\"y\": 0.438743\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.388235,\n\t\t\t\t\"y\": 0.448775\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.389062,\n\t\t\t\t\"y\": 0.459365\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.387524,\n\t\t\t\t\"y\": 0.469882\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.383968,\n\t\t\t\t\"y\": 0.479899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.378614,\n\t\t\t\t\"y\": 0.489079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.371565,\n\t\t\t\t\"y\": 0.497022\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.362988,\n\t\t\t\t\"y\": 0.503275\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.353376,\n\t\t\t\t\"y\": 0.507787\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.343196,\n\t\t\t\t\"y\": 0.510817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.33274,\n\t\t\t\t\"y\": 0.512698\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.322165,\n\t\t\t\t\"y\": 0.513731\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.311547,\n\t\t\t\t\"y\": 0.514133\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.300922,\n\t\t\t\t\"y\": 0.513984\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.290316,\n\t\t\t\t\"y\": 0.513331\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.279749,\n\t\t\t\t\"y\": 0.512212\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.269237,\n\t\t\t\t\"y\": 0.510655\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.258804,\n\t\t\t\t\"y\": 0.508634\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.248511,\n\t\t\t\t\"y\": 0.505994\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.238422,\n\t\t\t\t\"y\": 0.502654\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.228571,\n\t\t\t\t\"y\": 0.498663\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.218953,\n\t\t\t\t\"y\": 0.494138\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.209538,\n\t\t\t\t\"y\": 0.4892\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.200318,\n\t\t\t\t\"y\": 0.483906\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.191341,\n\t\t\t\t\"y\": 0.478211\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.182797,\n\t\t\t\t\"y\": 0.471886\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.437209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 3.4834e-10\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.437209\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.359368,\n\t\t\t\t\"y\": 0.167633\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.369543,\n\t\t\t\t\"y\": 0.177251\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.380707,\n\t\t\t\t\"y\": 0.185704\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.39254,\n\t\t\t\t\"y\": 0.19319\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.404868,\n\t\t\t\t\"y\": 0.199828\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.417584,\n\t\t\t\t\"y\": 0.205687\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.430616,\n\t\t\t\t\"y\": 0.2108\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.443915,\n\t\t\t\t\"y\": 0.215171\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.457441,\n\t\t\t\t\"y\": 0.218774\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.47116,\n\t\t\t\t\"y\": 0.22155\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.485033,\n\t\t\t\t\"y\": 0.223395\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.499007,\n\t\t\t\t\"y\": 0.224133\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.512989,\n\t\t\t\t\"y\": 0.223573\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.52688,\n\t\t\t\t\"y\": 0.221872\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.540623,\n\t\t\t\t\"y\": 0.21922\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.554179,\n\t\t\t\t\"y\": 0.21573\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.567512,\n\t\t\t\t\"y\": 0.211466\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.580585,\n\t\t\t\t\"y\": 0.206458\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593349,\n\t\t\t\t\"y\": 0.200706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.605738,\n\t\t\t\t\"y\": 0.194182\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.61765,\n\t\t\t\t\"y\": 0.186822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.628923,\n\t\t\t\t\"y\": 0.178516\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.639267,\n\t\t\t\t\"y\": 0.169079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.63974,\n\t\t\t\t\"y\": 0.179624\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.636513,\n\t\t\t\t\"y\": 0.193254\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.631122,\n\t\t\t\t\"y\": 0.206183\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.623851,\n\t\t\t\t\"y\": 0.218153\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.615006,\n\t\t\t\t\"y\": 0.229011\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.604879,\n\t\t\t\t\"y\": 0.238681\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593724,\n\t\t\t\t\"y\": 0.247143\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.581756,\n\t\t\t\t\"y\": 0.254406\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.569151,\n\t\t\t\t\"y\": 0.260495\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.556057,\n\t\t\t\t\"y\": 0.26544\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.542595,\n\t\t\t\t\"y\": 0.26927\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.52887,\n\t\t\t\t\"y\": 0.272008\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.514975,\n\t\t\t\t\"y\": 0.273673\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.500993,\n\t\t\t\t\"y\": 0.274276\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.487006,\n\t\t\t\t\"y\": 0.273823\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.473093,\n\t\t\t\t\"y\": 0.272309\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.459339,\n\t\t\t\t\"y\": 0.269724\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.445834,\n\t\t\t\t\"y\": 0.266051\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.43268,\n\t\t\t\t\"y\": 0.261266\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.419998,\n\t\t\t\t\"y\": 0.255341\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.407929,\n\t\t\t\t\"y\": 0.248246\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.396647,\n\t\t\t\t\"y\": 0.239956\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.386359,\n\t\t\t\t\"y\": 0.230456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.377315,\n\t\t\t\t\"y\": 0.219764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.369802,\n\t\t\t\t\"y\": 0.207944\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.364126,\n\t\t\t\t\"y\": 0.195139\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.360578,\n\t\t\t\t\"y\": 0.181588\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t]\n\t},\n\t\"anger\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.766058,\n\t\t\t\t\"y\": 0.567127\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.75643,\n\t\t\t\t\"y\": 0.566107\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.746841,\n\t\t\t\t\"y\": 0.564756\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.737304,\n\t\t\t\t\"y\": 0.563083\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.727827,\n\t\t\t\t\"y\": 0.561093\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.718421,\n\t\t\t\t\"y\": 0.558794\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.709094,\n\t\t\t\t\"y\": 0.556189\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.699855,\n\t\t\t\t\"y\": 0.553286\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.690713,\n\t\t\t\t\"y\": 0.550088\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.681678,\n\t\t\t\t\"y\": 0.5466\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.672758,\n\t\t\t\t\"y\": 0.542826\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.663963,\n\t\t\t\t\"y\": 0.53877\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.6553,\n\t\t\t\t\"y\": 0.534435\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.646781,\n\t\t\t\t\"y\": 0.529826\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.638413,\n\t\t\t\t\"y\": 0.524943\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.630209,\n\t\t\t\t\"y\": 0.519792\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.622177,\n\t\t\t\t\"y\": 0.514373\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.61433,\n\t\t\t\t\"y\": 0.50869\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606678,\n\t\t\t\t\"y\": 0.502745\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.599234,\n\t\t\t\t\"y\": 0.496541\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.592011,\n\t\t\t\t\"y\": 0.49008\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.585023,\n\t\t\t\t\"y\": 0.483366\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.578284,\n\t\t\t\t\"y\": 0.4764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.57181,\n\t\t\t\t\"y\": 0.469186\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.572407,\n\t\t\t\t\"y\": 0.477069\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.574606,\n\t\t\t\t\"y\": 0.486514\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.57762,\n\t\t\t\t\"y\": 0.495731\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.581395,\n\t\t\t\t\"y\": 0.504662\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.585876,\n\t\t\t\t\"y\": 0.51326\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.59101,\n\t\t\t\t\"y\": 0.521484\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.596744,\n\t\t\t\t\"y\": 0.529299\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.603028,\n\t\t\t\t\"y\": 0.536677\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.609817,\n\t\t\t\t\"y\": 0.543592\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.617066,\n\t\t\t\t\"y\": 0.550023\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.624731,\n\t\t\t\t\"y\": 0.555947\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.632774,\n\t\t\t\t\"y\": 0.561346\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.641155,\n\t\t\t\t\"y\": 0.566202\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.649836,\n\t\t\t\t\"y\": 0.570495\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.658781,\n\t\t\t\t\"y\": 0.574208\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.66795,\n\t\t\t\t\"y\": 0.57732\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.677306,\n\t\t\t\t\"y\": 0.579812\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.686809,\n\t\t\t\t\"y\": 0.581663\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.696417,\n\t\t\t\t\"y\": 0.582851\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.706085,\n\t\t\t\t\"y\": 0.583355\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.715764,\n\t\t\t\t\"y\": 0.583153\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.7254,\n\t\t\t\t\"y\": 0.582221\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.734934,\n\t\t\t\t\"y\": 0.58054\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.7443,\n\t\t\t\t\"y\": 0.578092\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.753427,\n\t\t\t\t\"y\": 0.574861\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.762236,\n\t\t\t\t\"y\": 0.570839\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.23147,\n\t\t\t\t\"y\": 0.567335\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.241107,\n\t\t\t\t\"y\": 0.5664\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.250707,\n\t\t\t\t\"y\": 0.565133\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.260258,\n\t\t\t\t\"y\": 0.563542\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.269751,\n\t\t\t\t\"y\": 0.561633\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.279177,\n\t\t\t\t\"y\": 0.559412\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.288525,\n\t\t\t\t\"y\": 0.556885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.297787,\n\t\t\t\t\"y\": 0.554058\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.306954,\n\t\t\t\t\"y\": 0.550935\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.316018,\n\t\t\t\t\"y\": 0.547521\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.324968,\n\t\t\t\t\"y\": 0.54382\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.333796,\n\t\t\t\t\"y\": 0.539836\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.342494,\n\t\t\t\t\"y\": 0.535572\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.351051,\n\t\t\t\t\"y\": 0.531033\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.359458,\n\t\t\t\t\"y\": 0.52622\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.367705,\n\t\t\t\t\"y\": 0.521137\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.375782,\n\t\t\t\t\"y\": 0.515786\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.383678,\n\t\t\t\t\"y\": 0.510171\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.391381,\n\t\t\t\t\"y\": 0.504293\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.398879,\n\t\t\t\t\"y\": 0.498155\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.40616,\n\t\t\t\t\"y\": 0.49176\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.41321,\n\t\t\t\t\"y\": 0.48511\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.420014,\n\t\t\t\t\"y\": 0.478208\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.426558,\n\t\t\t\t\"y\": 0.471057\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.428019,\n\t\t\t\t\"y\": 0.47462\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.426038,\n\t\t\t\t\"y\": 0.484114\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.423227,\n\t\t\t\t\"y\": 0.493395\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.419642,\n\t\t\t\t\"y\": 0.502404\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.415336,\n\t\t\t\t\"y\": 0.511092\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.410365,\n\t\t\t\t\"y\": 0.519414\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.40478,\n\t\t\t\t\"y\": 0.527337\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.398632,\n\t\t\t\t\"y\": 0.53483\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.391968,\n\t\t\t\t\"y\": 0.541866\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.384833,\n\t\t\t\t\"y\": 0.548423\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.37727,\n\t\t\t\t\"y\": 0.554479\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.36932,\n\t\t\t\t\"y\": 0.560014\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.361022,\n\t\t\t\t\"y\": 0.565011\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.352414,\n\t\t\t\t\"y\": 0.56945\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.343534,\n\t\t\t\t\"y\": 0.573313\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.334418,\n\t\t\t\t\"y\": 0.576581\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.325106,\n\t\t\t\t\"y\": 0.579233\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.315637,\n\t\t\t\t\"y\": 0.581251\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.306052,\n\t\t\t\t\"y\": 0.582611\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.296395,\n\t\t\t\t\"y\": 0.583293\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.286714,\n\t\t\t\t\"y\": 0.583273\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.277062,\n\t\t\t\t\"y\": 0.58253\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.267496,\n\t\t\t\t\"y\": 0.581043\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.25808,\n\t\t\t\t\"y\": 0.578793\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.248884,\n\t\t\t\t\"y\": 0.575763\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.239986,\n\t\t\t\t\"y\": 0.571945\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.687477,\n\t\t\t\t\"y\": 0.427502\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.687257,\n\t\t\t\t\"y\": 0.420034\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.686594,\n\t\t\t\t\"y\": 0.412592\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.685475,\n\t\t\t\t\"y\": 0.405205\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.683882,\n\t\t\t\t\"y\": 0.397906\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.681785,\n\t\t\t\t\"y\": 0.390737\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.679141,\n\t\t\t\t\"y\": 0.383751\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.675897,\n\t\t\t\t\"y\": 0.377026\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.67198,\n\t\t\t\t\"y\": 0.370671\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.667306,\n\t\t\t\t\"y\": 0.364856\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.66179,\n\t\t\t\t\"y\": 0.359841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.655399,\n\t\t\t\t\"y\": 0.35602\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.648272,\n\t\t\t\t\"y\": 0.353901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.640841,\n\t\t\t\t\"y\": 0.353901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.633714,\n\t\t\t\t\"y\": 0.35602\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.627322,\n\t\t\t\t\"y\": 0.359841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.621806,\n\t\t\t\t\"y\": 0.364856\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.617132,\n\t\t\t\t\"y\": 0.370671\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.613216,\n\t\t\t\t\"y\": 0.377026\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.609971,\n\t\t\t\t\"y\": 0.383751\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.607328,\n\t\t\t\t\"y\": 0.390737\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.60523,\n\t\t\t\t\"y\": 0.397906\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.603637,\n\t\t\t\t\"y\": 0.405205\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.602519,\n\t\t\t\t\"y\": 0.412592\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.601856,\n\t\t\t\t\"y\": 0.420034\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.601636,\n\t\t\t\t\"y\": 0.427502\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.601856,\n\t\t\t\t\"y\": 0.43497\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.602519,\n\t\t\t\t\"y\": 0.442412\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.603637,\n\t\t\t\t\"y\": 0.449799\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.60523,\n\t\t\t\t\"y\": 0.457098\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.607328,\n\t\t\t\t\"y\": 0.464267\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.609971,\n\t\t\t\t\"y\": 0.471253\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.613216,\n\t\t\t\t\"y\": 0.477978\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.617132,\n\t\t\t\t\"y\": 0.484333\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.621806,\n\t\t\t\t\"y\": 0.490148\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.627322,\n\t\t\t\t\"y\": 0.495163\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.633714,\n\t\t\t\t\"y\": 0.498984\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.640841,\n\t\t\t\t\"y\": 0.501103\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.648272,\n\t\t\t\t\"y\": 0.501103\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.655399,\n\t\t\t\t\"y\": 0.498984\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.66179,\n\t\t\t\t\"y\": 0.495163\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.667306,\n\t\t\t\t\"y\": 0.490148\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.67198,\n\t\t\t\t\"y\": 0.484333\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.675897,\n\t\t\t\t\"y\": 0.477978\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.679141,\n\t\t\t\t\"y\": 0.471253\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.681785,\n\t\t\t\t\"y\": 0.464267\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.683882,\n\t\t\t\t\"y\": 0.457098\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.685475,\n\t\t\t\t\"y\": 0.449799\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.686594,\n\t\t\t\t\"y\": 0.442412\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.687257,\n\t\t\t\t\"y\": 0.43497\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.312523,\n\t\t\t\t\"y\": 0.427502\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.312743,\n\t\t\t\t\"y\": 0.420034\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.313406,\n\t\t\t\t\"y\": 0.412592\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.314525,\n\t\t\t\t\"y\": 0.405205\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.316118,\n\t\t\t\t\"y\": 0.397906\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.318215,\n\t\t\t\t\"y\": 0.390737\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.320859,\n\t\t\t\t\"y\": 0.383751\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.324103,\n\t\t\t\t\"y\": 0.377026\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.32802,\n\t\t\t\t\"y\": 0.370671\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.332694,\n\t\t\t\t\"y\": 0.364856\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.33821,\n\t\t\t\t\"y\": 0.359841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.344601,\n\t\t\t\t\"y\": 0.35602\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.351728,\n\t\t\t\t\"y\": 0.353901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.359159,\n\t\t\t\t\"y\": 0.353901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.366286,\n\t\t\t\t\"y\": 0.35602\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.372678,\n\t\t\t\t\"y\": 0.359841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.378194,\n\t\t\t\t\"y\": 0.364856\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.382868,\n\t\t\t\t\"y\": 0.370671\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.386784,\n\t\t\t\t\"y\": 0.377026\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.390029,\n\t\t\t\t\"y\": 0.383751\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.392672,\n\t\t\t\t\"y\": 0.390737\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.39477,\n\t\t\t\t\"y\": 0.397906\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.396363,\n\t\t\t\t\"y\": 0.405205\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.397481,\n\t\t\t\t\"y\": 0.412592\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.398144,\n\t\t\t\t\"y\": 0.420034\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.398364,\n\t\t\t\t\"y\": 0.427502\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.398144,\n\t\t\t\t\"y\": 0.43497\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.397481,\n\t\t\t\t\"y\": 0.442412\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.396363,\n\t\t\t\t\"y\": 0.449799\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.39477,\n\t\t\t\t\"y\": 0.457098\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.392672,\n\t\t\t\t\"y\": 0.464267\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.390029,\n\t\t\t\t\"y\": 0.471253\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.386784,\n\t\t\t\t\"y\": 0.477978\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.382868,\n\t\t\t\t\"y\": 0.484333\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.378194,\n\t\t\t\t\"y\": 0.490148\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.372678,\n\t\t\t\t\"y\": 0.495163\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.366286,\n\t\t\t\t\"y\": 0.498984\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.359159,\n\t\t\t\t\"y\": 0.501103\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.351728,\n\t\t\t\t\"y\": 0.501103\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.344601,\n\t\t\t\t\"y\": 0.498984\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.33821,\n\t\t\t\t\"y\": 0.495163\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.332694,\n\t\t\t\t\"y\": 0.490148\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.32802,\n\t\t\t\t\"y\": 0.484333\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.324103,\n\t\t\t\t\"y\": 0.477978\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.320859,\n\t\t\t\t\"y\": 0.471253\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.318215,\n\t\t\t\t\"y\": 0.464267\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.316118,\n\t\t\t\t\"y\": 0.457098\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.314525,\n\t\t\t\t\"y\": 0.449799\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.313406,\n\t\t\t\t\"y\": 0.442412\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.312743,\n\t\t\t\t\"y\": 0.43497\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.437209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 3.4834e-10\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.437209\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.372012,\n\t\t\t\t\"y\": 0.180837\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.375868,\n\t\t\t\t\"y\": 0.179016\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.38631,\n\t\t\t\t\"y\": 0.186447\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.397391,\n\t\t\t\t\"y\": 0.19289\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.408903,\n\t\t\t\t\"y\": 0.198526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.420732,\n\t\t\t\t\"y\": 0.203458\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.43281,\n\t\t\t\t\"y\": 0.207744\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.44509,\n\t\t\t\t\"y\": 0.211409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.457539,\n\t\t\t\t\"y\": 0.214449\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.470129,\n\t\t\t\t\"y\": 0.216834\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.482833,\n\t\t\t\t\"y\": 0.218501\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.495617,\n\t\t\t\t\"y\": 0.219337\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.508427,\n\t\t\t\t\"y\": 0.219173\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.521191,\n\t\t\t\t\"y\": 0.218058\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.533862,\n\t\t\t\t\"y\": 0.216154\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.54641,\n\t\t\t\t\"y\": 0.213557\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.558809,\n\t\t\t\t\"y\": 0.210318\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.571029,\n\t\t\t\t\"y\": 0.206458\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.583034,\n\t\t\t\t\"y\": 0.201972\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.594773,\n\t\t\t\t\"y\": 0.196825\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606163,\n\t\t\t\t\"y\": 0.190949\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.617072,\n\t\t\t\t\"y\": 0.184218\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.627239,\n\t\t\t\t\"y\": 0.176416\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.627056,\n\t\t\t\t\"y\": 0.184783\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.623167,\n\t\t\t\t\"y\": 0.19701\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.617949,\n\t\t\t\t\"y\": 0.208731\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.611529,\n\t\t\t\t\"y\": 0.219836\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.604023,\n\t\t\t\t\"y\": 0.230237\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.595544,\n\t\t\t\t\"y\": 0.239858\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.586195,\n\t\t\t\t\"y\": 0.248632\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.576074,\n\t\t\t\t\"y\": 0.2565\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.565274,\n\t\t\t\t\"y\": 0.263402\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.553886,\n\t\t\t\t\"y\": 0.26928\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.542002,\n\t\t\t\t\"y\": 0.274071\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.529719,\n\t\t\t\t\"y\": 0.277713\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.517141,\n\t\t\t\t\"y\": 0.280138\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.504382,\n\t\t\t\t\"y\": 0.281275\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.491576,\n\t\t\t\t\"y\": 0.281059\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.478861,\n\t\t\t\t\"y\": 0.279508\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.466363,\n\t\t\t\t\"y\": 0.276691\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.454196,\n\t\t\t\t\"y\": 0.272679\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.442458,\n\t\t\t\t\"y\": 0.267537\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.431246,\n\t\t\t\t\"y\": 0.26133\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.420651,\n\t\t\t\t\"y\": 0.254116\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.410763,\n\t\t\t\t\"y\": 0.245956\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.401679,\n\t\t\t\t\"y\": 0.236907\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.393496,\n\t\t\t\t\"y\": 0.227032\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.386321,\n\t\t\t\t\"y\": 0.2164\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.380267,\n\t\t\t\t\"y\": 0.20509\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.375455,\n\t\t\t\t\"y\": 0.193197\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t]\n\t},\n\t\"fear\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.833505,\n\t\t\t\t\"y\": 0.670581\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.826431,\n\t\t\t\t\"y\": 0.677206\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.819136,\n\t\t\t\t\"y\": 0.683585\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.81163,\n\t\t\t\t\"y\": 0.689713\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.803925,\n\t\t\t\t\"y\": 0.695589\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.796032,\n\t\t\t\t\"y\": 0.701208\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.787961,\n\t\t\t\t\"y\": 0.706567\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.779722,\n\t\t\t\t\"y\": 0.711664\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.771324,\n\t\t\t\t\"y\": 0.716494\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.762778,\n\t\t\t\t\"y\": 0.721053\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.754091,\n\t\t\t\t\"y\": 0.725338\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.745273,\n\t\t\t\t\"y\": 0.729345\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.736332,\n\t\t\t\t\"y\": 0.733068\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.727276,\n\t\t\t\t\"y\": 0.736503\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.718115,\n\t\t\t\t\"y\": 0.739644\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.708857,\n\t\t\t\t\"y\": 0.742485\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.699511,\n\t\t\t\t\"y\": 0.745021\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.690087,\n\t\t\t\t\"y\": 0.747245\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.680593,\n\t\t\t\t\"y\": 0.749149\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.671039,\n\t\t\t\t\"y\": 0.750727\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.661436,\n\t\t\t\t\"y\": 0.751969\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.651795,\n\t\t\t\t\"y\": 0.752867\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.642128,\n\t\t\t\t\"y\": 0.753412\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.632448,\n\t\t\t\t\"y\": 0.753595\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.638092,\n\t\t\t\t\"y\": 0.758123\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.646636,\n\t\t\t\t\"y\": 0.762681\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.655546,\n\t\t\t\t\"y\": 0.766473\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.664742,\n\t\t\t\t\"y\": 0.769501\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.674153,\n\t\t\t\t\"y\": 0.771776\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.683711,\n\t\t\t\t\"y\": 0.773311\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.693358,\n\t\t\t\t\"y\": 0.774124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.703038,\n\t\t\t\t\"y\": 0.774232\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.712702,\n\t\t\t\t\"y\": 0.773655\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.722303,\n\t\t\t\t\"y\": 0.772412\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.731799,\n\t\t\t\t\"y\": 0.770521\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.741147,\n\t\t\t\t\"y\": 0.767999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.750309,\n\t\t\t\t\"y\": 0.764865\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.759245,\n\t\t\t\t\"y\": 0.761133\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767918,\n\t\t\t\t\"y\": 0.756822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.776287,\n\t\t\t\t\"y\": 0.751946\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.784313,\n\t\t\t\t\"y\": 0.746521\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.791953,\n\t\t\t\t\"y\": 0.740565\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.799165,\n\t\t\t\t\"y\": 0.734094\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.805903,\n\t\t\t\t\"y\": 0.727128\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.812116,\n\t\t\t\t\"y\": 0.71969\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.817755,\n\t\t\t\t\"y\": 0.711805\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.822764,\n\t\t\t\t\"y\": 0.703505\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.827086,\n\t\t\t\t\"y\": 0.694827\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.830665,\n\t\t\t\t\"y\": 0.685815\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.833441,\n\t\t\t\t\"y\": 0.676523\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.167571,\n\t\t\t\t\"y\": 0.671618\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.174679,\n\t\t\t\t\"y\": 0.678206\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.182008,\n\t\t\t\t\"y\": 0.684546\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.189545,\n\t\t\t\t\"y\": 0.690636\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.19728,\n\t\t\t\t\"y\": 0.696472\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.205201,\n\t\t\t\t\"y\": 0.702051\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.213299,\n\t\t\t\t\"y\": 0.70737\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.221563,\n\t\t\t\t\"y\": 0.712426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.229984,\n\t\t\t\t\"y\": 0.717214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.238552,\n\t\t\t\t\"y\": 0.721732\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.24726,\n\t\t\t\t\"y\": 0.725974\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.256098,\n\t\t\t\t\"y\": 0.729937\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.265057,\n\t\t\t\t\"y\": 0.733616\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.274129,\n\t\t\t\t\"y\": 0.737006\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.283306,\n\t\t\t\t\"y\": 0.740102\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.292578,\n\t\t\t\t\"y\": 0.742896\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.301937,\n\t\t\t\t\"y\": 0.745385\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.311373,\n\t\t\t\t\"y\": 0.74756\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.320877,\n\t\t\t\t\"y\": 0.749414\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.330438,\n\t\t\t\t\"y\": 0.75094\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.340048,\n\t\t\t\t\"y\": 0.75213\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.349693,\n\t\t\t\t\"y\": 0.752974\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.359363,\n\t\t\t\t\"y\": 0.753465\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.368787,\n\t\t\t\t\"y\": 0.753673\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.360618,\n\t\t\t\t\"y\": 0.758876\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.352012,\n\t\t\t\t\"y\": 0.763316\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.343053,\n\t\t\t\t\"y\": 0.766989\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.333819,\n\t\t\t\t\"y\": 0.7699\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.324382,\n\t\t\t\t\"y\": 0.77206\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.314806,\n\t\t\t\t\"y\": 0.773483\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.305151,\n\t\t\t\t\"y\": 0.774186\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.29547,\n\t\t\t\t\"y\": 0.774188\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.285813,\n\t\t\t\t\"y\": 0.773507\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.276225,\n\t\t\t\t\"y\": 0.772162\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.26675,\n\t\t\t\t\"y\": 0.770173\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.257428,\n\t\t\t\t\"y\": 0.767555\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.248298,\n\t\t\t\t\"y\": 0.764328\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.2394,\n\t\t\t\t\"y\": 0.760506\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.230772,\n\t\t\t\t\"y\": 0.756107\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.222453,\n\t\t\t\t\"y\": 0.751145\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.214483,\n\t\t\t\t\"y\": 0.745637\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.206906,\n\t\t\t\t\"y\": 0.7396\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.199764,\n\t\t\t\t\"y\": 0.733052\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.193104,\n\t\t\t\t\"y\": 0.726012\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.186976,\n\t\t\t\t\"y\": 0.718503\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181431,\n\t\t\t\t\"y\": 0.710552\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.176524,\n\t\t\t\t\"y\": 0.702191\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.172312,\n\t\t\t\t\"y\": 0.693458\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.168854,\n\t\t\t\t\"y\": 0.684399\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.166207,\n\t\t\t\t\"y\": 0.67507\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.750326,\n\t\t\t\t\"y\": 0.510601\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.749886,\n\t\t\t\t\"y\": 0.501845\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.748565,\n\t\t\t\t\"y\": 0.493177\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.746364,\n\t\t\t\t\"y\": 0.484692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.743283,\n\t\t\t\t\"y\": 0.476486\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.739327,\n\t\t\t\t\"y\": 0.468667\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.734506,\n\t\t\t\t\"y\": 0.461351\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.728843,\n\t\t\t\t\"y\": 0.454669\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.72238,\n\t\t\t\t\"y\": 0.448763\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.715184,\n\t\t\t\t\"y\": 0.443781\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.707355,\n\t\t\t\t\"y\": 0.439874\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.699033,\n\t\t\t\t\"y\": 0.437179\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.690396,\n\t\t\t\t\"y\": 0.435802\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.681651,\n\t\t\t\t\"y\": 0.435802\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.673015,\n\t\t\t\t\"y\": 0.437179\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.664693,\n\t\t\t\t\"y\": 0.439874\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.656864,\n\t\t\t\t\"y\": 0.443781\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.649668,\n\t\t\t\t\"y\": 0.448763\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.643204,\n\t\t\t\t\"y\": 0.454669\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.637542,\n\t\t\t\t\"y\": 0.461351\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.632721,\n\t\t\t\t\"y\": 0.468667\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.628764,\n\t\t\t\t\"y\": 0.476486\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.625684,\n\t\t\t\t\"y\": 0.484692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.623482,\n\t\t\t\t\"y\": 0.493177\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.622162,\n\t\t\t\t\"y\": 0.501845\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.621722,\n\t\t\t\t\"y\": 0.510601\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.622162,\n\t\t\t\t\"y\": 0.519358\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.623482,\n\t\t\t\t\"y\": 0.528025\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.625684,\n\t\t\t\t\"y\": 0.53651\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.628764,\n\t\t\t\t\"y\": 0.544716\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.632721,\n\t\t\t\t\"y\": 0.552535\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.637542,\n\t\t\t\t\"y\": 0.559851\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.643204,\n\t\t\t\t\"y\": 0.566533\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.649668,\n\t\t\t\t\"y\": 0.57244\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.656864,\n\t\t\t\t\"y\": 0.577421\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.664693,\n\t\t\t\t\"y\": 0.581328\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.673015,\n\t\t\t\t\"y\": 0.584023\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.681651,\n\t\t\t\t\"y\": 0.5854\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.690396,\n\t\t\t\t\"y\": 0.5854\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.699033,\n\t\t\t\t\"y\": 0.584023\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.707355,\n\t\t\t\t\"y\": 0.581328\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.715184,\n\t\t\t\t\"y\": 0.577421\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.72238,\n\t\t\t\t\"y\": 0.57244\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.728843,\n\t\t\t\t\"y\": 0.566533\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.734506,\n\t\t\t\t\"y\": 0.559851\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.739327,\n\t\t\t\t\"y\": 0.552535\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.743283,\n\t\t\t\t\"y\": 0.544716\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.746364,\n\t\t\t\t\"y\": 0.53651\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.748565,\n\t\t\t\t\"y\": 0.528025\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.749886,\n\t\t\t\t\"y\": 0.519358\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.249674,\n\t\t\t\t\"y\": 0.510601\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.250114,\n\t\t\t\t\"y\": 0.501845\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.251435,\n\t\t\t\t\"y\": 0.493177\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.253636,\n\t\t\t\t\"y\": 0.484692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.256717,\n\t\t\t\t\"y\": 0.476486\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.260673,\n\t\t\t\t\"y\": 0.468667\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.265494,\n\t\t\t\t\"y\": 0.461351\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.271157,\n\t\t\t\t\"y\": 0.454669\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.27762,\n\t\t\t\t\"y\": 0.448763\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.284816,\n\t\t\t\t\"y\": 0.443781\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.292645,\n\t\t\t\t\"y\": 0.439874\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.300967,\n\t\t\t\t\"y\": 0.437179\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.309604,\n\t\t\t\t\"y\": 0.435802\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.318349,\n\t\t\t\t\"y\": 0.435802\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.326985,\n\t\t\t\t\"y\": 0.437179\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.335307,\n\t\t\t\t\"y\": 0.439874\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.343136,\n\t\t\t\t\"y\": 0.443781\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.350332,\n\t\t\t\t\"y\": 0.448763\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.356796,\n\t\t\t\t\"y\": 0.454669\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.362458,\n\t\t\t\t\"y\": 0.461351\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.367279,\n\t\t\t\t\"y\": 0.468667\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.371236,\n\t\t\t\t\"y\": 0.476486\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.374316,\n\t\t\t\t\"y\": 0.484692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.376518,\n\t\t\t\t\"y\": 0.493177\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.377838,\n\t\t\t\t\"y\": 0.501845\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.378278,\n\t\t\t\t\"y\": 0.510601\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.377838,\n\t\t\t\t\"y\": 0.519358\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.376518,\n\t\t\t\t\"y\": 0.528025\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.374316,\n\t\t\t\t\"y\": 0.53651\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.371236,\n\t\t\t\t\"y\": 0.544716\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.367279,\n\t\t\t\t\"y\": 0.552535\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.362458,\n\t\t\t\t\"y\": 0.559851\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.356796,\n\t\t\t\t\"y\": 0.566533\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.350332,\n\t\t\t\t\"y\": 0.57244\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.343136,\n\t\t\t\t\"y\": 0.577421\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.335307,\n\t\t\t\t\"y\": 0.581328\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.326985,\n\t\t\t\t\"y\": 0.584023\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.318349,\n\t\t\t\t\"y\": 0.5854\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.309604,\n\t\t\t\t\"y\": 0.5854\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.300967,\n\t\t\t\t\"y\": 0.584023\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.292645,\n\t\t\t\t\"y\": 0.581328\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.284816,\n\t\t\t\t\"y\": 0.577421\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.27762,\n\t\t\t\t\"y\": 0.57244\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.271157,\n\t\t\t\t\"y\": 0.566533\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.265494,\n\t\t\t\t\"y\": 0.559851\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.260673,\n\t\t\t\t\"y\": 0.552535\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.256717,\n\t\t\t\t\"y\": 0.544716\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.253636,\n\t\t\t\t\"y\": 0.53651\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.251435,\n\t\t\t\t\"y\": 0.528025\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.250114,\n\t\t\t\t\"y\": 0.519358\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.437209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 3.4834e-10\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.437209\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.364222,\n\t\t\t\t\"y\": 0.266079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.356036,\n\t\t\t\t\"y\": 0.252957\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.350177,\n\t\t\t\t\"y\": 0.238652\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.347724,\n\t\t\t\t\"y\": 0.223404\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.349488,\n\t\t\t\t\"y\": 0.208071\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.355779,\n\t\t\t\t\"y\": 0.194\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.366523,\n\t\t\t\t\"y\": 0.182993\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.380618,\n\t\t\t\t\"y\": 0.176875\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.395993,\n\t\t\t\t\"y\": 0.176073\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.411216,\n\t\t\t\t\"y\": 0.178681\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.426137,\n\t\t\t\t\"y\": 0.182719\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.440936,\n\t\t\t\t\"y\": 0.187192\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.455783,\n\t\t\t\t\"y\": 0.1915\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.470801,\n\t\t\t\t\"y\": 0.195154\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.486049,\n\t\t\t\t\"y\": 0.197664\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.501474,\n\t\t\t\t\"y\": 0.198487\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.516876,\n\t\t\t\t\"y\": 0.197298\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.53208,\n\t\t\t\t\"y\": 0.194529\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.547059,\n\t\t\t\t\"y\": 0.190714\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.561886,\n\t\t\t\t\"y\": 0.186336\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.576693,\n\t\t\t\t\"y\": 0.181893\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.59166,\n\t\t\t\t\"y\": 0.178031\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606949,\n\t\t\t\t\"y\": 0.175879\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.622235,\n\t\t\t\t\"y\": 0.177614\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.635837,\n\t\t\t\t\"y\": 0.184762\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.645776,\n\t\t\t\t\"y\": 0.196508\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.651191,\n\t\t\t\t\"y\": 0.210945\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.65212,\n\t\t\t\t\"y\": 0.226354\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.648931,\n\t\t\t\t\"y\": 0.241467\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.642556,\n\t\t\t\t\"y\": 0.255552\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.634016,\n\t\t\t\t\"y\": 0.268447\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.623943,\n\t\t\t\t\"y\": 0.280184\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.612705,\n\t\t\t\t\"y\": 0.290809\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.600515,\n\t\t\t\t\"y\": 0.300323\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.587493,\n\t\t\t\t\"y\": 0.308657\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.57373,\n\t\t\t\t\"y\": 0.315694\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.559353,\n\t\t\t\t\"y\": 0.321368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.544508,\n\t\t\t\t\"y\": 0.325662\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.529337,\n\t\t\t\t\"y\": 0.328606\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.513973,\n\t\t\t\t\"y\": 0.330266\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.498526,\n\t\t\t\t\"y\": 0.330727\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.483087,\n\t\t\t\t\"y\": 0.330044\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.467751,\n\t\t\t\t\"y\": 0.328146\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.452631,\n\t\t\t\t\"y\": 0.324949\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.437864,\n\t\t\t\t\"y\": 0.320392\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.423594,\n\t\t\t\t\"y\": 0.314456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.409963,\n\t\t\t\t\"y\": 0.307164\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.397094,\n\t\t\t\t\"y\": 0.298596\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.385073,\n\t\t\t\t\"y\": 0.288867\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.374037,\n\t\t\t\t\"y\": 0.278032\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t]\n\t},\n\t\"grimacing\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.708191,\n\t\t\t\t\"y\": 0.6214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.707865,\n\t\t\t\t\"y\": 0.614079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.706885,\n\t\t\t\t\"y\": 0.606817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.705245,\n\t\t\t\t\"y\": 0.599675\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.702935,\n\t\t\t\t\"y\": 0.592722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.699944,\n\t\t\t\t\"y\": 0.586036\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.696261,\n\t\t\t\t\"y\": 0.579706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.691878,\n\t\t\t\t\"y\": 0.573841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.6868,\n\t\t\t\t\"y\": 0.568571\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.681053,\n\t\t\t\t\"y\": 0.564045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.674695,\n\t\t\t\t\"y\": 0.560432\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.667839,\n\t\t\t\t\"y\": 0.557899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.66065,\n\t\t\t\t\"y\": 0.556591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.653343,\n\t\t\t\t\"y\": 0.556591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.646154,\n\t\t\t\t\"y\": 0.557899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.639298,\n\t\t\t\t\"y\": 0.560432\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.632941,\n\t\t\t\t\"y\": 0.564045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.627193,\n\t\t\t\t\"y\": 0.568571\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.622115,\n\t\t\t\t\"y\": 0.573841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.617732,\n\t\t\t\t\"y\": 0.579706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.614049,\n\t\t\t\t\"y\": 0.586036\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.611058,\n\t\t\t\t\"y\": 0.592722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.608748,\n\t\t\t\t\"y\": 0.599675\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.607108,\n\t\t\t\t\"y\": 0.606817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606128,\n\t\t\t\t\"y\": 0.614079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.605802,\n\t\t\t\t\"y\": 0.6214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606128,\n\t\t\t\t\"y\": 0.628721\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.607108,\n\t\t\t\t\"y\": 0.635983\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.608748,\n\t\t\t\t\"y\": 0.643125\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.611058,\n\t\t\t\t\"y\": 0.650077\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.614049,\n\t\t\t\t\"y\": 0.656764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.617732,\n\t\t\t\t\"y\": 0.663094\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.622115,\n\t\t\t\t\"y\": 0.668959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.627193,\n\t\t\t\t\"y\": 0.674229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.632941,\n\t\t\t\t\"y\": 0.678755\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.639298,\n\t\t\t\t\"y\": 0.682368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.646154,\n\t\t\t\t\"y\": 0.684901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.653343,\n\t\t\t\t\"y\": 0.686209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.66065,\n\t\t\t\t\"y\": 0.686209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.667839,\n\t\t\t\t\"y\": 0.684901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.674695,\n\t\t\t\t\"y\": 0.682368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.681053,\n\t\t\t\t\"y\": 0.678755\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.6868,\n\t\t\t\t\"y\": 0.674229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.691878,\n\t\t\t\t\"y\": 0.668959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.696261,\n\t\t\t\t\"y\": 0.663094\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.699944,\n\t\t\t\t\"y\": 0.656764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.702935,\n\t\t\t\t\"y\": 0.650077\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.705245,\n\t\t\t\t\"y\": 0.643125\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.706885,\n\t\t\t\t\"y\": 0.635983\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.707865,\n\t\t\t\t\"y\": 0.628721\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.291809,\n\t\t\t\t\"y\": 0.6214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.292135,\n\t\t\t\t\"y\": 0.614079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.293115,\n\t\t\t\t\"y\": 0.606817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.294755,\n\t\t\t\t\"y\": 0.599675\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.297065,\n\t\t\t\t\"y\": 0.592722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.300056,\n\t\t\t\t\"y\": 0.586036\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.303739,\n\t\t\t\t\"y\": 0.579706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.308122,\n\t\t\t\t\"y\": 0.573841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.3132,\n\t\t\t\t\"y\": 0.568571\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.318947,\n\t\t\t\t\"y\": 0.564045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.325305,\n\t\t\t\t\"y\": 0.560432\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.332161,\n\t\t\t\t\"y\": 0.557899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.33935,\n\t\t\t\t\"y\": 0.556591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.346657,\n\t\t\t\t\"y\": 0.556591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.353846,\n\t\t\t\t\"y\": 0.557899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.360702,\n\t\t\t\t\"y\": 0.560432\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.367059,\n\t\t\t\t\"y\": 0.564045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.372807,\n\t\t\t\t\"y\": 0.568571\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.377885,\n\t\t\t\t\"y\": 0.573841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.382268,\n\t\t\t\t\"y\": 0.579706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.385951,\n\t\t\t\t\"y\": 0.586036\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.388942,\n\t\t\t\t\"y\": 0.592722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.391252,\n\t\t\t\t\"y\": 0.599675\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.392892,\n\t\t\t\t\"y\": 0.606817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.393872,\n\t\t\t\t\"y\": 0.614079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.394198,\n\t\t\t\t\"y\": 0.6214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.393872,\n\t\t\t\t\"y\": 0.628721\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.392892,\n\t\t\t\t\"y\": 0.635983\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.391252,\n\t\t\t\t\"y\": 0.643125\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.388942,\n\t\t\t\t\"y\": 0.650077\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.385951,\n\t\t\t\t\"y\": 0.656764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.382268,\n\t\t\t\t\"y\": 0.663094\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.377885,\n\t\t\t\t\"y\": 0.668959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.372807,\n\t\t\t\t\"y\": 0.674229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.367059,\n\t\t\t\t\"y\": 0.678755\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.360702,\n\t\t\t\t\"y\": 0.682368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.353846,\n\t\t\t\t\"y\": 0.684901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.346657,\n\t\t\t\t\"y\": 0.686209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.33935,\n\t\t\t\t\"y\": 0.686209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.332161,\n\t\t\t\t\"y\": 0.684901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.325305,\n\t\t\t\t\"y\": 0.682368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.318947,\n\t\t\t\t\"y\": 0.678755\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.3132,\n\t\t\t\t\"y\": 0.674229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.308122,\n\t\t\t\t\"y\": 0.668959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.303739,\n\t\t\t\t\"y\": 0.663094\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.300056,\n\t\t\t\t\"y\": 0.656764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.297065,\n\t\t\t\t\"y\": 0.650077\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.294755,\n\t\t\t\t\"y\": 0.643125\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.293115,\n\t\t\t\t\"y\": 0.635983\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.292135,\n\t\t\t\t\"y\": 0.628721\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.437209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 3.4834e-10\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.437209\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.193171,\n\t\t\t\t\"y\": 0.418165\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.18001,\n\t\t\t\t\"y\": 0.39105\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.17743,\n\t\t\t\t\"y\": 0.360891\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.178092,\n\t\t\t\t\"y\": 0.330544\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.187423,\n\t\t\t\t\"y\": 0.301846\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.208072,\n\t\t\t\t\"y\": 0.280065\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.23718,\n\t\t\t\t\"y\": 0.273499\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.267494,\n\t\t\t\t\"y\": 0.273499\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.297809,\n\t\t\t\t\"y\": 0.273499\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.328124,\n\t\t\t\t\"y\": 0.273499\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.358438,\n\t\t\t\t\"y\": 0.273499\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.388753,\n\t\t\t\t\"y\": 0.273499\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.419068,\n\t\t\t\t\"y\": 0.273499\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.449382,\n\t\t\t\t\"y\": 0.273499\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.479697,\n\t\t\t\t\"y\": 0.273499\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.510012,\n\t\t\t\t\"y\": 0.273499\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.540326,\n\t\t\t\t\"y\": 0.273499\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.570641,\n\t\t\t\t\"y\": 0.273499\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.600956,\n\t\t\t\t\"y\": 0.273499\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.631271,\n\t\t\t\t\"y\": 0.273499\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.661585,\n\t\t\t\t\"y\": 0.273499\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.6919,\n\t\t\t\t\"y\": 0.273499\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.722215,\n\t\t\t\t\"y\": 0.273499\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.752529,\n\t\t\t\t\"y\": 0.273499\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.7826,\n\t\t\t\t\"y\": 0.275757\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.806829,\n\t\t\t\t\"y\": 0.293305\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.81999,\n\t\t\t\t\"y\": 0.32042\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.82257,\n\t\t\t\t\"y\": 0.350579\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.821908,\n\t\t\t\t\"y\": 0.380926\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.812577,\n\t\t\t\t\"y\": 0.409624\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.791928,\n\t\t\t\t\"y\": 0.431405\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.76282,\n\t\t\t\t\"y\": 0.437971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.732506,\n\t\t\t\t\"y\": 0.437971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.702191,\n\t\t\t\t\"y\": 0.437971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.671876,\n\t\t\t\t\"y\": 0.437971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.641562,\n\t\t\t\t\"y\": 0.437971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.611247,\n\t\t\t\t\"y\": 0.437971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.580932,\n\t\t\t\t\"y\": 0.437971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.550618,\n\t\t\t\t\"y\": 0.437971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.520303,\n\t\t\t\t\"y\": 0.437971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.489988,\n\t\t\t\t\"y\": 0.437971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.459674,\n\t\t\t\t\"y\": 0.437971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.429359,\n\t\t\t\t\"y\": 0.437971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.399044,\n\t\t\t\t\"y\": 0.437971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.368729,\n\t\t\t\t\"y\": 0.437971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.338415,\n\t\t\t\t\"y\": 0.437971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.3081,\n\t\t\t\t\"y\": 0.437971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.277785,\n\t\t\t\t\"y\": 0.437971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.247471,\n\t\t\t\t\"y\": 0.437971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.2174,\n\t\t\t\t\"y\": 0.435713\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t]\n\t},\n\t\"grin\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.705551,\n\t\t\t\t\"y\": 0.520668\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.702107,\n\t\t\t\t\"y\": 0.52959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.696999,\n\t\t\t\t\"y\": 0.538579\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.690642,\n\t\t\t\t\"y\": 0.546732\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.683267,\n\t\t\t\t\"y\": 0.553975\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.67505,\n\t\t\t\t\"y\": 0.560243\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.66613,\n\t\t\t\t\"y\": 0.565458\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.656631,\n\t\t\t\t\"y\": 0.569518\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.646681,\n\t\t\t\t\"y\": 0.572284\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.636437,\n\t\t\t\t\"y\": 0.573566\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.626121,\n\t\t\t\t\"y\": 0.573184\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.61598,\n\t\t\t\t\"y\": 0.57124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606211,\n\t\t\t\t\"y\": 0.56789\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.596977,\n\t\t\t\t\"y\": 0.563258\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.58844,\n\t\t\t\t\"y\": 0.557438\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.580774,\n\t\t\t\t\"y\": 0.550506\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.574192,\n\t\t\t\t\"y\": 0.542537\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.56896,\n\t\t\t\t\"y\": 0.533622\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.565798,\n\t\t\t\t\"y\": 0.526687\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5661,\n\t\t\t\t\"y\": 0.537036\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.566807,\n\t\t\t\t\"y\": 0.547365\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.567931,\n\t\t\t\t\"y\": 0.557658\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.569484,\n\t\t\t\t\"y\": 0.567893\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.571486,\n\t\t\t\t\"y\": 0.578051\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.573966,\n\t\t\t\t\"y\": 0.588101\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.576959,\n\t\t\t\t\"y\": 0.59801\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.580512,\n\t\t\t\t\"y\": 0.607732\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.584686,\n\t\t\t\t\"y\": 0.617202\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.589557,\n\t\t\t\t\"y\": 0.62633\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.595225,\n\t\t\t\t\"y\": 0.634983\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.601808,\n\t\t\t\t\"y\": 0.642956\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.609433,\n\t\t\t\t\"y\": 0.649929\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.618179,\n\t\t\t\t\"y\": 0.65541\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.627936,\n\t\t\t\t\"y\": 0.658735\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.63822,\n\t\t\t\t\"y\": 0.659288\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.648255,\n\t\t\t\t\"y\": 0.656954\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.657424,\n\t\t\t\t\"y\": 0.652224\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.6655,\n\t\t\t\t\"y\": 0.645785\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.672514,\n\t\t\t\t\"y\": 0.638191\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.678581,\n\t\t\t\t\"y\": 0.629815\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.683822,\n\t\t\t\t\"y\": 0.620895\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.68834,\n\t\t\t\t\"y\": 0.611585\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.692218,\n\t\t\t\t\"y\": 0.60199\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.695521,\n\t\t\t\t\"y\": 0.59218\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.698299,\n\t\t\t\t\"y\": 0.582208\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.700591,\n\t\t\t\t\"y\": 0.572112\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.702426,\n\t\t\t\t\"y\": 0.561923\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.703826,\n\t\t\t\t\"y\": 0.551665\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.704807,\n\t\t\t\t\"y\": 0.541358\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.705381,\n\t\t\t\t\"y\": 0.531021\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.289567,\n\t\t\t\t\"y\": 0.52607\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.293003,\n\t\t\t\t\"y\": 0.534177\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.298324,\n\t\t\t\t\"y\": 0.543039\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.304977,\n\t\t\t\t\"y\": 0.550949\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.3127,\n\t\t\t\t\"y\": 0.557816\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.321284,\n\t\t\t\t\"y\": 0.563568\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.330554,\n\t\t\t\t\"y\": 0.568126\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.340351,\n\t\t\t\t\"y\": 0.571396\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.350508,\n\t\t\t\t\"y\": 0.573252\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.360827,\n\t\t\t\t\"y\": 0.573535\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.371058,\n\t\t\t\t\"y\": 0.572159\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.380985,\n\t\t\t\t\"y\": 0.569311\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.390453,\n\t\t\t\t\"y\": 0.565179\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.399335,\n\t\t\t\t\"y\": 0.559899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.407506,\n\t\t\t\t\"y\": 0.553571\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.414825,\n\t\t\t\t\"y\": 0.546271\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.421115,\n\t\t\t\t\"y\": 0.538066\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.42614,\n\t\t\t\t\"y\": 0.52903\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.429327,\n\t\t\t\t\"y\": 0.521285\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.429133,\n\t\t\t\t\"y\": 0.531637\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.428535,\n\t\t\t\t\"y\": 0.541973\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.427529,\n\t\t\t\t\"y\": 0.552278\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.426104,\n\t\t\t\t\"y\": 0.562532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.424242,\n\t\t\t\t\"y\": 0.572716\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.421923,\n\t\t\t\t\"y\": 0.582805\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.419115,\n\t\t\t\t\"y\": 0.592769\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.415779,\n\t\t\t\t\"y\": 0.602568\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.411864,\n\t\t\t\t\"y\": 0.612149\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.407306,\n\t\t\t\t\"y\": 0.621438\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.402019,\n\t\t\t\t\"y\": 0.630331\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.395899,\n\t\t\t\t\"y\": 0.638668\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.388825,\n\t\t\t\t\"y\": 0.646205\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.380683,\n\t\t\t\t\"y\": 0.65256\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.371453,\n\t\t\t\t\"y\": 0.657167\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.361381,\n\t\t\t\t\"y\": 0.659338\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.351108,\n\t\t\t\t\"y\": 0.65861\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.341402,\n\t\t\t\t\"y\": 0.655137\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.332723,\n\t\t\t\t\"y\": 0.64955\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.325163,\n\t\t\t\t\"y\": 0.642506\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.318638,\n\t\t\t\t\"y\": 0.634485\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.313021,\n\t\t\t\t\"y\": 0.625799\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.308194,\n\t\t\t\t\"y\": 0.616647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.304059,\n\t\t\t\t\"y\": 0.607159\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.300541,\n\t\t\t\t\"y\": 0.597425\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.29758,\n\t\t\t\t\"y\": 0.587506\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.295129,\n\t\t\t\t\"y\": 0.577448\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.293154,\n\t\t\t\t\"y\": 0.567286\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.291627,\n\t\t\t\t\"y\": 0.557046\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.290529,\n\t\t\t\t\"y\": 0.546751\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.289845,\n\t\t\t\t\"y\": 0.53642\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.437209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 3.4834e-10\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.437209\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.193171,\n\t\t\t\t\"y\": 0.418165\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.18001,\n\t\t\t\t\"y\": 0.39105\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.17743,\n\t\t\t\t\"y\": 0.360891\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.178092,\n\t\t\t\t\"y\": 0.330544\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.187423,\n\t\t\t\t\"y\": 0.301846\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.208072,\n\t\t\t\t\"y\": 0.280065\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.23718,\n\t\t\t\t\"y\": 0.273499\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.267494,\n\t\t\t\t\"y\": 0.273499\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.297809,\n\t\t\t\t\"y\": 0.273499\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.328124,\n\t\t\t\t\"y\": 0.273499\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.358438,\n\t\t\t\t\"y\": 0.273499\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.388753,\n\t\t\t\t\"y\": 0.273499\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.419068,\n\t\t\t\t\"y\": 0.273499\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.449382,\n\t\t\t\t\"y\": 0.273499\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.479697,\n\t\t\t\t\"y\": 0.273499\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.510012,\n\t\t\t\t\"y\": 0.273499\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.540326,\n\t\t\t\t\"y\": 0.273499\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.570641,\n\t\t\t\t\"y\": 0.273499\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.600956,\n\t\t\t\t\"y\": 0.273499\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.631271,\n\t\t\t\t\"y\": 0.273499\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.661585,\n\t\t\t\t\"y\": 0.273499\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.6919,\n\t\t\t\t\"y\": 0.273499\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.722215,\n\t\t\t\t\"y\": 0.273499\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.752529,\n\t\t\t\t\"y\": 0.273499\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.7826,\n\t\t\t\t\"y\": 0.275757\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.806829,\n\t\t\t\t\"y\": 0.293305\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.81999,\n\t\t\t\t\"y\": 0.32042\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.82257,\n\t\t\t\t\"y\": 0.350579\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.821908,\n\t\t\t\t\"y\": 0.380926\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.812577,\n\t\t\t\t\"y\": 0.409624\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.791928,\n\t\t\t\t\"y\": 0.431405\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.76282,\n\t\t\t\t\"y\": 0.437971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.732506,\n\t\t\t\t\"y\": 0.437971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.702191,\n\t\t\t\t\"y\": 0.437971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.671876,\n\t\t\t\t\"y\": 0.437971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.641562,\n\t\t\t\t\"y\": 0.437971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.611247,\n\t\t\t\t\"y\": 0.437971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.580932,\n\t\t\t\t\"y\": 0.437971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.550618,\n\t\t\t\t\"y\": 0.437971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.520303,\n\t\t\t\t\"y\": 0.437971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.489988,\n\t\t\t\t\"y\": 0.437971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.459674,\n\t\t\t\t\"y\": 0.437971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.429359,\n\t\t\t\t\"y\": 0.437971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.399044,\n\t\t\t\t\"y\": 0.437971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.368729,\n\t\t\t\t\"y\": 0.437971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.338415,\n\t\t\t\t\"y\": 0.437971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.3081,\n\t\t\t\t\"y\": 0.437971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.277785,\n\t\t\t\t\"y\": 0.437971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.247471,\n\t\t\t\t\"y\": 0.437971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.2174,\n\t\t\t\t\"y\": 0.435713\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t]\n\t},\n\t\"smiley\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.708191,\n\t\t\t\t\"y\": 0.646677\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.707976,\n\t\t\t\t\"y\": 0.634637\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.707326,\n\t\t\t\t\"y\": 0.622613\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.706228,\n\t\t\t\t\"y\": 0.610621\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.704658,\n\t\t\t\t\"y\": 0.598682\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.702577,\n\t\t\t\t\"y\": 0.586822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.699932,\n\t\t\t\t\"y\": 0.575076\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.696641,\n\t\t\t\t\"y\": 0.563495\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.692582,\n\t\t\t\t\"y\": 0.552163\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.687568,\n\t\t\t\t\"y\": 0.541223\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.681296,\n\t\t\t\t\"y\": 0.530962\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.673274,\n\t\t\t\t\"y\": 0.522031\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.66292,\n\t\t\t\t\"y\": 0.516092\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.651073,\n\t\t\t\t\"y\": 0.516092\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.640719,\n\t\t\t\t\"y\": 0.522031\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.632697,\n\t\t\t\t\"y\": 0.530962\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.626425,\n\t\t\t\t\"y\": 0.541223\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.621411,\n\t\t\t\t\"y\": 0.552163\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.617352,\n\t\t\t\t\"y\": 0.563495\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.614061,\n\t\t\t\t\"y\": 0.575076\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.611416,\n\t\t\t\t\"y\": 0.586822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.609336,\n\t\t\t\t\"y\": 0.598682\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.607765,\n\t\t\t\t\"y\": 0.610621\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606667,\n\t\t\t\t\"y\": 0.622613\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606017,\n\t\t\t\t\"y\": 0.634637\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.605802,\n\t\t\t\t\"y\": 0.646677\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606017,\n\t\t\t\t\"y\": 0.658718\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606667,\n\t\t\t\t\"y\": 0.670742\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.607765,\n\t\t\t\t\"y\": 0.682734\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.609336,\n\t\t\t\t\"y\": 0.694673\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.611416,\n\t\t\t\t\"y\": 0.706533\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.614061,\n\t\t\t\t\"y\": 0.718279\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.617352,\n\t\t\t\t\"y\": 0.72986\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.621411,\n\t\t\t\t\"y\": 0.741192\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.626425,\n\t\t\t\t\"y\": 0.752132\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.632697,\n\t\t\t\t\"y\": 0.762393\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.640719,\n\t\t\t\t\"y\": 0.771324\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.651073,\n\t\t\t\t\"y\": 0.777263\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.66292,\n\t\t\t\t\"y\": 0.777263\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.673274,\n\t\t\t\t\"y\": 0.771324\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.681296,\n\t\t\t\t\"y\": 0.762393\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.687568,\n\t\t\t\t\"y\": 0.752132\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.692582,\n\t\t\t\t\"y\": 0.741192\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.696641,\n\t\t\t\t\"y\": 0.72986\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.699932,\n\t\t\t\t\"y\": 0.718279\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.702577,\n\t\t\t\t\"y\": 0.706533\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.704658,\n\t\t\t\t\"y\": 0.694673\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.706228,\n\t\t\t\t\"y\": 0.682734\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.707326,\n\t\t\t\t\"y\": 0.670742\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.707976,\n\t\t\t\t\"y\": 0.658718\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.291809,\n\t\t\t\t\"y\": 0.646677\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.292024,\n\t\t\t\t\"y\": 0.634637\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.292674,\n\t\t\t\t\"y\": 0.622613\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.293772,\n\t\t\t\t\"y\": 0.610621\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.295342,\n\t\t\t\t\"y\": 0.598682\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.297423,\n\t\t\t\t\"y\": 0.586822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.300068,\n\t\t\t\t\"y\": 0.575076\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.303359,\n\t\t\t\t\"y\": 0.563495\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.307418,\n\t\t\t\t\"y\": 0.552163\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.312432,\n\t\t\t\t\"y\": 0.541223\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.318704,\n\t\t\t\t\"y\": 0.530962\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.326726,\n\t\t\t\t\"y\": 0.522031\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.33708,\n\t\t\t\t\"y\": 0.516092\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.348927,\n\t\t\t\t\"y\": 0.516092\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.359281,\n\t\t\t\t\"y\": 0.522031\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.367303,\n\t\t\t\t\"y\": 0.530962\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.373575,\n\t\t\t\t\"y\": 0.541223\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.378589,\n\t\t\t\t\"y\": 0.552163\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.382648,\n\t\t\t\t\"y\": 0.563495\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.385939,\n\t\t\t\t\"y\": 0.575076\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.388584,\n\t\t\t\t\"y\": 0.586822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.390664,\n\t\t\t\t\"y\": 0.598682\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.392235,\n\t\t\t\t\"y\": 0.610621\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.393333,\n\t\t\t\t\"y\": 0.622613\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.393983,\n\t\t\t\t\"y\": 0.634637\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.394198,\n\t\t\t\t\"y\": 0.646677\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.393983,\n\t\t\t\t\"y\": 0.658718\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.393333,\n\t\t\t\t\"y\": 0.670742\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.392235,\n\t\t\t\t\"y\": 0.682734\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.390664,\n\t\t\t\t\"y\": 0.694673\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.388584,\n\t\t\t\t\"y\": 0.706533\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.385939,\n\t\t\t\t\"y\": 0.718279\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.382648,\n\t\t\t\t\"y\": 0.72986\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.378589,\n\t\t\t\t\"y\": 0.741192\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.373575,\n\t\t\t\t\"y\": 0.752132\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.367303,\n\t\t\t\t\"y\": 0.762393\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.359281,\n\t\t\t\t\"y\": 0.771324\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.348927,\n\t\t\t\t\"y\": 0.777263\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.33708,\n\t\t\t\t\"y\": 0.777263\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.326726,\n\t\t\t\t\"y\": 0.771324\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.318704,\n\t\t\t\t\"y\": 0.762393\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.312432,\n\t\t\t\t\"y\": 0.752132\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.307418,\n\t\t\t\t\"y\": 0.741192\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.303359,\n\t\t\t\t\"y\": 0.72986\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.300068,\n\t\t\t\t\"y\": 0.718279\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.297423,\n\t\t\t\t\"y\": 0.706533\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.295342,\n\t\t\t\t\"y\": 0.694673\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.293772,\n\t\t\t\t\"y\": 0.682734\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.292674,\n\t\t\t\t\"y\": 0.670742\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.292024,\n\t\t\t\t\"y\": 0.658718\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.437209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 3.4834e-10\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.437209\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.168942,\n\t\t\t\t\"y\": 0.440155\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.170863,\n\t\t\t\t\"y\": 0.4065\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.176591,\n\t\t\t\t\"y\": 0.373281\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.18603,\n\t\t\t\t\"y\": 0.340924\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.199024,\n\t\t\t\t\"y\": 0.309829\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.215366,\n\t\t\t\t\"y\": 0.280361\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.234809,\n\t\t\t\t\"y\": 0.252847\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.257076,\n\t\t\t\t\"y\": 0.227573\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.281866,\n\t\t\t\t\"y\": 0.204778\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.30887,\n\t\t\t\t\"y\": 0.184665\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.337769,\n\t\t\t\t\"y\": 0.167396\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.368243,\n\t\t\t\t\"y\": 0.1531\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.399972,\n\t\t\t\t\"y\": 0.141876\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.43264,\n\t\t\t\t\"y\": 0.133796\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.465935,\n\t\t\t\t\"y\": 0.128912\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.499543,\n\t\t\t\t\"y\": 0.127251\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.533156,\n\t\t\t\t\"y\": 0.128824\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.566462,\n\t\t\t\t\"y\": 0.133621\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.599152,\n\t\t\t\t\"y\": 0.141614\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.630911,\n\t\t\t\t\"y\": 0.152754\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.661423,\n\t\t\t\t\"y\": 0.166968\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.690368,\n\t\t\t\t\"y\": 0.184158\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.717428,\n\t\t\t\t\"y\": 0.204196\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.742283,\n\t\t\t\t\"y\": 0.22692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.764622,\n\t\t\t\t\"y\": 0.25213\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.784146,\n\t\t\t\t\"y\": 0.279586\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.800575,\n\t\t\t\t\"y\": 0.309005\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.813663,\n\t\t\t\t\"y\": 0.340062\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.823201,\n\t\t\t\t\"y\": 0.372389\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.829032,\n\t\t\t\t\"y\": 0.40559\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.831057,\n\t\t\t\t\"y\": 0.439239\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.80007,\n\t\t\t\t\"y\": 0.429581\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767515,\n\t\t\t\t\"y\": 0.421019\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.734605,\n\t\t\t\t\"y\": 0.413936\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.701476,\n\t\t\t\t\"y\": 0.407967\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.668192,\n\t\t\t\t\"y\": 0.402934\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.634791,\n\t\t\t\t\"y\": 0.398746\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.601298,\n\t\t\t\t\"y\": 0.395373\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.567733,\n\t\t\t\t\"y\": 0.392829\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.534112,\n\t\t\t\t\"y\": 0.391181\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.500457,\n\t\t\t\t\"y\": 0.390569\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.466802,\n\t\t\t\t\"y\": 0.391149\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.433179,\n\t\t\t\t\"y\": 0.392772\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.399612,\n\t\t\t\t\"y\": 0.395293\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.366118,\n\t\t\t\t\"y\": 0.398644\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.332714,\n\t\t\t\t\"y\": 0.402809\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.299426,\n\t\t\t\t\"y\": 0.407819\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.266292,\n\t\t\t\t\"y\": 0.41376\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.233375,\n\t\t\t\t\"y\": 0.42081\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.200807,\n\t\t\t\t\"y\": 0.429324\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t]\n\t},\n\t\"smile\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.705552,\n\t\t\t\t\"y\": 0.521446\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.702432,\n\t\t\t\t\"y\": 0.528884\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.697429,\n\t\t\t\t\"y\": 0.537932\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.691157,\n\t\t\t\t\"y\": 0.546151\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.683852,\n\t\t\t\t\"y\": 0.553465\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.675692,\n\t\t\t\t\"y\": 0.559808\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.666821,\n\t\t\t\t\"y\": 0.565105\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.657361,\n\t\t\t\t\"y\": 0.569256\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.64744,\n\t\t\t\t\"y\": 0.572125\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.637212,\n\t\t\t\t\"y\": 0.573526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.626892,\n\t\t\t\t\"y\": 0.573269\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.616731,\n\t\t\t\t\"y\": 0.571436\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606927,\n\t\t\t\t\"y\": 0.568187\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.597648,\n\t\t\t\t\"y\": 0.563648\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.589053,\n\t\t\t\t\"y\": 0.557914\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.581315,\n\t\t\t\t\"y\": 0.551064\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.574643,\n\t\t\t\t\"y\": 0.54317\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.569299,\n\t\t\t\t\"y\": 0.534321\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.565791,\n\t\t\t\t\"y\": 0.525909\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.566063,\n\t\t\t\t\"y\": 0.53626\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.56674,\n\t\t\t\t\"y\": 0.546591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.567832,\n\t\t\t\t\"y\": 0.556887\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.569352,\n\t\t\t\t\"y\": 0.567128\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.57132,\n\t\t\t\t\"y\": 0.577291\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.573763,\n\t\t\t\t\"y\": 0.587351\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.576716,\n\t\t\t\t\"y\": 0.597272\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.580225,\n\t\t\t\t\"y\": 0.60701\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.584349,\n\t\t\t\t\"y\": 0.616502\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.589165,\n\t\t\t\t\"y\": 0.62566\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.594769,\n\t\t\t\t\"y\": 0.634354\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.601279,\n\t\t\t\t\"y\": 0.642388\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.608822,\n\t\t\t\t\"y\": 0.64945\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.617484,\n\t\t\t\t\"y\": 0.655065\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.627176,\n\t\t\t\t\"y\": 0.658576\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.637446,\n\t\t\t\t\"y\": 0.659349\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.647527,\n\t\t\t\t\"y\": 0.657221\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.656773,\n\t\t\t\t\"y\": 0.652647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.664932,\n\t\t\t\t\"y\": 0.646314\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.672022,\n\t\t\t\t\"y\": 0.638792\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.678156,\n\t\t\t\t\"y\": 0.630465\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.683455,\n\t\t\t\t\"y\": 0.62158\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.688024,\n\t\t\t\t\"y\": 0.612295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.691948,\n\t\t\t\t\"y\": 0.602718\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.695292,\n\t\t\t\t\"y\": 0.592922\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.698108,\n\t\t\t\t\"y\": 0.582961\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.700435,\n\t\t\t\t\"y\": 0.572874\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.702303,\n\t\t\t\t\"y\": 0.562691\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.703736,\n\t\t\t\t\"y\": 0.552437\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.704748,\n\t\t\t\t\"y\": 0.542133\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.705352,\n\t\t\t\t\"y\": 0.531797\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.289567,\n\t\t\t\t\"y\": 0.52607\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.293003,\n\t\t\t\t\"y\": 0.534177\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.298324,\n\t\t\t\t\"y\": 0.543039\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.304977,\n\t\t\t\t\"y\": 0.550949\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.3127,\n\t\t\t\t\"y\": 0.557816\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.321284,\n\t\t\t\t\"y\": 0.563568\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.330554,\n\t\t\t\t\"y\": 0.568126\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.340351,\n\t\t\t\t\"y\": 0.571396\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.350508,\n\t\t\t\t\"y\": 0.573252\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.360827,\n\t\t\t\t\"y\": 0.573535\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.371058,\n\t\t\t\t\"y\": 0.572159\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.380985,\n\t\t\t\t\"y\": 0.569311\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.390453,\n\t\t\t\t\"y\": 0.565179\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.399335,\n\t\t\t\t\"y\": 0.559899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.407506,\n\t\t\t\t\"y\": 0.553571\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.414825,\n\t\t\t\t\"y\": 0.546271\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.421115,\n\t\t\t\t\"y\": 0.538066\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.42614,\n\t\t\t\t\"y\": 0.52903\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.429327,\n\t\t\t\t\"y\": 0.521285\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.429133,\n\t\t\t\t\"y\": 0.531637\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.428535,\n\t\t\t\t\"y\": 0.541973\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.427529,\n\t\t\t\t\"y\": 0.552278\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.426104,\n\t\t\t\t\"y\": 0.562532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.424242,\n\t\t\t\t\"y\": 0.572716\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.421923,\n\t\t\t\t\"y\": 0.582805\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.419115,\n\t\t\t\t\"y\": 0.592769\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.415779,\n\t\t\t\t\"y\": 0.602568\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.411864,\n\t\t\t\t\"y\": 0.612149\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.407306,\n\t\t\t\t\"y\": 0.621438\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.402019,\n\t\t\t\t\"y\": 0.630331\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.395899,\n\t\t\t\t\"y\": 0.638668\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.388825,\n\t\t\t\t\"y\": 0.646205\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.380683,\n\t\t\t\t\"y\": 0.65256\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.371453,\n\t\t\t\t\"y\": 0.657167\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.361381,\n\t\t\t\t\"y\": 0.659338\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.351108,\n\t\t\t\t\"y\": 0.65861\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.341402,\n\t\t\t\t\"y\": 0.655137\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.332723,\n\t\t\t\t\"y\": 0.64955\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.325163,\n\t\t\t\t\"y\": 0.642506\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.318638,\n\t\t\t\t\"y\": 0.634485\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.313021,\n\t\t\t\t\"y\": 0.625799\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.308194,\n\t\t\t\t\"y\": 0.616647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.304059,\n\t\t\t\t\"y\": 0.607159\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.300541,\n\t\t\t\t\"y\": 0.597425\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.29758,\n\t\t\t\t\"y\": 0.587506\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.295129,\n\t\t\t\t\"y\": 0.577448\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.293154,\n\t\t\t\t\"y\": 0.567286\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.291627,\n\t\t\t\t\"y\": 0.557046\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.290529,\n\t\t\t\t\"y\": 0.546751\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.289845,\n\t\t\t\t\"y\": 0.53642\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.437209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 3.4834e-10\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.437209\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.168942,\n\t\t\t\t\"y\": 0.440155\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.170863,\n\t\t\t\t\"y\": 0.4065\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.176591,\n\t\t\t\t\"y\": 0.373281\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.18603,\n\t\t\t\t\"y\": 0.340924\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.199024,\n\t\t\t\t\"y\": 0.309829\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.215366,\n\t\t\t\t\"y\": 0.280361\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.234809,\n\t\t\t\t\"y\": 0.252847\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.257076,\n\t\t\t\t\"y\": 0.227573\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.281866,\n\t\t\t\t\"y\": 0.204778\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.30887,\n\t\t\t\t\"y\": 0.184665\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.337769,\n\t\t\t\t\"y\": 0.167396\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.368243,\n\t\t\t\t\"y\": 0.1531\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.399972,\n\t\t\t\t\"y\": 0.141876\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.43264,\n\t\t\t\t\"y\": 0.133796\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.465935,\n\t\t\t\t\"y\": 0.128912\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.499543,\n\t\t\t\t\"y\": 0.127251\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.533156,\n\t\t\t\t\"y\": 0.128824\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.566462,\n\t\t\t\t\"y\": 0.133621\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.599152,\n\t\t\t\t\"y\": 0.141614\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.630911,\n\t\t\t\t\"y\": 0.152754\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.661423,\n\t\t\t\t\"y\": 0.166968\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.690368,\n\t\t\t\t\"y\": 0.184158\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.717428,\n\t\t\t\t\"y\": 0.204196\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.742283,\n\t\t\t\t\"y\": 0.22692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.764622,\n\t\t\t\t\"y\": 0.25213\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.784146,\n\t\t\t\t\"y\": 0.279586\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.800575,\n\t\t\t\t\"y\": 0.309005\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.813663,\n\t\t\t\t\"y\": 0.340062\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.823201,\n\t\t\t\t\"y\": 0.372389\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.829032,\n\t\t\t\t\"y\": 0.40559\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.831057,\n\t\t\t\t\"y\": 0.439239\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.80007,\n\t\t\t\t\"y\": 0.429581\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767515,\n\t\t\t\t\"y\": 0.421019\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.734605,\n\t\t\t\t\"y\": 0.413936\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.701476,\n\t\t\t\t\"y\": 0.407967\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.668192,\n\t\t\t\t\"y\": 0.402934\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.634791,\n\t\t\t\t\"y\": 0.398746\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.601298,\n\t\t\t\t\"y\": 0.395373\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.567733,\n\t\t\t\t\"y\": 0.392829\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.534112,\n\t\t\t\t\"y\": 0.391181\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.500457,\n\t\t\t\t\"y\": 0.390569\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.466802,\n\t\t\t\t\"y\": 0.391149\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.433179,\n\t\t\t\t\"y\": 0.392772\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.399612,\n\t\t\t\t\"y\": 0.395293\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.366118,\n\t\t\t\t\"y\": 0.398644\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.332714,\n\t\t\t\t\"y\": 0.402809\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.299426,\n\t\t\t\t\"y\": 0.407819\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.266292,\n\t\t\t\t\"y\": 0.41376\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.233375,\n\t\t\t\t\"y\": 0.42081\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.200807,\n\t\t\t\t\"y\": 0.429324\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t]\n\t},\n\t\"laughing\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.742417,\n\t\t\t\t\"y\": 0.511001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.733497,\n\t\t\t\t\"y\": 0.50166\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.719736,\n\t\t\t\t\"y\": 0.500487\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.706177,\n\t\t\t\t\"y\": 0.503326\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.69355,\n\t\t\t\t\"y\": 0.509075\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.681831,\n\t\t\t\t\"y\": 0.516531\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.670695,\n\t\t\t\t\"y\": 0.524844\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.65983,\n\t\t\t\t\"y\": 0.53351\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.648979,\n\t\t\t\t\"y\": 0.542195\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.63794,\n\t\t\t\t\"y\": 0.550638\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.626692,\n\t\t\t\t\"y\": 0.5588\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.615372,\n\t\t\t\t\"y\": 0.566862\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.604137,\n\t\t\t\t\"y\": 0.575041\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593264,\n\t\t\t\t\"y\": 0.583694\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.583686,\n\t\t\t\t\"y\": 0.593723\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.581571,\n\t\t\t\t\"y\": 0.606831\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.590403,\n\t\t\t\t\"y\": 0.617413\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.601399,\n\t\t\t\t\"y\": 0.625907\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.612668,\n\t\t\t\t\"y\": 0.634041\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.624097,\n\t\t\t\t\"y\": 0.641945\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.635698,\n\t\t\t\t\"y\": 0.649595\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.647473,\n\t\t\t\t\"y\": 0.656973\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.65942,\n\t\t\t\t\"y\": 0.664067\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.671537,\n\t\t\t\t\"y\": 0.670866\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.68383,\n\t\t\t\t\"y\": 0.677341\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.696321,\n\t\t\t\t\"y\": 0.683422\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.70906,\n\t\t\t\t\"y\": 0.688959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.722142,\n\t\t\t\t\"y\": 0.693617\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.735726,\n\t\t\t\t\"y\": 0.69637\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.748157,\n\t\t\t\t\"y\": 0.6919\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.746338,\n\t\t\t\t\"y\": 0.678733\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.737537,\n\t\t\t\t\"y\": 0.668026\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.726788,\n\t\t\t\t\"y\": 0.659232\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71525,\n\t\t\t\t\"y\": 0.651491\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.703358,\n\t\t\t\t\"y\": 0.644306\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.691282,\n\t\t\t\t\"y\": 0.637434\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.67912,\n\t\t\t\t\"y\": 0.630715\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.666956,\n\t\t\t\t\"y\": 0.623999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654915,\n\t\t\t\t\"y\": 0.617067\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.643401,\n\t\t\t\t\"y\": 0.609305\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.636968,\n\t\t\t\t\"y\": 0.597799\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.645452,\n\t\t\t\t\"y\": 0.587074\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.656667,\n\t\t\t\t\"y\": 0.578874\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.668288,\n\t\t\t\t\"y\": 0.571255\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.680005,\n\t\t\t\t\"y\": 0.563785\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.691711,\n\t\t\t\t\"y\": 0.556298\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.703332,\n\t\t\t\t\"y\": 0.548679\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.714775,\n\t\t\t\t\"y\": 0.540793\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.72587,\n\t\t\t\t\"y\": 0.532427\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.736135,\n\t\t\t\t\"y\": 0.523073\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.250774,\n\t\t\t\t\"y\": 0.51683\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.259885,\n\t\t\t\t\"y\": 0.508232\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.273621,\n\t\t\t\t\"y\": 0.509722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.286842,\n\t\t\t\t\"y\": 0.513958\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.299677,\n\t\t\t\t\"y\": 0.519268\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.31224,\n\t\t\t\t\"y\": 0.525198\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.324591,\n\t\t\t\t\"y\": 0.531559\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.336763,\n\t\t\t\t\"y\": 0.53826\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.348764,\n\t\t\t\t\"y\": 0.545262\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.360594,\n\t\t\t\t\"y\": 0.552551\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.37225,\n\t\t\t\t\"y\": 0.560117\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.383733,\n\t\t\t\t\"y\": 0.567943\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.39505,\n\t\t\t\t\"y\": 0.576008\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406189,\n\t\t\t\t\"y\": 0.584318\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.416221,\n\t\t\t\t\"y\": 0.593884\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.418425,\n\t\t\t\t\"y\": 0.606936\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.410002,\n\t\t\t\t\"y\": 0.61787\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.399364,\n\t\t\t\t\"y\": 0.626807\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.388203,\n\t\t\t\t\"y\": 0.635086\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.37689,\n\t\t\t\t\"y\": 0.643158\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.365604,\n\t\t\t\t\"y\": 0.651268\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.354488,\n\t\t\t\t\"y\": 0.659608\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.343596,\n\t\t\t\t\"y\": 0.668241\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.33276,\n\t\t\t\t\"y\": 0.676945\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.321741,\n\t\t\t\t\"y\": 0.685414\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.310243,\n\t\t\t\t\"y\": 0.693212\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.297932,\n\t\t\t\t\"y\": 0.699623\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.284627,\n\t\t\t\t\"y\": 0.703495\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.270794,\n\t\t\t\t\"y\": 0.703791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.258766,\n\t\t\t\t\"y\": 0.697692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.261055,\n\t\t\t\t\"y\": 0.684823\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.270747,\n\t\t\t\t\"y\": 0.674897\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.281664,\n\t\t\t\t\"y\": 0.6663\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.293021,\n\t\t\t\t\"y\": 0.658293\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.304597,\n\t\t\t\t\"y\": 0.650605\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.316285,\n\t\t\t\t\"y\": 0.643089\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.328008,\n\t\t\t\t\"y\": 0.635627\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.339676,\n\t\t\t\t\"y\": 0.628081\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.351086,\n\t\t\t\t\"y\": 0.620152\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.361187,\n\t\t\t\t\"y\": 0.61068\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.35984,\n\t\t\t\t\"y\": 0.598178\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.348829,\n\t\t\t\t\"y\": 0.589754\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.336877,\n\t\t\t\t\"y\": 0.582669\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.324734,\n\t\t\t\t\"y\": 0.575916\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.312563,\n\t\t\t\t\"y\": 0.569215\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.30045,\n\t\t\t\t\"y\": 0.562407\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.288486,\n\t\t\t\t\"y\": 0.555341\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.276808,\n\t\t\t\t\"y\": 0.547812\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.265728,\n\t\t\t\t\"y\": 0.539434\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.256107,\n\t\t\t\t\"y\": 0.529436\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.437209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 3.4834e-10\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.437209\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.168942,\n\t\t\t\t\"y\": 0.440155\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.170863,\n\t\t\t\t\"y\": 0.4065\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.176591,\n\t\t\t\t\"y\": 0.373281\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.18603,\n\t\t\t\t\"y\": 0.340924\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.199024,\n\t\t\t\t\"y\": 0.309829\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.215366,\n\t\t\t\t\"y\": 0.280361\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.234809,\n\t\t\t\t\"y\": 0.252847\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.257076,\n\t\t\t\t\"y\": 0.227573\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.281866,\n\t\t\t\t\"y\": 0.204778\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.30887,\n\t\t\t\t\"y\": 0.184665\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.337769,\n\t\t\t\t\"y\": 0.167396\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.368243,\n\t\t\t\t\"y\": 0.1531\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.399972,\n\t\t\t\t\"y\": 0.141876\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.43264,\n\t\t\t\t\"y\": 0.133796\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.465935,\n\t\t\t\t\"y\": 0.128912\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.499543,\n\t\t\t\t\"y\": 0.127251\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.533156,\n\t\t\t\t\"y\": 0.128824\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.566462,\n\t\t\t\t\"y\": 0.133621\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.599152,\n\t\t\t\t\"y\": 0.141614\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.630911,\n\t\t\t\t\"y\": 0.152754\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.661423,\n\t\t\t\t\"y\": 0.166968\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.690368,\n\t\t\t\t\"y\": 0.184158\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.717428,\n\t\t\t\t\"y\": 0.204196\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.742283,\n\t\t\t\t\"y\": 0.22692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.764622,\n\t\t\t\t\"y\": 0.25213\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.784146,\n\t\t\t\t\"y\": 0.279586\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.800575,\n\t\t\t\t\"y\": 0.309005\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.813663,\n\t\t\t\t\"y\": 0.340062\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.823201,\n\t\t\t\t\"y\": 0.372389\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.829032,\n\t\t\t\t\"y\": 0.40559\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.831057,\n\t\t\t\t\"y\": 0.439239\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.80007,\n\t\t\t\t\"y\": 0.429581\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767515,\n\t\t\t\t\"y\": 0.421019\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.734605,\n\t\t\t\t\"y\": 0.413936\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.701476,\n\t\t\t\t\"y\": 0.407967\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.668192,\n\t\t\t\t\"y\": 0.402934\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.634791,\n\t\t\t\t\"y\": 0.398746\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.601298,\n\t\t\t\t\"y\": 0.395373\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.567733,\n\t\t\t\t\"y\": 0.392829\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.534112,\n\t\t\t\t\"y\": 0.391181\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.500457,\n\t\t\t\t\"y\": 0.390569\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.466802,\n\t\t\t\t\"y\": 0.391149\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.433179,\n\t\t\t\t\"y\": 0.392772\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.399612,\n\t\t\t\t\"y\": 0.395293\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.366118,\n\t\t\t\t\"y\": 0.398644\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.332714,\n\t\t\t\t\"y\": 0.402809\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.299426,\n\t\t\t\t\"y\": 0.407819\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.266292,\n\t\t\t\t\"y\": 0.41376\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.233375,\n\t\t\t\t\"y\": 0.42081\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.200807,\n\t\t\t\t\"y\": 0.429324\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t]\n\t},\n\t\"wink\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.815428,\n\t\t\t\t\"y\": 0.526703\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.810466,\n\t\t\t\t\"y\": 0.529034\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.802606,\n\t\t\t\t\"y\": 0.535216\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.79449,\n\t\t\t\t\"y\": 0.541055\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.786132,\n\t\t\t\t\"y\": 0.546542\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.777549,\n\t\t\t\t\"y\": 0.551667\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.768754,\n\t\t\t\t\"y\": 0.556419\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.759766,\n\t\t\t\t\"y\": 0.560792\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.750599,\n\t\t\t\t\"y\": 0.564775\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.741271,\n\t\t\t\t\"y\": 0.568363\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.731798,\n\t\t\t\t\"y\": 0.571548\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.722198,\n\t\t\t\t\"y\": 0.574326\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.712489,\n\t\t\t\t\"y\": 0.57669\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.702688,\n\t\t\t\t\"y\": 0.578636\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.692813,\n\t\t\t\t\"y\": 0.580162\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.682881,\n\t\t\t\t\"y\": 0.581264\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.672912,\n\t\t\t\t\"y\": 0.58194\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.662923,\n\t\t\t\t\"y\": 0.582188\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.652933,\n\t\t\t\t\"y\": 0.58201\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.64296,\n\t\t\t\t\"y\": 0.581404\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.633021,\n\t\t\t\t\"y\": 0.580372\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.623135,\n\t\t\t\t\"y\": 0.578915\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.613321,\n\t\t\t\t\"y\": 0.577037\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.603595,\n\t\t\t\t\"y\": 0.574741\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606249,\n\t\t\t\t\"y\": 0.579559\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.613562,\n\t\t\t\t\"y\": 0.586379\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.621393,\n\t\t\t\t\"y\": 0.592594\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.629694,\n\t\t\t\t\"y\": 0.598163\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.63841,\n\t\t\t\t\"y\": 0.603053\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.647488,\n\t\t\t\t\"y\": 0.607232\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.65687,\n\t\t\t\t\"y\": 0.610673\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.666494,\n\t\t\t\t\"y\": 0.613354\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.676302,\n\t\t\t\t\"y\": 0.615259\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.68623,\n\t\t\t\t\"y\": 0.616375\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.696214,\n\t\t\t\t\"y\": 0.616695\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.706193,\n\t\t\t\t\"y\": 0.616218\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.716102,\n\t\t\t\t\"y\": 0.614946\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.725878,\n\t\t\t\t\"y\": 0.612887\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.73546,\n\t\t\t\t\"y\": 0.610054\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.744786,\n\t\t\t\t\"y\": 0.606466\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.753797,\n\t\t\t\t\"y\": 0.602145\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.762437,\n\t\t\t\t\"y\": 0.597119\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.770649,\n\t\t\t\t\"y\": 0.591419\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.778382,\n\t\t\t\t\"y\": 0.585082\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.785587,\n\t\t\t\t\"y\": 0.578148\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.792217,\n\t\t\t\t\"y\": 0.570661\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.798232,\n\t\t\t\t\"y\": 0.562669\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.803592,\n\t\t\t\t\"y\": 0.554222\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.808264,\n\t\t\t\t\"y\": 0.545374\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.812218,\n\t\t\t\t\"y\": 0.536182\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.189386,\n\t\t\t\t\"y\": 0.569298\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.192745,\n\t\t\t\t\"y\": 0.57277\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.197148,\n\t\t\t\t\"y\": 0.581758\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.20193,\n\t\t\t\t\"y\": 0.590548\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.207082,\n\t\t\t\t\"y\": 0.599126\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.212595,\n\t\t\t\t\"y\": 0.607476\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.218459,\n\t\t\t\t\"y\": 0.615582\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.224663,\n\t\t\t\t\"y\": 0.623431\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.231195,\n\t\t\t\t\"y\": 0.631006\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.238045,\n\t\t\t\t\"y\": 0.638295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.245198,\n\t\t\t\t\"y\": 0.645285\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.252644,\n\t\t\t\t\"y\": 0.651962\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.260366,\n\t\t\t\t\"y\": 0.658315\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.268353,\n\t\t\t\t\"y\": 0.664331\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.276588,\n\t\t\t\t\"y\": 0.67\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.285058,\n\t\t\t\t\"y\": 0.675312\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.293746,\n\t\t\t\t\"y\": 0.680257\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.302637,\n\t\t\t\t\"y\": 0.684825\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.311714,\n\t\t\t\t\"y\": 0.689009\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.320962,\n\t\t\t\t\"y\": 0.692801\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.330363,\n\t\t\t\t\"y\": 0.696194\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.339899,\n\t\t\t\t\"y\": 0.699181\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.349555,\n\t\t\t\t\"y\": 0.701758\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.359311,\n\t\t\t\t\"y\": 0.70392\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.355629,\n\t\t\t\t\"y\": 0.707055\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.346102,\n\t\t\t\t\"y\": 0.710066\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.336365,\n\t\t\t\t\"y\": 0.712308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.326482,\n\t\t\t\t\"y\": 0.713766\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.316514,\n\t\t\t\t\"y\": 0.71443\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.306525,\n\t\t\t\t\"y\": 0.714297\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.296578,\n\t\t\t\t\"y\": 0.713367\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.286737,\n\t\t\t\t\"y\": 0.711646\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.277063,\n\t\t\t\t\"y\": 0.709145\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.26762,\n\t\t\t\t\"y\": 0.70588\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.258466,\n\t\t\t\t\"y\": 0.701872\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.249659,\n\t\t\t\t\"y\": 0.697147\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.241256,\n\t\t\t\t\"y\": 0.691733\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.23331,\n\t\t\t\t\"y\": 0.685667\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.225871,\n\t\t\t\t\"y\": 0.678985\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.218988,\n\t\t\t\t\"y\": 0.671731\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.212702,\n\t\t\t\t\"y\": 0.663951\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.207055,\n\t\t\t\t\"y\": 0.655694\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.202082,\n\t\t\t\t\"y\": 0.647012\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.197815,\n\t\t\t\t\"y\": 0.637961\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.194282,\n\t\t\t\t\"y\": 0.628599\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.191503,\n\t\t\t\t\"y\": 0.618984\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.189498,\n\t\t\t\t\"y\": 0.609178\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.188278,\n\t\t\t\t\"y\": 0.599243\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.187852,\n\t\t\t\t\"y\": 0.589243\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.188222,\n\t\t\t\t\"y\": 0.57924\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.74231,\n\t\t\t\t\"y\": 0.436585\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.737558,\n\t\t\t\t\"y\": 0.437394\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.730472,\n\t\t\t\t\"y\": 0.440898\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.723214,\n\t\t\t\t\"y\": 0.444027\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.715812,\n\t\t\t\t\"y\": 0.446797\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.70829,\n\t\t\t\t\"y\": 0.449225\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.700671,\n\t\t\t\t\"y\": 0.451325\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.692973,\n\t\t\t\t\"y\": 0.453113\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.685212,\n\t\t\t\t\"y\": 0.454601\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.677402,\n\t\t\t\t\"y\": 0.455803\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.669554,\n\t\t\t\t\"y\": 0.45673\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.66168,\n\t\t\t\t\"y\": 0.457393\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.653788,\n\t\t\t\t\"y\": 0.457802\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.645887,\n\t\t\t\t\"y\": 0.457965\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.637986,\n\t\t\t\t\"y\": 0.457891\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.630089,\n\t\t\t\t\"y\": 0.457587\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.622204,\n\t\t\t\t\"y\": 0.457059\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.614337,\n\t\t\t\t\"y\": 0.456314\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606493,\n\t\t\t\t\"y\": 0.455357\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.598676,\n\t\t\t\t\"y\": 0.454193\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.590893,\n\t\t\t\t\"y\": 0.452826\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.583147,\n\t\t\t\t\"y\": 0.451259\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.575443,\n\t\t\t\t\"y\": 0.449496\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.567786,\n\t\t\t\t\"y\": 0.44754\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.569002,\n\t\t\t\t\"y\": 0.452677\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.573562,\n\t\t\t\t\"y\": 0.459134\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.579027,\n\t\t\t\t\"y\": 0.464844\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.585192,\n\t\t\t\t\"y\": 0.469791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.591878,\n\t\t\t\t\"y\": 0.474004\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.598949,\n\t\t\t\t\"y\": 0.477533\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.6063,\n\t\t\t\t\"y\": 0.480433\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.613852,\n\t\t\t\t\"y\": 0.482759\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.621547,\n\t\t\t\t\"y\": 0.484559\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.629338,\n\t\t\t\t\"y\": 0.485875\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.637192,\n\t\t\t\t\"y\": 0.486743\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.645081,\n\t\t\t\t\"y\": 0.487192\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.652982,\n\t\t\t\t\"y\": 0.487221\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.660875,\n\t\t\t\t\"y\": 0.486853\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.668746,\n\t\t\t\t\"y\": 0.486146\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.676574,\n\t\t\t\t\"y\": 0.48507\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.684337,\n\t\t\t\t\"y\": 0.483592\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.692001,\n\t\t\t\t\"y\": 0.48167\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.699526,\n\t\t\t\t\"y\": 0.479256\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.706853,\n\t\t\t\t\"y\": 0.476295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.713904,\n\t\t\t\t\"y\": 0.472725\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.720573,\n\t\t\t\t\"y\": 0.468484\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.726719,\n\t\t\t\t\"y\": 0.463514\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.732162,\n\t\t\t\t\"y\": 0.457783\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.736698,\n\t\t\t\t\"y\": 0.451309\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.740127,\n\t\t\t\t\"y\": 0.444186\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.311439,\n\t\t\t\t\"y\": 0.480442\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.311765,\n\t\t\t\t\"y\": 0.473121\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.312745,\n\t\t\t\t\"y\": 0.465859\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.314385,\n\t\t\t\t\"y\": 0.458717\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.316695,\n\t\t\t\t\"y\": 0.451765\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.319686,\n\t\t\t\t\"y\": 0.445078\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.323369,\n\t\t\t\t\"y\": 0.438748\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.327752,\n\t\t\t\t\"y\": 0.432884\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.332829,\n\t\t\t\t\"y\": 0.427613\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.338577,\n\t\t\t\t\"y\": 0.423087\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.344934,\n\t\t\t\t\"y\": 0.419474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.351791,\n\t\t\t\t\"y\": 0.416941\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.35898,\n\t\t\t\t\"y\": 0.415633\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.366286,\n\t\t\t\t\"y\": 0.415633\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.373475,\n\t\t\t\t\"y\": 0.416941\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.380332,\n\t\t\t\t\"y\": 0.419474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.386689,\n\t\t\t\t\"y\": 0.423087\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.392437,\n\t\t\t\t\"y\": 0.427613\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.397515,\n\t\t\t\t\"y\": 0.432884\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.401897,\n\t\t\t\t\"y\": 0.438748\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.405581,\n\t\t\t\t\"y\": 0.445078\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.408571,\n\t\t\t\t\"y\": 0.451765\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.410881,\n\t\t\t\t\"y\": 0.458717\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.412522,\n\t\t\t\t\"y\": 0.465859\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.413502,\n\t\t\t\t\"y\": 0.473121\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.413828,\n\t\t\t\t\"y\": 0.480442\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.413502,\n\t\t\t\t\"y\": 0.487763\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.412522,\n\t\t\t\t\"y\": 0.495025\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.410881,\n\t\t\t\t\"y\": 0.502167\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.408571,\n\t\t\t\t\"y\": 0.50912\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.405581,\n\t\t\t\t\"y\": 0.515806\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.401897,\n\t\t\t\t\"y\": 0.522136\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.397515,\n\t\t\t\t\"y\": 0.528001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.392437,\n\t\t\t\t\"y\": 0.533271\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.386689,\n\t\t\t\t\"y\": 0.537797\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.380332,\n\t\t\t\t\"y\": 0.54141\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.373475,\n\t\t\t\t\"y\": 0.543943\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.366286,\n\t\t\t\t\"y\": 0.545251\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.35898,\n\t\t\t\t\"y\": 0.545251\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.351791,\n\t\t\t\t\"y\": 0.543943\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.344934,\n\t\t\t\t\"y\": 0.54141\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.338577,\n\t\t\t\t\"y\": 0.537797\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.332829,\n\t\t\t\t\"y\": 0.533271\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.327752,\n\t\t\t\t\"y\": 0.528001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.323369,\n\t\t\t\t\"y\": 0.522136\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.319686,\n\t\t\t\t\"y\": 0.515806\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.316695,\n\t\t\t\t\"y\": 0.50912\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.314385,\n\t\t\t\t\"y\": 0.502167\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.312745,\n\t\t\t\t\"y\": 0.495025\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.311765,\n\t\t\t\t\"y\": 0.487763\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.437209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 3.4834e-10\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.437209\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.389789,\n\t\t\t\t\"y\": 0.263318\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.392696,\n\t\t\t\t\"y\": 0.2535\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.39717,\n\t\t\t\t\"y\": 0.244289\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.402912,\n\t\t\t\t\"y\": 0.23581\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.409665,\n\t\t\t\t\"y\": 0.228113\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.417222,\n\t\t\t\t\"y\": 0.221206\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.425422,\n\t\t\t\t\"y\": 0.215077\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.434138,\n\t\t\t\t\"y\": 0.209709\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.44327,\n\t\t\t\t\"y\": 0.205087\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.452736,\n\t\t\t\t\"y\": 0.201197\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.462468,\n\t\t\t\t\"y\": 0.198033\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.472407,\n\t\t\t\t\"y\": 0.195597\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.482497,\n\t\t\t\t\"y\": 0.193897\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.492684,\n\t\t\t\t\"y\": 0.192949\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.502914,\n\t\t\t\t\"y\": 0.192779\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.513127,\n\t\t\t\t\"y\": 0.193396\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.523265,\n\t\t\t\t\"y\": 0.194775\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.533276,\n\t\t\t\t\"y\": 0.196895\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.543104,\n\t\t\t\t\"y\": 0.199746\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.552692,\n\t\t\t\t\"y\": 0.203323\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.561977,\n\t\t\t\t\"y\": 0.207629\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.570883,\n\t\t\t\t\"y\": 0.212674\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.579319,\n\t\t\t\t\"y\": 0.218473\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.58717,\n\t\t\t\t\"y\": 0.225044\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.594292,\n\t\t\t\t\"y\": 0.2324\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.600498,\n\t\t\t\t\"y\": 0.240545\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.605552,\n\t\t\t\t\"y\": 0.249451\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.609172,\n\t\t\t\t\"y\": 0.25903\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.605349,\n\t\t\t\t\"y\": 0.2601\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.596354,\n\t\t\t\t\"y\": 0.255216\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.587004,\n\t\t\t\t\"y\": 0.251052\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.577426,\n\t\t\t\t\"y\": 0.247444\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.567685,\n\t\t\t\t\"y\": 0.244303\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.55782,\n\t\t\t\t\"y\": 0.241577\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.547856,\n\t\t\t\t\"y\": 0.239242\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.53781,\n\t\t\t\t\"y\": 0.23729\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.527696,\n\t\t\t\t\"y\": 0.235727\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.517527,\n\t\t\t\t\"y\": 0.234581\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.507317,\n\t\t\t\t\"y\": 0.2339\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.497086,\n\t\t\t\t\"y\": 0.23377\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.486863,\n\t\t\t\t\"y\": 0.234227\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.476675,\n\t\t\t\t\"y\": 0.235181\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.466536,\n\t\t\t\t\"y\": 0.236568\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.456459,\n\t\t\t\t\"y\": 0.238355\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.446458,\n\t\t\t\t\"y\": 0.240525\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.436547,\n\t\t\t\t\"y\": 0.24308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.426749,\n\t\t\t\t\"y\": 0.246038\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.417095,\n\t\t\t\t\"y\": 0.249437\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.407636,\n\t\t\t\t\"y\": 0.253347\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.398466,\n\t\t\t\t\"y\": 0.257894\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t]\n\t},\n\t\"slightly_smiling_face\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.708191,\n\t\t\t\t\"y\": 0.6214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.707865,\n\t\t\t\t\"y\": 0.614079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.706885,\n\t\t\t\t\"y\": 0.606817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.705245,\n\t\t\t\t\"y\": 0.599675\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.702935,\n\t\t\t\t\"y\": 0.592722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.699944,\n\t\t\t\t\"y\": 0.586036\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.696261,\n\t\t\t\t\"y\": 0.579706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.691878,\n\t\t\t\t\"y\": 0.573841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.6868,\n\t\t\t\t\"y\": 0.568571\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.681053,\n\t\t\t\t\"y\": 0.564045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.674695,\n\t\t\t\t\"y\": 0.560432\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.667839,\n\t\t\t\t\"y\": 0.557899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.66065,\n\t\t\t\t\"y\": 0.556591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.653343,\n\t\t\t\t\"y\": 0.556591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.646154,\n\t\t\t\t\"y\": 0.557899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.639298,\n\t\t\t\t\"y\": 0.560432\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.632941,\n\t\t\t\t\"y\": 0.564045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.627193,\n\t\t\t\t\"y\": 0.568571\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.622115,\n\t\t\t\t\"y\": 0.573841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.617732,\n\t\t\t\t\"y\": 0.579706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.614049,\n\t\t\t\t\"y\": 0.586036\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.611058,\n\t\t\t\t\"y\": 0.592722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.608748,\n\t\t\t\t\"y\": 0.599675\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.607108,\n\t\t\t\t\"y\": 0.606817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606128,\n\t\t\t\t\"y\": 0.614079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.605802,\n\t\t\t\t\"y\": 0.6214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606128,\n\t\t\t\t\"y\": 0.628721\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.607108,\n\t\t\t\t\"y\": 0.635983\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.608748,\n\t\t\t\t\"y\": 0.643125\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.611058,\n\t\t\t\t\"y\": 0.650077\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.614049,\n\t\t\t\t\"y\": 0.656764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.617732,\n\t\t\t\t\"y\": 0.663094\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.622115,\n\t\t\t\t\"y\": 0.668959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.627193,\n\t\t\t\t\"y\": 0.674229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.632941,\n\t\t\t\t\"y\": 0.678755\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.639298,\n\t\t\t\t\"y\": 0.682368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.646154,\n\t\t\t\t\"y\": 0.684901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.653343,\n\t\t\t\t\"y\": 0.686209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.66065,\n\t\t\t\t\"y\": 0.686209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.667839,\n\t\t\t\t\"y\": 0.684901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.674695,\n\t\t\t\t\"y\": 0.682368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.681053,\n\t\t\t\t\"y\": 0.678755\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.6868,\n\t\t\t\t\"y\": 0.674229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.691878,\n\t\t\t\t\"y\": 0.668959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.696261,\n\t\t\t\t\"y\": 0.663094\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.699944,\n\t\t\t\t\"y\": 0.656764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.702935,\n\t\t\t\t\"y\": 0.650077\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.705245,\n\t\t\t\t\"y\": 0.643125\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.706885,\n\t\t\t\t\"y\": 0.635983\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.707865,\n\t\t\t\t\"y\": 0.628721\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.291809,\n\t\t\t\t\"y\": 0.6214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.292135,\n\t\t\t\t\"y\": 0.614079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.293115,\n\t\t\t\t\"y\": 0.606817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.294755,\n\t\t\t\t\"y\": 0.599675\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.297065,\n\t\t\t\t\"y\": 0.592722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.300056,\n\t\t\t\t\"y\": 0.586036\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.303739,\n\t\t\t\t\"y\": 0.579706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.308122,\n\t\t\t\t\"y\": 0.573841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.3132,\n\t\t\t\t\"y\": 0.568571\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.318947,\n\t\t\t\t\"y\": 0.564045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.325305,\n\t\t\t\t\"y\": 0.560432\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.332161,\n\t\t\t\t\"y\": 0.557899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.33935,\n\t\t\t\t\"y\": 0.556591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.346657,\n\t\t\t\t\"y\": 0.556591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.353846,\n\t\t\t\t\"y\": 0.557899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.360702,\n\t\t\t\t\"y\": 0.560432\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.367059,\n\t\t\t\t\"y\": 0.564045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.372807,\n\t\t\t\t\"y\": 0.568571\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.377885,\n\t\t\t\t\"y\": 0.573841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.382268,\n\t\t\t\t\"y\": 0.579706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.385951,\n\t\t\t\t\"y\": 0.586036\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.388942,\n\t\t\t\t\"y\": 0.592722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.391252,\n\t\t\t\t\"y\": 0.599675\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.392892,\n\t\t\t\t\"y\": 0.606817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.393872,\n\t\t\t\t\"y\": 0.614079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.394198,\n\t\t\t\t\"y\": 0.6214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.393872,\n\t\t\t\t\"y\": 0.628721\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.392892,\n\t\t\t\t\"y\": 0.635983\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.391252,\n\t\t\t\t\"y\": 0.643125\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.388942,\n\t\t\t\t\"y\": 0.650077\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.385951,\n\t\t\t\t\"y\": 0.656764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.382268,\n\t\t\t\t\"y\": 0.663094\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.377885,\n\t\t\t\t\"y\": 0.668959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.372807,\n\t\t\t\t\"y\": 0.674229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.367059,\n\t\t\t\t\"y\": 0.678755\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.360702,\n\t\t\t\t\"y\": 0.682368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.353846,\n\t\t\t\t\"y\": 0.684901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.346657,\n\t\t\t\t\"y\": 0.686209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.33935,\n\t\t\t\t\"y\": 0.686209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.332161,\n\t\t\t\t\"y\": 0.684901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.325305,\n\t\t\t\t\"y\": 0.682368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.318947,\n\t\t\t\t\"y\": 0.678755\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.3132,\n\t\t\t\t\"y\": 0.674229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.308122,\n\t\t\t\t\"y\": 0.668959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.303739,\n\t\t\t\t\"y\": 0.663094\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.300056,\n\t\t\t\t\"y\": 0.656764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.297065,\n\t\t\t\t\"y\": 0.650077\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.294755,\n\t\t\t\t\"y\": 0.643125\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.293115,\n\t\t\t\t\"y\": 0.635983\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.292135,\n\t\t\t\t\"y\": 0.628721\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.437209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 3.4834e-10\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.437209\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.312763,\n\t\t\t\t\"y\": 0.337119\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.316114,\n\t\t\t\t\"y\": 0.320601\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.324841,\n\t\t\t\t\"y\": 0.306135\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.336783,\n\t\t\t\t\"y\": 0.29415\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.350547,\n\t\t\t\t\"y\": 0.284296\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.365396,\n\t\t\t\t\"y\": 0.276165\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.380935,\n\t\t\t\t\"y\": 0.269444\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.396935,\n\t\t\t\t\"y\": 0.26391\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.413255,\n\t\t\t\t\"y\": 0.259408\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.429801,\n\t\t\t\t\"y\": 0.255826\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.446506,\n\t\t\t\t\"y\": 0.253085\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.463322,\n\t\t\t\t\"y\": 0.251129\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.480207,\n\t\t\t\t\"y\": 0.249922\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.497129,\n\t\t\t\t\"y\": 0.24944\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.514056,\n\t\t\t\t\"y\": 0.249678\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.530957,\n\t\t\t\t\"y\": 0.250637\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5478,\n\t\t\t\t\"y\": 0.252336\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.564548,\n\t\t\t\t\"y\": 0.254806\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.581154,\n\t\t\t\t\"y\": 0.258095\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.59756,\n\t\t\t\t\"y\": 0.262274\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.613682,\n\t\t\t\t\"y\": 0.267443\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.629397,\n\t\t\t\t\"y\": 0.27374\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.644514,\n\t\t\t\t\"y\": 0.281363\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.658706,\n\t\t\t\t\"y\": 0.290591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.671382,\n\t\t\t\t\"y\": 0.301804\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.68141,\n\t\t\t\t\"y\": 0.315413\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.686836,\n\t\t\t\t\"y\": 0.331384\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.678513,\n\t\t\t\t\"y\": 0.330108\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.664398,\n\t\t\t\t\"y\": 0.320752\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.649564,\n\t\t\t\t\"y\": 0.312585\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.634235,\n\t\t\t\t\"y\": 0.305389\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.61854,\n\t\t\t\t\"y\": 0.299035\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.602557,\n\t\t\t\t\"y\": 0.293448\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.586338,\n\t\t\t\t\"y\": 0.28859\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.569922,\n\t\t\t\t\"y\": 0.284448\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.553339,\n\t\t\t\t\"y\": 0.28104\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.536615,\n\t\t\t\t\"y\": 0.27841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.51978,\n\t\t\t\t\"y\": 0.276639\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.502871,\n\t\t\t\t\"y\": 0.275864\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.485949,\n\t\t\t\t\"y\": 0.276255\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.469084,\n\t\t\t\t\"y\": 0.277707\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.452319,\n\t\t\t\t\"y\": 0.280058\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.435686,\n\t\t\t\t\"y\": 0.283209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.41921,\n\t\t\t\t\"y\": 0.287104\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.40292,\n\t\t\t\t\"y\": 0.29172\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.386852,\n\t\t\t\t\"y\": 0.297057\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.371052,\n\t\t\t\t\"y\": 0.303144\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.355588,\n\t\t\t\t\"y\": 0.310044\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.340567,\n\t\t\t\t\"y\": 0.317862\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.326173,\n\t\t\t\t\"y\": 0.326782\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t]\n\t},\n\t\"upside_down_face\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.826179,\n\t\t\t\t\"y\": 0.632958\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818519,\n\t\t\t\t\"y\": 0.639386\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.810591,\n\t\t\t\t\"y\": 0.645481\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.802412,\n\t\t\t\t\"y\": 0.651231\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.793995,\n\t\t\t\t\"y\": 0.656626\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.785355,\n\t\t\t\t\"y\": 0.661655\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.776509,\n\t\t\t\t\"y\": 0.666311\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767473,\n\t\t\t\t\"y\": 0.670584\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.758263,\n\t\t\t\t\"y\": 0.674466\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.748896,\n\t\t\t\t\"y\": 0.677951\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.739389,\n\t\t\t\t\"y\": 0.681032\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.72976,\n\t\t\t\t\"y\": 0.683704\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.720025,\n\t\t\t\t\"y\": 0.685961\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.710203,\n\t\t\t\t\"y\": 0.6878\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.700312,\n\t\t\t\t\"y\": 0.689217\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.690369,\n\t\t\t\t\"y\": 0.690209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.680393,\n\t\t\t\t\"y\": 0.690775\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.670402,\n\t\t\t\t\"y\": 0.690914\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.660415,\n\t\t\t\t\"y\": 0.690625\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.650448,\n\t\t\t\t\"y\": 0.68991\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.640522,\n\t\t\t\t\"y\": 0.688768\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.630653,\n\t\t\t\t\"y\": 0.687204\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.620859,\n\t\t\t\t\"y\": 0.685218\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.611228,\n\t\t\t\t\"y\": 0.682857\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.618124,\n\t\t\t\t\"y\": 0.690099\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.625575,\n\t\t\t\t\"y\": 0.696767\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.633532,\n\t\t\t\t\"y\": 0.702819\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.641945,\n\t\t\t\t\"y\": 0.708218\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.65076,\n\t\t\t\t\"y\": 0.712927\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.659921,\n\t\t\t\t\"y\": 0.716919\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.669371,\n\t\t\t\t\"y\": 0.720166\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.679049,\n\t\t\t\t\"y\": 0.722649\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.688893,\n\t\t\t\t\"y\": 0.724352\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.698841,\n\t\t\t\t\"y\": 0.725264\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.708831,\n\t\t\t\t\"y\": 0.72538\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.718797,\n\t\t\t\t\"y\": 0.724697\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.728678,\n\t\t\t\t\"y\": 0.723222\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.73841,\n\t\t\t\t\"y\": 0.720963\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.747932,\n\t\t\t\t\"y\": 0.717934\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.757183,\n\t\t\t\t\"y\": 0.714155\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.766104,\n\t\t\t\t\"y\": 0.70965\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.774638,\n\t\t\t\t\"y\": 0.704447\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.782732,\n\t\t\t\t\"y\": 0.69858\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.790334,\n\t\t\t\t\"y\": 0.692086\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.797396,\n\t\t\t\t\"y\": 0.685005\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.803872,\n\t\t\t\t\"y\": 0.677384\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.809722,\n\t\t\t\t\"y\": 0.66927\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.814908,\n\t\t\t\t\"y\": 0.660714\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.819398,\n\t\t\t\t\"y\": 0.651773\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.823163,\n\t\t\t\t\"y\": 0.642501\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.173821,\n\t\t\t\t\"y\": 0.632958\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181481,\n\t\t\t\t\"y\": 0.639386\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.189409,\n\t\t\t\t\"y\": 0.645481\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.197588,\n\t\t\t\t\"y\": 0.651231\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.206005,\n\t\t\t\t\"y\": 0.656626\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.214645,\n\t\t\t\t\"y\": 0.661655\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.223491,\n\t\t\t\t\"y\": 0.666311\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232527,\n\t\t\t\t\"y\": 0.670584\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.241737,\n\t\t\t\t\"y\": 0.674466\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.251104,\n\t\t\t\t\"y\": 0.677951\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.260611,\n\t\t\t\t\"y\": 0.681032\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.27024,\n\t\t\t\t\"y\": 0.683704\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.279975,\n\t\t\t\t\"y\": 0.685961\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.289797,\n\t\t\t\t\"y\": 0.6878\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.299688,\n\t\t\t\t\"y\": 0.689217\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.309631,\n\t\t\t\t\"y\": 0.690209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.319607,\n\t\t\t\t\"y\": 0.690775\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.329598,\n\t\t\t\t\"y\": 0.690914\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.339585,\n\t\t\t\t\"y\": 0.690625\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.349552,\n\t\t\t\t\"y\": 0.68991\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.359478,\n\t\t\t\t\"y\": 0.688768\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.369347,\n\t\t\t\t\"y\": 0.687204\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.379141,\n\t\t\t\t\"y\": 0.685218\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.388772,\n\t\t\t\t\"y\": 0.682857\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.381876,\n\t\t\t\t\"y\": 0.690099\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.374425,\n\t\t\t\t\"y\": 0.696767\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.366468,\n\t\t\t\t\"y\": 0.702819\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.358055,\n\t\t\t\t\"y\": 0.708218\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.34924,\n\t\t\t\t\"y\": 0.712927\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.340079,\n\t\t\t\t\"y\": 0.716919\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.330629,\n\t\t\t\t\"y\": 0.720166\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.320951,\n\t\t\t\t\"y\": 0.722649\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.311107,\n\t\t\t\t\"y\": 0.724352\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.301159,\n\t\t\t\t\"y\": 0.725264\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.291169,\n\t\t\t\t\"y\": 0.72538\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.281203,\n\t\t\t\t\"y\": 0.724697\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.271322,\n\t\t\t\t\"y\": 0.723222\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.26159,\n\t\t\t\t\"y\": 0.720963\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.252068,\n\t\t\t\t\"y\": 0.717934\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.242817,\n\t\t\t\t\"y\": 0.714155\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.233896,\n\t\t\t\t\"y\": 0.70965\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.225362,\n\t\t\t\t\"y\": 0.704447\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.217268,\n\t\t\t\t\"y\": 0.69858\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.209666,\n\t\t\t\t\"y\": 0.692086\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.202604,\n\t\t\t\t\"y\": 0.685005\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.196128,\n\t\t\t\t\"y\": 0.677384\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.190278,\n\t\t\t\t\"y\": 0.66927\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.185092,\n\t\t\t\t\"y\": 0.660714\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.180602,\n\t\t\t\t\"y\": 0.651773\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.176837,\n\t\t\t\t\"y\": 0.642501\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.762083,\n\t\t\t\t\"y\": 0.481681\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.754616,\n\t\t\t\t\"y\": 0.486573\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.746893,\n\t\t\t\t\"y\": 0.491049\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.738951,\n\t\t\t\t\"y\": 0.495122\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.730823,\n\t\t\t\t\"y\": 0.498809\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.722538,\n\t\t\t\t\"y\": 0.502124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.714119,\n\t\t\t\t\"y\": 0.505085\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.705589,\n\t\t\t\t\"y\": 0.507703\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.696964,\n\t\t\t\t\"y\": 0.509995\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.688263,\n\t\t\t\t\"y\": 0.511972\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.679499,\n\t\t\t\t\"y\": 0.513645\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.670683,\n\t\t\t\t\"y\": 0.515027\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.661829,\n\t\t\t\t\"y\": 0.516126\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.652945,\n\t\t\t\t\"y\": 0.516952\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.64404,\n\t\t\t\t\"y\": 0.517514\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.635123,\n\t\t\t\t\"y\": 0.517817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.626201,\n\t\t\t\t\"y\": 0.517871\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.61728,\n\t\t\t\t\"y\": 0.517679\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.608368,\n\t\t\t\t\"y\": 0.517248\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.599471,\n\t\t\t\t\"y\": 0.516582\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.590593,\n\t\t\t\t\"y\": 0.515686\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.581741,\n\t\t\t\t\"y\": 0.514562\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.572921,\n\t\t\t\t\"y\": 0.513215\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.564787,\n\t\t\t\t\"y\": 0.512129\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.569635,\n\t\t\t\t\"y\": 0.519622\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.57562,\n\t\t\t\t\"y\": 0.526241\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.582493,\n\t\t\t\t\"y\": 0.531931\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.590028,\n\t\t\t\t\"y\": 0.53671\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.598042,\n\t\t\t\t\"y\": 0.540631\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606395,\n\t\t\t\t\"y\": 0.543767\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.614981,\n\t\t\t\t\"y\": 0.546189\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.623725,\n\t\t\t\t\"y\": 0.547962\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.632568,\n\t\t\t\t\"y\": 0.549145\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.641466,\n\t\t\t\t\"y\": 0.549786\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.650386,\n\t\t\t\t\"y\": 0.549927\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.659302,\n\t\t\t\t\"y\": 0.549603\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.668187,\n\t\t\t\t\"y\": 0.548792\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.677025,\n\t\t\t\t\"y\": 0.547569\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.685801,\n\t\t\t\t\"y\": 0.545959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.69449,\n\t\t\t\t\"y\": 0.54393\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.703059,\n\t\t\t\t\"y\": 0.541442\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.711466,\n\t\t\t\t\"y\": 0.538451\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.719654,\n\t\t\t\t\"y\": 0.534905\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.72755,\n\t\t\t\t\"y\": 0.530745\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.735051,\n\t\t\t\t\"y\": 0.52591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.742022,\n\t\t\t\t\"y\": 0.520337\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.74829,\n\t\t\t\t\"y\": 0.513982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.75364,\n\t\t\t\t\"y\": 0.506837\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.757843,\n\t\t\t\t\"y\": 0.498962\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.760695,\n\t\t\t\t\"y\": 0.490501\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.237917,\n\t\t\t\t\"y\": 0.481681\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.245384,\n\t\t\t\t\"y\": 0.486573\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.253107,\n\t\t\t\t\"y\": 0.491049\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.261049,\n\t\t\t\t\"y\": 0.495122\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.269177,\n\t\t\t\t\"y\": 0.498809\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.277462,\n\t\t\t\t\"y\": 0.502124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.285881,\n\t\t\t\t\"y\": 0.505085\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.294411,\n\t\t\t\t\"y\": 0.507703\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.303036,\n\t\t\t\t\"y\": 0.509995\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.311737,\n\t\t\t\t\"y\": 0.511972\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.320501,\n\t\t\t\t\"y\": 0.513645\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.329317,\n\t\t\t\t\"y\": 0.515027\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.338171,\n\t\t\t\t\"y\": 0.516126\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.347055,\n\t\t\t\t\"y\": 0.516952\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.35596,\n\t\t\t\t\"y\": 0.517514\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.364877,\n\t\t\t\t\"y\": 0.517817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.373799,\n\t\t\t\t\"y\": 0.517871\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.38272,\n\t\t\t\t\"y\": 0.517679\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.391632,\n\t\t\t\t\"y\": 0.517248\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.400529,\n\t\t\t\t\"y\": 0.516582\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.409407,\n\t\t\t\t\"y\": 0.515686\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.418259,\n\t\t\t\t\"y\": 0.514562\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.427079,\n\t\t\t\t\"y\": 0.513215\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.435213,\n\t\t\t\t\"y\": 0.512129\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.430365,\n\t\t\t\t\"y\": 0.519622\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.42438,\n\t\t\t\t\"y\": 0.526241\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.417507,\n\t\t\t\t\"y\": 0.531931\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.409972,\n\t\t\t\t\"y\": 0.53671\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.401958,\n\t\t\t\t\"y\": 0.540631\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.393605,\n\t\t\t\t\"y\": 0.543767\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.385019,\n\t\t\t\t\"y\": 0.546189\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.376275,\n\t\t\t\t\"y\": 0.547962\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.367432,\n\t\t\t\t\"y\": 0.549145\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.358534,\n\t\t\t\t\"y\": 0.549786\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.349614,\n\t\t\t\t\"y\": 0.549927\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.340698,\n\t\t\t\t\"y\": 0.549603\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.331813,\n\t\t\t\t\"y\": 0.548792\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.322975,\n\t\t\t\t\"y\": 0.547569\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.314199,\n\t\t\t\t\"y\": 0.545959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.30551,\n\t\t\t\t\"y\": 0.54393\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.296941,\n\t\t\t\t\"y\": 0.541442\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.288534,\n\t\t\t\t\"y\": 0.538451\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.280346,\n\t\t\t\t\"y\": 0.534905\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.27245,\n\t\t\t\t\"y\": 0.530745\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.264949,\n\t\t\t\t\"y\": 0.52591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.257978,\n\t\t\t\t\"y\": 0.520337\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.25171,\n\t\t\t\t\"y\": 0.513982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.24636,\n\t\t\t\t\"y\": 0.506837\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.242157,\n\t\t\t\t\"y\": 0.498962\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.239305,\n\t\t\t\t\"y\": 0.490501\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.437209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 3.4834e-10\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.437209\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.389789,\n\t\t\t\t\"y\": 0.263318\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.392696,\n\t\t\t\t\"y\": 0.2535\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.39717,\n\t\t\t\t\"y\": 0.244289\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.402912,\n\t\t\t\t\"y\": 0.23581\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.409665,\n\t\t\t\t\"y\": 0.228113\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.417222,\n\t\t\t\t\"y\": 0.221206\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.425422,\n\t\t\t\t\"y\": 0.215077\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.434138,\n\t\t\t\t\"y\": 0.209709\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.44327,\n\t\t\t\t\"y\": 0.205087\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.452736,\n\t\t\t\t\"y\": 0.201197\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.462468,\n\t\t\t\t\"y\": 0.198033\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.472407,\n\t\t\t\t\"y\": 0.195597\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.482497,\n\t\t\t\t\"y\": 0.193897\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.492684,\n\t\t\t\t\"y\": 0.192949\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.502914,\n\t\t\t\t\"y\": 0.192779\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.513127,\n\t\t\t\t\"y\": 0.193396\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.523265,\n\t\t\t\t\"y\": 0.194775\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.533276,\n\t\t\t\t\"y\": 0.196895\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.543104,\n\t\t\t\t\"y\": 0.199746\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.552692,\n\t\t\t\t\"y\": 0.203323\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.561977,\n\t\t\t\t\"y\": 0.207629\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.570883,\n\t\t\t\t\"y\": 0.212674\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.579319,\n\t\t\t\t\"y\": 0.218473\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.58717,\n\t\t\t\t\"y\": 0.225044\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.594292,\n\t\t\t\t\"y\": 0.2324\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.600498,\n\t\t\t\t\"y\": 0.240545\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.605552,\n\t\t\t\t\"y\": 0.249451\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.609172,\n\t\t\t\t\"y\": 0.25903\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.605349,\n\t\t\t\t\"y\": 0.2601\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.596354,\n\t\t\t\t\"y\": 0.255216\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.587004,\n\t\t\t\t\"y\": 0.251052\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.577426,\n\t\t\t\t\"y\": 0.247444\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.567685,\n\t\t\t\t\"y\": 0.244303\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.55782,\n\t\t\t\t\"y\": 0.241577\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.547856,\n\t\t\t\t\"y\": 0.239242\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.53781,\n\t\t\t\t\"y\": 0.23729\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.527696,\n\t\t\t\t\"y\": 0.235727\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.517527,\n\t\t\t\t\"y\": 0.234581\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.507317,\n\t\t\t\t\"y\": 0.2339\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.497086,\n\t\t\t\t\"y\": 0.23377\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.486863,\n\t\t\t\t\"y\": 0.234227\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.476675,\n\t\t\t\t\"y\": 0.235181\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.466536,\n\t\t\t\t\"y\": 0.236568\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.456459,\n\t\t\t\t\"y\": 0.238355\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.446458,\n\t\t\t\t\"y\": 0.240525\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.436547,\n\t\t\t\t\"y\": 0.24308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.426749,\n\t\t\t\t\"y\": 0.246038\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.417095,\n\t\t\t\t\"y\": 0.249437\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.407636,\n\t\t\t\t\"y\": 0.253347\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.398466,\n\t\t\t\t\"y\": 0.257894\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t]\n\t},\n\t\"relaxed\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.826179,\n\t\t\t\t\"y\": 0.632958\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818519,\n\t\t\t\t\"y\": 0.639386\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.810591,\n\t\t\t\t\"y\": 0.645481\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.802412,\n\t\t\t\t\"y\": 0.651231\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.793995,\n\t\t\t\t\"y\": 0.656626\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.785355,\n\t\t\t\t\"y\": 0.661655\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.776509,\n\t\t\t\t\"y\": 0.666311\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767473,\n\t\t\t\t\"y\": 0.670584\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.758263,\n\t\t\t\t\"y\": 0.674466\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.748896,\n\t\t\t\t\"y\": 0.677951\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.739389,\n\t\t\t\t\"y\": 0.681032\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.72976,\n\t\t\t\t\"y\": 0.683704\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.720025,\n\t\t\t\t\"y\": 0.685961\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.710203,\n\t\t\t\t\"y\": 0.6878\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.700312,\n\t\t\t\t\"y\": 0.689217\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.690369,\n\t\t\t\t\"y\": 0.690209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.680393,\n\t\t\t\t\"y\": 0.690775\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.670402,\n\t\t\t\t\"y\": 0.690914\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.660415,\n\t\t\t\t\"y\": 0.690625\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.650448,\n\t\t\t\t\"y\": 0.68991\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.640522,\n\t\t\t\t\"y\": 0.688768\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.630653,\n\t\t\t\t\"y\": 0.687204\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.620859,\n\t\t\t\t\"y\": 0.685218\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.611228,\n\t\t\t\t\"y\": 0.682857\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.618124,\n\t\t\t\t\"y\": 0.690099\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.625575,\n\t\t\t\t\"y\": 0.696767\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.633532,\n\t\t\t\t\"y\": 0.702819\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.641945,\n\t\t\t\t\"y\": 0.708218\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.65076,\n\t\t\t\t\"y\": 0.712927\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.659921,\n\t\t\t\t\"y\": 0.716919\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.669371,\n\t\t\t\t\"y\": 0.720166\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.679049,\n\t\t\t\t\"y\": 0.722649\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.688893,\n\t\t\t\t\"y\": 0.724352\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.698841,\n\t\t\t\t\"y\": 0.725264\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.708831,\n\t\t\t\t\"y\": 0.72538\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.718797,\n\t\t\t\t\"y\": 0.724697\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.728678,\n\t\t\t\t\"y\": 0.723222\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.73841,\n\t\t\t\t\"y\": 0.720963\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.747932,\n\t\t\t\t\"y\": 0.717934\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.757183,\n\t\t\t\t\"y\": 0.714155\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.766104,\n\t\t\t\t\"y\": 0.70965\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.774638,\n\t\t\t\t\"y\": 0.704447\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.782732,\n\t\t\t\t\"y\": 0.69858\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.790334,\n\t\t\t\t\"y\": 0.692086\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.797396,\n\t\t\t\t\"y\": 0.685005\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.803872,\n\t\t\t\t\"y\": 0.677384\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.809722,\n\t\t\t\t\"y\": 0.66927\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.814908,\n\t\t\t\t\"y\": 0.660714\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.819398,\n\t\t\t\t\"y\": 0.651773\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.823163,\n\t\t\t\t\"y\": 0.642501\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.173821,\n\t\t\t\t\"y\": 0.632958\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181481,\n\t\t\t\t\"y\": 0.639386\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.189409,\n\t\t\t\t\"y\": 0.645481\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.197588,\n\t\t\t\t\"y\": 0.651231\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.206005,\n\t\t\t\t\"y\": 0.656626\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.214645,\n\t\t\t\t\"y\": 0.661655\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.223491,\n\t\t\t\t\"y\": 0.666311\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232527,\n\t\t\t\t\"y\": 0.670584\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.241737,\n\t\t\t\t\"y\": 0.674466\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.251104,\n\t\t\t\t\"y\": 0.677951\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.260611,\n\t\t\t\t\"y\": 0.681032\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.27024,\n\t\t\t\t\"y\": 0.683704\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.279975,\n\t\t\t\t\"y\": 0.685961\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.289797,\n\t\t\t\t\"y\": 0.6878\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.299688,\n\t\t\t\t\"y\": 0.689217\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.309631,\n\t\t\t\t\"y\": 0.690209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.319607,\n\t\t\t\t\"y\": 0.690775\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.329598,\n\t\t\t\t\"y\": 0.690914\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.339585,\n\t\t\t\t\"y\": 0.690625\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.349552,\n\t\t\t\t\"y\": 0.68991\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.359478,\n\t\t\t\t\"y\": 0.688768\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.369347,\n\t\t\t\t\"y\": 0.687204\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.379141,\n\t\t\t\t\"y\": 0.685218\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.388772,\n\t\t\t\t\"y\": 0.682857\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.381876,\n\t\t\t\t\"y\": 0.690099\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.374425,\n\t\t\t\t\"y\": 0.696767\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.366468,\n\t\t\t\t\"y\": 0.702819\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.358055,\n\t\t\t\t\"y\": 0.708218\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.34924,\n\t\t\t\t\"y\": 0.712927\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.340079,\n\t\t\t\t\"y\": 0.716919\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.330629,\n\t\t\t\t\"y\": 0.720166\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.320951,\n\t\t\t\t\"y\": 0.722649\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.311107,\n\t\t\t\t\"y\": 0.724352\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.301159,\n\t\t\t\t\"y\": 0.725264\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.291169,\n\t\t\t\t\"y\": 0.72538\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.281203,\n\t\t\t\t\"y\": 0.724697\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.271322,\n\t\t\t\t\"y\": 0.723222\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.26159,\n\t\t\t\t\"y\": 0.720963\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.252068,\n\t\t\t\t\"y\": 0.717934\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.242817,\n\t\t\t\t\"y\": 0.714155\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.233896,\n\t\t\t\t\"y\": 0.70965\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.225362,\n\t\t\t\t\"y\": 0.704447\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.217268,\n\t\t\t\t\"y\": 0.69858\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.209666,\n\t\t\t\t\"y\": 0.692086\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.202604,\n\t\t\t\t\"y\": 0.685005\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.196128,\n\t\t\t\t\"y\": 0.677384\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.190278,\n\t\t\t\t\"y\": 0.66927\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.185092,\n\t\t\t\t\"y\": 0.660714\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.180602,\n\t\t\t\t\"y\": 0.651773\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.176837,\n\t\t\t\t\"y\": 0.642501\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.762083,\n\t\t\t\t\"y\": 0.481681\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.754616,\n\t\t\t\t\"y\": 0.486573\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.746893,\n\t\t\t\t\"y\": 0.491049\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.738951,\n\t\t\t\t\"y\": 0.495122\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.730823,\n\t\t\t\t\"y\": 0.498809\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.722538,\n\t\t\t\t\"y\": 0.502124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.714119,\n\t\t\t\t\"y\": 0.505085\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.705589,\n\t\t\t\t\"y\": 0.507703\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.696964,\n\t\t\t\t\"y\": 0.509995\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.688263,\n\t\t\t\t\"y\": 0.511972\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.679499,\n\t\t\t\t\"y\": 0.513645\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.670683,\n\t\t\t\t\"y\": 0.515027\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.661829,\n\t\t\t\t\"y\": 0.516126\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.652945,\n\t\t\t\t\"y\": 0.516952\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.64404,\n\t\t\t\t\"y\": 0.517514\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.635123,\n\t\t\t\t\"y\": 0.517817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.626201,\n\t\t\t\t\"y\": 0.517871\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.61728,\n\t\t\t\t\"y\": 0.517679\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.608368,\n\t\t\t\t\"y\": 0.517248\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.599471,\n\t\t\t\t\"y\": 0.516582\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.590593,\n\t\t\t\t\"y\": 0.515686\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.581741,\n\t\t\t\t\"y\": 0.514562\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.572921,\n\t\t\t\t\"y\": 0.513215\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.564787,\n\t\t\t\t\"y\": 0.512129\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.569635,\n\t\t\t\t\"y\": 0.519622\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.57562,\n\t\t\t\t\"y\": 0.526241\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.582493,\n\t\t\t\t\"y\": 0.531931\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.590028,\n\t\t\t\t\"y\": 0.53671\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.598042,\n\t\t\t\t\"y\": 0.540631\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606395,\n\t\t\t\t\"y\": 0.543767\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.614981,\n\t\t\t\t\"y\": 0.546189\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.623725,\n\t\t\t\t\"y\": 0.547962\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.632568,\n\t\t\t\t\"y\": 0.549145\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.641466,\n\t\t\t\t\"y\": 0.549786\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.650386,\n\t\t\t\t\"y\": 0.549927\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.659302,\n\t\t\t\t\"y\": 0.549603\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.668187,\n\t\t\t\t\"y\": 0.548792\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.677025,\n\t\t\t\t\"y\": 0.547569\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.685801,\n\t\t\t\t\"y\": 0.545959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.69449,\n\t\t\t\t\"y\": 0.54393\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.703059,\n\t\t\t\t\"y\": 0.541442\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.711466,\n\t\t\t\t\"y\": 0.538451\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.719654,\n\t\t\t\t\"y\": 0.534905\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.72755,\n\t\t\t\t\"y\": 0.530745\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.735051,\n\t\t\t\t\"y\": 0.52591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.742022,\n\t\t\t\t\"y\": 0.520337\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.74829,\n\t\t\t\t\"y\": 0.513982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.75364,\n\t\t\t\t\"y\": 0.506837\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.757843,\n\t\t\t\t\"y\": 0.498962\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.760695,\n\t\t\t\t\"y\": 0.490501\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.237917,\n\t\t\t\t\"y\": 0.481681\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.245384,\n\t\t\t\t\"y\": 0.486573\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.253107,\n\t\t\t\t\"y\": 0.491049\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.261049,\n\t\t\t\t\"y\": 0.495122\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.269177,\n\t\t\t\t\"y\": 0.498809\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.277462,\n\t\t\t\t\"y\": 0.502124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.285881,\n\t\t\t\t\"y\": 0.505085\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.294411,\n\t\t\t\t\"y\": 0.507703\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.303036,\n\t\t\t\t\"y\": 0.509995\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.311737,\n\t\t\t\t\"y\": 0.511972\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.320501,\n\t\t\t\t\"y\": 0.513645\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.329317,\n\t\t\t\t\"y\": 0.515027\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.338171,\n\t\t\t\t\"y\": 0.516126\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.347055,\n\t\t\t\t\"y\": 0.516952\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.35596,\n\t\t\t\t\"y\": 0.517514\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.364877,\n\t\t\t\t\"y\": 0.517817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.373799,\n\t\t\t\t\"y\": 0.517871\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.38272,\n\t\t\t\t\"y\": 0.517679\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.391632,\n\t\t\t\t\"y\": 0.517248\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.400529,\n\t\t\t\t\"y\": 0.516582\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.409407,\n\t\t\t\t\"y\": 0.515686\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.418259,\n\t\t\t\t\"y\": 0.514562\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.427079,\n\t\t\t\t\"y\": 0.513215\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.435213,\n\t\t\t\t\"y\": 0.512129\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.430365,\n\t\t\t\t\"y\": 0.519622\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.42438,\n\t\t\t\t\"y\": 0.526241\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.417507,\n\t\t\t\t\"y\": 0.531931\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.409972,\n\t\t\t\t\"y\": 0.53671\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.401958,\n\t\t\t\t\"y\": 0.540631\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.393605,\n\t\t\t\t\"y\": 0.543767\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.385019,\n\t\t\t\t\"y\": 0.546189\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.376275,\n\t\t\t\t\"y\": 0.547962\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.367432,\n\t\t\t\t\"y\": 0.549145\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.358534,\n\t\t\t\t\"y\": 0.549786\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.349614,\n\t\t\t\t\"y\": 0.549927\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.340698,\n\t\t\t\t\"y\": 0.549603\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.331813,\n\t\t\t\t\"y\": 0.548792\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.322975,\n\t\t\t\t\"y\": 0.547569\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.314199,\n\t\t\t\t\"y\": 0.545959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.30551,\n\t\t\t\t\"y\": 0.54393\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.296941,\n\t\t\t\t\"y\": 0.541442\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.288534,\n\t\t\t\t\"y\": 0.538451\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.280346,\n\t\t\t\t\"y\": 0.534905\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.27245,\n\t\t\t\t\"y\": 0.530745\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.264949,\n\t\t\t\t\"y\": 0.52591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.257978,\n\t\t\t\t\"y\": 0.520337\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.25171,\n\t\t\t\t\"y\": 0.513982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.24636,\n\t\t\t\t\"y\": 0.506837\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.242157,\n\t\t\t\t\"y\": 0.498962\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.239305,\n\t\t\t\t\"y\": 0.490501\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.437209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 3.4834e-10\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.437209\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.389789,\n\t\t\t\t\"y\": 0.263318\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.392696,\n\t\t\t\t\"y\": 0.2535\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.39717,\n\t\t\t\t\"y\": 0.244289\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.402912,\n\t\t\t\t\"y\": 0.23581\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.409665,\n\t\t\t\t\"y\": 0.228113\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.417222,\n\t\t\t\t\"y\": 0.221206\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.425422,\n\t\t\t\t\"y\": 0.215077\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.434138,\n\t\t\t\t\"y\": 0.209709\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.44327,\n\t\t\t\t\"y\": 0.205087\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.452736,\n\t\t\t\t\"y\": 0.201197\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.462468,\n\t\t\t\t\"y\": 0.198033\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.472407,\n\t\t\t\t\"y\": 0.195597\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.482497,\n\t\t\t\t\"y\": 0.193897\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.492684,\n\t\t\t\t\"y\": 0.192949\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.502914,\n\t\t\t\t\"y\": 0.192779\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.513127,\n\t\t\t\t\"y\": 0.193396\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.523265,\n\t\t\t\t\"y\": 0.194775\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.533276,\n\t\t\t\t\"y\": 0.196895\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.543104,\n\t\t\t\t\"y\": 0.199746\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.552692,\n\t\t\t\t\"y\": 0.203323\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.561977,\n\t\t\t\t\"y\": 0.207629\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.570883,\n\t\t\t\t\"y\": 0.212674\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.579319,\n\t\t\t\t\"y\": 0.218473\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.58717,\n\t\t\t\t\"y\": 0.225044\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.594292,\n\t\t\t\t\"y\": 0.2324\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.600498,\n\t\t\t\t\"y\": 0.240545\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.605552,\n\t\t\t\t\"y\": 0.249451\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.609172,\n\t\t\t\t\"y\": 0.25903\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.605349,\n\t\t\t\t\"y\": 0.2601\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.596354,\n\t\t\t\t\"y\": 0.255216\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.587004,\n\t\t\t\t\"y\": 0.251052\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.577426,\n\t\t\t\t\"y\": 0.247444\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.567685,\n\t\t\t\t\"y\": 0.244303\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.55782,\n\t\t\t\t\"y\": 0.241577\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.547856,\n\t\t\t\t\"y\": 0.239242\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.53781,\n\t\t\t\t\"y\": 0.23729\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.527696,\n\t\t\t\t\"y\": 0.235727\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.517527,\n\t\t\t\t\"y\": 0.234581\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.507317,\n\t\t\t\t\"y\": 0.2339\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.497086,\n\t\t\t\t\"y\": 0.23377\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.486863,\n\t\t\t\t\"y\": 0.234227\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.476675,\n\t\t\t\t\"y\": 0.235181\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.466536,\n\t\t\t\t\"y\": 0.236568\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.456459,\n\t\t\t\t\"y\": 0.238355\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.446458,\n\t\t\t\t\"y\": 0.240525\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.436547,\n\t\t\t\t\"y\": 0.24308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.426749,\n\t\t\t\t\"y\": 0.246038\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.417095,\n\t\t\t\t\"y\": 0.249437\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.407636,\n\t\t\t\t\"y\": 0.253347\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.398466,\n\t\t\t\t\"y\": 0.257894\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t]\n\t},\n\t\"blush\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.70555,\n\t\t\t\t\"y\": 0.520267\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.701936,\n\t\t\t\t\"y\": 0.529953\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.696774,\n\t\t\t\t\"y\": 0.538911\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.690373,\n\t\t\t\t\"y\": 0.54703\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.682963,\n\t\t\t\t\"y\": 0.554237\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.674716,\n\t\t\t\t\"y\": 0.560466\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.665771,\n\t\t\t\t\"y\": 0.565638\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.656253,\n\t\t\t\t\"y\": 0.569651\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.646288,\n\t\t\t\t\"y\": 0.572363\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.636037,\n\t\t\t\t\"y\": 0.573582\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.625723,\n\t\t\t\t\"y\": 0.573137\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.615594,\n\t\t\t\t\"y\": 0.571135\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.605842,\n\t\t\t\t\"y\": 0.567734\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.596632,\n\t\t\t\t\"y\": 0.563054\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.588125,\n\t\t\t\t\"y\": 0.557189\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.580497,\n\t\t\t\t\"y\": 0.550216\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.573962,\n\t\t\t\t\"y\": 0.542208\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.568789,\n\t\t\t\t\"y\": 0.533259\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.565802,\n\t\t\t\t\"y\": 0.527088\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.566119,\n\t\t\t\t\"y\": 0.537437\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.566843,\n\t\t\t\t\"y\": 0.547765\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.567983,\n\t\t\t\t\"y\": 0.558055\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.569553,\n\t\t\t\t\"y\": 0.568289\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.571573,\n\t\t\t\t\"y\": 0.578442\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.574073,\n\t\t\t\t\"y\": 0.588488\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.577086,\n\t\t\t\t\"y\": 0.598391\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.580662,\n\t\t\t\t\"y\": 0.608104\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.584861,\n\t\t\t\t\"y\": 0.617563\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.589761,\n\t\t\t\t\"y\": 0.626676\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.595462,\n\t\t\t\t\"y\": 0.635307\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.602083,\n\t\t\t\t\"y\": 0.643248\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.609751,\n\t\t\t\t\"y\": 0.650173\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.61854,\n\t\t\t\t\"y\": 0.655584\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.628329,\n\t\t\t\t\"y\": 0.658811\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.638618,\n\t\t\t\t\"y\": 0.65925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.648629,\n\t\t\t\t\"y\": 0.656811\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.657758,\n\t\t\t\t\"y\": 0.652002\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.665791,\n\t\t\t\t\"y\": 0.645509\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.672766,\n\t\t\t\t\"y\": 0.637879\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.678799,\n\t\t\t\t\"y\": 0.629478\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.68401,\n\t\t\t\t\"y\": 0.620541\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.688502,\n\t\t\t\t\"y\": 0.611218\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.692357,\n\t\t\t\t\"y\": 0.601613\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.695638,\n\t\t\t\t\"y\": 0.591796\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.698397,\n\t\t\t\t\"y\": 0.581819\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.70067,\n\t\t\t\t\"y\": 0.571719\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.702488,\n\t\t\t\t\"y\": 0.561527\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.703872,\n\t\t\t\t\"y\": 0.551267\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.704837,\n\t\t\t\t\"y\": 0.540958\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.705395,\n\t\t\t\t\"y\": 0.53062\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.296293,\n\t\t\t\t\"y\": 0.52607\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.299728,\n\t\t\t\t\"y\": 0.534177\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.305049,\n\t\t\t\t\"y\": 0.543039\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.311702,\n\t\t\t\t\"y\": 0.550949\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.319426,\n\t\t\t\t\"y\": 0.557816\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.328009,\n\t\t\t\t\"y\": 0.563568\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.337279,\n\t\t\t\t\"y\": 0.568126\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.347076,\n\t\t\t\t\"y\": 0.571396\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.357233,\n\t\t\t\t\"y\": 0.573252\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.367552,\n\t\t\t\t\"y\": 0.573535\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.377784,\n\t\t\t\t\"y\": 0.572159\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.387711,\n\t\t\t\t\"y\": 0.569311\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.397178,\n\t\t\t\t\"y\": 0.565179\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.40606,\n\t\t\t\t\"y\": 0.559899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.414231,\n\t\t\t\t\"y\": 0.553571\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.421551,\n\t\t\t\t\"y\": 0.546271\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.427841,\n\t\t\t\t\"y\": 0.538066\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.432865,\n\t\t\t\t\"y\": 0.52903\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.436052,\n\t\t\t\t\"y\": 0.521285\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.435858,\n\t\t\t\t\"y\": 0.531637\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.435261,\n\t\t\t\t\"y\": 0.541973\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.434255,\n\t\t\t\t\"y\": 0.552278\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.432829,\n\t\t\t\t\"y\": 0.562532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.430968,\n\t\t\t\t\"y\": 0.572716\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.428648,\n\t\t\t\t\"y\": 0.582805\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.42584,\n\t\t\t\t\"y\": 0.592769\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.422504,\n\t\t\t\t\"y\": 0.602568\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.41859,\n\t\t\t\t\"y\": 0.612149\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.414031,\n\t\t\t\t\"y\": 0.621438\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.408744,\n\t\t\t\t\"y\": 0.630331\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.402624,\n\t\t\t\t\"y\": 0.638668\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.39555,\n\t\t\t\t\"y\": 0.646205\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.387408,\n\t\t\t\t\"y\": 0.65256\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.378178,\n\t\t\t\t\"y\": 0.657167\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.368106,\n\t\t\t\t\"y\": 0.659338\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.357833,\n\t\t\t\t\"y\": 0.65861\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.348127,\n\t\t\t\t\"y\": 0.655137\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.339448,\n\t\t\t\t\"y\": 0.64955\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.331888,\n\t\t\t\t\"y\": 0.642506\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.325363,\n\t\t\t\t\"y\": 0.634485\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.319746,\n\t\t\t\t\"y\": 0.625799\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.314919,\n\t\t\t\t\"y\": 0.616647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.310784,\n\t\t\t\t\"y\": 0.607159\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.307266,\n\t\t\t\t\"y\": 0.597425\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.304305,\n\t\t\t\t\"y\": 0.587506\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.301854,\n\t\t\t\t\"y\": 0.577448\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.299879,\n\t\t\t\t\"y\": 0.567286\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.298352,\n\t\t\t\t\"y\": 0.557046\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.297254,\n\t\t\t\t\"y\": 0.546751\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.29657,\n\t\t\t\t\"y\": 0.53642\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.437209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 3.4834e-10\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.437209\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.312763,\n\t\t\t\t\"y\": 0.337119\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.316114,\n\t\t\t\t\"y\": 0.320601\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.324841,\n\t\t\t\t\"y\": 0.306135\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.336783,\n\t\t\t\t\"y\": 0.29415\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.350547,\n\t\t\t\t\"y\": 0.284296\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.365396,\n\t\t\t\t\"y\": 0.276165\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.380935,\n\t\t\t\t\"y\": 0.269444\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.396935,\n\t\t\t\t\"y\": 0.26391\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.413255,\n\t\t\t\t\"y\": 0.259408\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.429801,\n\t\t\t\t\"y\": 0.255826\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.446506,\n\t\t\t\t\"y\": 0.253085\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.463322,\n\t\t\t\t\"y\": 0.251129\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.480207,\n\t\t\t\t\"y\": 0.249922\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.497129,\n\t\t\t\t\"y\": 0.24944\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.514056,\n\t\t\t\t\"y\": 0.249678\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.530957,\n\t\t\t\t\"y\": 0.250637\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5478,\n\t\t\t\t\"y\": 0.252336\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.564548,\n\t\t\t\t\"y\": 0.254806\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.581154,\n\t\t\t\t\"y\": 0.258095\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.59756,\n\t\t\t\t\"y\": 0.262274\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.613682,\n\t\t\t\t\"y\": 0.267443\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.629397,\n\t\t\t\t\"y\": 0.27374\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.644514,\n\t\t\t\t\"y\": 0.281363\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.658706,\n\t\t\t\t\"y\": 0.290591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.671382,\n\t\t\t\t\"y\": 0.301804\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.68141,\n\t\t\t\t\"y\": 0.315413\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.686836,\n\t\t\t\t\"y\": 0.331384\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.678513,\n\t\t\t\t\"y\": 0.330108\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.664398,\n\t\t\t\t\"y\": 0.320752\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.649564,\n\t\t\t\t\"y\": 0.312585\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.634235,\n\t\t\t\t\"y\": 0.305389\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.61854,\n\t\t\t\t\"y\": 0.299035\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.602557,\n\t\t\t\t\"y\": 0.293448\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.586338,\n\t\t\t\t\"y\": 0.28859\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.569922,\n\t\t\t\t\"y\": 0.284448\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.553339,\n\t\t\t\t\"y\": 0.28104\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.536615,\n\t\t\t\t\"y\": 0.27841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.51978,\n\t\t\t\t\"y\": 0.276639\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.502871,\n\t\t\t\t\"y\": 0.275864\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.485949,\n\t\t\t\t\"y\": 0.276255\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.469084,\n\t\t\t\t\"y\": 0.277707\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.452319,\n\t\t\t\t\"y\": 0.280058\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.435686,\n\t\t\t\t\"y\": 0.283209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.41921,\n\t\t\t\t\"y\": 0.287104\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.40292,\n\t\t\t\t\"y\": 0.29172\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.386852,\n\t\t\t\t\"y\": 0.297057\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.371052,\n\t\t\t\t\"y\": 0.303144\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.355588,\n\t\t\t\t\"y\": 0.310044\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.340567,\n\t\t\t\t\"y\": 0.317862\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.326173,\n\t\t\t\t\"y\": 0.326782\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t]\n\t},\n\t\"yum\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.76752,\n\t\t\t\t\"y\": 0.514546\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.762982,\n\t\t\t\t\"y\": 0.526706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.756502,\n\t\t\t\t\"y\": 0.537953\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.748466,\n\t\t\t\t\"y\": 0.548146\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.739163,\n\t\t\t\t\"y\": 0.557194\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.728809,\n\t\t\t\t\"y\": 0.565014\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.717579,\n\t\t\t\t\"y\": 0.571508\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.705629,\n\t\t\t\t\"y\": 0.576546\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.693118,\n\t\t\t\t\"y\": 0.579951\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.680248,\n\t\t\t\t\"y\": 0.581482\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.6673,\n\t\t\t\t\"y\": 0.580923\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654582,\n\t\t\t\t\"y\": 0.578409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.642339,\n\t\t\t\t\"y\": 0.574139\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.630776,\n\t\t\t\t\"y\": 0.568263\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.620095,\n\t\t\t\t\"y\": 0.560901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.610519,\n\t\t\t\t\"y\": 0.552146\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.602314,\n\t\t\t\t\"y\": 0.542093\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.595819,\n\t\t\t\t\"y\": 0.530857\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.592069,\n\t\t\t\t\"y\": 0.523109\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.592468,\n\t\t\t\t\"y\": 0.536102\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593377,\n\t\t\t\t\"y\": 0.549069\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.594807,\n\t\t\t\t\"y\": 0.561988\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.596778,\n\t\t\t\t\"y\": 0.574836\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.599315,\n\t\t\t\t\"y\": 0.587584\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.602453,\n\t\t\t\t\"y\": 0.600196\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606237,\n\t\t\t\t\"y\": 0.612629\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.610726,\n\t\t\t\t\"y\": 0.624823\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.615998,\n\t\t\t\t\"y\": 0.636699\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.62215,\n\t\t\t\t\"y\": 0.64814\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.629307,\n\t\t\t\t\"y\": 0.658976\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.63762,\n\t\t\t\t\"y\": 0.668946\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.647246,\n\t\t\t\t\"y\": 0.67764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.658281,\n\t\t\t\t\"y\": 0.684433\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.670571,\n\t\t\t\t\"y\": 0.688484\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.683489,\n\t\t\t\t\"y\": 0.689036\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.696057,\n\t\t\t\t\"y\": 0.685974\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.707518,\n\t\t\t\t\"y\": 0.679937\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.717604,\n\t\t\t\t\"y\": 0.671785\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.726361,\n\t\t\t\t\"y\": 0.662206\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.733934,\n\t\t\t\t\"y\": 0.651658\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.740477,\n\t\t\t\t\"y\": 0.640437\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.746116,\n\t\t\t\t\"y\": 0.628733\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.750956,\n\t\t\t\t\"y\": 0.616674\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.755076,\n\t\t\t\t\"y\": 0.604349\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.758539,\n\t\t\t\t\"y\": 0.591822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.761394,\n\t\t\t\t\"y\": 0.579142\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.763676,\n\t\t\t\t\"y\": 0.566347\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.765413,\n\t\t\t\t\"y\": 0.553465\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.766625,\n\t\t\t\t\"y\": 0.540523\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767325,\n\t\t\t\t\"y\": 0.527543\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.22635,\n\t\t\t\t\"y\": 0.521831\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.230663,\n\t\t\t\t\"y\": 0.532009\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.237343,\n\t\t\t\t\"y\": 0.543136\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.245697,\n\t\t\t\t\"y\": 0.553066\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.255393,\n\t\t\t\t\"y\": 0.561688\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.266169,\n\t\t\t\t\"y\": 0.568909\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.277808,\n\t\t\t\t\"y\": 0.574632\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.290107,\n\t\t\t\t\"y\": 0.578737\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.302859,\n\t\t\t\t\"y\": 0.581068\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.315814,\n\t\t\t\t\"y\": 0.581422\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.32866,\n\t\t\t\t\"y\": 0.579695\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.341123,\n\t\t\t\t\"y\": 0.57612\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.35301,\n\t\t\t\t\"y\": 0.570932\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.364161,\n\t\t\t\t\"y\": 0.564302\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.37442,\n\t\t\t\t\"y\": 0.556358\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.383609,\n\t\t\t\t\"y\": 0.547193\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.391506,\n\t\t\t\t\"y\": 0.536892\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.397814,\n\t\t\t\t\"y\": 0.525548\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.401815,\n\t\t\t\t\"y\": 0.515824\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.401571,\n\t\t\t\t\"y\": 0.52882\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.400821,\n\t\t\t\t\"y\": 0.541797\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.399558,\n\t\t\t\t\"y\": 0.554734\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.397768,\n\t\t\t\t\"y\": 0.567609\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.395431,\n\t\t\t\t\"y\": 0.580395\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.392519,\n\t\t\t\t\"y\": 0.593061\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.388994,\n\t\t\t\t\"y\": 0.60557\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.384806,\n\t\t\t\t\"y\": 0.617872\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.379891,\n\t\t\t\t\"y\": 0.629901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.374168,\n\t\t\t\t\"y\": 0.641564\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.36753,\n\t\t\t\t\"y\": 0.652729\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.359847,\n\t\t\t\t\"y\": 0.663196\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.350966,\n\t\t\t\t\"y\": 0.672659\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.340744,\n\t\t\t\t\"y\": 0.680637\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.329155,\n\t\t\t\t\"y\": 0.686421\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.316511,\n\t\t\t\t\"y\": 0.689147\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.303613,\n\t\t\t\t\"y\": 0.688232\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.291427,\n\t\t\t\t\"y\": 0.683872\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.280531,\n\t\t\t\t\"y\": 0.676858\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.271039,\n\t\t\t\t\"y\": 0.668014\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.262847,\n\t\t\t\t\"y\": 0.657944\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.255795,\n\t\t\t\t\"y\": 0.647038\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.249735,\n\t\t\t\t\"y\": 0.635548\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.244544,\n\t\t\t\t\"y\": 0.623637\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.240127,\n\t\t\t\t\"y\": 0.611416\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.236409,\n\t\t\t\t\"y\": 0.598963\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.233332,\n\t\t\t\t\"y\": 0.586336\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.230852,\n\t\t\t\t\"y\": 0.573577\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.228936,\n\t\t\t\t\"y\": 0.560721\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.227557,\n\t\t\t\t\"y\": 0.547796\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.226699,\n\t\t\t\t\"y\": 0.534825\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.437209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 3.4834e-10\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.437209\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.183352,\n\t\t\t\t\"y\": 0.429053\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.186006,\n\t\t\t\t\"y\": 0.393968\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.193861,\n\t\t\t\t\"y\": 0.359673\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.206616,\n\t\t\t\t\"y\": 0.326887\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.223826,\n\t\t\t\t\"y\": 0.29621\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.244963,\n\t\t\t\t\"y\": 0.268102\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.269472,\n\t\t\t\t\"y\": 0.242887\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.296808,\n\t\t\t\t\"y\": 0.22078\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.326464,\n\t\t\t\t\"y\": 0.201908\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.357976,\n\t\t\t\t\"y\": 0.186343\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.390924,\n\t\t\t\t\"y\": 0.174116\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.424924,\n\t\t\t\t\"y\": 0.165239\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.459624,\n\t\t\t\t\"y\": 0.159713\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.494693,\n\t\t\t\t\"y\": 0.157534\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.529809,\n\t\t\t\t\"y\": 0.158702\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.564655,\n\t\t\t\t\"y\": 0.163217\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.598903,\n\t\t\t\t\"y\": 0.171082\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.632207,\n\t\t\t\t\"y\": 0.182298\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.664194,\n\t\t\t\t\"y\": 0.196857\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.694458,\n\t\t\t\t\"y\": 0.214736\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.722547,\n\t\t\t\t\"y\": 0.235876\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.747965,\n\t\t\t\t\"y\": 0.26017\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.770179,\n\t\t\t\t\"y\": 0.287434\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.788633,\n\t\t\t\t\"y\": 0.317377\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.802785,\n\t\t\t\t\"y\": 0.349582\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.81216,\n\t\t\t\t\"y\": 0.383493\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.816405,\n\t\t\t\t\"y\": 0.41842\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.808187,\n\t\t\t\t\"y\": 0.405986\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.792774,\n\t\t\t\t\"y\": 0.374356\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.773935,\n\t\t\t\t\"y\": 0.344643\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.752091,\n\t\t\t\t\"y\": 0.31707\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.727595,\n\t\t\t\t\"y\": 0.291834\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.700744,\n\t\t\t\t\"y\": 0.269127\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.671806,\n\t\t\t\t\"y\": 0.249162\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.641028,\n\t\t\t\t\"y\": 0.232183\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.608666,\n\t\t\t\t\"y\": 0.218481\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.575004,\n\t\t\t\t\"y\": 0.208408\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.540395,\n\t\t\t\t\"y\": 0.202388\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.505303,\n\t\t\t\t\"y\": 0.200917\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.470178,\n\t\t\t\t\"y\": 0.20144\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.435367,\n\t\t\t\t\"y\": 0.206142\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.401378,\n\t\t\t\t\"y\": 0.215039\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.368591,\n\t\t\t\t\"y\": 0.227684\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.337307,\n\t\t\t\t\"y\": 0.243707\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.307786,\n\t\t\t\t\"y\": 0.262798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.280279,\n\t\t\t\t\"y\": 0.2847\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.255042,\n\t\t\t\t\"y\": 0.309194\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232362,\n\t\t\t\t\"y\": 0.336081\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.212575,\n\t\t\t\t\"y\": 0.365169\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.196078,\n\t\t\t\t\"y\": 0.396247\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.687874,\n\t\t\t\t\"y\": 0.236452\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.699666,\n\t\t\t\t\"y\": 0.225437\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.711679,\n\t\t\t\t\"y\": 0.214665\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.723942,\n\t\t\t\t\"y\": 0.204179\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.736487,\n\t\t\t\t\"y\": 0.194034\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.749351,\n\t\t\t\t\"y\": 0.184299\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.762578,\n\t\t\t\t\"y\": 0.175065\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.776214,\n\t\t\t\t\"y\": 0.166452\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.790307,\n\t\t\t\t\"y\": 0.158613\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.804894,\n\t\t\t\t\"y\": 0.151742\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.819981,\n\t\t\t\t\"y\": 0.146063\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.835521,\n\t\t\t\t\"y\": 0.141787\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.851396,\n\t\t\t\t\"y\": 0.139005\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.867463,\n\t\t\t\t\"y\": 0.13777\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.883559,\n\t\t\t\t\"y\": 0.138441\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.899375,\n\t\t\t\t\"y\": 0.141481\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.914379,\n\t\t\t\t\"y\": 0.147318\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.927855,\n\t\t\t\t\"y\": 0.156126\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.939123,\n\t\t\t\t\"y\": 0.167635\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.94768,\n\t\t\t\t\"y\": 0.18129\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.953382,\n\t\t\t\t\"y\": 0.196375\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.956473,\n\t\t\t\t\"y\": 0.212213\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.957372,\n\t\t\t\t\"y\": 0.228331\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.956502,\n\t\t\t\t\"y\": 0.244455\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.954066,\n\t\t\t\t\"y\": 0.260415\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.949719,\n\t\t\t\t\"y\": 0.275958\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.943372,\n\t\t\t\t\"y\": 0.290795\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.935258,\n\t\t\t\t\"y\": 0.304743\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.92572,\n\t\t\t\t\"y\": 0.317759\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.915083,\n\t\t\t\t\"y\": 0.329892\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.903606,\n\t\t\t\t\"y\": 0.341232\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.891484,\n\t\t\t\t\"y\": 0.351878\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.878858,\n\t\t\t\t\"y\": 0.361921\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.865834,\n\t\t\t\t\"y\": 0.371439\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.852488,\n\t\t\t\t\"y\": 0.380501\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.83888,\n\t\t\t\t\"y\": 0.389161\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.825054,\n\t\t\t\t\"y\": 0.397468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.812899,\n\t\t\t\t\"y\": 0.400722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.807386,\n\t\t\t\t\"y\": 0.385544\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.801029,\n\t\t\t\t\"y\": 0.370702\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.793881,\n\t\t\t\t\"y\": 0.356225\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.785991,\n\t\t\t\t\"y\": 0.34214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.777404,\n\t\t\t\t\"y\": 0.328471\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.768159,\n\t\t\t\t\"y\": 0.315239\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.758296,\n\t\t\t\t\"y\": 0.302463\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.747847,\n\t\t\t\t\"y\": 0.290164\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.736845,\n\t\t\t\t\"y\": 0.278358\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.72532,\n\t\t\t\t\"y\": 0.267065\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.713299,\n\t\t\t\t\"y\": 0.256303\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.700809,\n\t\t\t\t\"y\": 0.246091\n\t\t\t}\n\t\t]\n\t},\n\t\"relieved\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.816256,\n\t\t\t\t\"y\": 0.581522\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.810211,\n\t\t\t\t\"y\": 0.589101\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.80391,\n\t\t\t\t\"y\": 0.596467\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.797364,\n\t\t\t\t\"y\": 0.603616\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.790584,\n\t\t\t\t\"y\": 0.610542\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.78358,\n\t\t\t\t\"y\": 0.617241\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.776363,\n\t\t\t\t\"y\": 0.623708\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.768941,\n\t\t\t\t\"y\": 0.629939\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.761324,\n\t\t\t\t\"y\": 0.635928\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.75352,\n\t\t\t\t\"y\": 0.641671\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.745538,\n\t\t\t\t\"y\": 0.647163\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.737386,\n\t\t\t\t\"y\": 0.652398\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.729072,\n\t\t\t\t\"y\": 0.657371\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.720604,\n\t\t\t\t\"y\": 0.662074\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.711989,\n\t\t\t\t\"y\": 0.666503\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.703236,\n\t\t\t\t\"y\": 0.67065\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.694352,\n\t\t\t\t\"y\": 0.674508\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.685345,\n\t\t\t\t\"y\": 0.678069\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.676224,\n\t\t\t\t\"y\": 0.681326\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.666998,\n\t\t\t\t\"y\": 0.684268\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.657675,\n\t\t\t\t\"y\": 0.686887\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.648265,\n\t\t\t\t\"y\": 0.689173\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.638779,\n\t\t\t\t\"y\": 0.691116\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.629227,\n\t\t\t\t\"y\": 0.692704\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.631408,\n\t\t\t\t\"y\": 0.695876\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.640428,\n\t\t\t\t\"y\": 0.699397\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.649722,\n\t\t\t\t\"y\": 0.702106\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.659213,\n\t\t\t\t\"y\": 0.704016\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.668827,\n\t\t\t\t\"y\": 0.705146\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.678501,\n\t\t\t\t\"y\": 0.705518\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.688175,\n\t\t\t\t\"y\": 0.705156\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.697796,\n\t\t\t\t\"y\": 0.704087\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.707318,\n\t\t\t\t\"y\": 0.702336\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.716696,\n\t\t\t\t\"y\": 0.699927\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.725889,\n\t\t\t\t\"y\": 0.696886\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.734859,\n\t\t\t\t\"y\": 0.693236\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.743568,\n\t\t\t\t\"y\": 0.688999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.75198,\n\t\t\t\t\"y\": 0.684197\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.760059,\n\t\t\t\t\"y\": 0.678853\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767769,\n\t\t\t\t\"y\": 0.672986\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.775072,\n\t\t\t\t\"y\": 0.666618\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.781929,\n\t\t\t\t\"y\": 0.659771\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.788301,\n\t\t\t\t\"y\": 0.652468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.794144,\n\t\t\t\t\"y\": 0.644734\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.799414,\n\t\t\t\t\"y\": 0.636597\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.804064,\n\t\t\t\t\"y\": 0.62809\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.808044,\n\t\t\t\t\"y\": 0.619248\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.811305,\n\t\t\t\t\"y\": 0.610115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.813793,\n\t\t\t\t\"y\": 0.600742\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.815459,\n\t\t\t\t\"y\": 0.591188\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.183744,\n\t\t\t\t\"y\": 0.581522\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.189789,\n\t\t\t\t\"y\": 0.589101\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.19609,\n\t\t\t\t\"y\": 0.596467\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.202636,\n\t\t\t\t\"y\": 0.603616\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.209416,\n\t\t\t\t\"y\": 0.610542\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.21642,\n\t\t\t\t\"y\": 0.617241\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.223637,\n\t\t\t\t\"y\": 0.623708\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.231059,\n\t\t\t\t\"y\": 0.629939\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.238676,\n\t\t\t\t\"y\": 0.635928\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.24648,\n\t\t\t\t\"y\": 0.641671\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.254462,\n\t\t\t\t\"y\": 0.647163\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.262614,\n\t\t\t\t\"y\": 0.652398\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.270928,\n\t\t\t\t\"y\": 0.657371\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.279396,\n\t\t\t\t\"y\": 0.662074\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.288011,\n\t\t\t\t\"y\": 0.666503\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.296764,\n\t\t\t\t\"y\": 0.67065\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.305648,\n\t\t\t\t\"y\": 0.674508\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.314655,\n\t\t\t\t\"y\": 0.678069\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.323776,\n\t\t\t\t\"y\": 0.681326\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.333002,\n\t\t\t\t\"y\": 0.684268\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.342325,\n\t\t\t\t\"y\": 0.686887\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.351735,\n\t\t\t\t\"y\": 0.689173\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.361221,\n\t\t\t\t\"y\": 0.691116\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.370773,\n\t\t\t\t\"y\": 0.692704\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.368592,\n\t\t\t\t\"y\": 0.695876\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.359572,\n\t\t\t\t\"y\": 0.699397\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.350278,\n\t\t\t\t\"y\": 0.702106\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.340787,\n\t\t\t\t\"y\": 0.704016\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.331173,\n\t\t\t\t\"y\": 0.705146\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.321499,\n\t\t\t\t\"y\": 0.705518\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.311825,\n\t\t\t\t\"y\": 0.705156\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.302204,\n\t\t\t\t\"y\": 0.704087\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.292682,\n\t\t\t\t\"y\": 0.702336\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.283304,\n\t\t\t\t\"y\": 0.699927\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.274111,\n\t\t\t\t\"y\": 0.696886\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.265141,\n\t\t\t\t\"y\": 0.693236\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.256432,\n\t\t\t\t\"y\": 0.688999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.24802,\n\t\t\t\t\"y\": 0.684197\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.239941,\n\t\t\t\t\"y\": 0.678853\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232231,\n\t\t\t\t\"y\": 0.672986\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.224928,\n\t\t\t\t\"y\": 0.666618\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.218071,\n\t\t\t\t\"y\": 0.659771\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.211699,\n\t\t\t\t\"y\": 0.652468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.205856,\n\t\t\t\t\"y\": 0.644734\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.200586,\n\t\t\t\t\"y\": 0.636597\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.195936,\n\t\t\t\t\"y\": 0.62809\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.191956,\n\t\t\t\t\"y\": 0.619248\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.188695,\n\t\t\t\t\"y\": 0.610115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.186207,\n\t\t\t\t\"y\": 0.600742\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.184541,\n\t\t\t\t\"y\": 0.591188\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.820635,\n\t\t\t\t\"y\": 0.529788\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.819225,\n\t\t\t\t\"y\": 0.517397\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.815436,\n\t\t\t\t\"y\": 0.505515\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.809586,\n\t\t\t\t\"y\": 0.4945\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.802064,\n\t\t\t\t\"y\": 0.484552\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.793237,\n\t\t\t\t\"y\": 0.475741\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.783411,\n\t\t\t\t\"y\": 0.468062\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.772826,\n\t\t\t\t\"y\": 0.461471\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.761664,\n\t\t\t\t\"y\": 0.455914\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.750067,\n\t\t\t\t\"y\": 0.451335\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.738146,\n\t\t\t\t\"y\": 0.447686\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.725989,\n\t\t\t\t\"y\": 0.444928\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.713668,\n\t\t\t\t\"y\": 0.443029\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.701248,\n\t\t\t\t\"y\": 0.441967\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.688784,\n\t\t\t\t\"y\": 0.44173\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.676332,\n\t\t\t\t\"y\": 0.442312\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.663946,\n\t\t\t\t\"y\": 0.443717\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.651682,\n\t\t\t\t\"y\": 0.445957\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.639606,\n\t\t\t\t\"y\": 0.449053\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.627791,\n\t\t\t\t\"y\": 0.453034\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.616328,\n\t\t\t\t\"y\": 0.457939\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.605329,\n\t\t\t\t\"y\": 0.463812\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.594938,\n\t\t\t\t\"y\": 0.470706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.585341,\n\t\t\t\t\"y\": 0.478671\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.576782,\n\t\t\t\t\"y\": 0.487743\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.569568,\n\t\t\t\t\"y\": 0.497917\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.564067,\n\t\t\t\t\"y\": 0.509111\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.560661,\n\t\t\t\t\"y\": 0.521109\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.559935,\n\t\t\t\t\"y\": 0.532712\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.569394,\n\t\t\t\t\"y\": 0.524652\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.58036,\n\t\t\t\t\"y\": 0.518729\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.591912,\n\t\t\t\t\"y\": 0.514038\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.603774,\n\t\t\t\t\"y\": 0.510197\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.615829,\n\t\t\t\t\"y\": 0.507015\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.628016,\n\t\t\t\t\"y\": 0.504382\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.640298,\n\t\t\t\t\"y\": 0.502236\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.65265,\n\t\t\t\t\"y\": 0.500541\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.665053,\n\t\t\t\t\"y\": 0.499279\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.677493,\n\t\t\t\t\"y\": 0.498449\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.689954,\n\t\t\t\t\"y\": 0.498068\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.702421,\n\t\t\t\t\"y\": 0.498152\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.714877,\n\t\t\t\t\"y\": 0.498685\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.727307,\n\t\t\t\t\"y\": 0.49965\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.739696,\n\t\t\t\t\"y\": 0.50105\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.752025,\n\t\t\t\t\"y\": 0.502903\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.764271,\n\t\t\t\t\"y\": 0.505247\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.776397,\n\t\t\t\t\"y\": 0.508147\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.788343,\n\t\t\t\t\"y\": 0.511716\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.799994,\n\t\t\t\t\"y\": 0.516152\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.811075,\n\t\t\t\t\"y\": 0.521855\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.179365,\n\t\t\t\t\"y\": 0.529788\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.180775,\n\t\t\t\t\"y\": 0.517397\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.184564,\n\t\t\t\t\"y\": 0.505515\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.190414,\n\t\t\t\t\"y\": 0.4945\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.197936,\n\t\t\t\t\"y\": 0.484552\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.206763,\n\t\t\t\t\"y\": 0.475741\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.216589,\n\t\t\t\t\"y\": 0.468062\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.227174,\n\t\t\t\t\"y\": 0.461471\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.238336,\n\t\t\t\t\"y\": 0.455914\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.249933,\n\t\t\t\t\"y\": 0.451335\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.261854,\n\t\t\t\t\"y\": 0.447686\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.274011,\n\t\t\t\t\"y\": 0.444928\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.286332,\n\t\t\t\t\"y\": 0.443029\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.298752,\n\t\t\t\t\"y\": 0.441967\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.311216,\n\t\t\t\t\"y\": 0.44173\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.323668,\n\t\t\t\t\"y\": 0.442312\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.336054,\n\t\t\t\t\"y\": 0.443717\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.348318,\n\t\t\t\t\"y\": 0.445957\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.360394,\n\t\t\t\t\"y\": 0.449053\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.372209,\n\t\t\t\t\"y\": 0.453034\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.383672,\n\t\t\t\t\"y\": 0.457939\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.394671,\n\t\t\t\t\"y\": 0.463812\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.405062,\n\t\t\t\t\"y\": 0.470706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.414659,\n\t\t\t\t\"y\": 0.478671\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.423218,\n\t\t\t\t\"y\": 0.487743\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.430432,\n\t\t\t\t\"y\": 0.497917\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.435933,\n\t\t\t\t\"y\": 0.509111\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.439339,\n\t\t\t\t\"y\": 0.521109\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.440065,\n\t\t\t\t\"y\": 0.532712\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.430606,\n\t\t\t\t\"y\": 0.524652\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.41964,\n\t\t\t\t\"y\": 0.518729\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.408088,\n\t\t\t\t\"y\": 0.514038\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.396226,\n\t\t\t\t\"y\": 0.510197\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.384171,\n\t\t\t\t\"y\": 0.507015\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.371984,\n\t\t\t\t\"y\": 0.504382\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.359702,\n\t\t\t\t\"y\": 0.502236\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.34735,\n\t\t\t\t\"y\": 0.500541\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.334947,\n\t\t\t\t\"y\": 0.499279\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.322507,\n\t\t\t\t\"y\": 0.498449\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.310046,\n\t\t\t\t\"y\": 0.498068\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.297579,\n\t\t\t\t\"y\": 0.498152\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.285123,\n\t\t\t\t\"y\": 0.498685\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.272693,\n\t\t\t\t\"y\": 0.49965\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.260304,\n\t\t\t\t\"y\": 0.50105\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.247975,\n\t\t\t\t\"y\": 0.502903\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.235729,\n\t\t\t\t\"y\": 0.505247\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.223603,\n\t\t\t\t\"y\": 0.508147\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.211657,\n\t\t\t\t\"y\": 0.511716\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.200006,\n\t\t\t\t\"y\": 0.516152\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.188925,\n\t\t\t\t\"y\": 0.521855\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.437209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 3.4834e-10\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.437209\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.389789,\n\t\t\t\t\"y\": 0.263318\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.392696,\n\t\t\t\t\"y\": 0.2535\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.39717,\n\t\t\t\t\"y\": 0.244289\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.402912,\n\t\t\t\t\"y\": 0.23581\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.409665,\n\t\t\t\t\"y\": 0.228113\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.417222,\n\t\t\t\t\"y\": 0.221206\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.425422,\n\t\t\t\t\"y\": 0.215077\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.434138,\n\t\t\t\t\"y\": 0.209709\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.44327,\n\t\t\t\t\"y\": 0.205087\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.452736,\n\t\t\t\t\"y\": 0.201197\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.462468,\n\t\t\t\t\"y\": 0.198033\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.472407,\n\t\t\t\t\"y\": 0.195597\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.482497,\n\t\t\t\t\"y\": 0.193897\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.492684,\n\t\t\t\t\"y\": 0.192949\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.502914,\n\t\t\t\t\"y\": 0.192779\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.513127,\n\t\t\t\t\"y\": 0.193396\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.523265,\n\t\t\t\t\"y\": 0.194775\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.533276,\n\t\t\t\t\"y\": 0.196895\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.543104,\n\t\t\t\t\"y\": 0.199746\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.552692,\n\t\t\t\t\"y\": 0.203323\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.561977,\n\t\t\t\t\"y\": 0.207629\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.570883,\n\t\t\t\t\"y\": 0.212674\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.579319,\n\t\t\t\t\"y\": 0.218473\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.58717,\n\t\t\t\t\"y\": 0.225044\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.594292,\n\t\t\t\t\"y\": 0.2324\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.600498,\n\t\t\t\t\"y\": 0.240545\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.605552,\n\t\t\t\t\"y\": 0.249451\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.609172,\n\t\t\t\t\"y\": 0.25903\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.605349,\n\t\t\t\t\"y\": 0.2601\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.596354,\n\t\t\t\t\"y\": 0.255216\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.587004,\n\t\t\t\t\"y\": 0.251052\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.577426,\n\t\t\t\t\"y\": 0.247444\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.567685,\n\t\t\t\t\"y\": 0.244303\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.55782,\n\t\t\t\t\"y\": 0.241577\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.547856,\n\t\t\t\t\"y\": 0.239242\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.53781,\n\t\t\t\t\"y\": 0.23729\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.527696,\n\t\t\t\t\"y\": 0.235727\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.517527,\n\t\t\t\t\"y\": 0.234581\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.507317,\n\t\t\t\t\"y\": 0.2339\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.497086,\n\t\t\t\t\"y\": 0.23377\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.486863,\n\t\t\t\t\"y\": 0.234227\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.476675,\n\t\t\t\t\"y\": 0.235181\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.466536,\n\t\t\t\t\"y\": 0.236568\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.456459,\n\t\t\t\t\"y\": 0.238355\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.446458,\n\t\t\t\t\"y\": 0.240525\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.436547,\n\t\t\t\t\"y\": 0.24308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.426749,\n\t\t\t\t\"y\": 0.246038\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.417095,\n\t\t\t\t\"y\": 0.249437\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.407636,\n\t\t\t\t\"y\": 0.253347\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.398466,\n\t\t\t\t\"y\": 0.257894\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t]\n\t},\n\t\"heart_eyes\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.672226,\n\t\t\t\t\"y\": 0.438536\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.664207,\n\t\t\t\t\"y\": 0.455345\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.656188,\n\t\t\t\t\"y\": 0.472153\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.648169,\n\t\t\t\t\"y\": 0.488962\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.64015,\n\t\t\t\t\"y\": 0.50577\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.632131,\n\t\t\t\t\"y\": 0.522579\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.624112,\n\t\t\t\t\"y\": 0.539387\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.616094,\n\t\t\t\t\"y\": 0.556196\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.608075,\n\t\t\t\t\"y\": 0.573004\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.600056,\n\t\t\t\t\"y\": 0.589813\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.591966,\n\t\t\t\t\"y\": 0.606583\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.586944,\n\t\t\t\t\"y\": 0.624468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.58662,\n\t\t\t\t\"y\": 0.643044\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.591016,\n\t\t\t\t\"y\": 0.661093\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.599843,\n\t\t\t\t\"y\": 0.677432\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.612522,\n\t\t\t\t\"y\": 0.690989\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.628222,\n\t\t\t\t\"y\": 0.700875\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.645913,\n\t\t\t\t\"y\": 0.706441\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.664434,\n\t\t\t\t\"y\": 0.707322\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.682572,\n\t\t\t\t\"y\": 0.703461\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.699136,\n\t\t\t\t\"y\": 0.69511\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71304,\n\t\t\t\t\"y\": 0.682818\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.723372,\n\t\t\t\t\"y\": 0.667391\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.729455,\n\t\t\t\t\"y\": 0.64984\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.73089,\n\t\t\t\t\"y\": 0.631317\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.727582,\n\t\t\t\t\"y\": 0.613036\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.735415,\n\t\t\t\t\"y\": 0.629876\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.747261,\n\t\t\t\t\"y\": 0.64417\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.762341,\n\t\t\t\t\"y\": 0.65498\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.779667,\n\t\t\t\t\"y\": 0.661599\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.798102,\n\t\t\t\t\"y\": 0.663591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.816438,\n\t\t\t\t\"y\": 0.660827\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.833472,\n\t\t\t\t\"y\": 0.653486\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.848087,\n\t\t\t\t\"y\": 0.642052\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.859324,\n\t\t\t\t\"y\": 0.627273\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.866446,\n\t\t\t\t\"y\": 0.610119\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.868986,\n\t\t\t\t\"y\": 0.591715\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.866778,\n\t\t\t\t\"y\": 0.573268\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.859966,\n\t\t\t\t\"y\": 0.555988\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.848998,\n\t\t\t\t\"y\": 0.541008\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.834592,\n\t\t\t\t\"y\": 0.529311\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818323,\n\t\t\t\t\"y\": 0.520299\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.80209,\n\t\t\t\t\"y\": 0.511214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.785857,\n\t\t\t\t\"y\": 0.502129\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.769624,\n\t\t\t\t\"y\": 0.493044\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.753391,\n\t\t\t\t\"y\": 0.48396\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.737158,\n\t\t\t\t\"y\": 0.474875\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.720925,\n\t\t\t\t\"y\": 0.46579\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.704692,\n\t\t\t\t\"y\": 0.456705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.688459,\n\t\t\t\t\"y\": 0.447621\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.327774,\n\t\t\t\t\"y\": 0.438536\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.335793,\n\t\t\t\t\"y\": 0.455345\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.343812,\n\t\t\t\t\"y\": 0.472153\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.351831,\n\t\t\t\t\"y\": 0.488962\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.35985,\n\t\t\t\t\"y\": 0.50577\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.367869,\n\t\t\t\t\"y\": 0.522579\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.375888,\n\t\t\t\t\"y\": 0.539387\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.383906,\n\t\t\t\t\"y\": 0.556196\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.391925,\n\t\t\t\t\"y\": 0.573004\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.399944,\n\t\t\t\t\"y\": 0.589813\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.408034,\n\t\t\t\t\"y\": 0.606583\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.413056,\n\t\t\t\t\"y\": 0.624468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.41338,\n\t\t\t\t\"y\": 0.643044\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.408984,\n\t\t\t\t\"y\": 0.661093\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.400157,\n\t\t\t\t\"y\": 0.677432\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.387478,\n\t\t\t\t\"y\": 0.690989\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.371778,\n\t\t\t\t\"y\": 0.700875\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.354087,\n\t\t\t\t\"y\": 0.706441\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.335566,\n\t\t\t\t\"y\": 0.707322\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.317428,\n\t\t\t\t\"y\": 0.703461\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.300864,\n\t\t\t\t\"y\": 0.69511\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28696,\n\t\t\t\t\"y\": 0.682818\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.276628,\n\t\t\t\t\"y\": 0.667391\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.270545,\n\t\t\t\t\"y\": 0.64984\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.26911,\n\t\t\t\t\"y\": 0.631317\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.272418,\n\t\t\t\t\"y\": 0.613036\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.264585,\n\t\t\t\t\"y\": 0.629876\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.252739,\n\t\t\t\t\"y\": 0.64417\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.237659,\n\t\t\t\t\"y\": 0.65498\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.220333,\n\t\t\t\t\"y\": 0.661599\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.201898,\n\t\t\t\t\"y\": 0.663591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.183562,\n\t\t\t\t\"y\": 0.660827\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.166528,\n\t\t\t\t\"y\": 0.653486\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.151913,\n\t\t\t\t\"y\": 0.642052\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.140676,\n\t\t\t\t\"y\": 0.627273\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.133554,\n\t\t\t\t\"y\": 0.610119\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.131014,\n\t\t\t\t\"y\": 0.591715\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.133222,\n\t\t\t\t\"y\": 0.573268\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.140034,\n\t\t\t\t\"y\": 0.555988\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.151002,\n\t\t\t\t\"y\": 0.541008\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.165408,\n\t\t\t\t\"y\": 0.529311\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181677,\n\t\t\t\t\"y\": 0.520299\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.19791,\n\t\t\t\t\"y\": 0.511214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.214143,\n\t\t\t\t\"y\": 0.502129\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.230376,\n\t\t\t\t\"y\": 0.493044\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.246609,\n\t\t\t\t\"y\": 0.48396\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.262842,\n\t\t\t\t\"y\": 0.474875\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.279075,\n\t\t\t\t\"y\": 0.46579\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.295308,\n\t\t\t\t\"y\": 0.456705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.311541,\n\t\t\t\t\"y\": 0.447621\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.437209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 3.4834e-10\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.437209\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.265699,\n\t\t\t\t\"y\": 0.30606\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.267619,\n\t\t\t\t\"y\": 0.283761\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.273253,\n\t\t\t\t\"y\": 0.262101\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.282259,\n\t\t\t\t\"y\": 0.241614\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.294174,\n\t\t\t\t\"y\": 0.222672\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.308511,\n\t\t\t\t\"y\": 0.205492\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.324814,\n\t\t\t\t\"y\": 0.19017\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.342691,\n\t\t\t\t\"y\": 0.176722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.361816,\n\t\t\t\t\"y\": 0.165121\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.38192,\n\t\t\t\t\"y\": 0.155321\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.402785,\n\t\t\t\t\"y\": 0.147269\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.424226,\n\t\t\t\t\"y\": 0.140916\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.446089,\n\t\t\t\t\"y\": 0.13622\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468237,\n\t\t\t\t\"y\": 0.133149\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.490549,\n\t\t\t\t\"y\": 0.13168\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.512909,\n\t\t\t\t\"y\": 0.131803\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.535203,\n\t\t\t\t\"y\": 0.133519\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.557316,\n\t\t\t\t\"y\": 0.13684\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.579123,\n\t\t\t\t\"y\": 0.14179\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.600486,\n\t\t\t\t\"y\": 0.148403\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.621245,\n\t\t\t\t\"y\": 0.156722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.641214,\n\t\t\t\t\"y\": 0.166797\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.660164,\n\t\t\t\t\"y\": 0.178681\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.677821,\n\t\t\t\t\"y\": 0.192418\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.693847,\n\t\t\t\t\"y\": 0.20803\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.70784,\n\t\t\t\t\"y\": 0.225491\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.719337,\n\t\t\t\t\"y\": 0.24469\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.72785,\n\t\t\t\t\"y\": 0.265388\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.732927,\n\t\t\t\t\"y\": 0.287185\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.730994,\n\t\t\t\t\"y\": 0.30504\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.709336,\n\t\t\t\t\"y\": 0.299469\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.687415,\n\t\t\t\t\"y\": 0.295033\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.665359,\n\t\t\t\t\"y\": 0.291331\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.643215,\n\t\t\t\t\"y\": 0.288188\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.621011,\n\t\t\t\t\"y\": 0.285516\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.598759,\n\t\t\t\t\"y\": 0.283268\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.57647,\n\t\t\t\t\"y\": 0.281425\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.554152,\n\t\t\t\t\"y\": 0.279988\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.53181,\n\t\t\t\t\"y\": 0.278982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.509452,\n\t\t\t\t\"y\": 0.278458\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.487088,\n\t\t\t\t\"y\": 0.278504\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.464732,\n\t\t\t\t\"y\": 0.279108\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.442393,\n\t\t\t\t\"y\": 0.280183\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.420079,\n\t\t\t\t\"y\": 0.281684\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.397795,\n\t\t\t\t\"y\": 0.283589\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.37555,\n\t\t\t\t\"y\": 0.285901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.353354,\n\t\t\t\t\"y\": 0.288642\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.331222,\n\t\t\t\t\"y\": 0.291864\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.309182,\n\t\t\t\t\"y\": 0.295665\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.287291,\n\t\t\t\t\"y\": 0.300241\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t]\n\t},\n\t\"kissing_heart\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.792978,\n\t\t\t\t\"y\": 0.575503\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.785437,\n\t\t\t\t\"y\": 0.581931\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.777634,\n\t\t\t\t\"y\": 0.588026\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.769582,\n\t\t\t\t\"y\": 0.593776\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.761296,\n\t\t\t\t\"y\": 0.599171\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.752791,\n\t\t\t\t\"y\": 0.6042\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.744084,\n\t\t\t\t\"y\": 0.608856\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.735188,\n\t\t\t\t\"y\": 0.613129\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.726122,\n\t\t\t\t\"y\": 0.617011\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.716901,\n\t\t\t\t\"y\": 0.620496\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.707543,\n\t\t\t\t\"y\": 0.623577\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.698063,\n\t\t\t\t\"y\": 0.626249\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.68848,\n\t\t\t\t\"y\": 0.628506\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.678812,\n\t\t\t\t\"y\": 0.630345\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.669075,\n\t\t\t\t\"y\": 0.631762\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.659287,\n\t\t\t\t\"y\": 0.632754\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.649467,\n\t\t\t\t\"y\": 0.63332\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.639632,\n\t\t\t\t\"y\": 0.633459\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.6298,\n\t\t\t\t\"y\": 0.633171\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.619989,\n\t\t\t\t\"y\": 0.632455\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.610217,\n\t\t\t\t\"y\": 0.631314\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.600502,\n\t\t\t\t\"y\": 0.629749\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.590861,\n\t\t\t\t\"y\": 0.627763\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.58138,\n\t\t\t\t\"y\": 0.625403\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.588169,\n\t\t\t\t\"y\": 0.632644\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.595503,\n\t\t\t\t\"y\": 0.639312\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.603336,\n\t\t\t\t\"y\": 0.645365\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.611618,\n\t\t\t\t\"y\": 0.650763\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.620295,\n\t\t\t\t\"y\": 0.655472\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.629314,\n\t\t\t\t\"y\": 0.659464\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.638616,\n\t\t\t\t\"y\": 0.662711\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.648143,\n\t\t\t\t\"y\": 0.665195\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.657834,\n\t\t\t\t\"y\": 0.666898\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.667627,\n\t\t\t\t\"y\": 0.66781\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.67746,\n\t\t\t\t\"y\": 0.667925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.687272,\n\t\t\t\t\"y\": 0.667243\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.696999,\n\t\t\t\t\"y\": 0.665767\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.706579,\n\t\t\t\t\"y\": 0.663508\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.715952,\n\t\t\t\t\"y\": 0.660479\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.725059,\n\t\t\t\t\"y\": 0.6567\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.73384,\n\t\t\t\t\"y\": 0.652195\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.742242,\n\t\t\t\t\"y\": 0.646992\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.750209,\n\t\t\t\t\"y\": 0.641125\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.757693,\n\t\t\t\t\"y\": 0.634631\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.764644,\n\t\t\t\t\"y\": 0.62755\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.771019,\n\t\t\t\t\"y\": 0.619929\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.776778,\n\t\t\t\t\"y\": 0.611815\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.781883,\n\t\t\t\t\"y\": 0.603259\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.786303,\n\t\t\t\t\"y\": 0.594318\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.790009,\n\t\t\t\t\"y\": 0.585046\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.169696,\n\t\t\t\t\"y\": 0.621506\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.173778,\n\t\t\t\t\"y\": 0.630615\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.178238,\n\t\t\t\t\"y\": 0.639538\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.183068,\n\t\t\t\t\"y\": 0.648259\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.18826,\n\t\t\t\t\"y\": 0.656762\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.193804,\n\t\t\t\t\"y\": 0.665032\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.19969,\n\t\t\t\t\"y\": 0.673054\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.205906,\n\t\t\t\t\"y\": 0.680812\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.212443,\n\t\t\t\t\"y\": 0.688293\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.219287,\n\t\t\t\t\"y\": 0.695484\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.226427,\n\t\t\t\t\"y\": 0.70237\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.233849,\n\t\t\t\t\"y\": 0.70894\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.24154,\n\t\t\t\t\"y\": 0.715181\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.249486,\n\t\t\t\t\"y\": 0.721082\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.257671,\n\t\t\t\t\"y\": 0.726633\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.266083,\n\t\t\t\t\"y\": 0.731823\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.274704,\n\t\t\t\t\"y\": 0.736642\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28352,\n\t\t\t\t\"y\": 0.741083\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.292513,\n\t\t\t\t\"y\": 0.745136\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.301669,\n\t\t\t\t\"y\": 0.748795\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.31097,\n\t\t\t\t\"y\": 0.752053\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.320399,\n\t\t\t\t\"y\": 0.754903\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.329939,\n\t\t\t\t\"y\": 0.757341\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.338803,\n\t\t\t\t\"y\": 0.759448\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.329595,\n\t\t\t\t\"y\": 0.762961\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.32014,\n\t\t\t\t\"y\": 0.765716\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.310501,\n\t\t\t\t\"y\": 0.767697\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.300736,\n\t\t\t\t\"y\": 0.768889\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.29091,\n\t\t\t\t\"y\": 0.769286\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.281084,\n\t\t\t\t\"y\": 0.768886\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.27132,\n\t\t\t\t\"y\": 0.76769\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.261681,\n\t\t\t\t\"y\": 0.765706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.252228,\n\t\t\t\t\"y\": 0.762948\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.24302,\n\t\t\t\t\"y\": 0.759431\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.234117,\n\t\t\t\t\"y\": 0.75518\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.225575,\n\t\t\t\t\"y\": 0.75022\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.217448,\n\t\t\t\t\"y\": 0.744584\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.209788,\n\t\t\t\t\"y\": 0.738307\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.202643,\n\t\t\t\t\"y\": 0.731428\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.19606,\n\t\t\t\t\"y\": 0.723993\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.190079,\n\t\t\t\t\"y\": 0.716047\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.184738,\n\t\t\t\t\"y\": 0.707642\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.180073,\n\t\t\t\t\"y\": 0.69883\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.176112,\n\t\t\t\t\"y\": 0.689668\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.17288,\n\t\t\t\t\"y\": 0.680215\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.170398,\n\t\t\t\t\"y\": 0.670529\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.168682,\n\t\t\t\t\"y\": 0.660673\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.167742,\n\t\t\t\t\"y\": 0.650709\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.167585,\n\t\t\t\t\"y\": 0.6407\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.168212,\n\t\t\t\t\"y\": 0.630711\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.72066,\n\t\t\t\t\"y\": 0.485829\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.713831,\n\t\t\t\t\"y\": 0.48962\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.706809,\n\t\t\t\t\"y\": 0.493025\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.699624,\n\t\t\t\t\"y\": 0.496059\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.692305,\n\t\t\t\t\"y\": 0.498738\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.684874,\n\t\t\t\t\"y\": 0.501079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.677352,\n\t\t\t\t\"y\": 0.503097\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.669756,\n\t\t\t\t\"y\": 0.504805\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.662102,\n\t\t\t\t\"y\": 0.506217\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654403,\n\t\t\t\t\"y\": 0.507347\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.64667,\n\t\t\t\t\"y\": 0.508204\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.638913,\n\t\t\t\t\"y\": 0.5088\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.631142,\n\t\t\t\t\"y\": 0.509143\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.623363,\n\t\t\t\t\"y\": 0.509244\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.615585,\n\t\t\t\t\"y\": 0.509109\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.607815,\n\t\t\t\t\"y\": 0.508746\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.600057,\n\t\t\t\t\"y\": 0.508162\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.592318,\n\t\t\t\t\"y\": 0.507361\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.584602,\n\t\t\t\t\"y\": 0.50635\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.576916,\n\t\t\t\t\"y\": 0.505132\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.569263,\n\t\t\t\t\"y\": 0.503713\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.561648,\n\t\t\t\t\"y\": 0.502095\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.554076,\n\t\t\t\t\"y\": 0.500281\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.547082,\n\t\t\t\t\"y\": 0.498746\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.550776,\n\t\t\t\t\"y\": 0.505704\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.555517,\n\t\t\t\t\"y\": 0.511971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.561096,\n\t\t\t\t\"y\": 0.517482\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.567313,\n\t\t\t\t\"y\": 0.522233\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.574005,\n\t\t\t\t\"y\": 0.526263\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.581047,\n\t\t\t\t\"y\": 0.529623\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.588341,\n\t\t\t\t\"y\": 0.532368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.595817,\n\t\t\t\t\"y\": 0.534553\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.60342,\n\t\t\t\t\"y\": 0.536223\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.611109,\n\t\t\t\t\"y\": 0.537419\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.618851,\n\t\t\t\t\"y\": 0.538175\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.626622,\n\t\t\t\t\"y\": 0.53852\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.6344,\n\t\t\t\t\"y\": 0.538433\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.642166,\n\t\t\t\t\"y\": 0.537978\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.649905,\n\t\t\t\t\"y\": 0.537178\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.657597,\n\t\t\t\t\"y\": 0.536001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.665216,\n\t\t\t\t\"y\": 0.534412\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.67273,\n\t\t\t\t\"y\": 0.532366\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.680093,\n\t\t\t\t\"y\": 0.529815\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.687243,\n\t\t\t\t\"y\": 0.526702\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.694098,\n\t\t\t\t\"y\": 0.522964\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.700543,\n\t\t\t\t\"y\": 0.518537\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.706431,\n\t\t\t\t\"y\": 0.513371\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.711577,\n\t\t\t\t\"y\": 0.507441\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.715776,\n\t\t\t\t\"y\": 0.500786\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.718842,\n\t\t\t\t\"y\": 0.493519\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.297895,\n\t\t\t\t\"y\": 0.540559\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.298216,\n\t\t\t\t\"y\": 0.533238\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.299181,\n\t\t\t\t\"y\": 0.525976\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.300796,\n\t\t\t\t\"y\": 0.518834\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.303069,\n\t\t\t\t\"y\": 0.511881\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.306014,\n\t\t\t\t\"y\": 0.505195\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.30964,\n\t\t\t\t\"y\": 0.498865\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.313954,\n\t\t\t\t\"y\": 0.493\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.318952,\n\t\t\t\t\"y\": 0.48773\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.32461,\n\t\t\t\t\"y\": 0.483204\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.330868,\n\t\t\t\t\"y\": 0.479591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.337618,\n\t\t\t\t\"y\": 0.477058\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.344695,\n\t\t\t\t\"y\": 0.47575\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.351887,\n\t\t\t\t\"y\": 0.47575\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.358964,\n\t\t\t\t\"y\": 0.477058\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.365714,\n\t\t\t\t\"y\": 0.479591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.371972,\n\t\t\t\t\"y\": 0.483204\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.37763,\n\t\t\t\t\"y\": 0.48773\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.382629,\n\t\t\t\t\"y\": 0.493\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.386943,\n\t\t\t\t\"y\": 0.498865\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.390569,\n\t\t\t\t\"y\": 0.505195\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.393513,\n\t\t\t\t\"y\": 0.511881\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.395787,\n\t\t\t\t\"y\": 0.518834\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.397401,\n\t\t\t\t\"y\": 0.525976\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.398366,\n\t\t\t\t\"y\": 0.533238\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.398687,\n\t\t\t\t\"y\": 0.540559\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.398366,\n\t\t\t\t\"y\": 0.54788\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.397401,\n\t\t\t\t\"y\": 0.555142\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.395787,\n\t\t\t\t\"y\": 0.562283\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.393513,\n\t\t\t\t\"y\": 0.569236\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.390569,\n\t\t\t\t\"y\": 0.575923\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.386943,\n\t\t\t\t\"y\": 0.582253\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.382629,\n\t\t\t\t\"y\": 0.588117\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.37763,\n\t\t\t\t\"y\": 0.593388\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.371972,\n\t\t\t\t\"y\": 0.597913\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.365714,\n\t\t\t\t\"y\": 0.601527\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.358964,\n\t\t\t\t\"y\": 0.60406\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.351887,\n\t\t\t\t\"y\": 0.605368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.344695,\n\t\t\t\t\"y\": 0.605368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.337618,\n\t\t\t\t\"y\": 0.60406\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.330868,\n\t\t\t\t\"y\": 0.601527\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.32461,\n\t\t\t\t\"y\": 0.597913\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.318952,\n\t\t\t\t\"y\": 0.593388\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.313954,\n\t\t\t\t\"y\": 0.588117\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.30964,\n\t\t\t\t\"y\": 0.582253\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.306014,\n\t\t\t\t\"y\": 0.575923\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.303069,\n\t\t\t\t\"y\": 0.569236\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.300796,\n\t\t\t\t\"y\": 0.562283\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.299181,\n\t\t\t\t\"y\": 0.555142\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.298216,\n\t\t\t\t\"y\": 0.54788\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.984402,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.980521,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.968939,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.949838,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.92352,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.8904,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.851,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.805942,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.755935,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.70177,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.644299,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.58443,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.523107,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.461295,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.399972,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.340103,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.282632,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.228467,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.17846,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.133402,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.094002,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.060882,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.034564,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015463,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003881,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003881,\n\t\t\t\t\"y\": 0.437209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015463,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.034564,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.060882,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.094002,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.133402,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.17846,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.228467,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.282632,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.340103,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.399972,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.461295,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.523107,\n\t\t\t\t\"y\": 3.4834e-10\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.58443,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.644299,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.70177,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.755936,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.805942,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.851,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.8904,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.92352,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.949838,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.968939,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.980521,\n\t\t\t\t\"y\": 0.437209\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.490188,\n\t\t\t\t\"y\": 0.161438\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.509546,\n\t\t\t\t\"y\": 0.160552\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.529335,\n\t\t\t\t\"y\": 0.163971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.548916,\n\t\t\t\t\"y\": 0.168475\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.568299,\n\t\t\t\t\"y\": 0.173794\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.587421,\n\t\t\t\t\"y\": 0.180009\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606089,\n\t\t\t\t\"y\": 0.187509\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.623495,\n\t\t\t\t\"y\": 0.1976\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.628147,\n\t\t\t\t\"y\": 0.214639\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.611223,\n\t\t\t\t\"y\": 0.225401\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.592625,\n\t\t\t\t\"y\": 0.233086\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.573792,\n\t\t\t\t\"y\": 0.240164\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.555109,\n\t\t\t\t\"y\": 0.247636\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.537394,\n\t\t\t\t\"y\": 0.257168\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.533871,\n\t\t\t\t\"y\": 0.274059\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.550055,\n\t\t\t\t\"y\": 0.286005\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.567937,\n\t\t\t\t\"y\": 0.295286\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.586118,\n\t\t\t\t\"y\": 0.303954\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.604141,\n\t\t\t\t\"y\": 0.312951\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.621035,\n\t\t\t\t\"y\": 0.323913\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.623359,\n\t\t\t\t\"y\": 0.341466\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606482,\n\t\t\t\t\"y\": 0.352281\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.587592,\n\t\t\t\t\"y\": 0.359166\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.568182,\n\t\t\t\t\"y\": 0.364369\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.548519,\n\t\t\t\t\"y\": 0.368486\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.528692,\n\t\t\t\t\"y\": 0.371683\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.508729,\n\t\t\t\t\"y\": 0.373819\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.490906,\n\t\t\t\t\"y\": 0.371809\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.510015,\n\t\t\t\t\"y\": 0.365757\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.529547,\n\t\t\t\t\"y\": 0.361033\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.549011,\n\t\t\t\t\"y\": 0.356026\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.568242,\n\t\t\t\t\"y\": 0.35017\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.586705,\n\t\t\t\t\"y\": 0.34222\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.594053,\n\t\t\t\t\"y\": 0.326525\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.577703,\n\t\t\t\t\"y\": 0.314882\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.559557,\n\t\t\t\t\"y\": 0.306147\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.541156,\n\t\t\t\t\"y\": 0.297975\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.52291,\n\t\t\t\t\"y\": 0.289456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.50559,\n\t\t\t\t\"y\": 0.279179\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.500789,\n\t\t\t\t\"y\": 0.262399\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.517529,\n\t\t\t\t\"y\": 0.251334\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.536007,\n\t\t\t\t\"y\": 0.243356\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.554739,\n\t\t\t\t\"y\": 0.236005\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.573264,\n\t\t\t\t\"y\": 0.228139\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.589864,\n\t\t\t\t\"y\": 0.216957\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.582107,\n\t\t\t\t\"y\": 0.200801\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.56426,\n\t\t\t\t\"y\": 0.191498\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.545543,\n\t\t\t\t\"y\": 0.184115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.526564,\n\t\t\t\t\"y\": 0.177455\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.507569,\n\t\t\t\t\"y\": 0.170839\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.860802,\n\t\t\t\t\"y\": 0.299823\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864058,\n\t\t\t\t\"y\": 0.318104\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.862646,\n\t\t\t\t\"y\": 0.336627\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.856658,\n\t\t\t\t\"y\": 0.354178\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.846486,\n\t\t\t\t\"y\": 0.369606\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.832799,\n\t\t\t\t\"y\": 0.381897\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.816494,\n\t\t\t\t\"y\": 0.390248\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.798639,\n\t\t\t\t\"y\": 0.394109\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.780406,\n\t\t\t\t\"y\": 0.393228\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.762991,\n\t\t\t\t\"y\": 0.387662\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.747536,\n\t\t\t\t\"y\": 0.377776\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.735055,\n\t\t\t\t\"y\": 0.36422\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.726366,\n\t\t\t\t\"y\": 0.347881\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.722039,\n\t\t\t\t\"y\": 0.329831\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.722357,\n\t\t\t\t\"y\": 0.311255\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.727301,\n\t\t\t\t\"y\": 0.29337\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.735264,\n\t\t\t\t\"y\": 0.2766\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.743158,\n\t\t\t\t\"y\": 0.259792\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.751052,\n\t\t\t\t\"y\": 0.242983\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.758946,\n\t\t\t\t\"y\": 0.226174\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.76684,\n\t\t\t\t\"y\": 0.209366\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.774734,\n\t\t\t\t\"y\": 0.192557\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.782628,\n\t\t\t\t\"y\": 0.175749\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.790521,\n\t\t\t\t\"y\": 0.15894\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.798415,\n\t\t\t\t\"y\": 0.142132\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.806309,\n\t\t\t\t\"y\": 0.125323\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.822289,\n\t\t\t\t\"y\": 0.134408\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.838269,\n\t\t\t\t\"y\": 0.143493\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.854248,\n\t\t\t\t\"y\": 0.152577\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.870228,\n\t\t\t\t\"y\": 0.161662\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.886208,\n\t\t\t\t\"y\": 0.170747\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.902188,\n\t\t\t\t\"y\": 0.179832\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.918168,\n\t\t\t\t\"y\": 0.188916\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.934147,\n\t\t\t\t\"y\": 0.198001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.950127,\n\t\t\t\t\"y\": 0.207086\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.966142,\n\t\t\t\t\"y\": 0.216098\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.980323,\n\t\t\t\t\"y\": 0.227795\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.991121,\n\t\t\t\t\"y\": 0.242775\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.997826,\n\t\t\t\t\"y\": 0.260055\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.278502\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.997499,\n\t\t\t\t\"y\": 0.296906\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.990488,\n\t\t\t\t\"y\": 0.31406\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.979427,\n\t\t\t\t\"y\": 0.328839\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.96504,\n\t\t\t\t\"y\": 0.340273\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.948272,\n\t\t\t\t\"y\": 0.347614\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.930222,\n\t\t\t\t\"y\": 0.350378\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.912074,\n\t\t\t\t\"y\": 0.348386\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.895018,\n\t\t\t\t\"y\": 0.341767\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.880173,\n\t\t\t\t\"y\": 0.330957\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.868513,\n\t\t\t\t\"y\": 0.316663\n\t\t\t}\n\t\t]\n\t},\n\t\"kissing\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.708191,\n\t\t\t\t\"y\": 0.6214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.707865,\n\t\t\t\t\"y\": 0.614079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.706885,\n\t\t\t\t\"y\": 0.606817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.705245,\n\t\t\t\t\"y\": 0.599675\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.702935,\n\t\t\t\t\"y\": 0.592722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.699944,\n\t\t\t\t\"y\": 0.586036\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.696261,\n\t\t\t\t\"y\": 0.579706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.691878,\n\t\t\t\t\"y\": 0.573841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.6868,\n\t\t\t\t\"y\": 0.568571\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.681053,\n\t\t\t\t\"y\": 0.564045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.674695,\n\t\t\t\t\"y\": 0.560432\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.667839,\n\t\t\t\t\"y\": 0.557899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.66065,\n\t\t\t\t\"y\": 0.556591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.653343,\n\t\t\t\t\"y\": 0.556591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.646154,\n\t\t\t\t\"y\": 0.557899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.639298,\n\t\t\t\t\"y\": 0.560432\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.632941,\n\t\t\t\t\"y\": 0.564045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.627193,\n\t\t\t\t\"y\": 0.568571\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.622115,\n\t\t\t\t\"y\": 0.573841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.617732,\n\t\t\t\t\"y\": 0.579706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.614049,\n\t\t\t\t\"y\": 0.586036\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.611058,\n\t\t\t\t\"y\": 0.592722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.608748,\n\t\t\t\t\"y\": 0.599675\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.607108,\n\t\t\t\t\"y\": 0.606817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606128,\n\t\t\t\t\"y\": 0.614079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.605802,\n\t\t\t\t\"y\": 0.6214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606128,\n\t\t\t\t\"y\": 0.628721\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.607108,\n\t\t\t\t\"y\": 0.635983\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.608748,\n\t\t\t\t\"y\": 0.643125\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.611058,\n\t\t\t\t\"y\": 0.650077\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.614049,\n\t\t\t\t\"y\": 0.656764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.617732,\n\t\t\t\t\"y\": 0.663094\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.622115,\n\t\t\t\t\"y\": 0.668959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.627193,\n\t\t\t\t\"y\": 0.674229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.632941,\n\t\t\t\t\"y\": 0.678755\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.639298,\n\t\t\t\t\"y\": 0.682368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.646154,\n\t\t\t\t\"y\": 0.684901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.653343,\n\t\t\t\t\"y\": 0.686209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.66065,\n\t\t\t\t\"y\": 0.686209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.667839,\n\t\t\t\t\"y\": 0.684901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.674695,\n\t\t\t\t\"y\": 0.682368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.681053,\n\t\t\t\t\"y\": 0.678755\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.6868,\n\t\t\t\t\"y\": 0.674229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.691878,\n\t\t\t\t\"y\": 0.668959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.696261,\n\t\t\t\t\"y\": 0.663094\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.699944,\n\t\t\t\t\"y\": 0.656764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.702935,\n\t\t\t\t\"y\": 0.650077\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.705245,\n\t\t\t\t\"y\": 0.643125\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.706885,\n\t\t\t\t\"y\": 0.635983\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.707865,\n\t\t\t\t\"y\": 0.628721\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.291809,\n\t\t\t\t\"y\": 0.6214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.292135,\n\t\t\t\t\"y\": 0.614079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.293115,\n\t\t\t\t\"y\": 0.606817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.294755,\n\t\t\t\t\"y\": 0.599675\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.297065,\n\t\t\t\t\"y\": 0.592722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.300056,\n\t\t\t\t\"y\": 0.586036\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.303739,\n\t\t\t\t\"y\": 0.579706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.308122,\n\t\t\t\t\"y\": 0.573841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.3132,\n\t\t\t\t\"y\": 0.568571\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.318947,\n\t\t\t\t\"y\": 0.564045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.325305,\n\t\t\t\t\"y\": 0.560432\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.332161,\n\t\t\t\t\"y\": 0.557899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.33935,\n\t\t\t\t\"y\": 0.556591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.346657,\n\t\t\t\t\"y\": 0.556591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.353846,\n\t\t\t\t\"y\": 0.557899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.360702,\n\t\t\t\t\"y\": 0.560432\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.367059,\n\t\t\t\t\"y\": 0.564045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.372807,\n\t\t\t\t\"y\": 0.568571\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.377885,\n\t\t\t\t\"y\": 0.573841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.382268,\n\t\t\t\t\"y\": 0.579706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.385951,\n\t\t\t\t\"y\": 0.586036\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.388942,\n\t\t\t\t\"y\": 0.592722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.391252,\n\t\t\t\t\"y\": 0.599675\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.392892,\n\t\t\t\t\"y\": 0.606817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.393872,\n\t\t\t\t\"y\": 0.614079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.394198,\n\t\t\t\t\"y\": 0.6214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.393872,\n\t\t\t\t\"y\": 0.628721\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.392892,\n\t\t\t\t\"y\": 0.635983\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.391252,\n\t\t\t\t\"y\": 0.643125\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.388942,\n\t\t\t\t\"y\": 0.650077\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.385951,\n\t\t\t\t\"y\": 0.656764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.382268,\n\t\t\t\t\"y\": 0.663094\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.377885,\n\t\t\t\t\"y\": 0.668959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.372807,\n\t\t\t\t\"y\": 0.674229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.367059,\n\t\t\t\t\"y\": 0.678755\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.360702,\n\t\t\t\t\"y\": 0.682368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.353846,\n\t\t\t\t\"y\": 0.684901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.346657,\n\t\t\t\t\"y\": 0.686209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.33935,\n\t\t\t\t\"y\": 0.686209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.332161,\n\t\t\t\t\"y\": 0.684901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.325305,\n\t\t\t\t\"y\": 0.682368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.318947,\n\t\t\t\t\"y\": 0.678755\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.3132,\n\t\t\t\t\"y\": 0.674229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.308122,\n\t\t\t\t\"y\": 0.668959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.303739,\n\t\t\t\t\"y\": 0.663094\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.300056,\n\t\t\t\t\"y\": 0.656764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.297065,\n\t\t\t\t\"y\": 0.650077\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.294755,\n\t\t\t\t\"y\": 0.643125\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.293115,\n\t\t\t\t\"y\": 0.635983\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.292135,\n\t\t\t\t\"y\": 0.628721\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.437209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 3.4834e-10\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.437209\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.497955,\n\t\t\t\t\"y\": 0.161438\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.51762,\n\t\t\t\t\"y\": 0.160552\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.537723,\n\t\t\t\t\"y\": 0.163971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.557614,\n\t\t\t\t\"y\": 0.168475\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.577303,\n\t\t\t\t\"y\": 0.173794\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.596729,\n\t\t\t\t\"y\": 0.180009\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.615693,\n\t\t\t\t\"y\": 0.187509\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.633375,\n\t\t\t\t\"y\": 0.1976\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.6381,\n\t\t\t\t\"y\": 0.214639\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.620908,\n\t\t\t\t\"y\": 0.225401\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.602016,\n\t\t\t\t\"y\": 0.233086\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.582884,\n\t\t\t\t\"y\": 0.240164\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.563904,\n\t\t\t\t\"y\": 0.247636\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.545909,\n\t\t\t\t\"y\": 0.257168\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.54233,\n\t\t\t\t\"y\": 0.274059\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.558771,\n\t\t\t\t\"y\": 0.286005\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.576936,\n\t\t\t\t\"y\": 0.295286\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.595405,\n\t\t\t\t\"y\": 0.303954\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.613714,\n\t\t\t\t\"y\": 0.312951\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.630876,\n\t\t\t\t\"y\": 0.323913\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.633236,\n\t\t\t\t\"y\": 0.341466\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.616092,\n\t\t\t\t\"y\": 0.352281\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.596903,\n\t\t\t\t\"y\": 0.359166\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.577184,\n\t\t\t\t\"y\": 0.364369\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.55721,\n\t\t\t\t\"y\": 0.368486\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.537069,\n\t\t\t\t\"y\": 0.371683\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.51679,\n\t\t\t\t\"y\": 0.373819\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.498684,\n\t\t\t\t\"y\": 0.371809\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.518096,\n\t\t\t\t\"y\": 0.365757\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.537938,\n\t\t\t\t\"y\": 0.361033\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.55771,\n\t\t\t\t\"y\": 0.356026\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.577246,\n\t\t\t\t\"y\": 0.35017\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.596002,\n\t\t\t\t\"y\": 0.34222\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.603466,\n\t\t\t\t\"y\": 0.326525\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.586857,\n\t\t\t\t\"y\": 0.314882\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.568423,\n\t\t\t\t\"y\": 0.306147\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.549731,\n\t\t\t\t\"y\": 0.297975\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531196,\n\t\t\t\t\"y\": 0.289456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.513601,\n\t\t\t\t\"y\": 0.279179\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.508724,\n\t\t\t\t\"y\": 0.262399\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.525729,\n\t\t\t\t\"y\": 0.251334\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5445,\n\t\t\t\t\"y\": 0.243356\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.563529,\n\t\t\t\t\"y\": 0.236005\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.582348,\n\t\t\t\t\"y\": 0.228139\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.59921,\n\t\t\t\t\"y\": 0.216957\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.591331,\n\t\t\t\t\"y\": 0.200801\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.573201,\n\t\t\t\t\"y\": 0.191498\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.554188,\n\t\t\t\t\"y\": 0.184115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.534907,\n\t\t\t\t\"y\": 0.177455\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.515612,\n\t\t\t\t\"y\": 0.170839\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t]\n\t},\n\t\"kissing_smiling_eyes\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.70555,\n\t\t\t\t\"y\": 0.520267\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.701936,\n\t\t\t\t\"y\": 0.529953\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.696774,\n\t\t\t\t\"y\": 0.538911\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.690373,\n\t\t\t\t\"y\": 0.54703\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.682963,\n\t\t\t\t\"y\": 0.554237\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.674716,\n\t\t\t\t\"y\": 0.560466\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.665771,\n\t\t\t\t\"y\": 0.565638\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.656253,\n\t\t\t\t\"y\": 0.569651\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.646288,\n\t\t\t\t\"y\": 0.572363\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.636037,\n\t\t\t\t\"y\": 0.573582\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.625723,\n\t\t\t\t\"y\": 0.573137\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.615594,\n\t\t\t\t\"y\": 0.571135\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.605842,\n\t\t\t\t\"y\": 0.567734\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.596632,\n\t\t\t\t\"y\": 0.563054\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.588125,\n\t\t\t\t\"y\": 0.557189\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.580497,\n\t\t\t\t\"y\": 0.550216\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.573962,\n\t\t\t\t\"y\": 0.542208\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.568789,\n\t\t\t\t\"y\": 0.533259\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.565802,\n\t\t\t\t\"y\": 0.527088\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.566119,\n\t\t\t\t\"y\": 0.537437\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.566843,\n\t\t\t\t\"y\": 0.547765\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.567983,\n\t\t\t\t\"y\": 0.558055\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.569553,\n\t\t\t\t\"y\": 0.568289\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.571573,\n\t\t\t\t\"y\": 0.578442\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.574073,\n\t\t\t\t\"y\": 0.588488\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.577086,\n\t\t\t\t\"y\": 0.598391\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.580662,\n\t\t\t\t\"y\": 0.608104\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.584861,\n\t\t\t\t\"y\": 0.617563\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.589761,\n\t\t\t\t\"y\": 0.626676\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.595462,\n\t\t\t\t\"y\": 0.635307\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.602083,\n\t\t\t\t\"y\": 0.643248\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.609751,\n\t\t\t\t\"y\": 0.650173\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.61854,\n\t\t\t\t\"y\": 0.655584\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.628329,\n\t\t\t\t\"y\": 0.658811\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.638618,\n\t\t\t\t\"y\": 0.65925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.648629,\n\t\t\t\t\"y\": 0.656811\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.657758,\n\t\t\t\t\"y\": 0.652002\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.665791,\n\t\t\t\t\"y\": 0.645509\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.672766,\n\t\t\t\t\"y\": 0.637879\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.678799,\n\t\t\t\t\"y\": 0.629478\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.68401,\n\t\t\t\t\"y\": 0.620541\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.688502,\n\t\t\t\t\"y\": 0.611218\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.692357,\n\t\t\t\t\"y\": 0.601613\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.695638,\n\t\t\t\t\"y\": 0.591796\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.698397,\n\t\t\t\t\"y\": 0.581819\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.70067,\n\t\t\t\t\"y\": 0.571719\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.702488,\n\t\t\t\t\"y\": 0.561527\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.703872,\n\t\t\t\t\"y\": 0.551267\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.704837,\n\t\t\t\t\"y\": 0.540958\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.705395,\n\t\t\t\t\"y\": 0.53062\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.296293,\n\t\t\t\t\"y\": 0.52607\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.299728,\n\t\t\t\t\"y\": 0.534177\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.305049,\n\t\t\t\t\"y\": 0.543039\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.311702,\n\t\t\t\t\"y\": 0.550949\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.319426,\n\t\t\t\t\"y\": 0.557816\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.328009,\n\t\t\t\t\"y\": 0.563568\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.337279,\n\t\t\t\t\"y\": 0.568126\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.347076,\n\t\t\t\t\"y\": 0.571396\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.357233,\n\t\t\t\t\"y\": 0.573252\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.367552,\n\t\t\t\t\"y\": 0.573535\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.377784,\n\t\t\t\t\"y\": 0.572159\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.387711,\n\t\t\t\t\"y\": 0.569311\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.397178,\n\t\t\t\t\"y\": 0.565179\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.40606,\n\t\t\t\t\"y\": 0.559899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.414231,\n\t\t\t\t\"y\": 0.553571\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.421551,\n\t\t\t\t\"y\": 0.546271\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.427841,\n\t\t\t\t\"y\": 0.538066\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.432865,\n\t\t\t\t\"y\": 0.52903\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.436052,\n\t\t\t\t\"y\": 0.521285\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.435858,\n\t\t\t\t\"y\": 0.531637\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.435261,\n\t\t\t\t\"y\": 0.541973\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.434255,\n\t\t\t\t\"y\": 0.552278\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.432829,\n\t\t\t\t\"y\": 0.562532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.430968,\n\t\t\t\t\"y\": 0.572716\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.428648,\n\t\t\t\t\"y\": 0.582805\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.42584,\n\t\t\t\t\"y\": 0.592769\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.422504,\n\t\t\t\t\"y\": 0.602568\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.41859,\n\t\t\t\t\"y\": 0.612149\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.414031,\n\t\t\t\t\"y\": 0.621438\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.408744,\n\t\t\t\t\"y\": 0.630331\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.402624,\n\t\t\t\t\"y\": 0.638668\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.39555,\n\t\t\t\t\"y\": 0.646205\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.387408,\n\t\t\t\t\"y\": 0.65256\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.378178,\n\t\t\t\t\"y\": 0.657167\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.368106,\n\t\t\t\t\"y\": 0.659338\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.357833,\n\t\t\t\t\"y\": 0.65861\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.348127,\n\t\t\t\t\"y\": 0.655137\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.339448,\n\t\t\t\t\"y\": 0.64955\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.331888,\n\t\t\t\t\"y\": 0.642506\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.325363,\n\t\t\t\t\"y\": 0.634485\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.319746,\n\t\t\t\t\"y\": 0.625799\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.314919,\n\t\t\t\t\"y\": 0.616647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.310784,\n\t\t\t\t\"y\": 0.607159\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.307266,\n\t\t\t\t\"y\": 0.597425\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.304305,\n\t\t\t\t\"y\": 0.587506\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.301854,\n\t\t\t\t\"y\": 0.577448\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.299879,\n\t\t\t\t\"y\": 0.567286\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.298352,\n\t\t\t\t\"y\": 0.557046\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.297254,\n\t\t\t\t\"y\": 0.546751\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.29657,\n\t\t\t\t\"y\": 0.53642\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.437209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 3.4834e-10\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.437209\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.497955,\n\t\t\t\t\"y\": 0.161438\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.51762,\n\t\t\t\t\"y\": 0.160552\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.537723,\n\t\t\t\t\"y\": 0.163971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.557614,\n\t\t\t\t\"y\": 0.168475\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.577303,\n\t\t\t\t\"y\": 0.173794\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.596729,\n\t\t\t\t\"y\": 0.180009\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.615693,\n\t\t\t\t\"y\": 0.187509\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.633375,\n\t\t\t\t\"y\": 0.1976\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.6381,\n\t\t\t\t\"y\": 0.214639\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.620908,\n\t\t\t\t\"y\": 0.225401\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.602016,\n\t\t\t\t\"y\": 0.233086\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.582884,\n\t\t\t\t\"y\": 0.240164\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.563904,\n\t\t\t\t\"y\": 0.247636\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.545909,\n\t\t\t\t\"y\": 0.257168\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.54233,\n\t\t\t\t\"y\": 0.274059\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.558771,\n\t\t\t\t\"y\": 0.286005\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.576936,\n\t\t\t\t\"y\": 0.295286\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.595405,\n\t\t\t\t\"y\": 0.303954\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.613714,\n\t\t\t\t\"y\": 0.312951\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.630876,\n\t\t\t\t\"y\": 0.323913\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.633236,\n\t\t\t\t\"y\": 0.341466\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.616092,\n\t\t\t\t\"y\": 0.352281\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.596903,\n\t\t\t\t\"y\": 0.359166\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.577184,\n\t\t\t\t\"y\": 0.364369\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.55721,\n\t\t\t\t\"y\": 0.368486\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.537069,\n\t\t\t\t\"y\": 0.371683\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.51679,\n\t\t\t\t\"y\": 0.373819\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.498684,\n\t\t\t\t\"y\": 0.371809\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.518096,\n\t\t\t\t\"y\": 0.365757\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.537938,\n\t\t\t\t\"y\": 0.361033\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.55771,\n\t\t\t\t\"y\": 0.356026\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.577246,\n\t\t\t\t\"y\": 0.35017\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.596002,\n\t\t\t\t\"y\": 0.34222\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.603466,\n\t\t\t\t\"y\": 0.326525\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.586857,\n\t\t\t\t\"y\": 0.314882\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.568423,\n\t\t\t\t\"y\": 0.306147\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.549731,\n\t\t\t\t\"y\": 0.297975\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531196,\n\t\t\t\t\"y\": 0.289456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.513601,\n\t\t\t\t\"y\": 0.279179\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.508724,\n\t\t\t\t\"y\": 0.262399\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.525729,\n\t\t\t\t\"y\": 0.251334\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5445,\n\t\t\t\t\"y\": 0.243356\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.563529,\n\t\t\t\t\"y\": 0.236005\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.582348,\n\t\t\t\t\"y\": 0.228139\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.59921,\n\t\t\t\t\"y\": 0.216957\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.591331,\n\t\t\t\t\"y\": 0.200801\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.573201,\n\t\t\t\t\"y\": 0.191498\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.554188,\n\t\t\t\t\"y\": 0.184115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.534907,\n\t\t\t\t\"y\": 0.177455\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.515612,\n\t\t\t\t\"y\": 0.170839\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t]\n\t},\n\t\"kissing_closed_eyes\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.826179,\n\t\t\t\t\"y\": 0.632958\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.823163,\n\t\t\t\t\"y\": 0.642501\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.819398,\n\t\t\t\t\"y\": 0.651773\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.814908,\n\t\t\t\t\"y\": 0.660714\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.809722,\n\t\t\t\t\"y\": 0.66927\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.803872,\n\t\t\t\t\"y\": 0.677384\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.797396,\n\t\t\t\t\"y\": 0.685005\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.790334,\n\t\t\t\t\"y\": 0.692086\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.782732,\n\t\t\t\t\"y\": 0.69858\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.774638,\n\t\t\t\t\"y\": 0.704447\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.766104,\n\t\t\t\t\"y\": 0.70965\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.757183,\n\t\t\t\t\"y\": 0.714155\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.747932,\n\t\t\t\t\"y\": 0.717934\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.73841,\n\t\t\t\t\"y\": 0.720963\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.728678,\n\t\t\t\t\"y\": 0.723222\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.718797,\n\t\t\t\t\"y\": 0.724697\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.708831,\n\t\t\t\t\"y\": 0.72538\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.698841,\n\t\t\t\t\"y\": 0.725264\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.688893,\n\t\t\t\t\"y\": 0.724352\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.679049,\n\t\t\t\t\"y\": 0.722649\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.669371,\n\t\t\t\t\"y\": 0.720166\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.659921,\n\t\t\t\t\"y\": 0.716919\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.65076,\n\t\t\t\t\"y\": 0.712927\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.641945,\n\t\t\t\t\"y\": 0.708218\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.633532,\n\t\t\t\t\"y\": 0.702819\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.625575,\n\t\t\t\t\"y\": 0.696767\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.618124,\n\t\t\t\t\"y\": 0.690099\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.611228,\n\t\t\t\t\"y\": 0.682857\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.620859,\n\t\t\t\t\"y\": 0.685218\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.630653,\n\t\t\t\t\"y\": 0.687204\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.640522,\n\t\t\t\t\"y\": 0.688768\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.650448,\n\t\t\t\t\"y\": 0.68991\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.660415,\n\t\t\t\t\"y\": 0.690625\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.670402,\n\t\t\t\t\"y\": 0.690914\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.680393,\n\t\t\t\t\"y\": 0.690775\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.690369,\n\t\t\t\t\"y\": 0.690209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.700312,\n\t\t\t\t\"y\": 0.689217\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.710203,\n\t\t\t\t\"y\": 0.6878\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.720025,\n\t\t\t\t\"y\": 0.685961\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.72976,\n\t\t\t\t\"y\": 0.683704\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.739389,\n\t\t\t\t\"y\": 0.681032\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.748896,\n\t\t\t\t\"y\": 0.677951\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.758263,\n\t\t\t\t\"y\": 0.674466\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767473,\n\t\t\t\t\"y\": 0.670584\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.776509,\n\t\t\t\t\"y\": 0.666311\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.785355,\n\t\t\t\t\"y\": 0.661655\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.793995,\n\t\t\t\t\"y\": 0.656626\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.802412,\n\t\t\t\t\"y\": 0.651231\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.810591,\n\t\t\t\t\"y\": 0.645481\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818519,\n\t\t\t\t\"y\": 0.639386\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.173821,\n\t\t\t\t\"y\": 0.632958\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.176837,\n\t\t\t\t\"y\": 0.642501\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.180602,\n\t\t\t\t\"y\": 0.651773\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.185092,\n\t\t\t\t\"y\": 0.660714\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.190278,\n\t\t\t\t\"y\": 0.66927\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.196128,\n\t\t\t\t\"y\": 0.677384\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.202604,\n\t\t\t\t\"y\": 0.685005\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.209666,\n\t\t\t\t\"y\": 0.692086\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.217268,\n\t\t\t\t\"y\": 0.69858\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.225362,\n\t\t\t\t\"y\": 0.704447\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.233896,\n\t\t\t\t\"y\": 0.70965\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.242817,\n\t\t\t\t\"y\": 0.714155\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.252068,\n\t\t\t\t\"y\": 0.717934\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.26159,\n\t\t\t\t\"y\": 0.720963\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.271322,\n\t\t\t\t\"y\": 0.723222\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.281203,\n\t\t\t\t\"y\": 0.724697\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.291169,\n\t\t\t\t\"y\": 0.72538\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.301159,\n\t\t\t\t\"y\": 0.725264\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.311107,\n\t\t\t\t\"y\": 0.724352\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.320951,\n\t\t\t\t\"y\": 0.722649\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.330629,\n\t\t\t\t\"y\": 0.720166\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.340079,\n\t\t\t\t\"y\": 0.716919\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.34924,\n\t\t\t\t\"y\": 0.712927\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.358055,\n\t\t\t\t\"y\": 0.708218\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.366468,\n\t\t\t\t\"y\": 0.702819\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.374425,\n\t\t\t\t\"y\": 0.696767\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.381876,\n\t\t\t\t\"y\": 0.690099\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.388772,\n\t\t\t\t\"y\": 0.682857\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.379141,\n\t\t\t\t\"y\": 0.685218\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.369347,\n\t\t\t\t\"y\": 0.687204\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.359478,\n\t\t\t\t\"y\": 0.688768\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.349552,\n\t\t\t\t\"y\": 0.68991\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.339585,\n\t\t\t\t\"y\": 0.690625\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.329598,\n\t\t\t\t\"y\": 0.690914\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.319607,\n\t\t\t\t\"y\": 0.690775\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.309631,\n\t\t\t\t\"y\": 0.690209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.299688,\n\t\t\t\t\"y\": 0.689217\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.289797,\n\t\t\t\t\"y\": 0.6878\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.279975,\n\t\t\t\t\"y\": 0.685961\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.27024,\n\t\t\t\t\"y\": 0.683704\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.260611,\n\t\t\t\t\"y\": 0.681032\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.251104,\n\t\t\t\t\"y\": 0.677951\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.241737,\n\t\t\t\t\"y\": 0.674466\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232527,\n\t\t\t\t\"y\": 0.670584\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.223491,\n\t\t\t\t\"y\": 0.666311\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.214645,\n\t\t\t\t\"y\": 0.661655\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.206005,\n\t\t\t\t\"y\": 0.656626\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.197588,\n\t\t\t\t\"y\": 0.651231\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.189409,\n\t\t\t\t\"y\": 0.645481\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181481,\n\t\t\t\t\"y\": 0.639386\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.762083,\n\t\t\t\t\"y\": 0.481681\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.754616,\n\t\t\t\t\"y\": 0.486573\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.746893,\n\t\t\t\t\"y\": 0.491049\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.738951,\n\t\t\t\t\"y\": 0.495122\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.730823,\n\t\t\t\t\"y\": 0.498809\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.722538,\n\t\t\t\t\"y\": 0.502124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.714119,\n\t\t\t\t\"y\": 0.505085\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.705589,\n\t\t\t\t\"y\": 0.507703\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.696964,\n\t\t\t\t\"y\": 0.509995\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.688263,\n\t\t\t\t\"y\": 0.511972\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.679499,\n\t\t\t\t\"y\": 0.513645\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.670683,\n\t\t\t\t\"y\": 0.515027\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.661829,\n\t\t\t\t\"y\": 0.516126\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.652945,\n\t\t\t\t\"y\": 0.516952\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.64404,\n\t\t\t\t\"y\": 0.517514\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.635123,\n\t\t\t\t\"y\": 0.517817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.626201,\n\t\t\t\t\"y\": 0.517871\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.61728,\n\t\t\t\t\"y\": 0.517679\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.608368,\n\t\t\t\t\"y\": 0.517248\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.599471,\n\t\t\t\t\"y\": 0.516582\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.590593,\n\t\t\t\t\"y\": 0.515686\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.581741,\n\t\t\t\t\"y\": 0.514562\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.572921,\n\t\t\t\t\"y\": 0.513215\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.564787,\n\t\t\t\t\"y\": 0.512129\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.569635,\n\t\t\t\t\"y\": 0.519622\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.57562,\n\t\t\t\t\"y\": 0.526241\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.582493,\n\t\t\t\t\"y\": 0.531931\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.590028,\n\t\t\t\t\"y\": 0.53671\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.598042,\n\t\t\t\t\"y\": 0.540631\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606395,\n\t\t\t\t\"y\": 0.543767\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.614981,\n\t\t\t\t\"y\": 0.546189\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.623725,\n\t\t\t\t\"y\": 0.547962\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.632568,\n\t\t\t\t\"y\": 0.549145\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.641466,\n\t\t\t\t\"y\": 0.549786\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.650386,\n\t\t\t\t\"y\": 0.549927\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.659302,\n\t\t\t\t\"y\": 0.549603\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.668187,\n\t\t\t\t\"y\": 0.548792\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.677025,\n\t\t\t\t\"y\": 0.547569\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.685801,\n\t\t\t\t\"y\": 0.545959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.69449,\n\t\t\t\t\"y\": 0.54393\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.703059,\n\t\t\t\t\"y\": 0.541442\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.711466,\n\t\t\t\t\"y\": 0.538451\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.719654,\n\t\t\t\t\"y\": 0.534905\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.72755,\n\t\t\t\t\"y\": 0.530745\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.735051,\n\t\t\t\t\"y\": 0.52591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.742022,\n\t\t\t\t\"y\": 0.520337\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.74829,\n\t\t\t\t\"y\": 0.513982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.75364,\n\t\t\t\t\"y\": 0.506837\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.757843,\n\t\t\t\t\"y\": 0.498962\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.760695,\n\t\t\t\t\"y\": 0.490501\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.237917,\n\t\t\t\t\"y\": 0.481681\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.245384,\n\t\t\t\t\"y\": 0.486573\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.253107,\n\t\t\t\t\"y\": 0.491049\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.261049,\n\t\t\t\t\"y\": 0.495122\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.269177,\n\t\t\t\t\"y\": 0.498809\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.277462,\n\t\t\t\t\"y\": 0.502124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.285881,\n\t\t\t\t\"y\": 0.505085\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.294411,\n\t\t\t\t\"y\": 0.507703\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.303036,\n\t\t\t\t\"y\": 0.509995\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.311737,\n\t\t\t\t\"y\": 0.511972\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.320501,\n\t\t\t\t\"y\": 0.513645\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.329317,\n\t\t\t\t\"y\": 0.515027\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.338171,\n\t\t\t\t\"y\": 0.516126\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.347055,\n\t\t\t\t\"y\": 0.516952\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.35596,\n\t\t\t\t\"y\": 0.517514\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.364877,\n\t\t\t\t\"y\": 0.517817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.373799,\n\t\t\t\t\"y\": 0.517871\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.38272,\n\t\t\t\t\"y\": 0.517679\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.391632,\n\t\t\t\t\"y\": 0.517248\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.400529,\n\t\t\t\t\"y\": 0.516582\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.409407,\n\t\t\t\t\"y\": 0.515686\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.418259,\n\t\t\t\t\"y\": 0.514562\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.427079,\n\t\t\t\t\"y\": 0.513215\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.435213,\n\t\t\t\t\"y\": 0.512129\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.430365,\n\t\t\t\t\"y\": 0.519622\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.42438,\n\t\t\t\t\"y\": 0.526241\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.417507,\n\t\t\t\t\"y\": 0.531931\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.409972,\n\t\t\t\t\"y\": 0.53671\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.401958,\n\t\t\t\t\"y\": 0.540631\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.393605,\n\t\t\t\t\"y\": 0.543767\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.385019,\n\t\t\t\t\"y\": 0.546189\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.376275,\n\t\t\t\t\"y\": 0.547962\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.367432,\n\t\t\t\t\"y\": 0.549145\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.358534,\n\t\t\t\t\"y\": 0.549786\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.349614,\n\t\t\t\t\"y\": 0.549927\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.340698,\n\t\t\t\t\"y\": 0.549603\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.331813,\n\t\t\t\t\"y\": 0.548792\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.322975,\n\t\t\t\t\"y\": 0.547569\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.314199,\n\t\t\t\t\"y\": 0.545959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.30551,\n\t\t\t\t\"y\": 0.54393\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.296941,\n\t\t\t\t\"y\": 0.541442\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.288534,\n\t\t\t\t\"y\": 0.538451\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.280346,\n\t\t\t\t\"y\": 0.534905\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.27245,\n\t\t\t\t\"y\": 0.530745\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.264949,\n\t\t\t\t\"y\": 0.52591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.257978,\n\t\t\t\t\"y\": 0.520337\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.25171,\n\t\t\t\t\"y\": 0.513982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.24636,\n\t\t\t\t\"y\": 0.506837\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.242157,\n\t\t\t\t\"y\": 0.498962\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.239305,\n\t\t\t\t\"y\": 0.490501\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.437209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 3.4834e-10\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.437209\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.497955,\n\t\t\t\t\"y\": 0.161438\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.51762,\n\t\t\t\t\"y\": 0.160552\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.537723,\n\t\t\t\t\"y\": 0.163971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.557614,\n\t\t\t\t\"y\": 0.168475\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.577303,\n\t\t\t\t\"y\": 0.173794\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.596729,\n\t\t\t\t\"y\": 0.180009\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.615693,\n\t\t\t\t\"y\": 0.187509\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.633375,\n\t\t\t\t\"y\": 0.1976\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.6381,\n\t\t\t\t\"y\": 0.214639\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.620908,\n\t\t\t\t\"y\": 0.225401\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.602016,\n\t\t\t\t\"y\": 0.233086\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.582884,\n\t\t\t\t\"y\": 0.240164\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.563904,\n\t\t\t\t\"y\": 0.247636\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.545909,\n\t\t\t\t\"y\": 0.257168\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.54233,\n\t\t\t\t\"y\": 0.274059\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.558771,\n\t\t\t\t\"y\": 0.286005\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.576936,\n\t\t\t\t\"y\": 0.295286\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.595405,\n\t\t\t\t\"y\": 0.303954\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.613714,\n\t\t\t\t\"y\": 0.312951\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.630876,\n\t\t\t\t\"y\": 0.323913\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.633236,\n\t\t\t\t\"y\": 0.341466\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.616092,\n\t\t\t\t\"y\": 0.352281\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.596903,\n\t\t\t\t\"y\": 0.359166\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.577184,\n\t\t\t\t\"y\": 0.364369\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.55721,\n\t\t\t\t\"y\": 0.368486\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.537069,\n\t\t\t\t\"y\": 0.371683\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.51679,\n\t\t\t\t\"y\": 0.373819\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.498684,\n\t\t\t\t\"y\": 0.371809\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.518096,\n\t\t\t\t\"y\": 0.365757\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.537938,\n\t\t\t\t\"y\": 0.361033\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.55771,\n\t\t\t\t\"y\": 0.356026\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.577246,\n\t\t\t\t\"y\": 0.35017\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.596002,\n\t\t\t\t\"y\": 0.34222\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.603466,\n\t\t\t\t\"y\": 0.326525\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.586857,\n\t\t\t\t\"y\": 0.314882\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.568423,\n\t\t\t\t\"y\": 0.306147\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.549731,\n\t\t\t\t\"y\": 0.297975\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531196,\n\t\t\t\t\"y\": 0.289456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.513601,\n\t\t\t\t\"y\": 0.279179\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.508724,\n\t\t\t\t\"y\": 0.262399\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.525729,\n\t\t\t\t\"y\": 0.251334\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5445,\n\t\t\t\t\"y\": 0.243356\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.563529,\n\t\t\t\t\"y\": 0.236005\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.582348,\n\t\t\t\t\"y\": 0.228139\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.59921,\n\t\t\t\t\"y\": 0.216957\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.591331,\n\t\t\t\t\"y\": 0.200801\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.573201,\n\t\t\t\t\"y\": 0.191498\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.554188,\n\t\t\t\t\"y\": 0.184115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.534907,\n\t\t\t\t\"y\": 0.177455\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.515612,\n\t\t\t\t\"y\": 0.170839\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t]\n\t},\n\t\"stuck_out_tongue_winking_eye\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.895004,\n\t\t\t\t\"y\": 0.591011\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.893739,\n\t\t\t\t\"y\": 0.573044\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.889972,\n\t\t\t\t\"y\": 0.555389\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.88378,\n\t\t\t\t\"y\": 0.538352\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.875287,\n\t\t\t\t\"y\": 0.522218\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.86466,\n\t\t\t\t\"y\": 0.507246\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.852097,\n\t\t\t\t\"y\": 0.493669\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.837822,\n\t\t\t\t\"y\": 0.481683\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.822079,\n\t\t\t\t\"y\": 0.471456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.805125,\n\t\t\t\t\"y\": 0.463121\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.787222,\n\t\t\t\t\"y\": 0.456782\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.76864,\n\t\t\t\t\"y\": 0.452515\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.749649,\n\t\t\t\t\"y\": 0.45037\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.730522,\n\t\t\t\t\"y\": 0.45037\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.711531,\n\t\t\t\t\"y\": 0.452515\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.692948,\n\t\t\t\t\"y\": 0.456782\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.675046,\n\t\t\t\t\"y\": 0.463121\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.658091,\n\t\t\t\t\"y\": 0.471456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.642348,\n\t\t\t\t\"y\": 0.481683\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.628074,\n\t\t\t\t\"y\": 0.493669\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.61551,\n\t\t\t\t\"y\": 0.507246\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.604883,\n\t\t\t\t\"y\": 0.522218\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.59639,\n\t\t\t\t\"y\": 0.538352\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.590198,\n\t\t\t\t\"y\": 0.555389\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.586431,\n\t\t\t\t\"y\": 0.573044\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.585166,\n\t\t\t\t\"y\": 0.591011\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.586431,\n\t\t\t\t\"y\": 0.608978\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.590198,\n\t\t\t\t\"y\": 0.626632\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.59639,\n\t\t\t\t\"y\": 0.643669\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.604883,\n\t\t\t\t\"y\": 0.659804\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.61551,\n\t\t\t\t\"y\": 0.674775\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.628074,\n\t\t\t\t\"y\": 0.688353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.642348,\n\t\t\t\t\"y\": 0.700339\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.658091,\n\t\t\t\t\"y\": 0.710566\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.675046,\n\t\t\t\t\"y\": 0.718901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.692948,\n\t\t\t\t\"y\": 0.72524\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.711531,\n\t\t\t\t\"y\": 0.729507\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.730522,\n\t\t\t\t\"y\": 0.731652\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.749649,\n\t\t\t\t\"y\": 0.731652\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.76864,\n\t\t\t\t\"y\": 0.729507\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.787222,\n\t\t\t\t\"y\": 0.72524\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.805125,\n\t\t\t\t\"y\": 0.718901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.822079,\n\t\t\t\t\"y\": 0.710566\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.837822,\n\t\t\t\t\"y\": 0.700339\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.852097,\n\t\t\t\t\"y\": 0.688353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.86466,\n\t\t\t\t\"y\": 0.674775\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.875287,\n\t\t\t\t\"y\": 0.659804\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.88378,\n\t\t\t\t\"y\": 0.643669\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.889972,\n\t\t\t\t\"y\": 0.626632\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.893739,\n\t\t\t\t\"y\": 0.608978\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.203508,\n\t\t\t\t\"y\": 0.521005\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.214016,\n\t\t\t\t\"y\": 0.525503\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.224769,\n\t\t\t\t\"y\": 0.529453\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.235724,\n\t\t\t\t\"y\": 0.53288\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.246841,\n\t\t\t\t\"y\": 0.535807\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.258087,\n\t\t\t\t\"y\": 0.53826\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.269433,\n\t\t\t\t\"y\": 0.54026\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.280856,\n\t\t\t\t\"y\": 0.54183\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.292334,\n\t\t\t\t\"y\": 0.542988\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.303849,\n\t\t\t\t\"y\": 0.543754\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.315386,\n\t\t\t\t\"y\": 0.544145\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.32693,\n\t\t\t\t\"y\": 0.544175\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.338469,\n\t\t\t\t\"y\": 0.543859\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.349992,\n\t\t\t\t\"y\": 0.543209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.36149,\n\t\t\t\t\"y\": 0.542236\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.372953,\n\t\t\t\t\"y\": 0.540952\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.384374,\n\t\t\t\t\"y\": 0.539366\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.395744,\n\t\t\t\t\"y\": 0.537486\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.407057,\n\t\t\t\t\"y\": 0.53532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.418305,\n\t\t\t\t\"y\": 0.532875\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.429482,\n\t\t\t\t\"y\": 0.530156\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.440582,\n\t\t\t\t\"y\": 0.527169\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.451598,\n\t\t\t\t\"y\": 0.523919\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.461787,\n\t\t\t\t\"y\": 0.521109\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.457056,\n\t\t\t\t\"y\": 0.53101\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.4507,\n\t\t\t\t\"y\": 0.540071\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.443026,\n\t\t\t\t\"y\": 0.548181\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.434326,\n\t\t\t\t\"y\": 0.555316\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.424846,\n\t\t\t\t\"y\": 0.561511\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.414779,\n\t\t\t\t\"y\": 0.566824\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.404272,\n\t\t\t\t\"y\": 0.571322\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.393439,\n\t\t\t\t\"y\": 0.575071\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.382362,\n\t\t\t\t\"y\": 0.578127\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.371108,\n\t\t\t\t\"y\": 0.580543\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.359728,\n\t\t\t\t\"y\": 0.582362\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.348262,\n\t\t\t\t\"y\": 0.583622\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.336741,\n\t\t\t\t\"y\": 0.58429\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.325199,\n\t\t\t\t\"y\": 0.584455\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.31366,\n\t\t\t\t\"y\": 0.584143\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.302151,\n\t\t\t\t\"y\": 0.583311\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.290705,\n\t\t\t\t\"y\": 0.581906\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.279367,\n\t\t\t\t\"y\": 0.579866\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.2682,\n\t\t\t\t\"y\": 0.577119\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.257288,\n\t\t\t\t\"y\": 0.573581\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.246747,\n\t\t\t\t\"y\": 0.569157\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.236739,\n\t\t\t\t\"y\": 0.563749\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.227478,\n\t\t\t\t\"y\": 0.557272\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.219236,\n\t\t\t\t\"y\": 0.549675\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.212318,\n\t\t\t\t\"y\": 0.540988\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.207012,\n\t\t\t\t\"y\": 0.531348\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.530151\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.589155\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.647229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.703456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.75695\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.806867\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.852421\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.892892\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.927642\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.956124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.977887\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.99259\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.99259\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.977887\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.956124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.927642\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.892892\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.852421\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.806867\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.75695\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.703456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.647229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.589155\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.530151\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.471147\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.413073\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.356846\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.303352\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.253434\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.207881\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.16741\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.13266\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.104178\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.082414\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.067711\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 0.060302\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 0.060302\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.067711\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.082414\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.104178\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.13266\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.16741\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.207881\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.253434\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.303352\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.356846\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.413073\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.471147\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.247984,\n\t\t\t\t\"y\": 0.378448\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.250099,\n\t\t\t\t\"y\": 0.353733\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.256326,\n\t\t\t\t\"y\": 0.32964\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.266348,\n\t\t\t\t\"y\": 0.306707\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.279719,\n\t\t\t\t\"y\": 0.285338\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.295946,\n\t\t\t\t\"y\": 0.265798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.314551,\n\t\t\t\t\"y\": 0.248232\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.335099,\n\t\t\t\t\"y\": 0.232702\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.357218,\n\t\t\t\t\"y\": 0.219216\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.380589,\n\t\t\t\t\"y\": 0.207752\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.404945,\n\t\t\t\t\"y\": 0.198274\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.430056,\n\t\t\t\t\"y\": 0.190743\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.455727,\n\t\t\t\t\"y\": 0.185124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.481782,\n\t\t\t\t\"y\": 0.181386\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.508062,\n\t\t\t\t\"y\": 0.179511\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.534417,\n\t\t\t\t\"y\": 0.179486\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.560702,\n\t\t\t\t\"y\": 0.181313\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.586764,\n\t\t\t\t\"y\": 0.185001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.612447,\n\t\t\t\t\"y\": 0.190571\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.637575,\n\t\t\t\t\"y\": 0.198051\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.661954,\n\t\t\t\t\"y\": 0.207478\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.685354,\n\t\t\t\t\"y\": 0.218889\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.70751,\n\t\t\t\t\"y\": 0.232321\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.728104,\n\t\t\t\t\"y\": 0.247797\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.746765,\n\t\t\t\t\"y\": 0.26531\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.763061,\n\t\t\t\t\"y\": 0.2848\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.776513,\n\t\t\t\t\"y\": 0.306124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.786629,\n\t\t\t\t\"y\": 0.32902\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.792961,\n\t\t\t\t\"y\": 0.353089\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.795186,\n\t\t\t\t\"y\": 0.377795\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.770479,\n\t\t\t\t\"y\": 0.371922\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.744723,\n\t\t\t\t\"y\": 0.366642\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.718776,\n\t\t\t\t\"y\": 0.362262\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.692711,\n\t\t\t\t\"y\": 0.358554\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.666563,\n\t\t\t\t\"y\": 0.355402\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.640352,\n\t\t\t\t\"y\": 0.352749\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.614093,\n\t\t\t\t\"y\": 0.350567\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.587794,\n\t\t\t\t\"y\": 0.348856\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.561465,\n\t\t\t\t\"y\": 0.34764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.535113,\n\t\t\t\t\"y\": 0.346977\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.508752,\n\t\t\t\t\"y\": 0.346968\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.4824,\n\t\t\t\t\"y\": 0.347615\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.456069,\n\t\t\t\t\"y\": 0.348817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.42977,\n\t\t\t\t\"y\": 0.350516\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.403509,\n\t\t\t\t\"y\": 0.352685\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.377298,\n\t\t\t\t\"y\": 0.355326\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.351148,\n\t\t\t\t\"y\": 0.358464\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.32508,\n\t\t\t\t\"y\": 0.362157\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.299129,\n\t\t\t\t\"y\": 0.366517\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.273366,\n\t\t\t\t\"y\": 0.371769\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.64019,\n\t\t\t\t\"y\": 0.325741\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.64019,\n\t\t\t\t\"y\": 0.305201\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.64019,\n\t\t\t\t\"y\": 0.284662\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.64019,\n\t\t\t\t\"y\": 0.264123\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.64019,\n\t\t\t\t\"y\": 0.243584\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.64019,\n\t\t\t\t\"y\": 0.223044\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.64019,\n\t\t\t\t\"y\": 0.202505\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.64019,\n\t\t\t\t\"y\": 0.181966\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.64019,\n\t\t\t\t\"y\": 0.161427\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.64019,\n\t\t\t\t\"y\": 0.140887\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.640185,\n\t\t\t\t\"y\": 0.120348\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.637929,\n\t\t\t\t\"y\": 0.09995\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.631589,\n\t\t\t\t\"y\": 0.08033\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.621508,\n\t\t\t\t\"y\": 0.062147\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.608294,\n\t\t\t\t\"y\": 0.045832\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.592585,\n\t\t\t\t\"y\": 0.031608\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.574912,\n\t\t\t\t\"y\": 0.019595\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.555667,\n\t\t\t\t\"y\": 0.009958\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.535136,\n\t\t\t\t\"y\": 0.003084\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.513619,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.492011,\n\t\t\t\t\"y\": 0.002384\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.471319,\n\t\t\t\t\"y\": 0.008813\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.451879,\n\t\t\t\t\"y\": 0.018095\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.433965,\n\t\t\t\t\"y\": 0.029787\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.417951,\n\t\t\t\t\"y\": 0.043708\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.40435,\n\t\t\t\t\"y\": 0.059738\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.393791,\n\t\t\t\t\"y\": 0.07768\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.386896,\n\t\t\t\t\"y\": 0.097134\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.384062,\n\t\t\t\t\"y\": 0.117468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.383988,\n\t\t\t\t\"y\": 0.138006\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.383988,\n\t\t\t\t\"y\": 0.158545\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.383988,\n\t\t\t\t\"y\": 0.179084\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.383988,\n\t\t\t\t\"y\": 0.199624\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.383988,\n\t\t\t\t\"y\": 0.220163\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.383988,\n\t\t\t\t\"y\": 0.240702\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.383988,\n\t\t\t\t\"y\": 0.261242\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.383988,\n\t\t\t\t\"y\": 0.281781\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.383988,\n\t\t\t\t\"y\": 0.30232\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.383988,\n\t\t\t\t\"y\": 0.322859\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.400661,\n\t\t\t\t\"y\": 0.325956\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.422384,\n\t\t\t\t\"y\": 0.324085\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.444136,\n\t\t\t\t\"y\": 0.322535\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.465911,\n\t\t\t\t\"y\": 0.321314\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.487705,\n\t\t\t\t\"y\": 0.320445\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.509513,\n\t\t\t\t\"y\": 0.319965\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531327,\n\t\t\t\t\"y\": 0.31994\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.553136,\n\t\t\t\t\"y\": 0.320374\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.574932,\n\t\t\t\t\"y\": 0.321204\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.596709,\n\t\t\t\t\"y\": 0.322389\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.618464,\n\t\t\t\t\"y\": 0.323904\n\t\t\t}\n\t\t]\n\t},\n\t\"stuck_out_tongue_closed_eyes\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.781904,\n\t\t\t\t\"y\": 0.467951\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.769261,\n\t\t\t\t\"y\": 0.456739\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.750201,\n\t\t\t\t\"y\": 0.458683\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.731854,\n\t\t\t\t\"y\": 0.464206\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.714044,\n\t\t\t\t\"y\": 0.47113\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.696612,\n\t\t\t\t\"y\": 0.478862\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.679473,\n\t\t\t\t\"y\": 0.487157\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.662584,\n\t\t\t\t\"y\": 0.495895\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.64593,\n\t\t\t\t\"y\": 0.505024\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.629515,\n\t\t\t\t\"y\": 0.514529\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.613341,\n\t\t\t\t\"y\": 0.524394\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.597407,\n\t\t\t\t\"y\": 0.534599\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.581703,\n\t\t\t\t\"y\": 0.545115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.566246,\n\t\t\t\t\"y\": 0.555951\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.552326,\n\t\t\t\t\"y\": 0.568425\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.549267,\n\t\t\t\t\"y\": 0.585444\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.560955,\n\t\t\t\t\"y\": 0.599702\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.575716,\n\t\t\t\t\"y\": 0.611355\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.591204,\n\t\t\t\t\"y\": 0.622151\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606902,\n\t\t\t\t\"y\": 0.632676\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.622562,\n\t\t\t\t\"y\": 0.643251\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.637988,\n\t\t\t\t\"y\": 0.654125\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.653102,\n\t\t\t\t\"y\": 0.665383\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.668138,\n\t\t\t\t\"y\": 0.676732\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.683428,\n\t\t\t\t\"y\": 0.687775\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.699383,\n\t\t\t\t\"y\": 0.697943\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.716466,\n\t\t\t\t\"y\": 0.706303\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.734929,\n\t\t\t\t\"y\": 0.711352\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.754124,\n\t\t\t\t\"y\": 0.711738\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.770814,\n\t\t\t\t\"y\": 0.703785\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767638,\n\t\t\t\t\"y\": 0.687005\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.754188,\n\t\t\t\t\"y\": 0.674062\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.73904,\n\t\t\t\t\"y\": 0.662851\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.72328,\n\t\t\t\t\"y\": 0.652411\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.707217,\n\t\t\t\t\"y\": 0.642387\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.690999,\n\t\t\t\t\"y\": 0.632586\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.674733,\n\t\t\t\t\"y\": 0.622856\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.658541,\n\t\t\t\t\"y\": 0.613016\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.642708,\n\t\t\t\t\"y\": 0.602677\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.628692,\n\t\t\t\t\"y\": 0.590326\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.630561,\n\t\t\t\t\"y\": 0.574024\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.645841,\n\t\t\t\t\"y\": 0.56304\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.662425,\n\t\t\t\t\"y\": 0.553801\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.679275,\n\t\t\t\t\"y\": 0.544995\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.696164,\n\t\t\t\t\"y\": 0.536257\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.712971,\n\t\t\t\t\"y\": 0.52738\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.729573,\n\t\t\t\t\"y\": 0.518167\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.745778,\n\t\t\t\t\"y\": 0.50835\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.761153,\n\t\t\t\t\"y\": 0.497425\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.774504,\n\t\t\t\t\"y\": 0.484389\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.218096,\n\t\t\t\t\"y\": 0.467951\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.230739,\n\t\t\t\t\"y\": 0.456739\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.249799,\n\t\t\t\t\"y\": 0.458683\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.268146,\n\t\t\t\t\"y\": 0.464206\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.285956,\n\t\t\t\t\"y\": 0.47113\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.303388,\n\t\t\t\t\"y\": 0.478862\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.320527,\n\t\t\t\t\"y\": 0.487157\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.337416,\n\t\t\t\t\"y\": 0.495895\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.35407,\n\t\t\t\t\"y\": 0.505024\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.370485,\n\t\t\t\t\"y\": 0.514529\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.386659,\n\t\t\t\t\"y\": 0.524394\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.402593,\n\t\t\t\t\"y\": 0.534599\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.418297,\n\t\t\t\t\"y\": 0.545115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.433754,\n\t\t\t\t\"y\": 0.555951\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.447674,\n\t\t\t\t\"y\": 0.568425\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.450733,\n\t\t\t\t\"y\": 0.585444\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.439045,\n\t\t\t\t\"y\": 0.599702\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.424284,\n\t\t\t\t\"y\": 0.611355\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.408796,\n\t\t\t\t\"y\": 0.622151\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.393098,\n\t\t\t\t\"y\": 0.632676\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.377438,\n\t\t\t\t\"y\": 0.643251\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.362012,\n\t\t\t\t\"y\": 0.654125\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.346898,\n\t\t\t\t\"y\": 0.665383\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.331862,\n\t\t\t\t\"y\": 0.676732\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.316572,\n\t\t\t\t\"y\": 0.687775\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.300617,\n\t\t\t\t\"y\": 0.697943\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.283534,\n\t\t\t\t\"y\": 0.706303\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.265071,\n\t\t\t\t\"y\": 0.711352\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.245876,\n\t\t\t\t\"y\": 0.711738\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.229186,\n\t\t\t\t\"y\": 0.703785\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232362,\n\t\t\t\t\"y\": 0.687005\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.245812,\n\t\t\t\t\"y\": 0.674062\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.26096,\n\t\t\t\t\"y\": 0.662851\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.27672,\n\t\t\t\t\"y\": 0.652411\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.292783,\n\t\t\t\t\"y\": 0.642387\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.309001,\n\t\t\t\t\"y\": 0.632586\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.325267,\n\t\t\t\t\"y\": 0.622856\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.341459,\n\t\t\t\t\"y\": 0.613016\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.357292,\n\t\t\t\t\"y\": 0.602677\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.371308,\n\t\t\t\t\"y\": 0.590326\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.369439,\n\t\t\t\t\"y\": 0.574024\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.354159,\n\t\t\t\t\"y\": 0.56304\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.337575,\n\t\t\t\t\"y\": 0.553801\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.320725,\n\t\t\t\t\"y\": 0.544995\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.303836,\n\t\t\t\t\"y\": 0.536257\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.287029,\n\t\t\t\t\"y\": 0.52738\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.270427,\n\t\t\t\t\"y\": 0.518167\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.254222,\n\t\t\t\t\"y\": 0.50835\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.238847,\n\t\t\t\t\"y\": 0.497425\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.225496,\n\t\t\t\t\"y\": 0.484389\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.530151\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.589155\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.647229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.703456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.75695\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.806867\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.852421\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.892892\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.927642\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.956124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.977887\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.99259\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.99259\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.977887\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.956124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.927642\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.892892\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.852421\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.806867\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.75695\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.703456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.647229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.589155\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.530151\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.471147\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.413073\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.356846\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.303352\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.253434\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.207881\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.16741\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.13266\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.104178\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.082414\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.067711\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 0.060302\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 0.060302\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.067711\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.082414\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.104178\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.13266\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.16741\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.207881\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.253434\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.303352\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.356846\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.413073\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.471147\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.247984,\n\t\t\t\t\"y\": 0.378448\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.250099,\n\t\t\t\t\"y\": 0.353733\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.256326,\n\t\t\t\t\"y\": 0.32964\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.266348,\n\t\t\t\t\"y\": 0.306707\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.279719,\n\t\t\t\t\"y\": 0.285338\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.295946,\n\t\t\t\t\"y\": 0.265798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.314551,\n\t\t\t\t\"y\": 0.248232\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.335099,\n\t\t\t\t\"y\": 0.232702\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.357218,\n\t\t\t\t\"y\": 0.219216\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.380589,\n\t\t\t\t\"y\": 0.207752\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.404945,\n\t\t\t\t\"y\": 0.198274\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.430056,\n\t\t\t\t\"y\": 0.190743\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.455727,\n\t\t\t\t\"y\": 0.185124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.481782,\n\t\t\t\t\"y\": 0.181386\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.508062,\n\t\t\t\t\"y\": 0.179511\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.534417,\n\t\t\t\t\"y\": 0.179486\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.560702,\n\t\t\t\t\"y\": 0.181313\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.586764,\n\t\t\t\t\"y\": 0.185001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.612447,\n\t\t\t\t\"y\": 0.190571\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.637575,\n\t\t\t\t\"y\": 0.198051\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.661954,\n\t\t\t\t\"y\": 0.207478\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.685354,\n\t\t\t\t\"y\": 0.218889\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.70751,\n\t\t\t\t\"y\": 0.232321\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.728104,\n\t\t\t\t\"y\": 0.247797\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.746765,\n\t\t\t\t\"y\": 0.26531\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.763061,\n\t\t\t\t\"y\": 0.2848\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.776513,\n\t\t\t\t\"y\": 0.306124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.786629,\n\t\t\t\t\"y\": 0.32902\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.792961,\n\t\t\t\t\"y\": 0.353089\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.795186,\n\t\t\t\t\"y\": 0.377795\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.770479,\n\t\t\t\t\"y\": 0.371922\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.744723,\n\t\t\t\t\"y\": 0.366642\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.718776,\n\t\t\t\t\"y\": 0.362262\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.692711,\n\t\t\t\t\"y\": 0.358554\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.666563,\n\t\t\t\t\"y\": 0.355402\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.640352,\n\t\t\t\t\"y\": 0.352749\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.614093,\n\t\t\t\t\"y\": 0.350567\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.587794,\n\t\t\t\t\"y\": 0.348856\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.561465,\n\t\t\t\t\"y\": 0.34764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.535113,\n\t\t\t\t\"y\": 0.346977\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.508752,\n\t\t\t\t\"y\": 0.346968\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.4824,\n\t\t\t\t\"y\": 0.347615\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.456069,\n\t\t\t\t\"y\": 0.348817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.42977,\n\t\t\t\t\"y\": 0.350516\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.403509,\n\t\t\t\t\"y\": 0.352685\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.377298,\n\t\t\t\t\"y\": 0.355326\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.351148,\n\t\t\t\t\"y\": 0.358464\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.32508,\n\t\t\t\t\"y\": 0.362157\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.299129,\n\t\t\t\t\"y\": 0.366517\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.273366,\n\t\t\t\t\"y\": 0.371769\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.64019,\n\t\t\t\t\"y\": 0.325741\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.64019,\n\t\t\t\t\"y\": 0.305201\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.64019,\n\t\t\t\t\"y\": 0.284662\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.64019,\n\t\t\t\t\"y\": 0.264123\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.64019,\n\t\t\t\t\"y\": 0.243584\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.64019,\n\t\t\t\t\"y\": 0.223044\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.64019,\n\t\t\t\t\"y\": 0.202505\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.64019,\n\t\t\t\t\"y\": 0.181966\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.64019,\n\t\t\t\t\"y\": 0.161427\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.64019,\n\t\t\t\t\"y\": 0.140887\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.640185,\n\t\t\t\t\"y\": 0.120348\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.637929,\n\t\t\t\t\"y\": 0.09995\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.631589,\n\t\t\t\t\"y\": 0.08033\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.621508,\n\t\t\t\t\"y\": 0.062147\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.608294,\n\t\t\t\t\"y\": 0.045832\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.592585,\n\t\t\t\t\"y\": 0.031608\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.574912,\n\t\t\t\t\"y\": 0.019595\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.555667,\n\t\t\t\t\"y\": 0.009958\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.535136,\n\t\t\t\t\"y\": 0.003084\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.513619,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.492011,\n\t\t\t\t\"y\": 0.002384\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.471319,\n\t\t\t\t\"y\": 0.008813\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.451879,\n\t\t\t\t\"y\": 0.018095\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.433965,\n\t\t\t\t\"y\": 0.029787\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.417951,\n\t\t\t\t\"y\": 0.043708\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.40435,\n\t\t\t\t\"y\": 0.059738\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.393791,\n\t\t\t\t\"y\": 0.07768\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.386896,\n\t\t\t\t\"y\": 0.097134\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.384062,\n\t\t\t\t\"y\": 0.117468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.383988,\n\t\t\t\t\"y\": 0.138006\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.383988,\n\t\t\t\t\"y\": 0.158545\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.383988,\n\t\t\t\t\"y\": 0.179084\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.383988,\n\t\t\t\t\"y\": 0.199624\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.383988,\n\t\t\t\t\"y\": 0.220163\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.383988,\n\t\t\t\t\"y\": 0.240702\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.383988,\n\t\t\t\t\"y\": 0.261242\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.383988,\n\t\t\t\t\"y\": 0.281781\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.383988,\n\t\t\t\t\"y\": 0.30232\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.383988,\n\t\t\t\t\"y\": 0.322859\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.400661,\n\t\t\t\t\"y\": 0.325956\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.422384,\n\t\t\t\t\"y\": 0.324085\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.444136,\n\t\t\t\t\"y\": 0.322535\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.465911,\n\t\t\t\t\"y\": 0.321314\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.487705,\n\t\t\t\t\"y\": 0.320445\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.509513,\n\t\t\t\t\"y\": 0.319965\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531327,\n\t\t\t\t\"y\": 0.31994\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.553136,\n\t\t\t\t\"y\": 0.320374\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.574932,\n\t\t\t\t\"y\": 0.321204\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.596709,\n\t\t\t\t\"y\": 0.322389\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.618464,\n\t\t\t\t\"y\": 0.323904\n\t\t\t}\n\t\t]\n\t},\n\t\"stuck_out_tongue\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.742431,\n\t\t\t\t\"y\": 0.547515\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.742105,\n\t\t\t\t\"y\": 0.540635\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.741124,\n\t\t\t\t\"y\": 0.533811\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.739484,\n\t\t\t\t\"y\": 0.5271\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.737174,\n\t\t\t\t\"y\": 0.520567\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.734183,\n\t\t\t\t\"y\": 0.514283\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.7305,\n\t\t\t\t\"y\": 0.508335\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.726118,\n\t\t\t\t\"y\": 0.502824\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.72104,\n\t\t\t\t\"y\": 0.497872\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.715292,\n\t\t\t\t\"y\": 0.493619\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.708935,\n\t\t\t\t\"y\": 0.490223\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.702078,\n\t\t\t\t\"y\": 0.487844\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.694889,\n\t\t\t\t\"y\": 0.486614\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.687583,\n\t\t\t\t\"y\": 0.486614\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.680394,\n\t\t\t\t\"y\": 0.487844\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.673537,\n\t\t\t\t\"y\": 0.490223\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.66718,\n\t\t\t\t\"y\": 0.493619\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.661432,\n\t\t\t\t\"y\": 0.497872\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.656355,\n\t\t\t\t\"y\": 0.502824\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.651972,\n\t\t\t\t\"y\": 0.508335\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.648289,\n\t\t\t\t\"y\": 0.514283\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.645298,\n\t\t\t\t\"y\": 0.520567\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.642988,\n\t\t\t\t\"y\": 0.5271\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.641348,\n\t\t\t\t\"y\": 0.533811\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.640368,\n\t\t\t\t\"y\": 0.540635\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.640041,\n\t\t\t\t\"y\": 0.547515\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.640368,\n\t\t\t\t\"y\": 0.554395\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.641348,\n\t\t\t\t\"y\": 0.561219\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.642988,\n\t\t\t\t\"y\": 0.56793\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.645298,\n\t\t\t\t\"y\": 0.574463\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.648289,\n\t\t\t\t\"y\": 0.580747\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.651972,\n\t\t\t\t\"y\": 0.586695\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.656355,\n\t\t\t\t\"y\": 0.592206\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.661432,\n\t\t\t\t\"y\": 0.597158\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.66718,\n\t\t\t\t\"y\": 0.601411\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.673537,\n\t\t\t\t\"y\": 0.604807\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.680394,\n\t\t\t\t\"y\": 0.607187\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.687583,\n\t\t\t\t\"y\": 0.608416\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.694889,\n\t\t\t\t\"y\": 0.608416\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.702078,\n\t\t\t\t\"y\": 0.607187\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.708935,\n\t\t\t\t\"y\": 0.604807\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.715292,\n\t\t\t\t\"y\": 0.601411\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.72104,\n\t\t\t\t\"y\": 0.597158\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.726118,\n\t\t\t\t\"y\": 0.592206\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.7305,\n\t\t\t\t\"y\": 0.586695\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.734183,\n\t\t\t\t\"y\": 0.580747\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.737174,\n\t\t\t\t\"y\": 0.574463\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.739484,\n\t\t\t\t\"y\": 0.56793\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.741124,\n\t\t\t\t\"y\": 0.561219\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.742105,\n\t\t\t\t\"y\": 0.554395\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.257569,\n\t\t\t\t\"y\": 0.547515\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.257895,\n\t\t\t\t\"y\": 0.540635\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.258876,\n\t\t\t\t\"y\": 0.533811\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.260516,\n\t\t\t\t\"y\": 0.5271\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.262826,\n\t\t\t\t\"y\": 0.520567\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.265817,\n\t\t\t\t\"y\": 0.514283\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.2695,\n\t\t\t\t\"y\": 0.508335\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.273882,\n\t\t\t\t\"y\": 0.502824\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.27896,\n\t\t\t\t\"y\": 0.497872\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.284708,\n\t\t\t\t\"y\": 0.493619\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.291065,\n\t\t\t\t\"y\": 0.490223\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.297922,\n\t\t\t\t\"y\": 0.487844\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.305111,\n\t\t\t\t\"y\": 0.486614\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.312417,\n\t\t\t\t\"y\": 0.486614\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.319606,\n\t\t\t\t\"y\": 0.487844\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.326463,\n\t\t\t\t\"y\": 0.490223\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.33282,\n\t\t\t\t\"y\": 0.493619\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.338568,\n\t\t\t\t\"y\": 0.497872\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.343645,\n\t\t\t\t\"y\": 0.502824\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.348028,\n\t\t\t\t\"y\": 0.508335\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.351711,\n\t\t\t\t\"y\": 0.514283\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.354702,\n\t\t\t\t\"y\": 0.520567\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.357012,\n\t\t\t\t\"y\": 0.5271\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.358652,\n\t\t\t\t\"y\": 0.533811\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.359632,\n\t\t\t\t\"y\": 0.540635\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.359959,\n\t\t\t\t\"y\": 0.547515\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.359632,\n\t\t\t\t\"y\": 0.554395\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.358652,\n\t\t\t\t\"y\": 0.561219\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.357012,\n\t\t\t\t\"y\": 0.56793\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.354702,\n\t\t\t\t\"y\": 0.574463\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.351711,\n\t\t\t\t\"y\": 0.580747\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.348028,\n\t\t\t\t\"y\": 0.586695\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.343645,\n\t\t\t\t\"y\": 0.592206\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.338568,\n\t\t\t\t\"y\": 0.597158\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.33282,\n\t\t\t\t\"y\": 0.601411\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.326463,\n\t\t\t\t\"y\": 0.604807\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.319606,\n\t\t\t\t\"y\": 0.607187\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.312417,\n\t\t\t\t\"y\": 0.608416\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.305111,\n\t\t\t\t\"y\": 0.608416\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.297922,\n\t\t\t\t\"y\": 0.607187\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.291065,\n\t\t\t\t\"y\": 0.604807\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.284708,\n\t\t\t\t\"y\": 0.601411\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.27896,\n\t\t\t\t\"y\": 0.597158\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.273882,\n\t\t\t\t\"y\": 0.592206\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.2695,\n\t\t\t\t\"y\": 0.586695\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.265817,\n\t\t\t\t\"y\": 0.580747\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.262826,\n\t\t\t\t\"y\": 0.574463\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.260516,\n\t\t\t\t\"y\": 0.56793\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.258876,\n\t\t\t\t\"y\": 0.561219\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.257895,\n\t\t\t\t\"y\": 0.554395\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.530151\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.589155\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.647229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.703456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.75695\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.806867\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.852421\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.892892\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.927642\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.956124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.977887\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.99259\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.99259\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.977887\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.956124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.927642\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.892892\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.852421\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.806867\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.75695\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.703456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.647229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.589155\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.530151\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.471147\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.413073\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.356846\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.303352\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.253434\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.207881\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.16741\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.13266\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.104178\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.082414\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.067711\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 0.060302\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 0.060302\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.067711\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.082414\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.104178\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.13266\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.16741\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.207881\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.253434\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.303352\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.356846\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.413073\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.471147\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.247984,\n\t\t\t\t\"y\": 0.378448\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.250099,\n\t\t\t\t\"y\": 0.353733\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.256326,\n\t\t\t\t\"y\": 0.32964\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.266348,\n\t\t\t\t\"y\": 0.306707\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.279719,\n\t\t\t\t\"y\": 0.285338\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.295946,\n\t\t\t\t\"y\": 0.265798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.314551,\n\t\t\t\t\"y\": 0.248232\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.335099,\n\t\t\t\t\"y\": 0.232702\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.357218,\n\t\t\t\t\"y\": 0.219216\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.380589,\n\t\t\t\t\"y\": 0.207752\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.404945,\n\t\t\t\t\"y\": 0.198274\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.430056,\n\t\t\t\t\"y\": 0.190743\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.455727,\n\t\t\t\t\"y\": 0.185124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.481782,\n\t\t\t\t\"y\": 0.181386\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.508062,\n\t\t\t\t\"y\": 0.179511\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.534417,\n\t\t\t\t\"y\": 0.179486\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.560702,\n\t\t\t\t\"y\": 0.181313\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.586764,\n\t\t\t\t\"y\": 0.185001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.612447,\n\t\t\t\t\"y\": 0.190571\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.637575,\n\t\t\t\t\"y\": 0.198051\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.661954,\n\t\t\t\t\"y\": 0.207478\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.685354,\n\t\t\t\t\"y\": 0.218889\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.70751,\n\t\t\t\t\"y\": 0.232321\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.728104,\n\t\t\t\t\"y\": 0.247797\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.746765,\n\t\t\t\t\"y\": 0.26531\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.763061,\n\t\t\t\t\"y\": 0.2848\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.776513,\n\t\t\t\t\"y\": 0.306124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.786629,\n\t\t\t\t\"y\": 0.32902\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.792961,\n\t\t\t\t\"y\": 0.353089\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.795186,\n\t\t\t\t\"y\": 0.377795\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.770479,\n\t\t\t\t\"y\": 0.371922\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.744723,\n\t\t\t\t\"y\": 0.366642\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.718776,\n\t\t\t\t\"y\": 0.362262\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.692711,\n\t\t\t\t\"y\": 0.358554\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.666563,\n\t\t\t\t\"y\": 0.355402\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.640352,\n\t\t\t\t\"y\": 0.352749\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.614093,\n\t\t\t\t\"y\": 0.350567\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.587794,\n\t\t\t\t\"y\": 0.348856\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.561465,\n\t\t\t\t\"y\": 0.34764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.535113,\n\t\t\t\t\"y\": 0.346977\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.508752,\n\t\t\t\t\"y\": 0.346968\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.4824,\n\t\t\t\t\"y\": 0.347615\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.456069,\n\t\t\t\t\"y\": 0.348817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.42977,\n\t\t\t\t\"y\": 0.350516\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.403509,\n\t\t\t\t\"y\": 0.352685\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.377298,\n\t\t\t\t\"y\": 0.355326\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.351148,\n\t\t\t\t\"y\": 0.358464\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.32508,\n\t\t\t\t\"y\": 0.362157\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.299129,\n\t\t\t\t\"y\": 0.366517\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.273366,\n\t\t\t\t\"y\": 0.371769\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.64019,\n\t\t\t\t\"y\": 0.325741\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.64019,\n\t\t\t\t\"y\": 0.305201\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.64019,\n\t\t\t\t\"y\": 0.284662\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.64019,\n\t\t\t\t\"y\": 0.264123\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.64019,\n\t\t\t\t\"y\": 0.243584\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.64019,\n\t\t\t\t\"y\": 0.223044\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.64019,\n\t\t\t\t\"y\": 0.202505\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.64019,\n\t\t\t\t\"y\": 0.181966\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.64019,\n\t\t\t\t\"y\": 0.161427\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.64019,\n\t\t\t\t\"y\": 0.140887\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.640185,\n\t\t\t\t\"y\": 0.120348\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.637929,\n\t\t\t\t\"y\": 0.09995\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.631589,\n\t\t\t\t\"y\": 0.08033\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.621508,\n\t\t\t\t\"y\": 0.062147\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.608294,\n\t\t\t\t\"y\": 0.045832\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.592585,\n\t\t\t\t\"y\": 0.031608\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.574912,\n\t\t\t\t\"y\": 0.019595\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.555667,\n\t\t\t\t\"y\": 0.009958\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.535136,\n\t\t\t\t\"y\": 0.003084\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.513619,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.492011,\n\t\t\t\t\"y\": 0.002384\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.471319,\n\t\t\t\t\"y\": 0.008813\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.451879,\n\t\t\t\t\"y\": 0.018095\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.433965,\n\t\t\t\t\"y\": 0.029787\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.417951,\n\t\t\t\t\"y\": 0.043708\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.40435,\n\t\t\t\t\"y\": 0.059738\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.393791,\n\t\t\t\t\"y\": 0.07768\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.386896,\n\t\t\t\t\"y\": 0.097134\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.384062,\n\t\t\t\t\"y\": 0.117468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.383988,\n\t\t\t\t\"y\": 0.138006\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.383988,\n\t\t\t\t\"y\": 0.158545\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.383988,\n\t\t\t\t\"y\": 0.179084\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.383988,\n\t\t\t\t\"y\": 0.199624\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.383988,\n\t\t\t\t\"y\": 0.220163\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.383988,\n\t\t\t\t\"y\": 0.240702\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.383988,\n\t\t\t\t\"y\": 0.261242\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.383988,\n\t\t\t\t\"y\": 0.281781\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.383988,\n\t\t\t\t\"y\": 0.30232\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.383988,\n\t\t\t\t\"y\": 0.322859\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.400661,\n\t\t\t\t\"y\": 0.325956\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.422384,\n\t\t\t\t\"y\": 0.324085\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.444136,\n\t\t\t\t\"y\": 0.322535\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.465911,\n\t\t\t\t\"y\": 0.321314\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.487705,\n\t\t\t\t\"y\": 0.320445\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.509513,\n\t\t\t\t\"y\": 0.319965\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531327,\n\t\t\t\t\"y\": 0.31994\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.553136,\n\t\t\t\t\"y\": 0.320374\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.574932,\n\t\t\t\t\"y\": 0.321204\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.596709,\n\t\t\t\t\"y\": 0.322389\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.618464,\n\t\t\t\t\"y\": 0.323904\n\t\t\t}\n\t\t]\n\t},\n\t\"sunglasses\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.961654,\n\t\t\t\t\"y\": 0.693722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.95403,\n\t\t\t\t\"y\": 0.670663\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.946032,\n\t\t\t\t\"y\": 0.647731\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.937605,\n\t\t\t\t\"y\": 0.624955\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.928677,\n\t\t\t\t\"y\": 0.60237\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.919161,\n\t\t\t\t\"y\": 0.580029\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.908943,\n\t\t\t\t\"y\": 0.558001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.897877,\n\t\t\t\t\"y\": 0.53639\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.88577,\n\t\t\t\t\"y\": 0.515348\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.872374,\n\t\t\t\t\"y\": 0.495107\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.857379,\n\t\t\t\t\"y\": 0.476031\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.840446,\n\t\t\t\t\"y\": 0.458666\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.821337,\n\t\t\t\t\"y\": 0.443753\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.800159,\n\t\t\t\t\"y\": 0.431982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.777336,\n\t\t\t\t\"y\": 0.423877\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.75346,\n\t\t\t\t\"y\": 0.419836\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.72924,\n\t\t\t\t\"y\": 0.419728\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.705218,\n\t\t\t\t\"y\": 0.422903\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.681602,\n\t\t\t\t\"y\": 0.428373\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.658391,\n\t\t\t\t\"y\": 0.435369\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.635893,\n\t\t\t\t\"y\": 0.444387\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.614839,\n\t\t\t\t\"y\": 0.456375\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.596527,\n\t\t\t\t\"y\": 0.472218\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.582042,\n\t\t\t\t\"y\": 0.49165\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.570585,\n\t\t\t\t\"y\": 0.513045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.560685,\n\t\t\t\t\"y\": 0.535218\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.550616,\n\t\t\t\t\"y\": 0.557311\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.53822,\n\t\t\t\t\"y\": 0.578154\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.520866,\n\t\t\t\t\"y\": 0.594899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.603101\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.627393\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.503883,\n\t\t\t\t\"y\": 0.64784\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.528042,\n\t\t\t\t\"y\": 0.649749\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.552035,\n\t\t\t\t\"y\": 0.653225\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.575946,\n\t\t\t\t\"y\": 0.657236\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.599846,\n\t\t\t\t\"y\": 0.661311\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.62377,\n\t\t\t\t\"y\": 0.665245\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.647729,\n\t\t\t\t\"y\": 0.668952\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.671727,\n\t\t\t\t\"y\": 0.672402\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.69576,\n\t\t\t\t\"y\": 0.675602\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.719823,\n\t\t\t\t\"y\": 0.678557\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.743916,\n\t\t\t\t\"y\": 0.68127\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.768034,\n\t\t\t\t\"y\": 0.683739\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.792176,\n\t\t\t\t\"y\": 0.68596\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.81634,\n\t\t\t\t\"y\": 0.687925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.840524,\n\t\t\t\t\"y\": 0.689626\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864726,\n\t\t\t\t\"y\": 0.691053\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.888943,\n\t\t\t\t\"y\": 0.692192\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.913173,\n\t\t\t\t\"y\": 0.693028\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.937411,\n\t\t\t\t\"y\": 0.693545\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.038346,\n\t\t\t\t\"y\": 0.693722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.04597,\n\t\t\t\t\"y\": 0.670663\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.053968,\n\t\t\t\t\"y\": 0.647731\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.062395,\n\t\t\t\t\"y\": 0.624955\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.071323,\n\t\t\t\t\"y\": 0.60237\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.080839,\n\t\t\t\t\"y\": 0.580029\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.091057,\n\t\t\t\t\"y\": 0.558001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.102123,\n\t\t\t\t\"y\": 0.53639\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.11423,\n\t\t\t\t\"y\": 0.515348\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.127626,\n\t\t\t\t\"y\": 0.495107\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.142621,\n\t\t\t\t\"y\": 0.476031\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.159554,\n\t\t\t\t\"y\": 0.458666\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.178663,\n\t\t\t\t\"y\": 0.443753\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.199841,\n\t\t\t\t\"y\": 0.431982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.222664,\n\t\t\t\t\"y\": 0.423877\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.24654,\n\t\t\t\t\"y\": 0.419836\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.27076,\n\t\t\t\t\"y\": 0.419728\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.294782,\n\t\t\t\t\"y\": 0.422903\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.318398,\n\t\t\t\t\"y\": 0.428373\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.341609,\n\t\t\t\t\"y\": 0.435369\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.364107,\n\t\t\t\t\"y\": 0.444387\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.385161,\n\t\t\t\t\"y\": 0.456375\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.403473,\n\t\t\t\t\"y\": 0.472218\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.417958,\n\t\t\t\t\"y\": 0.49165\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.429415,\n\t\t\t\t\"y\": 0.513045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.439315,\n\t\t\t\t\"y\": 0.535218\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.449384,\n\t\t\t\t\"y\": 0.557311\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.46178,\n\t\t\t\t\"y\": 0.578154\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.479134,\n\t\t\t\t\"y\": 0.594899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.603101\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.627393\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.496117,\n\t\t\t\t\"y\": 0.64784\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.471958,\n\t\t\t\t\"y\": 0.649749\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.447965,\n\t\t\t\t\"y\": 0.653225\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.424054,\n\t\t\t\t\"y\": 0.657236\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.400154,\n\t\t\t\t\"y\": 0.661311\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.37623,\n\t\t\t\t\"y\": 0.665245\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.352271,\n\t\t\t\t\"y\": 0.668952\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.328273,\n\t\t\t\t\"y\": 0.672402\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.30424,\n\t\t\t\t\"y\": 0.675602\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.280177,\n\t\t\t\t\"y\": 0.678557\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.256084,\n\t\t\t\t\"y\": 0.68127\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.231966,\n\t\t\t\t\"y\": 0.683739\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.207824,\n\t\t\t\t\"y\": 0.68596\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.18366,\n\t\t\t\t\"y\": 0.687925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.159476,\n\t\t\t\t\"y\": 0.689626\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135274,\n\t\t\t\t\"y\": 0.691053\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.111057,\n\t\t\t\t\"y\": 0.692192\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.086827,\n\t\t\t\t\"y\": 0.693028\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.062589,\n\t\t\t\t\"y\": 0.693545\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.437209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 3.4834e-10\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.437209\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.312763,\n\t\t\t\t\"y\": 0.337119\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.316114,\n\t\t\t\t\"y\": 0.320601\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.324841,\n\t\t\t\t\"y\": 0.306135\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.336783,\n\t\t\t\t\"y\": 0.29415\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.350547,\n\t\t\t\t\"y\": 0.284296\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.365396,\n\t\t\t\t\"y\": 0.276165\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.380935,\n\t\t\t\t\"y\": 0.269444\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.396935,\n\t\t\t\t\"y\": 0.26391\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.413255,\n\t\t\t\t\"y\": 0.259408\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.429801,\n\t\t\t\t\"y\": 0.255826\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.446506,\n\t\t\t\t\"y\": 0.253085\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.463322,\n\t\t\t\t\"y\": 0.251129\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.480207,\n\t\t\t\t\"y\": 0.249922\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.497129,\n\t\t\t\t\"y\": 0.24944\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.514056,\n\t\t\t\t\"y\": 0.249678\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.530957,\n\t\t\t\t\"y\": 0.250637\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5478,\n\t\t\t\t\"y\": 0.252336\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.564548,\n\t\t\t\t\"y\": 0.254806\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.581154,\n\t\t\t\t\"y\": 0.258095\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.59756,\n\t\t\t\t\"y\": 0.262274\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.613682,\n\t\t\t\t\"y\": 0.267443\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.629397,\n\t\t\t\t\"y\": 0.27374\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.644514,\n\t\t\t\t\"y\": 0.281363\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.658706,\n\t\t\t\t\"y\": 0.290591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.671382,\n\t\t\t\t\"y\": 0.301804\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.68141,\n\t\t\t\t\"y\": 0.315413\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.686836,\n\t\t\t\t\"y\": 0.331384\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.678513,\n\t\t\t\t\"y\": 0.330108\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.664398,\n\t\t\t\t\"y\": 0.320752\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.649564,\n\t\t\t\t\"y\": 0.312585\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.634235,\n\t\t\t\t\"y\": 0.305389\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.61854,\n\t\t\t\t\"y\": 0.299035\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.602557,\n\t\t\t\t\"y\": 0.293448\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.586338,\n\t\t\t\t\"y\": 0.28859\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.569922,\n\t\t\t\t\"y\": 0.284448\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.553339,\n\t\t\t\t\"y\": 0.28104\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.536615,\n\t\t\t\t\"y\": 0.27841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.51978,\n\t\t\t\t\"y\": 0.276639\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.502871,\n\t\t\t\t\"y\": 0.275864\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.485949,\n\t\t\t\t\"y\": 0.276255\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.469084,\n\t\t\t\t\"y\": 0.277707\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.452319,\n\t\t\t\t\"y\": 0.280058\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.435686,\n\t\t\t\t\"y\": 0.283209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.41921,\n\t\t\t\t\"y\": 0.287104\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.40292,\n\t\t\t\t\"y\": 0.29172\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.386852,\n\t\t\t\t\"y\": 0.297057\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.371052,\n\t\t\t\t\"y\": 0.303144\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.355588,\n\t\t\t\t\"y\": 0.310044\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.340567,\n\t\t\t\t\"y\": 0.317862\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.326173,\n\t\t\t\t\"y\": 0.326782\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t]\n\t},\n\t\"smirk\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.886607,\n\t\t\t\t\"y\": 0.552274\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.880549,\n\t\t\t\t\"y\": 0.561022\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.874565,\n\t\t\t\t\"y\": 0.569822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.868457,\n\t\t\t\t\"y\": 0.578536\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.862137,\n\t\t\t\t\"y\": 0.587096\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.855539,\n\t\t\t\t\"y\": 0.595443\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.848603,\n\t\t\t\t\"y\": 0.603509\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.841267,\n\t\t\t\t\"y\": 0.611211\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.833463,\n\t\t\t\t\"y\": 0.618437\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.825122,\n\t\t\t\t\"y\": 0.625029\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.816178,\n\t\t\t\t\"y\": 0.630771\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.806619,\n\t\t\t\t\"y\": 0.635409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.796584,\n\t\t\t\t\"y\": 0.638897\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.786241,\n\t\t\t\t\"y\": 0.641327\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.775723,\n\t\t\t\t\"y\": 0.642826\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.765121,\n\t\t\t\t\"y\": 0.643535\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.754495,\n\t\t\t\t\"y\": 0.643592\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.743878,\n\t\t\t\t\"y\": 0.643134\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.733284,\n\t\t\t\t\"y\": 0.642305\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.722705,\n\t\t\t\t\"y\": 0.641286\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.712116,\n\t\t\t\t\"y\": 0.640391\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.701516,\n\t\t\t\t\"y\": 0.640641\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.696024,\n\t\t\t\t\"y\": 0.647955\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.701869,\n\t\t\t\t\"y\": 0.656729\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.709974,\n\t\t\t\t\"y\": 0.663595\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.718966,\n\t\t\t\t\"y\": 0.669259\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.728519,\n\t\t\t\t\"y\": 0.673915\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.738487,\n\t\t\t\t\"y\": 0.677594\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.74877,\n\t\t\t\t\"y\": 0.680265\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.759264,\n\t\t\t\t\"y\": 0.68192\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.769867,\n\t\t\t\t\"y\": 0.682573\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.780485,\n\t\t\t\t\"y\": 0.682219\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.791019,\n\t\t\t\t\"y\": 0.680848\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.801369,\n\t\t\t\t\"y\": 0.678448\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.811424,\n\t\t\t\t\"y\": 0.675016\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.821073,\n\t\t\t\t\"y\": 0.670565\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.830206,\n\t\t\t\t\"y\": 0.665129\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.838724,\n\t\t\t\t\"y\": 0.65877\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.84655,\n\t\t\t\t\"y\": 0.651572\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.853633,\n\t\t\t\t\"y\": 0.643639\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.860009,\n\t\t\t\t\"y\": 0.635124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.865785,\n\t\t\t\t\"y\": 0.626188\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.871045,\n\t\t\t\t\"y\": 0.616936\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.875847,\n\t\t\t\t\"y\": 0.607438\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.880229,\n\t\t\t\t\"y\": 0.597738\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.884208,\n\t\t\t\t\"y\": 0.587865\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.887774,\n\t\t\t\t\"y\": 0.577835\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.890873,\n\t\t\t\t\"y\": 0.567651\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.893323,\n\t\t\t\t\"y\": 0.557292\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.893924,\n\t\t\t\t\"y\": 0.546742\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.114958,\n\t\t\t\t\"y\": 0.55447\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.120963,\n\t\t\t\t\"y\": 0.563255\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.126967,\n\t\t\t\t\"y\": 0.572041\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.133121,\n\t\t\t\t\"y\": 0.580722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.139506,\n\t\t\t\t\"y\": 0.589234\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.146184,\n\t\t\t\t\"y\": 0.597516\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.153216,\n\t\t\t\t\"y\": 0.605499\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.160664,\n\t\t\t\t\"y\": 0.613093\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.168597,\n\t\t\t\t\"y\": 0.620174\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.177086,\n\t\t\t\t\"y\": 0.626575\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.186189,\n\t\t\t\t\"y\": 0.632058\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.195886,\n\t\t\t\t\"y\": 0.636399\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.206014,\n\t\t\t\t\"y\": 0.639608\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.216412,\n\t\t\t\t\"y\": 0.641789\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.226959,\n\t\t\t\t\"y\": 0.643075\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.237571,\n\t\t\t\t\"y\": 0.643605\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.248197,\n\t\t\t\t\"y\": 0.643519\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.258808,\n\t\t\t\t\"y\": 0.642953\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.269398,\n\t\t\t\t\"y\": 0.642056\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.279975,\n\t\t\t\t\"y\": 0.641028\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.290574,\n\t\t\t\t\"y\": 0.640263\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.301057,\n\t\t\t\t\"y\": 0.641417\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.302948,\n\t\t\t\t\"y\": 0.650443\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.296197,\n\t\t\t\t\"y\": 0.658605\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.287813,\n\t\t\t\t\"y\": 0.665132\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.278659,\n\t\t\t\t\"y\": 0.670531\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.268991,\n\t\t\t\t\"y\": 0.67494\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.258934,\n\t\t\t\t\"y\": 0.678368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.248587,\n\t\t\t\t\"y\": 0.680779\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.238056,\n\t\t\t\t\"y\": 0.68218\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.22744,\n\t\t\t\t\"y\": 0.682579\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.216834,\n\t\t\t\t\"y\": 0.681969\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.206336,\n\t\t\t\t\"y\": 0.680338\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.196051,\n\t\t\t\t\"y\": 0.677676\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.186088,\n\t\t\t\t\"y\": 0.673984\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.17656,\n\t\t\t\t\"y\": 0.669279\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.167574,\n\t\t\t\t\"y\": 0.663602\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.159225,\n\t\t\t\t\"y\": 0.657022\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.151584,\n\t\t\t\t\"y\": 0.649627\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.144689,\n\t\t\t\t\"y\": 0.641529\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.138474,\n\t\t\t\t\"y\": 0.632894\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.132836,\n\t\t\t\t\"y\": 0.62387\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.127697,\n\t\t\t\t\"y\": 0.614551\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.123004,\n\t\t\t\t\"y\": 0.604998\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.118725,\n\t\t\t\t\"y\": 0.595252\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.114848,\n\t\t\t\t\"y\": 0.585338\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.111392,\n\t\t\t\t\"y\": 0.575269\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.108432,\n\t\t\t\t\"y\": 0.565044\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.106222,\n\t\t\t\t\"y\": 0.554633\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.10821,\n\t\t\t\t\"y\": 0.546289\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.839714,\n\t\t\t\t\"y\": 0.457489\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.838428,\n\t\t\t\t\"y\": 0.446948\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.834509,\n\t\t\t\t\"y\": 0.43708\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.828409,\n\t\t\t\t\"y\": 0.428386\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.820668,\n\t\t\t\t\"y\": 0.421116\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.811708,\n\t\t\t\t\"y\": 0.415417\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.801864,\n\t\t\t\t\"y\": 0.411446\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.791455,\n\t\t\t\t\"y\": 0.409381\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.780846,\n\t\t\t\t\"y\": 0.409361\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.770487,\n\t\t\t\t\"y\": 0.411624\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.76107,\n\t\t\t\t\"y\": 0.41648\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.753604,\n\t\t\t\t\"y\": 0.423989\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.748536,\n\t\t\t\t\"y\": 0.433326\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.744822,\n\t\t\t\t\"y\": 0.443299\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.741361,\n\t\t\t\t\"y\": 0.453366\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.736919,\n\t\t\t\t\"y\": 0.463022\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.729486,\n\t\t\t\t\"y\": 0.470445\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.719266,\n\t\t\t\t\"y\": 0.47305\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.708662,\n\t\t\t\t\"y\": 0.472623\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.698168,\n\t\t\t\t\"y\": 0.470955\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.687753,\n\t\t\t\t\"y\": 0.468838\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.677348,\n\t\t\t\t\"y\": 0.466674\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.66691,\n\t\t\t\t\"y\": 0.464674\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.656429,\n\t\t\t\t\"y\": 0.462917\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.645891,\n\t\t\t\t\"y\": 0.461548\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.635285,\n\t\t\t\t\"y\": 0.460995\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.627605,\n\t\t\t\t\"y\": 0.465407\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.634864,\n\t\t\t\t\"y\": 0.47307\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.643514,\n\t\t\t\t\"y\": 0.47925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.652542,\n\t\t\t\t\"y\": 0.484866\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.661798,\n\t\t\t\t\"y\": 0.490096\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.671246,\n\t\t\t\t\"y\": 0.494968\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.680904,\n\t\t\t\t\"y\": 0.499409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.690797,\n\t\t\t\t\"y\": 0.503293\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.700925,\n\t\t\t\t\"y\": 0.50651\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.711248,\n\t\t\t\t\"y\": 0.509031\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.721698,\n\t\t\t\t\"y\": 0.51096\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.732221,\n\t\t\t\t\"y\": 0.512441\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.742797,\n\t\t\t\t\"y\": 0.513481\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.753408,\n\t\t\t\t\"y\": 0.514048\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.764034,\n\t\t\t\t\"y\": 0.514104\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.774648,\n\t\t\t\t\"y\": 0.513599\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.785209,\n\t\t\t\t\"y\": 0.512436\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.795631,\n\t\t\t\t\"y\": 0.510376\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.805736,\n\t\t\t\t\"y\": 0.507109\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.815204,\n\t\t\t\t\"y\": 0.502304\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.823542,\n\t\t\t\t\"y\": 0.495734\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.830297,\n\t\t\t\t\"y\": 0.487538\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.835344,\n\t\t\t\t\"y\": 0.478186\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.838564,\n\t\t\t\t\"y\": 0.468055\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.176752,\n\t\t\t\t\"y\": 0.463582\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.186543,\n\t\t\t\t\"y\": 0.460986\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.197139,\n\t\t\t\t\"y\": 0.46175\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.207665,\n\t\t\t\t\"y\": 0.463204\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.218138,\n\t\t\t\t\"y\": 0.465011\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.228569,\n\t\t\t\t\"y\": 0.467047\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.238972,\n\t\t\t\t\"y\": 0.469223\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.249395,\n\t\t\t\t\"y\": 0.471297\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.259909,\n\t\t\t\t\"y\": 0.472821\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.270517,\n\t\t\t\t\"y\": 0.472885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.280473,\n\t\t\t\t\"y\": 0.469473\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.287236,\n\t\t\t\t\"y\": 0.461394\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.291386,\n\t\t\t\t\"y\": 0.451603\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.294814,\n\t\t\t\t\"y\": 0.441524\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.298683,\n\t\t\t\t\"y\": 0.431611\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.304117,\n\t\t\t\t\"y\": 0.422492\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.312004,\n\t\t\t\t\"y\": 0.415426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.321653,\n\t\t\t\t\"y\": 0.411046\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.332097,\n\t\t\t\t\"y\": 0.409207\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.3427,\n\t\t\t\t\"y\": 0.409601\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.353035,\n\t\t\t\t\"y\": 0.412012\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.362746,\n\t\t\t\t\"y\": 0.4163\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.371516,\n\t\t\t\t\"y\": 0.422287\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.379003,\n\t\t\t\t\"y\": 0.42982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.38476,\n\t\t\t\t\"y\": 0.438743\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.388235,\n\t\t\t\t\"y\": 0.448775\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.389062,\n\t\t\t\t\"y\": 0.459365\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.387524,\n\t\t\t\t\"y\": 0.469882\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.383968,\n\t\t\t\t\"y\": 0.479899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.378614,\n\t\t\t\t\"y\": 0.489079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.371565,\n\t\t\t\t\"y\": 0.497022\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.362988,\n\t\t\t\t\"y\": 0.503275\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.353376,\n\t\t\t\t\"y\": 0.507787\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.343196,\n\t\t\t\t\"y\": 0.510817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.33274,\n\t\t\t\t\"y\": 0.512698\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.322165,\n\t\t\t\t\"y\": 0.513731\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.311547,\n\t\t\t\t\"y\": 0.514133\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.300922,\n\t\t\t\t\"y\": 0.513984\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.290316,\n\t\t\t\t\"y\": 0.513331\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.279749,\n\t\t\t\t\"y\": 0.512212\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.269237,\n\t\t\t\t\"y\": 0.510655\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.258804,\n\t\t\t\t\"y\": 0.508634\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.248511,\n\t\t\t\t\"y\": 0.505994\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.238422,\n\t\t\t\t\"y\": 0.502654\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.228571,\n\t\t\t\t\"y\": 0.498663\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.218953,\n\t\t\t\t\"y\": 0.494138\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.209538,\n\t\t\t\t\"y\": 0.4892\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.200318,\n\t\t\t\t\"y\": 0.483906\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.191341,\n\t\t\t\t\"y\": 0.478211\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.182797,\n\t\t\t\t\"y\": 0.471886\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.437209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 3.4834e-10\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.437209\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.36429,\n\t\t\t\t\"y\": 0.203893\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.380089,\n\t\t\t\t\"y\": 0.201137\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.396436,\n\t\t\t\t\"y\": 0.200651\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.412791,\n\t\t\t\t\"y\": 0.200601\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.429145,\n\t\t\t\t\"y\": 0.200772\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.445498,\n\t\t\t\t\"y\": 0.201088\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.461847,\n\t\t\t\t\"y\": 0.201516\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.478194,\n\t\t\t\t\"y\": 0.202041\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.494538,\n\t\t\t\t\"y\": 0.202658\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.510878,\n\t\t\t\t\"y\": 0.203364\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.527213,\n\t\t\t\t\"y\": 0.204166\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.543543,\n\t\t\t\t\"y\": 0.205073\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.559866,\n\t\t\t\t\"y\": 0.206106\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.576178,\n\t\t\t\t\"y\": 0.207299\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.592471,\n\t\t\t\t\"y\": 0.208722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.608729,\n\t\t\t\t\"y\": 0.210501\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.624916,\n\t\t\t\t\"y\": 0.212837\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.640948,\n\t\t\t\t\"y\": 0.216062\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.65661,\n\t\t\t\t\"y\": 0.220749\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.671327,\n\t\t\t\t\"y\": 0.227832\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.683835,\n\t\t\t\t\"y\": 0.238305\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.692881,\n\t\t\t\t\"y\": 0.251894\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.698217,\n\t\t\t\t\"y\": 0.267347\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.700394,\n\t\t\t\t\"y\": 0.283568\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.700093,\n\t\t\t\t\"y\": 0.299941\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.697742,\n\t\t\t\t\"y\": 0.316148\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.693387,\n\t\t\t\t\"y\": 0.331931\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.685342,\n\t\t\t\t\"y\": 0.345945\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.673186,\n\t\t\t\t\"y\": 0.337484\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.665264,\n\t\t\t\t\"y\": 0.323152\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.657711,\n\t\t\t\t\"y\": 0.308617\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.649762,\n\t\t\t\t\"y\": 0.294297\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.640916,\n\t\t\t\t\"y\": 0.280519\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.630538,\n\t\t\t\t\"y\": 0.267873\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.618219,\n\t\t\t\t\"y\": 0.257127\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.604246,\n\t\t\t\t\"y\": 0.248643\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.589235,\n\t\t\t\t\"y\": 0.242159\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.573685,\n\t\t\t\t\"y\": 0.237091\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.557867,\n\t\t\t\t\"y\": 0.232932\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.541898,\n\t\t\t\t\"y\": 0.229398\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.525832,\n\t\t\t\t\"y\": 0.22633\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.509701,\n\t\t\t\t\"y\": 0.223627\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.493523,\n\t\t\t\t\"y\": 0.221221\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.477311,\n\t\t\t\t\"y\": 0.219064\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.461071,\n\t\t\t\t\"y\": 0.217117\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.444814,\n\t\t\t\t\"y\": 0.215324\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.428548,\n\t\t\t\t\"y\": 0.213621\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.412279,\n\t\t\t\t\"y\": 0.21194\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.396018,\n\t\t\t\t\"y\": 0.21018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.379794,\n\t\t\t\t\"y\": 0.208116\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t]\n\t},\n\t\"no_mouth\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.708191,\n\t\t\t\t\"y\": 0.6214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.707865,\n\t\t\t\t\"y\": 0.614079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.706885,\n\t\t\t\t\"y\": 0.606817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.705245,\n\t\t\t\t\"y\": 0.599675\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.702935,\n\t\t\t\t\"y\": 0.592722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.699944,\n\t\t\t\t\"y\": 0.586036\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.696261,\n\t\t\t\t\"y\": 0.579706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.691878,\n\t\t\t\t\"y\": 0.573841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.6868,\n\t\t\t\t\"y\": 0.568571\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.681053,\n\t\t\t\t\"y\": 0.564045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.674695,\n\t\t\t\t\"y\": 0.560432\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.667839,\n\t\t\t\t\"y\": 0.557899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.66065,\n\t\t\t\t\"y\": 0.556591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.653343,\n\t\t\t\t\"y\": 0.556591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.646154,\n\t\t\t\t\"y\": 0.557899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.639298,\n\t\t\t\t\"y\": 0.560432\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.632941,\n\t\t\t\t\"y\": 0.564045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.627193,\n\t\t\t\t\"y\": 0.568571\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.622115,\n\t\t\t\t\"y\": 0.573841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.617732,\n\t\t\t\t\"y\": 0.579706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.614049,\n\t\t\t\t\"y\": 0.586036\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.611058,\n\t\t\t\t\"y\": 0.592722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.608748,\n\t\t\t\t\"y\": 0.599675\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.607108,\n\t\t\t\t\"y\": 0.606817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606128,\n\t\t\t\t\"y\": 0.614079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.605802,\n\t\t\t\t\"y\": 0.6214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606128,\n\t\t\t\t\"y\": 0.628721\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.607108,\n\t\t\t\t\"y\": 0.635983\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.608748,\n\t\t\t\t\"y\": 0.643125\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.611058,\n\t\t\t\t\"y\": 0.650077\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.614049,\n\t\t\t\t\"y\": 0.656764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.617732,\n\t\t\t\t\"y\": 0.663094\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.622115,\n\t\t\t\t\"y\": 0.668959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.627193,\n\t\t\t\t\"y\": 0.674229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.632941,\n\t\t\t\t\"y\": 0.678755\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.639298,\n\t\t\t\t\"y\": 0.682368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.646154,\n\t\t\t\t\"y\": 0.684901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.653343,\n\t\t\t\t\"y\": 0.686209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.66065,\n\t\t\t\t\"y\": 0.686209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.667839,\n\t\t\t\t\"y\": 0.684901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.674695,\n\t\t\t\t\"y\": 0.682368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.681053,\n\t\t\t\t\"y\": 0.678755\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.6868,\n\t\t\t\t\"y\": 0.674229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.691878,\n\t\t\t\t\"y\": 0.668959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.696261,\n\t\t\t\t\"y\": 0.663094\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.699944,\n\t\t\t\t\"y\": 0.656764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.702935,\n\t\t\t\t\"y\": 0.650077\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.705245,\n\t\t\t\t\"y\": 0.643125\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.706885,\n\t\t\t\t\"y\": 0.635983\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.707865,\n\t\t\t\t\"y\": 0.628721\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.291809,\n\t\t\t\t\"y\": 0.6214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.292135,\n\t\t\t\t\"y\": 0.614079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.293115,\n\t\t\t\t\"y\": 0.606817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.294755,\n\t\t\t\t\"y\": 0.599675\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.297065,\n\t\t\t\t\"y\": 0.592722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.300056,\n\t\t\t\t\"y\": 0.586036\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.303739,\n\t\t\t\t\"y\": 0.579706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.308122,\n\t\t\t\t\"y\": 0.573841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.3132,\n\t\t\t\t\"y\": 0.568571\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.318947,\n\t\t\t\t\"y\": 0.564045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.325305,\n\t\t\t\t\"y\": 0.560432\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.332161,\n\t\t\t\t\"y\": 0.557899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.33935,\n\t\t\t\t\"y\": 0.556591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.346657,\n\t\t\t\t\"y\": 0.556591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.353846,\n\t\t\t\t\"y\": 0.557899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.360702,\n\t\t\t\t\"y\": 0.560432\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.367059,\n\t\t\t\t\"y\": 0.564045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.372807,\n\t\t\t\t\"y\": 0.568571\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.377885,\n\t\t\t\t\"y\": 0.573841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.382268,\n\t\t\t\t\"y\": 0.579706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.385951,\n\t\t\t\t\"y\": 0.586036\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.388942,\n\t\t\t\t\"y\": 0.592722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.391252,\n\t\t\t\t\"y\": 0.599675\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.392892,\n\t\t\t\t\"y\": 0.606817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.393872,\n\t\t\t\t\"y\": 0.614079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.394198,\n\t\t\t\t\"y\": 0.6214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.393872,\n\t\t\t\t\"y\": 0.628721\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.392892,\n\t\t\t\t\"y\": 0.635983\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.391252,\n\t\t\t\t\"y\": 0.643125\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.388942,\n\t\t\t\t\"y\": 0.650077\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.385951,\n\t\t\t\t\"y\": 0.656764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.382268,\n\t\t\t\t\"y\": 0.663094\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.377885,\n\t\t\t\t\"y\": 0.668959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.372807,\n\t\t\t\t\"y\": 0.674229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.367059,\n\t\t\t\t\"y\": 0.678755\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.360702,\n\t\t\t\t\"y\": 0.682368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.353846,\n\t\t\t\t\"y\": 0.684901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.346657,\n\t\t\t\t\"y\": 0.686209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.33935,\n\t\t\t\t\"y\": 0.686209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.332161,\n\t\t\t\t\"y\": 0.684901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.325305,\n\t\t\t\t\"y\": 0.682368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.318947,\n\t\t\t\t\"y\": 0.678755\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.3132,\n\t\t\t\t\"y\": 0.674229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.308122,\n\t\t\t\t\"y\": 0.668959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.303739,\n\t\t\t\t\"y\": 0.663094\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.300056,\n\t\t\t\t\"y\": 0.656764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.297065,\n\t\t\t\t\"y\": 0.650077\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.294755,\n\t\t\t\t\"y\": 0.643125\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.293115,\n\t\t\t\t\"y\": 0.635983\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.292135,\n\t\t\t\t\"y\": 0.628721\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.437209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 3.4834e-10\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.437209\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.306681\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.499851,\n\t\t\t\t\"y\": 0.306671\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.499704,\n\t\t\t\t\"y\": 0.306643\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.499562,\n\t\t\t\t\"y\": 0.306597\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.499427,\n\t\t\t\t\"y\": 0.306533\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.499301,\n\t\t\t\t\"y\": 0.306453\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.499186,\n\t\t\t\t\"y\": 0.306358\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.499083,\n\t\t\t\t\"y\": 0.306249\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.498996,\n\t\t\t\t\"y\": 0.306127\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.498924,\n\t\t\t\t\"y\": 0.305996\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.498869,\n\t\t\t\t\"y\": 0.305857\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.498831,\n\t\t\t\t\"y\": 0.305712\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.498813,\n\t\t\t\t\"y\": 0.305564\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.498813,\n\t\t\t\t\"y\": 0.305414\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.498831,\n\t\t\t\t\"y\": 0.305265\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.498869,\n\t\t\t\t\"y\": 0.30512\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.498924,\n\t\t\t\t\"y\": 0.304981\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.498996,\n\t\t\t\t\"y\": 0.30485\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.499083,\n\t\t\t\t\"y\": 0.304729\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.499186,\n\t\t\t\t\"y\": 0.30462\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.499301,\n\t\t\t\t\"y\": 0.304524\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.499427,\n\t\t\t\t\"y\": 0.304444\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.499562,\n\t\t\t\t\"y\": 0.30438\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.499704,\n\t\t\t\t\"y\": 0.304334\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.499851,\n\t\t\t\t\"y\": 0.304306\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.304297\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.500149,\n\t\t\t\t\"y\": 0.304306\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.500296,\n\t\t\t\t\"y\": 0.304334\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.500438,\n\t\t\t\t\"y\": 0.30438\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.500573,\n\t\t\t\t\"y\": 0.304444\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.500699,\n\t\t\t\t\"y\": 0.304524\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.500814,\n\t\t\t\t\"y\": 0.30462\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.500917,\n\t\t\t\t\"y\": 0.304729\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.501004,\n\t\t\t\t\"y\": 0.30485\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.501076,\n\t\t\t\t\"y\": 0.304981\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.501131,\n\t\t\t\t\"y\": 0.30512\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.501169,\n\t\t\t\t\"y\": 0.305265\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.501187,\n\t\t\t\t\"y\": 0.305414\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.501187,\n\t\t\t\t\"y\": 0.305564\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.501169,\n\t\t\t\t\"y\": 0.305712\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.501131,\n\t\t\t\t\"y\": 0.305857\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.501076,\n\t\t\t\t\"y\": 0.305996\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.501004,\n\t\t\t\t\"y\": 0.306127\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.500917,\n\t\t\t\t\"y\": 0.306249\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.500814,\n\t\t\t\t\"y\": 0.306358\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.500699,\n\t\t\t\t\"y\": 0.306453\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.500573,\n\t\t\t\t\"y\": 0.306533\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.500438,\n\t\t\t\t\"y\": 0.306597\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.500296,\n\t\t\t\t\"y\": 0.306643\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.500149,\n\t\t\t\t\"y\": 0.306671\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t]\n\t},\n\t\"neutral_face\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.708191,\n\t\t\t\t\"y\": 0.601682\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.707923,\n\t\t\t\t\"y\": 0.593\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.707113,\n\t\t\t\t\"y\": 0.584351\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.705749,\n\t\t\t\t\"y\": 0.575773\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.703807,\n\t\t\t\t\"y\": 0.567308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.701253,\n\t\t\t\t\"y\": 0.559008\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.69804,\n\t\t\t\t\"y\": 0.550942\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.694108,\n\t\t\t\t\"y\": 0.543203\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.689378,\n\t\t\t\t\"y\": 0.535928\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.683763,\n\t\t\t\t\"y\": 0.529317\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.677188,\n\t\t\t\t\"y\": 0.523671\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.669646,\n\t\t\t\t\"y\": 0.519421\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.661318,\n\t\t\t\t\"y\": 0.517092\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.652675,\n\t\t\t\t\"y\": 0.517092\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.644348,\n\t\t\t\t\"y\": 0.519421\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.636805,\n\t\t\t\t\"y\": 0.523671\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.63023,\n\t\t\t\t\"y\": 0.529317\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.624616,\n\t\t\t\t\"y\": 0.535928\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.619886,\n\t\t\t\t\"y\": 0.543203\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.615953,\n\t\t\t\t\"y\": 0.550942\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.61274,\n\t\t\t\t\"y\": 0.559008\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.610186,\n\t\t\t\t\"y\": 0.567308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.608244,\n\t\t\t\t\"y\": 0.575773\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.60688,\n\t\t\t\t\"y\": 0.584351\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.60607,\n\t\t\t\t\"y\": 0.593\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.605802,\n\t\t\t\t\"y\": 0.601682\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.60607,\n\t\t\t\t\"y\": 0.610364\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.60688,\n\t\t\t\t\"y\": 0.619012\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.608244,\n\t\t\t\t\"y\": 0.62759\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.610186,\n\t\t\t\t\"y\": 0.636055\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.61274,\n\t\t\t\t\"y\": 0.644355\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.615953,\n\t\t\t\t\"y\": 0.652422\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.619886,\n\t\t\t\t\"y\": 0.66016\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.624616,\n\t\t\t\t\"y\": 0.667436\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.63023,\n\t\t\t\t\"y\": 0.674047\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.636805,\n\t\t\t\t\"y\": 0.679693\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.644348,\n\t\t\t\t\"y\": 0.683943\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.652675,\n\t\t\t\t\"y\": 0.686272\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.661318,\n\t\t\t\t\"y\": 0.686272\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.669646,\n\t\t\t\t\"y\": 0.683943\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.677188,\n\t\t\t\t\"y\": 0.679693\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.683763,\n\t\t\t\t\"y\": 0.674047\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.689378,\n\t\t\t\t\"y\": 0.667436\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.694108,\n\t\t\t\t\"y\": 0.66016\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.69804,\n\t\t\t\t\"y\": 0.652422\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.701253,\n\t\t\t\t\"y\": 0.644355\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.703807,\n\t\t\t\t\"y\": 0.636055\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.705749,\n\t\t\t\t\"y\": 0.62759\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.707113,\n\t\t\t\t\"y\": 0.619012\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.707923,\n\t\t\t\t\"y\": 0.610364\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.291809,\n\t\t\t\t\"y\": 0.601682\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.292077,\n\t\t\t\t\"y\": 0.593\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.292887,\n\t\t\t\t\"y\": 0.584351\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.294251,\n\t\t\t\t\"y\": 0.575773\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.296193,\n\t\t\t\t\"y\": 0.567308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.298747,\n\t\t\t\t\"y\": 0.559008\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.30196,\n\t\t\t\t\"y\": 0.550942\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.305892,\n\t\t\t\t\"y\": 0.543203\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.310622,\n\t\t\t\t\"y\": 0.535928\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.316237,\n\t\t\t\t\"y\": 0.529317\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.322812,\n\t\t\t\t\"y\": 0.523671\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.330354,\n\t\t\t\t\"y\": 0.519421\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.338682,\n\t\t\t\t\"y\": 0.517092\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.347325,\n\t\t\t\t\"y\": 0.517092\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.355652,\n\t\t\t\t\"y\": 0.519421\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.363195,\n\t\t\t\t\"y\": 0.523671\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.36977,\n\t\t\t\t\"y\": 0.529317\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.375384,\n\t\t\t\t\"y\": 0.535928\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.380114,\n\t\t\t\t\"y\": 0.543203\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.384047,\n\t\t\t\t\"y\": 0.550942\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.38726,\n\t\t\t\t\"y\": 0.559008\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.389814,\n\t\t\t\t\"y\": 0.567308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.391756,\n\t\t\t\t\"y\": 0.575773\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.39312,\n\t\t\t\t\"y\": 0.584351\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.39393,\n\t\t\t\t\"y\": 0.593\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.394198,\n\t\t\t\t\"y\": 0.601682\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.39393,\n\t\t\t\t\"y\": 0.610364\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.39312,\n\t\t\t\t\"y\": 0.619012\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.391756,\n\t\t\t\t\"y\": 0.62759\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.389814,\n\t\t\t\t\"y\": 0.636055\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.38726,\n\t\t\t\t\"y\": 0.644355\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.384047,\n\t\t\t\t\"y\": 0.652422\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.380114,\n\t\t\t\t\"y\": 0.66016\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.375384,\n\t\t\t\t\"y\": 0.667436\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.36977,\n\t\t\t\t\"y\": 0.674047\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.363195,\n\t\t\t\t\"y\": 0.679693\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.355652,\n\t\t\t\t\"y\": 0.683943\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.347325,\n\t\t\t\t\"y\": 0.686272\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.338682,\n\t\t\t\t\"y\": 0.686272\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.330354,\n\t\t\t\t\"y\": 0.683943\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.322812,\n\t\t\t\t\"y\": 0.679693\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.316237,\n\t\t\t\t\"y\": 0.674047\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.310622,\n\t\t\t\t\"y\": 0.667436\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.305892,\n\t\t\t\t\"y\": 0.66016\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.30196,\n\t\t\t\t\"y\": 0.652422\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.298747,\n\t\t\t\t\"y\": 0.644355\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.296193,\n\t\t\t\t\"y\": 0.636055\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.294251,\n\t\t\t\t\"y\": 0.62759\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.292887,\n\t\t\t\t\"y\": 0.619012\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.292077,\n\t\t\t\t\"y\": 0.610364\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.437209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 3.4834e-10\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.437209\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.238534,\n\t\t\t\t\"y\": 0.335905\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.24958,\n\t\t\t\t\"y\": 0.317285\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.270261,\n\t\t\t\t\"y\": 0.308977\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.292659,\n\t\t\t\t\"y\": 0.307925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.31512,\n\t\t\t\t\"y\": 0.307925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.337581,\n\t\t\t\t\"y\": 0.307925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.360041,\n\t\t\t\t\"y\": 0.307925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.382502,\n\t\t\t\t\"y\": 0.307925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.404963,\n\t\t\t\t\"y\": 0.307925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.427423,\n\t\t\t\t\"y\": 0.307925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.449884,\n\t\t\t\t\"y\": 0.307925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.472345,\n\t\t\t\t\"y\": 0.307925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.494805,\n\t\t\t\t\"y\": 0.307925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.517266,\n\t\t\t\t\"y\": 0.307925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.539727,\n\t\t\t\t\"y\": 0.307925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.562187,\n\t\t\t\t\"y\": 0.307925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.584648,\n\t\t\t\t\"y\": 0.307925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.607109,\n\t\t\t\t\"y\": 0.307925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.629569,\n\t\t\t\t\"y\": 0.307925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.65203,\n\t\t\t\t\"y\": 0.307925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.674491,\n\t\t\t\t\"y\": 0.307925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.696951,\n\t\t\t\t\"y\": 0.307925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.719412,\n\t\t\t\t\"y\": 0.307942\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.74132,\n\t\t\t\t\"y\": 0.312311\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.758652,\n\t\t\t\t\"y\": 0.326013\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.761466,\n\t\t\t\t\"y\": 0.348\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.75042,\n\t\t\t\t\"y\": 0.366619\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.729739,\n\t\t\t\t\"y\": 0.374927\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.707341,\n\t\t\t\t\"y\": 0.37598\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.68488,\n\t\t\t\t\"y\": 0.37598\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.662419,\n\t\t\t\t\"y\": 0.37598\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.639959,\n\t\t\t\t\"y\": 0.37598\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.617498,\n\t\t\t\t\"y\": 0.37598\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.595037,\n\t\t\t\t\"y\": 0.37598\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.572577,\n\t\t\t\t\"y\": 0.37598\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.550116,\n\t\t\t\t\"y\": 0.37598\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.527655,\n\t\t\t\t\"y\": 0.37598\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.505195,\n\t\t\t\t\"y\": 0.37598\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.482734,\n\t\t\t\t\"y\": 0.37598\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.460273,\n\t\t\t\t\"y\": 0.37598\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.437813,\n\t\t\t\t\"y\": 0.37598\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.415352,\n\t\t\t\t\"y\": 0.37598\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.392891,\n\t\t\t\t\"y\": 0.37598\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.370431,\n\t\t\t\t\"y\": 0.37598\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.34797,\n\t\t\t\t\"y\": 0.37598\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.325509,\n\t\t\t\t\"y\": 0.37598\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.303049,\n\t\t\t\t\"y\": 0.37598\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.280588,\n\t\t\t\t\"y\": 0.375963\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.25868,\n\t\t\t\t\"y\": 0.371594\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.241348,\n\t\t\t\t\"y\": 0.357892\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t]\n\t},\n\t\"expressionless\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.755963,\n\t\t\t\t\"y\": 0.59831\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.754301,\n\t\t\t\t\"y\": 0.589148\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.747377,\n\t\t\t\t\"y\": 0.58292\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.73825,\n\t\t\t\t\"y\": 0.580823\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.728809,\n\t\t\t\t\"y\": 0.580822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.719368,\n\t\t\t\t\"y\": 0.580822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.709927,\n\t\t\t\t\"y\": 0.580822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.700485,\n\t\t\t\t\"y\": 0.580822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.691044,\n\t\t\t\t\"y\": 0.580822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.681603,\n\t\t\t\t\"y\": 0.580822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.672162,\n\t\t\t\t\"y\": 0.580822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.662721,\n\t\t\t\t\"y\": 0.580822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.65328,\n\t\t\t\t\"y\": 0.580822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.643839,\n\t\t\t\t\"y\": 0.580822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.634397,\n\t\t\t\t\"y\": 0.580822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.624956,\n\t\t\t\t\"y\": 0.580822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.615515,\n\t\t\t\t\"y\": 0.580822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606074,\n\t\t\t\t\"y\": 0.580822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.596633,\n\t\t\t\t\"y\": 0.580822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.587192,\n\t\t\t\t\"y\": 0.580822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.57775,\n\t\t\t\t\"y\": 0.580822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.568309,\n\t\t\t\t\"y\": 0.580822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.558868,\n\t\t\t\t\"y\": 0.580823\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.549741,\n\t\t\t\t\"y\": 0.58292\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.542818,\n\t\t\t\t\"y\": 0.589148\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.541155,\n\t\t\t\t\"y\": 0.59831\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.542818,\n\t\t\t\t\"y\": 0.607472\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.549741,\n\t\t\t\t\"y\": 0.6137\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.558868,\n\t\t\t\t\"y\": 0.615797\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.568309,\n\t\t\t\t\"y\": 0.615798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.57775,\n\t\t\t\t\"y\": 0.615798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.587192,\n\t\t\t\t\"y\": 0.615798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.596633,\n\t\t\t\t\"y\": 0.615798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606074,\n\t\t\t\t\"y\": 0.615798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.615515,\n\t\t\t\t\"y\": 0.615798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.624956,\n\t\t\t\t\"y\": 0.615798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.634397,\n\t\t\t\t\"y\": 0.615798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.643839,\n\t\t\t\t\"y\": 0.615798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.65328,\n\t\t\t\t\"y\": 0.615798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.662721,\n\t\t\t\t\"y\": 0.615798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.672162,\n\t\t\t\t\"y\": 0.615798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.681603,\n\t\t\t\t\"y\": 0.615798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.691044,\n\t\t\t\t\"y\": 0.615798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.700485,\n\t\t\t\t\"y\": 0.615798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.709927,\n\t\t\t\t\"y\": 0.615798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.719368,\n\t\t\t\t\"y\": 0.615798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.728809,\n\t\t\t\t\"y\": 0.615798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.73825,\n\t\t\t\t\"y\": 0.615797\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.747377,\n\t\t\t\t\"y\": 0.6137\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.754301,\n\t\t\t\t\"y\": 0.607472\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.244037,\n\t\t\t\t\"y\": 0.595202\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.24754,\n\t\t\t\t\"y\": 0.586655\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.255506,\n\t\t\t\t\"y\": 0.581781\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.264852,\n\t\t\t\t\"y\": 0.580822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.274293,\n\t\t\t\t\"y\": 0.580822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.283734,\n\t\t\t\t\"y\": 0.580822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.293175,\n\t\t\t\t\"y\": 0.580822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.302617,\n\t\t\t\t\"y\": 0.580822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.312058,\n\t\t\t\t\"y\": 0.580822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.321499,\n\t\t\t\t\"y\": 0.580822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.33094,\n\t\t\t\t\"y\": 0.580822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.340381,\n\t\t\t\t\"y\": 0.580822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.349822,\n\t\t\t\t\"y\": 0.580822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.359263,\n\t\t\t\t\"y\": 0.580822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.368705,\n\t\t\t\t\"y\": 0.580822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.378146,\n\t\t\t\t\"y\": 0.580822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.387587,\n\t\t\t\t\"y\": 0.580822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.397028,\n\t\t\t\t\"y\": 0.580822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406469,\n\t\t\t\t\"y\": 0.580822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.41591,\n\t\t\t\t\"y\": 0.580822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.425352,\n\t\t\t\t\"y\": 0.580822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.434793,\n\t\t\t\t\"y\": 0.580822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.444222,\n\t\t\t\t\"y\": 0.581064\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.452919,\n\t\t\t\t\"y\": 0.584511\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.458396,\n\t\t\t\t\"y\": 0.592\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.458845,\n\t\t\t\t\"y\": 0.601418\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.455341,\n\t\t\t\t\"y\": 0.609965\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.447376,\n\t\t\t\t\"y\": 0.614839\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.43803,\n\t\t\t\t\"y\": 0.615798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.428589,\n\t\t\t\t\"y\": 0.615798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.419148,\n\t\t\t\t\"y\": 0.615798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.409706,\n\t\t\t\t\"y\": 0.615798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.400265,\n\t\t\t\t\"y\": 0.615798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.390824,\n\t\t\t\t\"y\": 0.615798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.381383,\n\t\t\t\t\"y\": 0.615798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.371942,\n\t\t\t\t\"y\": 0.615798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.362501,\n\t\t\t\t\"y\": 0.615798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.353059,\n\t\t\t\t\"y\": 0.615798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.343618,\n\t\t\t\t\"y\": 0.615798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.334177,\n\t\t\t\t\"y\": 0.615798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.324736,\n\t\t\t\t\"y\": 0.615798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.315295,\n\t\t\t\t\"y\": 0.615798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.305854,\n\t\t\t\t\"y\": 0.615798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.296413,\n\t\t\t\t\"y\": 0.615798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.286971,\n\t\t\t\t\"y\": 0.615798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.27753,\n\t\t\t\t\"y\": 0.615798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.268089,\n\t\t\t\t\"y\": 0.615798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.25866,\n\t\t\t\t\"y\": 0.615556\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.249963,\n\t\t\t\t\"y\": 0.612109\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.244486,\n\t\t\t\t\"y\": 0.60462\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.437209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 3.4834e-10\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.437209\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.238534,\n\t\t\t\t\"y\": 0.335905\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.24958,\n\t\t\t\t\"y\": 0.317285\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.270261,\n\t\t\t\t\"y\": 0.308977\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.292659,\n\t\t\t\t\"y\": 0.307925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.31512,\n\t\t\t\t\"y\": 0.307925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.337581,\n\t\t\t\t\"y\": 0.307925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.360041,\n\t\t\t\t\"y\": 0.307925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.382502,\n\t\t\t\t\"y\": 0.307925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.404963,\n\t\t\t\t\"y\": 0.307925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.427423,\n\t\t\t\t\"y\": 0.307925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.449884,\n\t\t\t\t\"y\": 0.307925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.472345,\n\t\t\t\t\"y\": 0.307925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.494805,\n\t\t\t\t\"y\": 0.307925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.517266,\n\t\t\t\t\"y\": 0.307925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.539727,\n\t\t\t\t\"y\": 0.307925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.562187,\n\t\t\t\t\"y\": 0.307925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.584648,\n\t\t\t\t\"y\": 0.307925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.607109,\n\t\t\t\t\"y\": 0.307925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.629569,\n\t\t\t\t\"y\": 0.307925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.65203,\n\t\t\t\t\"y\": 0.307925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.674491,\n\t\t\t\t\"y\": 0.307925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.696951,\n\t\t\t\t\"y\": 0.307925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.719412,\n\t\t\t\t\"y\": 0.307942\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.74132,\n\t\t\t\t\"y\": 0.312311\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.758652,\n\t\t\t\t\"y\": 0.326013\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.761466,\n\t\t\t\t\"y\": 0.348\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.75042,\n\t\t\t\t\"y\": 0.366619\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.729739,\n\t\t\t\t\"y\": 0.374927\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.707341,\n\t\t\t\t\"y\": 0.37598\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.68488,\n\t\t\t\t\"y\": 0.37598\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.662419,\n\t\t\t\t\"y\": 0.37598\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.639959,\n\t\t\t\t\"y\": 0.37598\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.617498,\n\t\t\t\t\"y\": 0.37598\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.595037,\n\t\t\t\t\"y\": 0.37598\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.572577,\n\t\t\t\t\"y\": 0.37598\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.550116,\n\t\t\t\t\"y\": 0.37598\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.527655,\n\t\t\t\t\"y\": 0.37598\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.505195,\n\t\t\t\t\"y\": 0.37598\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.482734,\n\t\t\t\t\"y\": 0.37598\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.460273,\n\t\t\t\t\"y\": 0.37598\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.437813,\n\t\t\t\t\"y\": 0.37598\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.415352,\n\t\t\t\t\"y\": 0.37598\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.392891,\n\t\t\t\t\"y\": 0.37598\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.370431,\n\t\t\t\t\"y\": 0.37598\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.34797,\n\t\t\t\t\"y\": 0.37598\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.325509,\n\t\t\t\t\"y\": 0.37598\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.303049,\n\t\t\t\t\"y\": 0.37598\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.280588,\n\t\t\t\t\"y\": 0.375963\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.25868,\n\t\t\t\t\"y\": 0.371594\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.241348,\n\t\t\t\t\"y\": 0.357892\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t]\n\t},\n\t\"disappointed\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.818289,\n\t\t\t\t\"y\": 0.383207\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.810748,\n\t\t\t\t\"y\": 0.376125\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.800687,\n\t\t\t\t\"y\": 0.373975\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.791116,\n\t\t\t\t\"y\": 0.377728\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.783064,\n\t\t\t\t\"y\": 0.384368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.774738,\n\t\t\t\t\"y\": 0.39066\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.76616,\n\t\t\t\t\"y\": 0.396603\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.757353,\n\t\t\t\t\"y\": 0.402199\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.748337,\n\t\t\t\t\"y\": 0.407451\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.739134,\n\t\t\t\t\"y\": 0.412367\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.729764,\n\t\t\t\t\"y\": 0.416954\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.720244,\n\t\t\t\t\"y\": 0.421222\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.710592,\n\t\t\t\t\"y\": 0.42518\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.700824,\n\t\t\t\t\"y\": 0.428841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.690954,\n\t\t\t\t\"y\": 0.432215\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.680994,\n\t\t\t\t\"y\": 0.435315\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.670956,\n\t\t\t\t\"y\": 0.438151\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.660851,\n\t\t\t\t\"y\": 0.440736\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.650687,\n\t\t\t\t\"y\": 0.44308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.640474,\n\t\t\t\t\"y\": 0.445195\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.630218,\n\t\t\t\t\"y\": 0.447091\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.61999,\n\t\t\t\t\"y\": 0.449069\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.611718,\n\t\t\t\t\"y\": 0.455185\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.608103,\n\t\t\t\t\"y\": 0.46484\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.609116,\n\t\t\t\t\"y\": 0.475217\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.612557,\n\t\t\t\t\"y\": 0.484955\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.62061,\n\t\t\t\t\"y\": 0.491368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.630849,\n\t\t\t\t\"y\": 0.492254\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.641101,\n\t\t\t\t\"y\": 0.490336\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.651318,\n\t\t\t\t\"y\": 0.488241\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.661497,\n\t\t\t\t\"y\": 0.485962\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.67163,\n\t\t\t\t\"y\": 0.483492\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.681714,\n\t\t\t\t\"y\": 0.480822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.69174,\n\t\t\t\t\"y\": 0.477946\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.701702,\n\t\t\t\t\"y\": 0.474853\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.711592,\n\t\t\t\t\"y\": 0.471535\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.721401,\n\t\t\t\t\"y\": 0.467984\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.731119,\n\t\t\t\t\"y\": 0.464192\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.740735,\n\t\t\t\t\"y\": 0.460149\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.75024,\n\t\t\t\t\"y\": 0.455846\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.759619,\n\t\t\t\t\"y\": 0.451277\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.76886,\n\t\t\t\t\"y\": 0.446433\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.777948,\n\t\t\t\t\"y\": 0.441307\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.786868,\n\t\t\t\t\"y\": 0.435893\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.795605,\n\t\t\t\t\"y\": 0.430187\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.804142,\n\t\t\t\t\"y\": 0.424184\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.812461,\n\t\t\t\t\"y\": 0.417883\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.820491,\n\t\t\t\t\"y\": 0.411222\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.825195,\n\t\t\t\t\"y\": 0.402064\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.824133,\n\t\t\t\t\"y\": 0.391808\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.181669,\n\t\t\t\t\"y\": 0.383259\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.189193,\n\t\t\t\t\"y\": 0.376157\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.199246,\n\t\t\t\t\"y\": 0.37397\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.208831,\n\t\t\t\t\"y\": 0.377686\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.216883,\n\t\t\t\t\"y\": 0.384327\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.225208,\n\t\t\t\t\"y\": 0.390621\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.233784,\n\t\t\t\t\"y\": 0.396566\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.24259,\n\t\t\t\t\"y\": 0.402164\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.251604,\n\t\t\t\t\"y\": 0.407419\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.260806,\n\t\t\t\t\"y\": 0.412337\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.270175,\n\t\t\t\t\"y\": 0.416926\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.279694,\n\t\t\t\t\"y\": 0.421195\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.289345,\n\t\t\t\t\"y\": 0.425156\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.299113,\n\t\t\t\t\"y\": 0.428819\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.308983,\n\t\t\t\t\"y\": 0.432194\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.318942,\n\t\t\t\t\"y\": 0.435296\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.328979,\n\t\t\t\t\"y\": 0.438133\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.339084,\n\t\t\t\t\"y\": 0.44072\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.349247,\n\t\t\t\t\"y\": 0.443066\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.35946,\n\t\t\t\t\"y\": 0.445182\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.369716,\n\t\t\t\t\"y\": 0.44708\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.379947,\n\t\t\t\t\"y\": 0.449047\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.388242,\n\t\t\t\t\"y\": 0.455132\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.391892,\n\t\t\t\t\"y\": 0.464773\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.390894,\n\t\t\t\t\"y\": 0.475151\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.387481,\n\t\t\t\t\"y\": 0.4849\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.379453,\n\t\t\t\t\"y\": 0.491343\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.369217,\n\t\t\t\t\"y\": 0.492266\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.358965,\n\t\t\t\t\"y\": 0.490348\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.348747,\n\t\t\t\t\"y\": 0.488255\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.338569,\n\t\t\t\t\"y\": 0.485977\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.328434,\n\t\t\t\t\"y\": 0.483508\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.318351,\n\t\t\t\t\"y\": 0.48084\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.308324,\n\t\t\t\t\"y\": 0.477965\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.298362,\n\t\t\t\t\"y\": 0.474873\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.288471,\n\t\t\t\t\"y\": 0.471557\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.278662,\n\t\t\t\t\"y\": 0.468008\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.268943,\n\t\t\t\t\"y\": 0.464217\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.259326,\n\t\t\t\t\"y\": 0.460175\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.249821,\n\t\t\t\t\"y\": 0.455875\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.240441,\n\t\t\t\t\"y\": 0.451307\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.231199,\n\t\t\t\t\"y\": 0.446465\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.22211,\n\t\t\t\t\"y\": 0.441341\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.213188,\n\t\t\t\t\"y\": 0.435929\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.20445,\n\t\t\t\t\"y\": 0.430225\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.195913,\n\t\t\t\t\"y\": 0.424224\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.187592,\n\t\t\t\t\"y\": 0.417925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.179556,\n\t\t\t\t\"y\": 0.41127\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.174817,\n\t\t\t\t\"y\": 0.40213\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.175842,\n\t\t\t\t\"y\": 0.391871\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.437209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 3.4834e-10\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.437209\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.359368,\n\t\t\t\t\"y\": 0.167633\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.369543,\n\t\t\t\t\"y\": 0.177251\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.380707,\n\t\t\t\t\"y\": 0.185704\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.39254,\n\t\t\t\t\"y\": 0.19319\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.404868,\n\t\t\t\t\"y\": 0.199828\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.417584,\n\t\t\t\t\"y\": 0.205687\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.430616,\n\t\t\t\t\"y\": 0.2108\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.443915,\n\t\t\t\t\"y\": 0.215171\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.457441,\n\t\t\t\t\"y\": 0.218774\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.47116,\n\t\t\t\t\"y\": 0.22155\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.485033,\n\t\t\t\t\"y\": 0.223395\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.499007,\n\t\t\t\t\"y\": 0.224133\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.512989,\n\t\t\t\t\"y\": 0.223573\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.52688,\n\t\t\t\t\"y\": 0.221872\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.540623,\n\t\t\t\t\"y\": 0.21922\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.554179,\n\t\t\t\t\"y\": 0.21573\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.567512,\n\t\t\t\t\"y\": 0.211466\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.580585,\n\t\t\t\t\"y\": 0.206458\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593349,\n\t\t\t\t\"y\": 0.200706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.605738,\n\t\t\t\t\"y\": 0.194182\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.61765,\n\t\t\t\t\"y\": 0.186822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.628923,\n\t\t\t\t\"y\": 0.178516\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.639267,\n\t\t\t\t\"y\": 0.169079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.63974,\n\t\t\t\t\"y\": 0.179624\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.636513,\n\t\t\t\t\"y\": 0.193254\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.631122,\n\t\t\t\t\"y\": 0.206183\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.623851,\n\t\t\t\t\"y\": 0.218153\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.615006,\n\t\t\t\t\"y\": 0.229011\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.604879,\n\t\t\t\t\"y\": 0.238681\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593724,\n\t\t\t\t\"y\": 0.247143\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.581756,\n\t\t\t\t\"y\": 0.254406\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.569151,\n\t\t\t\t\"y\": 0.260495\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.556057,\n\t\t\t\t\"y\": 0.26544\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.542595,\n\t\t\t\t\"y\": 0.26927\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.52887,\n\t\t\t\t\"y\": 0.272008\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.514975,\n\t\t\t\t\"y\": 0.273673\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.500993,\n\t\t\t\t\"y\": 0.274276\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.487006,\n\t\t\t\t\"y\": 0.273823\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.473093,\n\t\t\t\t\"y\": 0.272309\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.459339,\n\t\t\t\t\"y\": 0.269724\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.445834,\n\t\t\t\t\"y\": 0.266051\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.43268,\n\t\t\t\t\"y\": 0.261266\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.419998,\n\t\t\t\t\"y\": 0.255341\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.407929,\n\t\t\t\t\"y\": 0.248246\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.396647,\n\t\t\t\t\"y\": 0.239956\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.386359,\n\t\t\t\t\"y\": 0.230456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.377315,\n\t\t\t\t\"y\": 0.219764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.369802,\n\t\t\t\t\"y\": 0.207944\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.364126,\n\t\t\t\t\"y\": 0.195139\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.360578,\n\t\t\t\t\"y\": 0.181588\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t]\n\t},\n\t\"worried\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.841084,\n\t\t\t\t\"y\": 0.665623\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.834425,\n\t\t\t\t\"y\": 0.672666\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.827528,\n\t\t\t\t\"y\": 0.679475\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.820405,\n\t\t\t\t\"y\": 0.686047\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.813068,\n\t\t\t\t\"y\": 0.692377\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.805527,\n\t\t\t\t\"y\": 0.698463\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.797793,\n\t\t\t\t\"y\": 0.704299\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.789875,\n\t\t\t\t\"y\": 0.709883\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.781782,\n\t\t\t\t\"y\": 0.715209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.773524,\n\t\t\t\t\"y\": 0.720275\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.76511,\n\t\t\t\t\"y\": 0.725075\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.756548,\n\t\t\t\t\"y\": 0.729605\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.747846,\n\t\t\t\t\"y\": 0.73386\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.739013,\n\t\t\t\t\"y\": 0.737834\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.730057,\n\t\t\t\t\"y\": 0.741522\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.720987,\n\t\t\t\t\"y\": 0.744917\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.711811,\n\t\t\t\t\"y\": 0.748013\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.702537,\n\t\t\t\t\"y\": 0.750803\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.693176,\n\t\t\t\t\"y\": 0.753279\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.683735,\n\t\t\t\t\"y\": 0.755434\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.674225,\n\t\t\t\t\"y\": 0.757259\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.664657,\n\t\t\t\t\"y\": 0.758745\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.655042,\n\t\t\t\t\"y\": 0.759882\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.64539,\n\t\t\t\t\"y\": 0.760659\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.647298,\n\t\t\t\t\"y\": 0.764004\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.65599,\n\t\t\t\t\"y\": 0.768272\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.665024,\n\t\t\t\t\"y\": 0.771754\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.674321,\n\t\t\t\t\"y\": 0.774457\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.683806,\n\t\t\t\t\"y\": 0.776392\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.693414,\n\t\t\t\t\"y\": 0.777578\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.703085,\n\t\t\t\t\"y\": 0.778032\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.712762,\n\t\t\t\t\"y\": 0.777777\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.722397,\n\t\t\t\t\"y\": 0.776834\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.731944,\n\t\t\t\t\"y\": 0.775223\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.741359,\n\t\t\t\t\"y\": 0.772967\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.750603,\n\t\t\t\t\"y\": 0.770085\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.759637,\n\t\t\t\t\"y\": 0.766597\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.768422,\n\t\t\t\t\"y\": 0.762521\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.776921,\n\t\t\t\t\"y\": 0.757876\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.785096,\n\t\t\t\t\"y\": 0.752679\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.792907,\n\t\t\t\t\"y\": 0.746948\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.800315,\n\t\t\t\t\"y\": 0.740703\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.807276,\n\t\t\t\t\"y\": 0.733963\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.813748,\n\t\t\t\t\"y\": 0.726748\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.819682,\n\t\t\t\t\"y\": 0.719084\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.825029,\n\t\t\t\t\"y\": 0.710998\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.829737,\n\t\t\t\t\"y\": 0.702523\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.833752,\n\t\t\t\t\"y\": 0.693697\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.837018,\n\t\t\t\t\"y\": 0.684567\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.839479,\n\t\t\t\t\"y\": 0.675187\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.158916,\n\t\t\t\t\"y\": 0.665623\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.165575,\n\t\t\t\t\"y\": 0.672666\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.172472,\n\t\t\t\t\"y\": 0.679475\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.179595,\n\t\t\t\t\"y\": 0.686047\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.186932,\n\t\t\t\t\"y\": 0.692377\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.194473,\n\t\t\t\t\"y\": 0.698463\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.202207,\n\t\t\t\t\"y\": 0.704299\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.210125,\n\t\t\t\t\"y\": 0.709883\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.218218,\n\t\t\t\t\"y\": 0.715209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.226476,\n\t\t\t\t\"y\": 0.720275\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.23489,\n\t\t\t\t\"y\": 0.725075\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.243452,\n\t\t\t\t\"y\": 0.729605\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.252154,\n\t\t\t\t\"y\": 0.73386\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.260987,\n\t\t\t\t\"y\": 0.737834\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.269943,\n\t\t\t\t\"y\": 0.741522\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.279013,\n\t\t\t\t\"y\": 0.744917\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.288189,\n\t\t\t\t\"y\": 0.748013\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.297463,\n\t\t\t\t\"y\": 0.750803\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.306824,\n\t\t\t\t\"y\": 0.753279\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.316265,\n\t\t\t\t\"y\": 0.755434\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.325775,\n\t\t\t\t\"y\": 0.757259\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.335343,\n\t\t\t\t\"y\": 0.758745\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.344958,\n\t\t\t\t\"y\": 0.759882\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.35461,\n\t\t\t\t\"y\": 0.760659\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.352702,\n\t\t\t\t\"y\": 0.764004\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.34401,\n\t\t\t\t\"y\": 0.768272\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.334976,\n\t\t\t\t\"y\": 0.771754\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.325679,\n\t\t\t\t\"y\": 0.774457\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.316194,\n\t\t\t\t\"y\": 0.776392\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.306586,\n\t\t\t\t\"y\": 0.777578\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.296915,\n\t\t\t\t\"y\": 0.778032\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.287238,\n\t\t\t\t\"y\": 0.777777\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.277603,\n\t\t\t\t\"y\": 0.776834\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.268056,\n\t\t\t\t\"y\": 0.775223\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.258641,\n\t\t\t\t\"y\": 0.772967\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.249397,\n\t\t\t\t\"y\": 0.770085\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.240363,\n\t\t\t\t\"y\": 0.766597\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.231578,\n\t\t\t\t\"y\": 0.762521\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.223079,\n\t\t\t\t\"y\": 0.757876\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.214904,\n\t\t\t\t\"y\": 0.752679\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.207093,\n\t\t\t\t\"y\": 0.746948\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.199685,\n\t\t\t\t\"y\": 0.740703\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.192724,\n\t\t\t\t\"y\": 0.733963\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.186252,\n\t\t\t\t\"y\": 0.726748\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.180318,\n\t\t\t\t\"y\": 0.719084\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.174971,\n\t\t\t\t\"y\": 0.710998\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.170263,\n\t\t\t\t\"y\": 0.702523\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.166248,\n\t\t\t\t\"y\": 0.693697\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.162982,\n\t\t\t\t\"y\": 0.684567\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.160521,\n\t\t\t\t\"y\": 0.675187\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.742431,\n\t\t\t\t\"y\": 0.518479\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.742105,\n\t\t\t\t\"y\": 0.511157\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.741124,\n\t\t\t\t\"y\": 0.503895\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.739484,\n\t\t\t\t\"y\": 0.496754\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.737174,\n\t\t\t\t\"y\": 0.489801\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.734183,\n\t\t\t\t\"y\": 0.483114\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.7305,\n\t\t\t\t\"y\": 0.476785\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.726118,\n\t\t\t\t\"y\": 0.47092\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.72104,\n\t\t\t\t\"y\": 0.46565\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.715292,\n\t\t\t\t\"y\": 0.461124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.708935,\n\t\t\t\t\"y\": 0.45751\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.702078,\n\t\t\t\t\"y\": 0.454978\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.694889,\n\t\t\t\t\"y\": 0.45367\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.687583,\n\t\t\t\t\"y\": 0.45367\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.680394,\n\t\t\t\t\"y\": 0.454978\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.673537,\n\t\t\t\t\"y\": 0.45751\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.66718,\n\t\t\t\t\"y\": 0.461124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.661432,\n\t\t\t\t\"y\": 0.46565\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.656355,\n\t\t\t\t\"y\": 0.47092\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.651972,\n\t\t\t\t\"y\": 0.476785\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.648289,\n\t\t\t\t\"y\": 0.483114\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.645298,\n\t\t\t\t\"y\": 0.489801\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.642988,\n\t\t\t\t\"y\": 0.496754\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.641348,\n\t\t\t\t\"y\": 0.503895\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.640368,\n\t\t\t\t\"y\": 0.511157\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.640041,\n\t\t\t\t\"y\": 0.518479\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.640368,\n\t\t\t\t\"y\": 0.5258\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.641348,\n\t\t\t\t\"y\": 0.533062\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.642988,\n\t\t\t\t\"y\": 0.540203\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.645298,\n\t\t\t\t\"y\": 0.547156\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.648289,\n\t\t\t\t\"y\": 0.553843\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.651972,\n\t\t\t\t\"y\": 0.560172\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.656355,\n\t\t\t\t\"y\": 0.566037\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.661432,\n\t\t\t\t\"y\": 0.571307\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.66718,\n\t\t\t\t\"y\": 0.575833\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.673537,\n\t\t\t\t\"y\": 0.579447\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.680394,\n\t\t\t\t\"y\": 0.581979\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.687583,\n\t\t\t\t\"y\": 0.583288\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.694889,\n\t\t\t\t\"y\": 0.583288\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.702078,\n\t\t\t\t\"y\": 0.581979\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.708935,\n\t\t\t\t\"y\": 0.579447\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.715292,\n\t\t\t\t\"y\": 0.575833\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.72104,\n\t\t\t\t\"y\": 0.571307\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.726118,\n\t\t\t\t\"y\": 0.566037\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.7305,\n\t\t\t\t\"y\": 0.560172\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.734183,\n\t\t\t\t\"y\": 0.553843\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.737174,\n\t\t\t\t\"y\": 0.547156\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.739484,\n\t\t\t\t\"y\": 0.540203\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.741124,\n\t\t\t\t\"y\": 0.533062\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.742105,\n\t\t\t\t\"y\": 0.5258\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.257569,\n\t\t\t\t\"y\": 0.518479\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.257895,\n\t\t\t\t\"y\": 0.511157\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.258876,\n\t\t\t\t\"y\": 0.503895\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.260516,\n\t\t\t\t\"y\": 0.496754\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.262826,\n\t\t\t\t\"y\": 0.489801\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.265817,\n\t\t\t\t\"y\": 0.483114\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.2695,\n\t\t\t\t\"y\": 0.476785\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.273882,\n\t\t\t\t\"y\": 0.47092\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.27896,\n\t\t\t\t\"y\": 0.46565\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.284708,\n\t\t\t\t\"y\": 0.461124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.291065,\n\t\t\t\t\"y\": 0.45751\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.297922,\n\t\t\t\t\"y\": 0.454978\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.305111,\n\t\t\t\t\"y\": 0.45367\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.312417,\n\t\t\t\t\"y\": 0.45367\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.319606,\n\t\t\t\t\"y\": 0.454978\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.326463,\n\t\t\t\t\"y\": 0.45751\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.33282,\n\t\t\t\t\"y\": 0.461124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.338568,\n\t\t\t\t\"y\": 0.46565\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.343645,\n\t\t\t\t\"y\": 0.47092\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.348028,\n\t\t\t\t\"y\": 0.476785\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.351711,\n\t\t\t\t\"y\": 0.483114\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.354702,\n\t\t\t\t\"y\": 0.489801\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.357012,\n\t\t\t\t\"y\": 0.496754\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.358652,\n\t\t\t\t\"y\": 0.503895\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.359632,\n\t\t\t\t\"y\": 0.511157\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.359959,\n\t\t\t\t\"y\": 0.518479\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.359632,\n\t\t\t\t\"y\": 0.5258\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.358652,\n\t\t\t\t\"y\": 0.533062\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.357012,\n\t\t\t\t\"y\": 0.540203\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.354702,\n\t\t\t\t\"y\": 0.547156\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.351711,\n\t\t\t\t\"y\": 0.553843\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.348028,\n\t\t\t\t\"y\": 0.560172\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.343645,\n\t\t\t\t\"y\": 0.566037\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.338568,\n\t\t\t\t\"y\": 0.571307\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.33282,\n\t\t\t\t\"y\": 0.575833\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.326463,\n\t\t\t\t\"y\": 0.579447\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.319606,\n\t\t\t\t\"y\": 0.581979\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.312417,\n\t\t\t\t\"y\": 0.583288\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.305111,\n\t\t\t\t\"y\": 0.583288\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.297922,\n\t\t\t\t\"y\": 0.581979\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.291065,\n\t\t\t\t\"y\": 0.579447\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.284708,\n\t\t\t\t\"y\": 0.575833\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.27896,\n\t\t\t\t\"y\": 0.571307\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.273882,\n\t\t\t\t\"y\": 0.566037\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.2695,\n\t\t\t\t\"y\": 0.560172\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.265817,\n\t\t\t\t\"y\": 0.553843\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.262826,\n\t\t\t\t\"y\": 0.547156\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.260516,\n\t\t\t\t\"y\": 0.540203\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.258876,\n\t\t\t\t\"y\": 0.533062\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.257895,\n\t\t\t\t\"y\": 0.5258\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.437209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 3.4834e-10\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.437209\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.30693,\n\t\t\t\t\"y\": 0.211633\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.320899,\n\t\t\t\t\"y\": 0.224838\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.336224,\n\t\t\t\t\"y\": 0.236443\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.35247,\n\t\t\t\t\"y\": 0.246721\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.369395,\n\t\t\t\t\"y\": 0.255834\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.386852,\n\t\t\t\t\"y\": 0.263877\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.404744,\n\t\t\t\t\"y\": 0.270897\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.423002,\n\t\t\t\t\"y\": 0.276898\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.441572,\n\t\t\t\t\"y\": 0.281844\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.460406,\n\t\t\t\t\"y\": 0.285656\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.479452,\n\t\t\t\t\"y\": 0.288188\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.498636,\n\t\t\t\t\"y\": 0.289202\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.517832,\n\t\t\t\t\"y\": 0.288432\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.536903,\n\t\t\t\t\"y\": 0.286097\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.555771,\n\t\t\t\t\"y\": 0.282457\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.574381,\n\t\t\t\t\"y\": 0.277665\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.592686,\n\t\t\t\t\"y\": 0.271811\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.610633,\n\t\t\t\t\"y\": 0.264935\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.628157,\n\t\t\t\t\"y\": 0.257039\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.645165,\n\t\t\t\t\"y\": 0.248082\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.661519,\n\t\t\t\t\"y\": 0.237978\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.676996,\n\t\t\t\t\"y\": 0.226574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.691197,\n\t\t\t\t\"y\": 0.213618\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.691846,\n\t\t\t\t\"y\": 0.228095\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.687416,\n\t\t\t\t\"y\": 0.246809\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.680015,\n\t\t\t\t\"y\": 0.264557\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.670032,\n\t\t\t\t\"y\": 0.280991\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.657889,\n\t\t\t\t\"y\": 0.295898\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.643986,\n\t\t\t\t\"y\": 0.309174\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.628672,\n\t\t\t\t\"y\": 0.320791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.612241,\n\t\t\t\t\"y\": 0.330763\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.594937,\n\t\t\t\t\"y\": 0.339122\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.57696,\n\t\t\t\t\"y\": 0.345911\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.558478,\n\t\t\t\t\"y\": 0.351168\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.539635,\n\t\t\t\t\"y\": 0.354927\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.520559,\n\t\t\t\t\"y\": 0.357213\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.501363,\n\t\t\t\t\"y\": 0.358042\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.482161,\n\t\t\t\t\"y\": 0.357419\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.46306,\n\t\t\t\t\"y\": 0.355341\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.444177,\n\t\t\t\t\"y\": 0.351792\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.425636,\n\t\t\t\t\"y\": 0.34675\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.407578,\n\t\t\t\t\"y\": 0.34018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.390167,\n\t\t\t\t\"y\": 0.332046\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.373598,\n\t\t\t\t\"y\": 0.322306\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.358109,\n\t\t\t\t\"y\": 0.310923\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.343985,\n\t\t\t\t\"y\": 0.297882\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.331569,\n\t\t\t\t\"y\": 0.283203\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.321254,\n\t\t\t\t\"y\": 0.266976\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.313462,\n\t\t\t\t\"y\": 0.249396\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.30859,\n\t\t\t\t\"y\": 0.230792\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t]\n\t},\n\t\"pensive\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.874248,\n\t\t\t\t\"y\": 0.585271\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.866553,\n\t\t\t\t\"y\": 0.5808\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.857679,\n\t\t\t\t\"y\": 0.576925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.848501,\n\t\t\t\t\"y\": 0.573841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.839098,\n\t\t\t\t\"y\": 0.571536\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.82954,\n\t\t\t\t\"y\": 0.569997\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.819892,\n\t\t\t\t\"y\": 0.569203\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.810212,\n\t\t\t\t\"y\": 0.569135\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.800552,\n\t\t\t\t\"y\": 0.569769\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.79096,\n\t\t\t\t\"y\": 0.571083\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.781481,\n\t\t\t\t\"y\": 0.573057\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.772157,\n\t\t\t\t\"y\": 0.575667\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.763027,\n\t\t\t\t\"y\": 0.578893\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.75413,\n\t\t\t\t\"y\": 0.582716\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.745502,\n\t\t\t\t\"y\": 0.587117\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.737182,\n\t\t\t\t\"y\": 0.592076\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.729207,\n\t\t\t\t\"y\": 0.597576\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.721617,\n\t\t\t\t\"y\": 0.603597\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.714451,\n\t\t\t\t\"y\": 0.61012\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.707754,\n\t\t\t\t\"y\": 0.617124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.701568,\n\t\t\t\t\"y\": 0.624586\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.695943,\n\t\t\t\t\"y\": 0.63248\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.690927,\n\t\t\t\t\"y\": 0.640776\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.686574,\n\t\t\t\t\"y\": 0.64944\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.682936,\n\t\t\t\t\"y\": 0.658428\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.68007,\n\t\t\t\t\"y\": 0.667692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.678028,\n\t\t\t\t\"y\": 0.677173\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.679155,\n\t\t\t\t\"y\": 0.681505\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.685773,\n\t\t\t\t\"y\": 0.674423\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.692629,\n\t\t\t\t\"y\": 0.667573\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.699711,\n\t\t\t\t\"y\": 0.660958\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.707009,\n\t\t\t\t\"y\": 0.654581\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.714511,\n\t\t\t\t\"y\": 0.648448\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.722207,\n\t\t\t\t\"y\": 0.642561\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.730089,\n\t\t\t\t\"y\": 0.636925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.738146,\n\t\t\t\t\"y\": 0.631545\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.74637,\n\t\t\t\t\"y\": 0.626425\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.754752,\n\t\t\t\t\"y\": 0.621568\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.763284,\n\t\t\t\t\"y\": 0.616981\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.771957,\n\t\t\t\t\"y\": 0.612669\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.780764,\n\t\t\t\t\"y\": 0.608637\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.789696,\n\t\t\t\t\"y\": 0.604891\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.798744,\n\t\t\t\t\"y\": 0.601438\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.807901,\n\t\t\t\t\"y\": 0.598284\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.817157,\n\t\t\t\t\"y\": 0.595437\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.826504,\n\t\t\t\t\"y\": 0.592904\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.835932,\n\t\t\t\t\"y\": 0.590695\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.845431,\n\t\t\t\t\"y\": 0.588817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.854991,\n\t\t\t\t\"y\": 0.58728\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864601,\n\t\t\t\t\"y\": 0.586095\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.125752,\n\t\t\t\t\"y\": 0.585271\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.133447,\n\t\t\t\t\"y\": 0.5808\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.142321,\n\t\t\t\t\"y\": 0.576925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.151499,\n\t\t\t\t\"y\": 0.573841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.160902,\n\t\t\t\t\"y\": 0.571536\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.17046,\n\t\t\t\t\"y\": 0.569997\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.180108,\n\t\t\t\t\"y\": 0.569203\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.189788,\n\t\t\t\t\"y\": 0.569135\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.199448,\n\t\t\t\t\"y\": 0.569769\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.20904,\n\t\t\t\t\"y\": 0.571083\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.218519,\n\t\t\t\t\"y\": 0.573057\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.227843,\n\t\t\t\t\"y\": 0.575667\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.236973,\n\t\t\t\t\"y\": 0.578893\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.24587,\n\t\t\t\t\"y\": 0.582716\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.254498,\n\t\t\t\t\"y\": 0.587117\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.262818,\n\t\t\t\t\"y\": 0.592076\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.270793,\n\t\t\t\t\"y\": 0.597576\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.278383,\n\t\t\t\t\"y\": 0.603597\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.285549,\n\t\t\t\t\"y\": 0.61012\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.292246,\n\t\t\t\t\"y\": 0.617124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.298432,\n\t\t\t\t\"y\": 0.624586\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.304057,\n\t\t\t\t\"y\": 0.63248\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.309073,\n\t\t\t\t\"y\": 0.640776\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.313426,\n\t\t\t\t\"y\": 0.64944\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.317064,\n\t\t\t\t\"y\": 0.658428\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.31993,\n\t\t\t\t\"y\": 0.667692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.321972,\n\t\t\t\t\"y\": 0.677173\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.320845,\n\t\t\t\t\"y\": 0.681505\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.314227,\n\t\t\t\t\"y\": 0.674423\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.307371,\n\t\t\t\t\"y\": 0.667573\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.300289,\n\t\t\t\t\"y\": 0.660958\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.292991,\n\t\t\t\t\"y\": 0.654581\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.285489,\n\t\t\t\t\"y\": 0.648448\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.277793,\n\t\t\t\t\"y\": 0.642561\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.269911,\n\t\t\t\t\"y\": 0.636925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.261854,\n\t\t\t\t\"y\": 0.631545\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.25363,\n\t\t\t\t\"y\": 0.626425\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.245248,\n\t\t\t\t\"y\": 0.621568\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.236716,\n\t\t\t\t\"y\": 0.616981\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.228043,\n\t\t\t\t\"y\": 0.612669\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.219236,\n\t\t\t\t\"y\": 0.608637\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.210304,\n\t\t\t\t\"y\": 0.604891\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.201256,\n\t\t\t\t\"y\": 0.601438\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.192099,\n\t\t\t\t\"y\": 0.598284\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.182843,\n\t\t\t\t\"y\": 0.595437\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.173496,\n\t\t\t\t\"y\": 0.592904\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.164068,\n\t\t\t\t\"y\": 0.590695\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.154569,\n\t\t\t\t\"y\": 0.588817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.145009,\n\t\t\t\t\"y\": 0.58728\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135399,\n\t\t\t\t\"y\": 0.586095\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.828773,\n\t\t\t\t\"y\": 0.458518\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.82726,\n\t\t\t\t\"y\": 0.446139\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.823377,\n\t\t\t\t\"y\": 0.434287\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.817449,\n\t\t\t\t\"y\": 0.423313\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.809866,\n\t\t\t\t\"y\": 0.413412\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.800992,\n\t\t\t\t\"y\": 0.404649\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.79113,\n\t\t\t\t\"y\": 0.397016\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.780517,\n\t\t\t\t\"y\": 0.39047\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.769334,\n\t\t\t\t\"y\": 0.384955\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.757722,\n\t\t\t\t\"y\": 0.380416\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.745789,\n\t\t\t\t\"y\": 0.376805\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.733624,\n\t\t\t\t\"y\": 0.374083\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.721298,\n\t\t\t\t\"y\": 0.372219\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.708874,\n\t\t\t\t\"y\": 0.371192\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.69641,\n\t\t\t\t\"y\": 0.370989\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.68396,\n\t\t\t\t\"y\": 0.371605\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.671577,\n\t\t\t\t\"y\": 0.373045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.65932,\n\t\t\t\t\"y\": 0.37532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.647253,\n\t\t\t\t\"y\": 0.378453\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.635452,\n\t\t\t\t\"y\": 0.382472\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.624005,\n\t\t\t\t\"y\": 0.387416\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.613029,\n\t\t\t\t\"y\": 0.393331\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.602666,\n\t\t\t\t\"y\": 0.400269\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593108,\n\t\t\t\t\"y\": 0.408279\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.584598,\n\t\t\t\t\"y\": 0.417398\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.577448,\n\t\t\t\t\"y\": 0.427618\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.572027,\n\t\t\t\t\"y\": 0.43885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.568717,\n\t\t\t\t\"y\": 0.450875\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.568414,\n\t\t\t\t\"y\": 0.46156\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.577981,\n\t\t\t\t\"y\": 0.453622\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.588982,\n\t\t\t\t\"y\": 0.447764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.60055,\n\t\t\t\t\"y\": 0.443114\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.612421,\n\t\t\t\t\"y\": 0.439303\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.624483,\n\t\t\t\t\"y\": 0.436146\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.636675,\n\t\t\t\t\"y\": 0.433535\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.64896,\n\t\t\t\t\"y\": 0.431408\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.661315,\n\t\t\t\t\"y\": 0.429731\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.67372,\n\t\t\t\t\"y\": 0.428487\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.686161,\n\t\t\t\t\"y\": 0.427676\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.698623,\n\t\t\t\t\"y\": 0.427314\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71109,\n\t\t\t\t\"y\": 0.427417\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.723545,\n\t\t\t\t\"y\": 0.427968\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.735973,\n\t\t\t\t\"y\": 0.428951\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.74836,\n\t\t\t\t\"y\": 0.43037\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.760686,\n\t\t\t\t\"y\": 0.432243\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.772928,\n\t\t\t\t\"y\": 0.434608\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.785048,\n\t\t\t\t\"y\": 0.437534\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.796985,\n\t\t\t\t\"y\": 0.441133\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.808619,\n\t\t\t\t\"y\": 0.445613\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.819664,\n\t\t\t\t\"y\": 0.451384\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.171227,\n\t\t\t\t\"y\": 0.458518\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.17274,\n\t\t\t\t\"y\": 0.446139\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.176623,\n\t\t\t\t\"y\": 0.434287\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.182551,\n\t\t\t\t\"y\": 0.423313\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.190134,\n\t\t\t\t\"y\": 0.413412\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.199008,\n\t\t\t\t\"y\": 0.404649\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.20887,\n\t\t\t\t\"y\": 0.397016\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.219483,\n\t\t\t\t\"y\": 0.39047\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.230666,\n\t\t\t\t\"y\": 0.384955\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.242278,\n\t\t\t\t\"y\": 0.380416\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.254211,\n\t\t\t\t\"y\": 0.376805\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.266376,\n\t\t\t\t\"y\": 0.374083\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.278702,\n\t\t\t\t\"y\": 0.372219\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.291126,\n\t\t\t\t\"y\": 0.371192\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.30359,\n\t\t\t\t\"y\": 0.370989\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.31604,\n\t\t\t\t\"y\": 0.371605\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.328423,\n\t\t\t\t\"y\": 0.373045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.34068,\n\t\t\t\t\"y\": 0.37532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.352747,\n\t\t\t\t\"y\": 0.378453\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.364548,\n\t\t\t\t\"y\": 0.382472\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.375995,\n\t\t\t\t\"y\": 0.387416\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.386971,\n\t\t\t\t\"y\": 0.393331\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.397334,\n\t\t\t\t\"y\": 0.400269\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406892,\n\t\t\t\t\"y\": 0.408279\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.415402,\n\t\t\t\t\"y\": 0.417398\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.422552,\n\t\t\t\t\"y\": 0.427618\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.427973,\n\t\t\t\t\"y\": 0.43885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.431283,\n\t\t\t\t\"y\": 0.450875\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.431586,\n\t\t\t\t\"y\": 0.46156\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.422019,\n\t\t\t\t\"y\": 0.453622\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.411018,\n\t\t\t\t\"y\": 0.447764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.39945,\n\t\t\t\t\"y\": 0.443114\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.387579,\n\t\t\t\t\"y\": 0.439303\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.375517,\n\t\t\t\t\"y\": 0.436146\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.363325,\n\t\t\t\t\"y\": 0.433535\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.35104,\n\t\t\t\t\"y\": 0.431408\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.338685,\n\t\t\t\t\"y\": 0.429731\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.32628,\n\t\t\t\t\"y\": 0.428487\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.313839,\n\t\t\t\t\"y\": 0.427676\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.301377,\n\t\t\t\t\"y\": 0.427314\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28891,\n\t\t\t\t\"y\": 0.427417\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.276455,\n\t\t\t\t\"y\": 0.427968\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.264027,\n\t\t\t\t\"y\": 0.428951\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.25164,\n\t\t\t\t\"y\": 0.43037\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.239314,\n\t\t\t\t\"y\": 0.432243\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.227072,\n\t\t\t\t\"y\": 0.434608\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.214952,\n\t\t\t\t\"y\": 0.437534\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.203015,\n\t\t\t\t\"y\": 0.441133\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.191381,\n\t\t\t\t\"y\": 0.445613\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.180336,\n\t\t\t\t\"y\": 0.451384\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.437209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 3.4834e-10\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.437209\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.390762,\n\t\t\t\t\"y\": 0.196801\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.394858,\n\t\t\t\t\"y\": 0.19609\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.403863,\n\t\t\t\t\"y\": 0.200954\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.41322,\n\t\t\t\t\"y\": 0.205103\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.422802,\n\t\t\t\t\"y\": 0.208699\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.432546,\n\t\t\t\t\"y\": 0.211831\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.442414,\n\t\t\t\t\"y\": 0.214546\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.45238,\n\t\t\t\t\"y\": 0.216872\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.462428,\n\t\t\t\t\"y\": 0.218816\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.472543,\n\t\t\t\t\"y\": 0.220369\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.482713,\n\t\t\t\t\"y\": 0.221505\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.492924,\n\t\t\t\t\"y\": 0.222174\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.503156,\n\t\t\t\t\"y\": 0.22229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.513378,\n\t\t\t\t\"y\": 0.22182\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.523565,\n\t\t\t\t\"y\": 0.220856\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.533703,\n\t\t\t\t\"y\": 0.219458\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.543778,\n\t\t\t\t\"y\": 0.217662\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.553777,\n\t\t\t\t\"y\": 0.215483\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.563685,\n\t\t\t\t\"y\": 0.212918\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.57348,\n\t\t\t\t\"y\": 0.209951\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.583131,\n\t\t\t\t\"y\": 0.206541\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.592584,\n\t\t\t\t\"y\": 0.202617\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.601745,\n\t\t\t\t\"y\": 0.198054\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.610163,\n\t\t\t\t\"y\": 0.192984\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.607215,\n\t\t\t\t\"y\": 0.202789\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.602708,\n\t\t\t\t\"y\": 0.211984\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.596939,\n\t\t\t\t\"y\": 0.220445\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.590165,\n\t\t\t\t\"y\": 0.228123\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.582591,\n\t\t\t\t\"y\": 0.235012\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.574377,\n\t\t\t\t\"y\": 0.241123\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.565651,\n\t\t\t\t\"y\": 0.246472\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.55651,\n\t\t\t\t\"y\": 0.251078\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.547037,\n\t\t\t\t\"y\": 0.25495\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.537299,\n\t\t\t\t\"y\": 0.258097\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.527356,\n\t\t\t\t\"y\": 0.260515\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.517264,\n\t\t\t\t\"y\": 0.262198\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.507074,\n\t\t\t\t\"y\": 0.263128\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.496844,\n\t\t\t\t\"y\": 0.26328\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.486633,\n\t\t\t\t\"y\": 0.262645\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.476496,\n\t\t\t\t\"y\": 0.261248\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.46649,\n\t\t\t\t\"y\": 0.25911\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.456667,\n\t\t\t\t\"y\": 0.256242\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.447085,\n\t\t\t\t\"y\": 0.252648\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.437808,\n\t\t\t\t\"y\": 0.248324\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.428912,\n\t\t\t\t\"y\": 0.243262\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.420489,\n\t\t\t\t\"y\": 0.237444\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.412653,\n\t\t\t\t\"y\": 0.230856\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.40555,\n\t\t\t\t\"y\": 0.223481\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.399368,\n\t\t\t\t\"y\": 0.215317\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.394344,\n\t\t\t\t\"y\": 0.206394\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t]\n\t},\n\t\"confused\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.708191,\n\t\t\t\t\"y\": 0.6214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.707865,\n\t\t\t\t\"y\": 0.614079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.706885,\n\t\t\t\t\"y\": 0.606817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.705245,\n\t\t\t\t\"y\": 0.599675\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.702935,\n\t\t\t\t\"y\": 0.592722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.699944,\n\t\t\t\t\"y\": 0.586036\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.696261,\n\t\t\t\t\"y\": 0.579706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.691878,\n\t\t\t\t\"y\": 0.573841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.6868,\n\t\t\t\t\"y\": 0.568571\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.681053,\n\t\t\t\t\"y\": 0.564045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.674695,\n\t\t\t\t\"y\": 0.560432\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.667839,\n\t\t\t\t\"y\": 0.557899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.66065,\n\t\t\t\t\"y\": 0.556591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.653343,\n\t\t\t\t\"y\": 0.556591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.646154,\n\t\t\t\t\"y\": 0.557899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.639298,\n\t\t\t\t\"y\": 0.560432\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.632941,\n\t\t\t\t\"y\": 0.564045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.627193,\n\t\t\t\t\"y\": 0.568571\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.622115,\n\t\t\t\t\"y\": 0.573841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.617732,\n\t\t\t\t\"y\": 0.579706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.614049,\n\t\t\t\t\"y\": 0.586036\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.611058,\n\t\t\t\t\"y\": 0.592722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.608748,\n\t\t\t\t\"y\": 0.599675\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.607108,\n\t\t\t\t\"y\": 0.606817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606128,\n\t\t\t\t\"y\": 0.614079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.605802,\n\t\t\t\t\"y\": 0.6214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606128,\n\t\t\t\t\"y\": 0.628721\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.607108,\n\t\t\t\t\"y\": 0.635983\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.608748,\n\t\t\t\t\"y\": 0.643125\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.611058,\n\t\t\t\t\"y\": 0.650077\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.614049,\n\t\t\t\t\"y\": 0.656764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.617732,\n\t\t\t\t\"y\": 0.663094\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.622115,\n\t\t\t\t\"y\": 0.668959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.627193,\n\t\t\t\t\"y\": 0.674229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.632941,\n\t\t\t\t\"y\": 0.678755\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.639298,\n\t\t\t\t\"y\": 0.682368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.646154,\n\t\t\t\t\"y\": 0.684901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.653343,\n\t\t\t\t\"y\": 0.686209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.66065,\n\t\t\t\t\"y\": 0.686209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.667839,\n\t\t\t\t\"y\": 0.684901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.674695,\n\t\t\t\t\"y\": 0.682368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.681053,\n\t\t\t\t\"y\": 0.678755\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.6868,\n\t\t\t\t\"y\": 0.674229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.691878,\n\t\t\t\t\"y\": 0.668959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.696261,\n\t\t\t\t\"y\": 0.663094\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.699944,\n\t\t\t\t\"y\": 0.656764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.702935,\n\t\t\t\t\"y\": 0.650077\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.705245,\n\t\t\t\t\"y\": 0.643125\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.706885,\n\t\t\t\t\"y\": 0.635983\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.707865,\n\t\t\t\t\"y\": 0.628721\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.291809,\n\t\t\t\t\"y\": 0.6214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.292135,\n\t\t\t\t\"y\": 0.614079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.293115,\n\t\t\t\t\"y\": 0.606817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.294755,\n\t\t\t\t\"y\": 0.599675\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.297065,\n\t\t\t\t\"y\": 0.592722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.300056,\n\t\t\t\t\"y\": 0.586036\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.303739,\n\t\t\t\t\"y\": 0.579706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.308122,\n\t\t\t\t\"y\": 0.573841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.3132,\n\t\t\t\t\"y\": 0.568571\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.318947,\n\t\t\t\t\"y\": 0.564045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.325305,\n\t\t\t\t\"y\": 0.560432\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.332161,\n\t\t\t\t\"y\": 0.557899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.33935,\n\t\t\t\t\"y\": 0.556591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.346657,\n\t\t\t\t\"y\": 0.556591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.353846,\n\t\t\t\t\"y\": 0.557899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.360702,\n\t\t\t\t\"y\": 0.560432\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.367059,\n\t\t\t\t\"y\": 0.564045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.372807,\n\t\t\t\t\"y\": 0.568571\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.377885,\n\t\t\t\t\"y\": 0.573841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.382268,\n\t\t\t\t\"y\": 0.579706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.385951,\n\t\t\t\t\"y\": 0.586036\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.388942,\n\t\t\t\t\"y\": 0.592722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.391252,\n\t\t\t\t\"y\": 0.599675\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.392892,\n\t\t\t\t\"y\": 0.606817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.393872,\n\t\t\t\t\"y\": 0.614079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.394198,\n\t\t\t\t\"y\": 0.6214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.393872,\n\t\t\t\t\"y\": 0.628721\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.392892,\n\t\t\t\t\"y\": 0.635983\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.391252,\n\t\t\t\t\"y\": 0.643125\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.388942,\n\t\t\t\t\"y\": 0.650077\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.385951,\n\t\t\t\t\"y\": 0.656764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.382268,\n\t\t\t\t\"y\": 0.663094\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.377885,\n\t\t\t\t\"y\": 0.668959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.372807,\n\t\t\t\t\"y\": 0.674229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.367059,\n\t\t\t\t\"y\": 0.678755\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.360702,\n\t\t\t\t\"y\": 0.682368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.353846,\n\t\t\t\t\"y\": 0.684901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.346657,\n\t\t\t\t\"y\": 0.686209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.33935,\n\t\t\t\t\"y\": 0.686209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.332161,\n\t\t\t\t\"y\": 0.684901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.325305,\n\t\t\t\t\"y\": 0.682368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.318947,\n\t\t\t\t\"y\": 0.678755\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.3132,\n\t\t\t\t\"y\": 0.674229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.308122,\n\t\t\t\t\"y\": 0.668959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.303739,\n\t\t\t\t\"y\": 0.663094\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.300056,\n\t\t\t\t\"y\": 0.656764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.297065,\n\t\t\t\t\"y\": 0.650077\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.294755,\n\t\t\t\t\"y\": 0.643125\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.293115,\n\t\t\t\t\"y\": 0.635983\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.292135,\n\t\t\t\t\"y\": 0.628721\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.437209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 3.4834e-10\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.437209\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.302761,\n\t\t\t\t\"y\": 0.253558\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.315825,\n\t\t\t\t\"y\": 0.266717\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.33012,\n\t\t\t\t\"y\": 0.278532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.34521,\n\t\t\t\t\"y\": 0.289312\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.360876,\n\t\t\t\t\"y\": 0.299235\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.376995,\n\t\t\t\t\"y\": 0.308401\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.39349,\n\t\t\t\t\"y\": 0.316869\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.410311,\n\t\t\t\t\"y\": 0.324668\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.427425,\n\t\t\t\t\"y\": 0.331798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.44481,\n\t\t\t\t\"y\": 0.338238\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.46245,\n\t\t\t\t\"y\": 0.343934\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.480337,\n\t\t\t\t\"y\": 0.348798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.498461,\n\t\t\t\t\"y\": 0.352678\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.516787,\n\t\t\t\t\"y\": 0.355446\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.535234,\n\t\t\t\t\"y\": 0.357241\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.553744,\n\t\t\t\t\"y\": 0.358189\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.572278,\n\t\t\t\t\"y\": 0.358363\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.590804,\n\t\t\t\t\"y\": 0.357798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.609293,\n\t\t\t\t\"y\": 0.356504\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.627715,\n\t\t\t\t\"y\": 0.354462\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.646031,\n\t\t\t\t\"y\": 0.35162\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.664187,\n\t\t\t\t\"y\": 0.34789\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.682096,\n\t\t\t\t\"y\": 0.343115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.699601,\n\t\t\t\t\"y\": 0.337026\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.712596,\n\t\t\t\t\"y\": 0.334043\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.70364,\n\t\t\t\t\"y\": 0.350133\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.689567,\n\t\t\t\t\"y\": 0.362128\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.673171,\n\t\t\t\t\"y\": 0.370739\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.655695,\n\t\t\t\t\"y\": 0.376898\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.637677,\n\t\t\t\t\"y\": 0.381228\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.619372,\n\t\t\t\t\"y\": 0.384123\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.600918,\n\t\t\t\t\"y\": 0.385838\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.582397,\n\t\t\t\t\"y\": 0.386543\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.563864,\n\t\t\t\t\"y\": 0.386357\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.545357,\n\t\t\t\t\"y\": 0.385363\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.526904,\n\t\t\t\t\"y\": 0.383619\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.508532,\n\t\t\t\t\"y\": 0.381162\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.490266,\n\t\t\t\t\"y\": 0.378016\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.472129,\n\t\t\t\t\"y\": 0.37419\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.454148,\n\t\t\t\t\"y\": 0.369683\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.436356,\n\t\t\t\t\"y\": 0.364479\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.418792,\n\t\t\t\t\"y\": 0.358549\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.401508,\n\t\t\t\t\"y\": 0.351846\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.384572,\n\t\t\t\t\"y\": 0.344304\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.368084,\n\t\t\t\t\"y\": 0.335824\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.352194,\n\t\t\t\t\"y\": 0.326269\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.337146,\n\t\t\t\t\"y\": 0.315437\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.323364,\n\t\t\t\t\"y\": 0.303037\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.311671,\n\t\t\t\t\"y\": 0.288661\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.303782,\n\t\t\t\t\"y\": 0.271935\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t]\n\t},\n\t\"slightly_frowning_face\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.708191,\n\t\t\t\t\"y\": 0.6214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.707865,\n\t\t\t\t\"y\": 0.614079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.706885,\n\t\t\t\t\"y\": 0.606817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.705245,\n\t\t\t\t\"y\": 0.599675\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.702935,\n\t\t\t\t\"y\": 0.592722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.699944,\n\t\t\t\t\"y\": 0.586036\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.696261,\n\t\t\t\t\"y\": 0.579706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.691878,\n\t\t\t\t\"y\": 0.573841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.6868,\n\t\t\t\t\"y\": 0.568571\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.681053,\n\t\t\t\t\"y\": 0.564045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.674695,\n\t\t\t\t\"y\": 0.560432\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.667839,\n\t\t\t\t\"y\": 0.557899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.66065,\n\t\t\t\t\"y\": 0.556591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.653343,\n\t\t\t\t\"y\": 0.556591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.646154,\n\t\t\t\t\"y\": 0.557899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.639298,\n\t\t\t\t\"y\": 0.560432\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.632941,\n\t\t\t\t\"y\": 0.564045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.627193,\n\t\t\t\t\"y\": 0.568571\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.622115,\n\t\t\t\t\"y\": 0.573841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.617732,\n\t\t\t\t\"y\": 0.579706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.614049,\n\t\t\t\t\"y\": 0.586036\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.611058,\n\t\t\t\t\"y\": 0.592722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.608748,\n\t\t\t\t\"y\": 0.599675\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.607108,\n\t\t\t\t\"y\": 0.606817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606128,\n\t\t\t\t\"y\": 0.614079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.605802,\n\t\t\t\t\"y\": 0.6214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606128,\n\t\t\t\t\"y\": 0.628721\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.607108,\n\t\t\t\t\"y\": 0.635983\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.608748,\n\t\t\t\t\"y\": 0.643125\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.611058,\n\t\t\t\t\"y\": 0.650077\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.614049,\n\t\t\t\t\"y\": 0.656764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.617732,\n\t\t\t\t\"y\": 0.663094\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.622115,\n\t\t\t\t\"y\": 0.668959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.627193,\n\t\t\t\t\"y\": 0.674229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.632941,\n\t\t\t\t\"y\": 0.678755\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.639298,\n\t\t\t\t\"y\": 0.682368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.646154,\n\t\t\t\t\"y\": 0.684901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.653343,\n\t\t\t\t\"y\": 0.686209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.66065,\n\t\t\t\t\"y\": 0.686209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.667839,\n\t\t\t\t\"y\": 0.684901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.674695,\n\t\t\t\t\"y\": 0.682368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.681053,\n\t\t\t\t\"y\": 0.678755\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.6868,\n\t\t\t\t\"y\": 0.674229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.691878,\n\t\t\t\t\"y\": 0.668959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.696261,\n\t\t\t\t\"y\": 0.663094\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.699944,\n\t\t\t\t\"y\": 0.656764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.702935,\n\t\t\t\t\"y\": 0.650077\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.705245,\n\t\t\t\t\"y\": 0.643125\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.706885,\n\t\t\t\t\"y\": 0.635983\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.707865,\n\t\t\t\t\"y\": 0.628721\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.291809,\n\t\t\t\t\"y\": 0.6214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.292135,\n\t\t\t\t\"y\": 0.614079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.293115,\n\t\t\t\t\"y\": 0.606817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.294755,\n\t\t\t\t\"y\": 0.599675\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.297065,\n\t\t\t\t\"y\": 0.592722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.300056,\n\t\t\t\t\"y\": 0.586036\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.303739,\n\t\t\t\t\"y\": 0.579706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.308122,\n\t\t\t\t\"y\": 0.573841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.3132,\n\t\t\t\t\"y\": 0.568571\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.318947,\n\t\t\t\t\"y\": 0.564045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.325305,\n\t\t\t\t\"y\": 0.560432\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.332161,\n\t\t\t\t\"y\": 0.557899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.33935,\n\t\t\t\t\"y\": 0.556591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.346657,\n\t\t\t\t\"y\": 0.556591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.353846,\n\t\t\t\t\"y\": 0.557899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.360702,\n\t\t\t\t\"y\": 0.560432\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.367059,\n\t\t\t\t\"y\": 0.564045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.372807,\n\t\t\t\t\"y\": 0.568571\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.377885,\n\t\t\t\t\"y\": 0.573841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.382268,\n\t\t\t\t\"y\": 0.579706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.385951,\n\t\t\t\t\"y\": 0.586036\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.388942,\n\t\t\t\t\"y\": 0.592722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.391252,\n\t\t\t\t\"y\": 0.599675\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.392892,\n\t\t\t\t\"y\": 0.606817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.393872,\n\t\t\t\t\"y\": 0.614079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.394198,\n\t\t\t\t\"y\": 0.6214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.393872,\n\t\t\t\t\"y\": 0.628721\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.392892,\n\t\t\t\t\"y\": 0.635983\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.391252,\n\t\t\t\t\"y\": 0.643125\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.388942,\n\t\t\t\t\"y\": 0.650077\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.385951,\n\t\t\t\t\"y\": 0.656764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.382268,\n\t\t\t\t\"y\": 0.663094\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.377885,\n\t\t\t\t\"y\": 0.668959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.372807,\n\t\t\t\t\"y\": 0.674229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.367059,\n\t\t\t\t\"y\": 0.678755\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.360702,\n\t\t\t\t\"y\": 0.682368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.353846,\n\t\t\t\t\"y\": 0.684901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.346657,\n\t\t\t\t\"y\": 0.686209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.33935,\n\t\t\t\t\"y\": 0.686209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.332161,\n\t\t\t\t\"y\": 0.684901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.325305,\n\t\t\t\t\"y\": 0.682368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.318947,\n\t\t\t\t\"y\": 0.678755\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.3132,\n\t\t\t\t\"y\": 0.674229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.308122,\n\t\t\t\t\"y\": 0.668959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.303739,\n\t\t\t\t\"y\": 0.663094\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.300056,\n\t\t\t\t\"y\": 0.656764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.297065,\n\t\t\t\t\"y\": 0.650077\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.294755,\n\t\t\t\t\"y\": 0.643125\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.293115,\n\t\t\t\t\"y\": 0.635983\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.292135,\n\t\t\t\t\"y\": 0.628721\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.437209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 3.4834e-10\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.437209\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.312763,\n\t\t\t\t\"y\": 0.24943\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.326173,\n\t\t\t\t\"y\": 0.259767\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.340567,\n\t\t\t\t\"y\": 0.268686\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.355588,\n\t\t\t\t\"y\": 0.276505\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.371052,\n\t\t\t\t\"y\": 0.283405\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.386852,\n\t\t\t\t\"y\": 0.289492\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.40292,\n\t\t\t\t\"y\": 0.294829\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.41921,\n\t\t\t\t\"y\": 0.299445\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.435686,\n\t\t\t\t\"y\": 0.30334\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.452319,\n\t\t\t\t\"y\": 0.306491\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.469084,\n\t\t\t\t\"y\": 0.308841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.485949,\n\t\t\t\t\"y\": 0.310294\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.502871,\n\t\t\t\t\"y\": 0.310685\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.51978,\n\t\t\t\t\"y\": 0.30991\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.536615,\n\t\t\t\t\"y\": 0.308139\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.553339,\n\t\t\t\t\"y\": 0.305508\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.569922,\n\t\t\t\t\"y\": 0.3021\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.586338,\n\t\t\t\t\"y\": 0.297959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.602557,\n\t\t\t\t\"y\": 0.293101\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.61854,\n\t\t\t\t\"y\": 0.287514\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.634235,\n\t\t\t\t\"y\": 0.28116\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.649564,\n\t\t\t\t\"y\": 0.273963\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.664398,\n\t\t\t\t\"y\": 0.265797\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.678513,\n\t\t\t\t\"y\": 0.256441\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.686836,\n\t\t\t\t\"y\": 0.255165\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.68141,\n\t\t\t\t\"y\": 0.271136\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.671382,\n\t\t\t\t\"y\": 0.284745\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.658706,\n\t\t\t\t\"y\": 0.295958\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.644514,\n\t\t\t\t\"y\": 0.305186\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.629397,\n\t\t\t\t\"y\": 0.312809\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.613682,\n\t\t\t\t\"y\": 0.319106\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.59756,\n\t\t\t\t\"y\": 0.324275\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.581154,\n\t\t\t\t\"y\": 0.328454\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.564548,\n\t\t\t\t\"y\": 0.331743\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5478,\n\t\t\t\t\"y\": 0.334213\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.530957,\n\t\t\t\t\"y\": 0.335912\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.514056,\n\t\t\t\t\"y\": 0.336871\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.497129,\n\t\t\t\t\"y\": 0.337108\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.480207,\n\t\t\t\t\"y\": 0.336627\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.463322,\n\t\t\t\t\"y\": 0.33542\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.446506,\n\t\t\t\t\"y\": 0.333464\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.429801,\n\t\t\t\t\"y\": 0.330722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.413255,\n\t\t\t\t\"y\": 0.32714\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.396935,\n\t\t\t\t\"y\": 0.322638\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.380935,\n\t\t\t\t\"y\": 0.317105\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.365396,\n\t\t\t\t\"y\": 0.310384\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.350547,\n\t\t\t\t\"y\": 0.302253\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.336783,\n\t\t\t\t\"y\": 0.292399\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.324841,\n\t\t\t\t\"y\": 0.280414\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.316114,\n\t\t\t\t\"y\": 0.265947\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t]\n\t},\n\t\"white_frowning_face\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.708191,\n\t\t\t\t\"y\": 0.6214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.707865,\n\t\t\t\t\"y\": 0.614079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.706885,\n\t\t\t\t\"y\": 0.606817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.705245,\n\t\t\t\t\"y\": 0.599675\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.702935,\n\t\t\t\t\"y\": 0.592722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.699944,\n\t\t\t\t\"y\": 0.586036\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.696261,\n\t\t\t\t\"y\": 0.579706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.691878,\n\t\t\t\t\"y\": 0.573841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.6868,\n\t\t\t\t\"y\": 0.568571\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.681053,\n\t\t\t\t\"y\": 0.564045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.674695,\n\t\t\t\t\"y\": 0.560432\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.667839,\n\t\t\t\t\"y\": 0.557899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.66065,\n\t\t\t\t\"y\": 0.556591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.653343,\n\t\t\t\t\"y\": 0.556591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.646154,\n\t\t\t\t\"y\": 0.557899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.639298,\n\t\t\t\t\"y\": 0.560432\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.632941,\n\t\t\t\t\"y\": 0.564045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.627193,\n\t\t\t\t\"y\": 0.568571\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.622115,\n\t\t\t\t\"y\": 0.573841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.617732,\n\t\t\t\t\"y\": 0.579706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.614049,\n\t\t\t\t\"y\": 0.586036\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.611058,\n\t\t\t\t\"y\": 0.592722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.608748,\n\t\t\t\t\"y\": 0.599675\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.607108,\n\t\t\t\t\"y\": 0.606817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606128,\n\t\t\t\t\"y\": 0.614079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.605802,\n\t\t\t\t\"y\": 0.6214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606128,\n\t\t\t\t\"y\": 0.628721\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.607108,\n\t\t\t\t\"y\": 0.635983\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.608748,\n\t\t\t\t\"y\": 0.643125\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.611058,\n\t\t\t\t\"y\": 0.650077\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.614049,\n\t\t\t\t\"y\": 0.656764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.617732,\n\t\t\t\t\"y\": 0.663094\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.622115,\n\t\t\t\t\"y\": 0.668959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.627193,\n\t\t\t\t\"y\": 0.674229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.632941,\n\t\t\t\t\"y\": 0.678755\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.639298,\n\t\t\t\t\"y\": 0.682368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.646154,\n\t\t\t\t\"y\": 0.684901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.653343,\n\t\t\t\t\"y\": 0.686209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.66065,\n\t\t\t\t\"y\": 0.686209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.667839,\n\t\t\t\t\"y\": 0.684901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.674695,\n\t\t\t\t\"y\": 0.682368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.681053,\n\t\t\t\t\"y\": 0.678755\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.6868,\n\t\t\t\t\"y\": 0.674229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.691878,\n\t\t\t\t\"y\": 0.668959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.696261,\n\t\t\t\t\"y\": 0.663094\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.699944,\n\t\t\t\t\"y\": 0.656764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.702935,\n\t\t\t\t\"y\": 0.650077\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.705245,\n\t\t\t\t\"y\": 0.643125\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.706885,\n\t\t\t\t\"y\": 0.635983\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.707865,\n\t\t\t\t\"y\": 0.628721\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.291809,\n\t\t\t\t\"y\": 0.6214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.292135,\n\t\t\t\t\"y\": 0.614079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.293115,\n\t\t\t\t\"y\": 0.606817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.294755,\n\t\t\t\t\"y\": 0.599675\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.297065,\n\t\t\t\t\"y\": 0.592722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.300056,\n\t\t\t\t\"y\": 0.586036\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.303739,\n\t\t\t\t\"y\": 0.579706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.308122,\n\t\t\t\t\"y\": 0.573841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.3132,\n\t\t\t\t\"y\": 0.568571\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.318947,\n\t\t\t\t\"y\": 0.564045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.325305,\n\t\t\t\t\"y\": 0.560432\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.332161,\n\t\t\t\t\"y\": 0.557899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.33935,\n\t\t\t\t\"y\": 0.556591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.346657,\n\t\t\t\t\"y\": 0.556591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.353846,\n\t\t\t\t\"y\": 0.557899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.360702,\n\t\t\t\t\"y\": 0.560432\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.367059,\n\t\t\t\t\"y\": 0.564045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.372807,\n\t\t\t\t\"y\": 0.568571\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.377885,\n\t\t\t\t\"y\": 0.573841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.382268,\n\t\t\t\t\"y\": 0.579706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.385951,\n\t\t\t\t\"y\": 0.586036\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.388942,\n\t\t\t\t\"y\": 0.592722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.391252,\n\t\t\t\t\"y\": 0.599675\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.392892,\n\t\t\t\t\"y\": 0.606817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.393872,\n\t\t\t\t\"y\": 0.614079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.394198,\n\t\t\t\t\"y\": 0.6214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.393872,\n\t\t\t\t\"y\": 0.628721\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.392892,\n\t\t\t\t\"y\": 0.635983\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.391252,\n\t\t\t\t\"y\": 0.643125\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.388942,\n\t\t\t\t\"y\": 0.650077\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.385951,\n\t\t\t\t\"y\": 0.656764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.382268,\n\t\t\t\t\"y\": 0.663094\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.377885,\n\t\t\t\t\"y\": 0.668959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.372807,\n\t\t\t\t\"y\": 0.674229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.367059,\n\t\t\t\t\"y\": 0.678755\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.360702,\n\t\t\t\t\"y\": 0.682368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.353846,\n\t\t\t\t\"y\": 0.684901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.346657,\n\t\t\t\t\"y\": 0.686209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.33935,\n\t\t\t\t\"y\": 0.686209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.332161,\n\t\t\t\t\"y\": 0.684901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.325305,\n\t\t\t\t\"y\": 0.682368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.318947,\n\t\t\t\t\"y\": 0.678755\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.3132,\n\t\t\t\t\"y\": 0.674229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.308122,\n\t\t\t\t\"y\": 0.668959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.303739,\n\t\t\t\t\"y\": 0.663094\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.300056,\n\t\t\t\t\"y\": 0.656764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.297065,\n\t\t\t\t\"y\": 0.650077\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.294755,\n\t\t\t\t\"y\": 0.643125\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.293115,\n\t\t\t\t\"y\": 0.635983\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.292135,\n\t\t\t\t\"y\": 0.628721\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.437209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 3.4834e-10\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.437209\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.282142,\n\t\t\t\t\"y\": 0.257888\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.295756,\n\t\t\t\t\"y\": 0.275978\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.311093,\n\t\t\t\t\"y\": 0.29263\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.327783,\n\t\t\t\t\"y\": 0.307924\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345583,\n\t\t\t\t\"y\": 0.321906\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.364326,\n\t\t\t\t\"y\": 0.334591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.383893,\n\t\t\t\t\"y\": 0.345958\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.404196,\n\t\t\t\t\"y\": 0.355946\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.425163,\n\t\t\t\t\"y\": 0.364446\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.446725,\n\t\t\t\t\"y\": 0.371285\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468802,\n\t\t\t\t\"y\": 0.376195\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.491266,\n\t\t\t\t\"y\": 0.378764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.513868,\n\t\t\t\t\"y\": 0.378415\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.53626,\n\t\t\t\t\"y\": 0.375266\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.558228,\n\t\t\t\t\"y\": 0.369887\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.579661,\n\t\t\t\t\"y\": 0.362651\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.600482,\n\t\t\t\t\"y\": 0.3538\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.620625,\n\t\t\t\t\"y\": 0.343491\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.640014,\n\t\t\t\t\"y\": 0.33182\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.658554,\n\t\t\t\t\"y\": 0.318839\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.676118,\n\t\t\t\t\"y\": 0.304561\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.692525,\n\t\t\t\t\"y\": 0.288964\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.707509,\n\t\t\t\t\"y\": 0.271993\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.717761,\n\t\t\t\t\"y\": 0.263043\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.715071,\n\t\t\t\t\"y\": 0.285524\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.708823,\n\t\t\t\t\"y\": 0.307286\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.699329,\n\t\t\t\t\"y\": 0.327837\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.686996,\n\t\t\t\t\"y\": 0.346819\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.672261,\n\t\t\t\t\"y\": 0.363999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.655542,\n\t\t\t\t\"y\": 0.379249\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.637213,\n\t\t\t\t\"y\": 0.392517\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.6176,\n\t\t\t\t\"y\": 0.403794\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.596979,\n\t\t\t\t\"y\": 0.413095\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.575588,\n\t\t\t\t\"y\": 0.420449\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.553632,\n\t\t\t\t\"y\": 0.425881\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531293,\n\t\t\t\t\"y\": 0.429418\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.508737,\n\t\t\t\t\"y\": 0.431076\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.486122,\n\t\t\t\t\"y\": 0.430863\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.463601,\n\t\t\t\t\"y\": 0.428779\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.441334,\n\t\t\t\t\"y\": 0.424813\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.41949,\n\t\t\t\t\"y\": 0.418946\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.398255,\n\t\t\t\t\"y\": 0.411152\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.377841,\n\t\t\t\t\"y\": 0.401403\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.358494,\n\t\t\t\t\"y\": 0.389675\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.340501,\n\t\t\t\t\"y\": 0.375954\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.324198,\n\t\t\t\t\"y\": 0.360257\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.309972,\n\t\t\t\t\"y\": 0.342653\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.298247,\n\t\t\t\t\"y\": 0.32329\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.289457,\n\t\t\t\t\"y\": 0.302426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.283996,\n\t\t\t\t\"y\": 0.280454\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t]\n\t},\n\t\"persevere\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.87138,\n\t\t\t\t\"y\": 0.636056\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.86286,\n\t\t\t\t\"y\": 0.631454\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.853958,\n\t\t\t\t\"y\": 0.627643\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.84476,\n\t\t\t\t\"y\": 0.624622\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.835342,\n\t\t\t\t\"y\": 0.622379\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.825775,\n\t\t\t\t\"y\": 0.6209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.816122,\n\t\t\t\t\"y\": 0.620166\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.806441,\n\t\t\t\t\"y\": 0.620155\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.796785,\n\t\t\t\t\"y\": 0.620844\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.787201,\n\t\t\t\t\"y\": 0.622213\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.777733,\n\t\t\t\t\"y\": 0.624237\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.768423,\n\t\t\t\t\"y\": 0.626898\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.75931,\n\t\t\t\t\"y\": 0.630173\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.750433,\n\t\t\t\t\"y\": 0.634043\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.741829,\n\t\t\t\t\"y\": 0.638489\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.733535,\n\t\t\t\t\"y\": 0.643493\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.725589,\n\t\t\t\t\"y\": 0.649035\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.718031,\n\t\t\t\t\"y\": 0.655097\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.710902,\n\t\t\t\t\"y\": 0.661659\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.704244,\n\t\t\t\t\"y\": 0.668701\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.698102,\n\t\t\t\t\"y\": 0.676199\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.692524,\n\t\t\t\t\"y\": 0.684126\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.687559,\n\t\t\t\t\"y\": 0.692453\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.683261,\n\t\t\t\t\"y\": 0.701144\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.679683,\n\t\t\t\t\"y\": 0.710157\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.676881,\n\t\t\t\t\"y\": 0.719441\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.674908,\n\t\t\t\t\"y\": 0.728936\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.676683,\n\t\t\t\t\"y\": 0.731923\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.683321,\n\t\t\t\t\"y\": 0.72486\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.690195,\n\t\t\t\t\"y\": 0.718028\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.697295,\n\t\t\t\t\"y\": 0.711432\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.70461,\n\t\t\t\t\"y\": 0.705074\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.712128,\n\t\t\t\t\"y\": 0.698961\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.719839,\n\t\t\t\t\"y\": 0.693094\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.727735,\n\t\t\t\t\"y\": 0.687479\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.735806,\n\t\t\t\t\"y\": 0.682119\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.744043,\n\t\t\t\t\"y\": 0.67702\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.752438,\n\t\t\t\t\"y\": 0.672185\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.760981,\n\t\t\t\t\"y\": 0.66762\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.769666,\n\t\t\t\t\"y\": 0.66333\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.778483,\n\t\t\t\t\"y\": 0.65932\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.787424,\n\t\t\t\t\"y\": 0.655598\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.796481,\n\t\t\t\t\"y\": 0.652168\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.805646,\n\t\t\t\t\"y\": 0.649039\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.81491,\n\t\t\t\t\"y\": 0.646217\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.824264,\n\t\t\t\t\"y\": 0.64371\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.833698,\n\t\t\t\t\"y\": 0.641526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.843202,\n\t\t\t\t\"y\": 0.639675\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.852767,\n\t\t\t\t\"y\": 0.638166\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.86238,\n\t\t\t\t\"y\": 0.63701\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.12832,\n\t\t\t\t\"y\": 0.636238\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.136825,\n\t\t\t\t\"y\": 0.631607\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.145714,\n\t\t\t\t\"y\": 0.627767\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.154903,\n\t\t\t\t\"y\": 0.624717\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.164314,\n\t\t\t\t\"y\": 0.622447\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.173877,\n\t\t\t\t\"y\": 0.620941\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.183528,\n\t\t\t\t\"y\": 0.62018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.193208,\n\t\t\t\t\"y\": 0.620143\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.202866,\n\t\t\t\t\"y\": 0.620807\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.212454,\n\t\t\t\t\"y\": 0.622151\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.221927,\n\t\t\t\t\"y\": 0.624153\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.231243,\n\t\t\t\t\"y\": 0.626791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.240364,\n\t\t\t\t\"y\": 0.630044\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.24925,\n\t\t\t\t\"y\": 0.633893\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.257865,\n\t\t\t\t\"y\": 0.638318\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.266171,\n\t\t\t\t\"y\": 0.643302\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.27413,\n\t\t\t\t\"y\": 0.648825\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.281702,\n\t\t\t\t\"y\": 0.654869\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.288848,\n\t\t\t\t\"y\": 0.661413\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.295524,\n\t\t\t\t\"y\": 0.668438\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.301685,\n\t\t\t\t\"y\": 0.67592\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.307285,\n\t\t\t\t\"y\": 0.683832\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.312272,\n\t\t\t\t\"y\": 0.692145\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.316596,\n\t\t\t\t\"y\": 0.700824\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.3202,\n\t\t\t\t\"y\": 0.709826\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.323032,\n\t\t\t\t\"y\": 0.7191\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.325036,\n\t\t\t\t\"y\": 0.728589\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.323553,\n\t\t\t\t\"y\": 0.732183\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.316924,\n\t\t\t\t\"y\": 0.725111\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.310057,\n\t\t\t\t\"y\": 0.718271\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.302965,\n\t\t\t\t\"y\": 0.711666\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.295659,\n\t\t\t\t\"y\": 0.7053\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.288148,\n\t\t\t\t\"y\": 0.699178\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.280443,\n\t\t\t\t\"y\": 0.693302\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.272554,\n\t\t\t\t\"y\": 0.687678\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.264489,\n\t\t\t\t\"y\": 0.682309\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.256258,\n\t\t\t\t\"y\": 0.6772\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.247869,\n\t\t\t\t\"y\": 0.672355\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.239331,\n\t\t\t\t\"y\": 0.66778\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.230651,\n\t\t\t\t\"y\": 0.66348\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.221839,\n\t\t\t\t\"y\": 0.659461\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.212902,\n\t\t\t\t\"y\": 0.655728\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.203848,\n\t\t\t\t\"y\": 0.652287\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.194687,\n\t\t\t\t\"y\": 0.649147\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.185427,\n\t\t\t\t\"y\": 0.646313\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.176076,\n\t\t\t\t\"y\": 0.643795\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.166645,\n\t\t\t\t\"y\": 0.6416\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.157143,\n\t\t\t\t\"y\": 0.639737\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.14758,\n\t\t\t\t\"y\": 0.638215\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.137968,\n\t\t\t\t\"y\": 0.637045\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.742417,\n\t\t\t\t\"y\": 0.361638\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.733497,\n\t\t\t\t\"y\": 0.352297\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.719736,\n\t\t\t\t\"y\": 0.351124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.706177,\n\t\t\t\t\"y\": 0.353963\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.69355,\n\t\t\t\t\"y\": 0.359712\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.681831,\n\t\t\t\t\"y\": 0.367167\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.670695,\n\t\t\t\t\"y\": 0.375481\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.65983,\n\t\t\t\t\"y\": 0.384147\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.648979,\n\t\t\t\t\"y\": 0.392832\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.63794,\n\t\t\t\t\"y\": 0.401275\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.626692,\n\t\t\t\t\"y\": 0.409437\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.615372,\n\t\t\t\t\"y\": 0.417498\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.604137,\n\t\t\t\t\"y\": 0.425678\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593264,\n\t\t\t\t\"y\": 0.434331\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.583686,\n\t\t\t\t\"y\": 0.44436\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.581571,\n\t\t\t\t\"y\": 0.457468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.590403,\n\t\t\t\t\"y\": 0.46805\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.601399,\n\t\t\t\t\"y\": 0.476544\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.612668,\n\t\t\t\t\"y\": 0.484677\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.624097,\n\t\t\t\t\"y\": 0.492582\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.635698,\n\t\t\t\t\"y\": 0.500232\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.647473,\n\t\t\t\t\"y\": 0.50761\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.65942,\n\t\t\t\t\"y\": 0.514704\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.671537,\n\t\t\t\t\"y\": 0.521502\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.68383,\n\t\t\t\t\"y\": 0.527978\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.696321,\n\t\t\t\t\"y\": 0.534059\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.70906,\n\t\t\t\t\"y\": 0.539596\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.722142,\n\t\t\t\t\"y\": 0.544254\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.735726,\n\t\t\t\t\"y\": 0.547007\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.748157,\n\t\t\t\t\"y\": 0.542537\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.746338,\n\t\t\t\t\"y\": 0.52937\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.737537,\n\t\t\t\t\"y\": 0.518663\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.726788,\n\t\t\t\t\"y\": 0.509869\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71525,\n\t\t\t\t\"y\": 0.502128\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.703358,\n\t\t\t\t\"y\": 0.494943\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.691282,\n\t\t\t\t\"y\": 0.488071\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.67912,\n\t\t\t\t\"y\": 0.481351\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.666956,\n\t\t\t\t\"y\": 0.474636\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654915,\n\t\t\t\t\"y\": 0.467704\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.643401,\n\t\t\t\t\"y\": 0.459942\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.636968,\n\t\t\t\t\"y\": 0.448436\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.645452,\n\t\t\t\t\"y\": 0.437711\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.656667,\n\t\t\t\t\"y\": 0.429511\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.668288,\n\t\t\t\t\"y\": 0.421892\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.680005,\n\t\t\t\t\"y\": 0.414422\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.691711,\n\t\t\t\t\"y\": 0.406935\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.703332,\n\t\t\t\t\"y\": 0.399315\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.714775,\n\t\t\t\t\"y\": 0.39143\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.72587,\n\t\t\t\t\"y\": 0.383064\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.736135,\n\t\t\t\t\"y\": 0.37371\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.250774,\n\t\t\t\t\"y\": 0.367467\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.259885,\n\t\t\t\t\"y\": 0.358869\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.273621,\n\t\t\t\t\"y\": 0.360359\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.286842,\n\t\t\t\t\"y\": 0.364595\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.299677,\n\t\t\t\t\"y\": 0.369905\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.31224,\n\t\t\t\t\"y\": 0.375835\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.324591,\n\t\t\t\t\"y\": 0.382196\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.336763,\n\t\t\t\t\"y\": 0.388897\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.348764,\n\t\t\t\t\"y\": 0.395899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.360594,\n\t\t\t\t\"y\": 0.403188\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.37225,\n\t\t\t\t\"y\": 0.410753\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.383733,\n\t\t\t\t\"y\": 0.41858\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.39505,\n\t\t\t\t\"y\": 0.426645\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406189,\n\t\t\t\t\"y\": 0.434955\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.416221,\n\t\t\t\t\"y\": 0.444521\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.418425,\n\t\t\t\t\"y\": 0.457573\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.410002,\n\t\t\t\t\"y\": 0.468507\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.399364,\n\t\t\t\t\"y\": 0.477444\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.388203,\n\t\t\t\t\"y\": 0.485723\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.37689,\n\t\t\t\t\"y\": 0.493795\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.365604,\n\t\t\t\t\"y\": 0.501905\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.354488,\n\t\t\t\t\"y\": 0.510245\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.343596,\n\t\t\t\t\"y\": 0.518878\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.33276,\n\t\t\t\t\"y\": 0.527582\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.321741,\n\t\t\t\t\"y\": 0.536051\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.310243,\n\t\t\t\t\"y\": 0.543849\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.297932,\n\t\t\t\t\"y\": 0.55026\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.284627,\n\t\t\t\t\"y\": 0.554132\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.270794,\n\t\t\t\t\"y\": 0.554428\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.258766,\n\t\t\t\t\"y\": 0.548329\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.261055,\n\t\t\t\t\"y\": 0.53546\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.270747,\n\t\t\t\t\"y\": 0.525534\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.281664,\n\t\t\t\t\"y\": 0.516937\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.293021,\n\t\t\t\t\"y\": 0.50893\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.304597,\n\t\t\t\t\"y\": 0.501242\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.316285,\n\t\t\t\t\"y\": 0.493726\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.328008,\n\t\t\t\t\"y\": 0.486264\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.339676,\n\t\t\t\t\"y\": 0.478718\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.351086,\n\t\t\t\t\"y\": 0.470789\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.361187,\n\t\t\t\t\"y\": 0.461317\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.35984,\n\t\t\t\t\"y\": 0.448815\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.348829,\n\t\t\t\t\"y\": 0.440391\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.336877,\n\t\t\t\t\"y\": 0.433306\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.324734,\n\t\t\t\t\"y\": 0.426552\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.312563,\n\t\t\t\t\"y\": 0.419851\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.30045,\n\t\t\t\t\"y\": 0.413043\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.288486,\n\t\t\t\t\"y\": 0.405978\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.276808,\n\t\t\t\t\"y\": 0.398449\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.265728,\n\t\t\t\t\"y\": 0.39007\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.256107,\n\t\t\t\t\"y\": 0.380073\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.437209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 3.4834e-10\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.437209\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.390762,\n\t\t\t\t\"y\": 0.196801\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.394858,\n\t\t\t\t\"y\": 0.19609\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.403863,\n\t\t\t\t\"y\": 0.200954\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.41322,\n\t\t\t\t\"y\": 0.205103\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.422802,\n\t\t\t\t\"y\": 0.208699\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.432546,\n\t\t\t\t\"y\": 0.211831\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.442414,\n\t\t\t\t\"y\": 0.214546\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.45238,\n\t\t\t\t\"y\": 0.216872\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.462428,\n\t\t\t\t\"y\": 0.218816\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.472543,\n\t\t\t\t\"y\": 0.220369\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.482713,\n\t\t\t\t\"y\": 0.221505\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.492924,\n\t\t\t\t\"y\": 0.222174\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.503156,\n\t\t\t\t\"y\": 0.22229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.513378,\n\t\t\t\t\"y\": 0.22182\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.523565,\n\t\t\t\t\"y\": 0.220856\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.533703,\n\t\t\t\t\"y\": 0.219458\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.543778,\n\t\t\t\t\"y\": 0.217662\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.553777,\n\t\t\t\t\"y\": 0.215483\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.563685,\n\t\t\t\t\"y\": 0.212918\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.57348,\n\t\t\t\t\"y\": 0.209951\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.583131,\n\t\t\t\t\"y\": 0.206541\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.592584,\n\t\t\t\t\"y\": 0.202617\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.601745,\n\t\t\t\t\"y\": 0.198054\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.610163,\n\t\t\t\t\"y\": 0.192984\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.607215,\n\t\t\t\t\"y\": 0.202789\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.602708,\n\t\t\t\t\"y\": 0.211984\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.596939,\n\t\t\t\t\"y\": 0.220445\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.590165,\n\t\t\t\t\"y\": 0.228123\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.582591,\n\t\t\t\t\"y\": 0.235012\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.574377,\n\t\t\t\t\"y\": 0.241123\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.565651,\n\t\t\t\t\"y\": 0.246472\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.55651,\n\t\t\t\t\"y\": 0.251078\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.547037,\n\t\t\t\t\"y\": 0.25495\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.537299,\n\t\t\t\t\"y\": 0.258097\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.527356,\n\t\t\t\t\"y\": 0.260515\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.517264,\n\t\t\t\t\"y\": 0.262198\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.507074,\n\t\t\t\t\"y\": 0.263128\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.496844,\n\t\t\t\t\"y\": 0.26328\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.486633,\n\t\t\t\t\"y\": 0.262645\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.476496,\n\t\t\t\t\"y\": 0.261248\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.46649,\n\t\t\t\t\"y\": 0.25911\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.456667,\n\t\t\t\t\"y\": 0.256242\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.447085,\n\t\t\t\t\"y\": 0.252648\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.437808,\n\t\t\t\t\"y\": 0.248324\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.428912,\n\t\t\t\t\"y\": 0.243262\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.420489,\n\t\t\t\t\"y\": 0.237444\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.412653,\n\t\t\t\t\"y\": 0.230856\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.40555,\n\t\t\t\t\"y\": 0.223481\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.399368,\n\t\t\t\t\"y\": 0.215317\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.394344,\n\t\t\t\t\"y\": 0.206394\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t]\n\t},\n\t\"tired_face\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.797736,\n\t\t\t\t\"y\": 0.813282\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.79004,\n\t\t\t\t\"y\": 0.80881\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.781166,\n\t\t\t\t\"y\": 0.804936\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.771989,\n\t\t\t\t\"y\": 0.801852\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.762586,\n\t\t\t\t\"y\": 0.799547\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.753028,\n\t\t\t\t\"y\": 0.798008\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.74338,\n\t\t\t\t\"y\": 0.797214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.733699,\n\t\t\t\t\"y\": 0.797146\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.724039,\n\t\t\t\t\"y\": 0.79778\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.714447,\n\t\t\t\t\"y\": 0.799094\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.704969,\n\t\t\t\t\"y\": 0.801067\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.695645,\n\t\t\t\t\"y\": 0.803678\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.686515,\n\t\t\t\t\"y\": 0.806904\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.677617,\n\t\t\t\t\"y\": 0.810727\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.668989,\n\t\t\t\t\"y\": 0.815128\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.660669,\n\t\t\t\t\"y\": 0.820087\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.652694,\n\t\t\t\t\"y\": 0.825587\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.645104,\n\t\t\t\t\"y\": 0.831608\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.637939,\n\t\t\t\t\"y\": 0.838131\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.631241,\n\t\t\t\t\"y\": 0.845135\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.625056,\n\t\t\t\t\"y\": 0.852597\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.61943,\n\t\t\t\t\"y\": 0.860491\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.614415,\n\t\t\t\t\"y\": 0.868787\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.610061,\n\t\t\t\t\"y\": 0.877451\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606424,\n\t\t\t\t\"y\": 0.886439\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.603557,\n\t\t\t\t\"y\": 0.895703\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.601516,\n\t\t\t\t\"y\": 0.905184\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.602642,\n\t\t\t\t\"y\": 0.909516\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.60926,\n\t\t\t\t\"y\": 0.902434\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.616116,\n\t\t\t\t\"y\": 0.895584\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.623199,\n\t\t\t\t\"y\": 0.888969\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.630496,\n\t\t\t\t\"y\": 0.882592\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.637998,\n\t\t\t\t\"y\": 0.876459\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.645695,\n\t\t\t\t\"y\": 0.870572\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.653576,\n\t\t\t\t\"y\": 0.864936\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.661633,\n\t\t\t\t\"y\": 0.859556\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.669857,\n\t\t\t\t\"y\": 0.854435\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.678239,\n\t\t\t\t\"y\": 0.849579\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.686771,\n\t\t\t\t\"y\": 0.844992\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.695445,\n\t\t\t\t\"y\": 0.84068\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.704252,\n\t\t\t\t\"y\": 0.836648\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.713183,\n\t\t\t\t\"y\": 0.832902\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.722232,\n\t\t\t\t\"y\": 0.829449\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.731388,\n\t\t\t\t\"y\": 0.826295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.740644,\n\t\t\t\t\"y\": 0.823448\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.749991,\n\t\t\t\t\"y\": 0.820915\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.759419,\n\t\t\t\t\"y\": 0.818706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.768918,\n\t\t\t\t\"y\": 0.816828\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.778479,\n\t\t\t\t\"y\": 0.815291\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.788088,\n\t\t\t\t\"y\": 0.814105\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.202264,\n\t\t\t\t\"y\": 0.813282\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.20996,\n\t\t\t\t\"y\": 0.80881\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.218834,\n\t\t\t\t\"y\": 0.804936\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.228011,\n\t\t\t\t\"y\": 0.801852\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.237414,\n\t\t\t\t\"y\": 0.799547\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.246972,\n\t\t\t\t\"y\": 0.798008\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.25662,\n\t\t\t\t\"y\": 0.797214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.266301,\n\t\t\t\t\"y\": 0.797146\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.275961,\n\t\t\t\t\"y\": 0.79778\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.285553,\n\t\t\t\t\"y\": 0.799094\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.295031,\n\t\t\t\t\"y\": 0.801067\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.304355,\n\t\t\t\t\"y\": 0.803678\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.313485,\n\t\t\t\t\"y\": 0.806904\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.322383,\n\t\t\t\t\"y\": 0.810727\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.331011,\n\t\t\t\t\"y\": 0.815128\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.339331,\n\t\t\t\t\"y\": 0.820087\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.347306,\n\t\t\t\t\"y\": 0.825587\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.354896,\n\t\t\t\t\"y\": 0.831608\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.362061,\n\t\t\t\t\"y\": 0.838131\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.368759,\n\t\t\t\t\"y\": 0.845135\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.374944,\n\t\t\t\t\"y\": 0.852597\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.38057,\n\t\t\t\t\"y\": 0.860491\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.385585,\n\t\t\t\t\"y\": 0.868787\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.389939,\n\t\t\t\t\"y\": 0.877451\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.393576,\n\t\t\t\t\"y\": 0.886439\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.396443,\n\t\t\t\t\"y\": 0.895703\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.398484,\n\t\t\t\t\"y\": 0.905184\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.397358,\n\t\t\t\t\"y\": 0.909516\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.39074,\n\t\t\t\t\"y\": 0.902434\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.383884,\n\t\t\t\t\"y\": 0.895584\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.376801,\n\t\t\t\t\"y\": 0.888969\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.369504,\n\t\t\t\t\"y\": 0.882592\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.362002,\n\t\t\t\t\"y\": 0.876459\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.354305,\n\t\t\t\t\"y\": 0.870572\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.346424,\n\t\t\t\t\"y\": 0.864936\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.338367,\n\t\t\t\t\"y\": 0.859556\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.330143,\n\t\t\t\t\"y\": 0.854435\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.321761,\n\t\t\t\t\"y\": 0.849579\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.313229,\n\t\t\t\t\"y\": 0.844992\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.304555,\n\t\t\t\t\"y\": 0.84068\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.295748,\n\t\t\t\t\"y\": 0.836648\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.286817,\n\t\t\t\t\"y\": 0.832902\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.277768,\n\t\t\t\t\"y\": 0.829449\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.268612,\n\t\t\t\t\"y\": 0.826295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.259356,\n\t\t\t\t\"y\": 0.823448\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.250009,\n\t\t\t\t\"y\": 0.820915\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.240581,\n\t\t\t\t\"y\": 0.818706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.231082,\n\t\t\t\t\"y\": 0.816828\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.221521,\n\t\t\t\t\"y\": 0.815291\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.211912,\n\t\t\t\t\"y\": 0.814105\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.742417,\n\t\t\t\t\"y\": 0.543066\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.733497,\n\t\t\t\t\"y\": 0.533724\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.719736,\n\t\t\t\t\"y\": 0.532552\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.706177,\n\t\t\t\t\"y\": 0.53539\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.69355,\n\t\t\t\t\"y\": 0.54114\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.681831,\n\t\t\t\t\"y\": 0.548595\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.670695,\n\t\t\t\t\"y\": 0.556908\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.65983,\n\t\t\t\t\"y\": 0.565575\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.648979,\n\t\t\t\t\"y\": 0.57426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.63794,\n\t\t\t\t\"y\": 0.582703\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.626692,\n\t\t\t\t\"y\": 0.590865\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.615372,\n\t\t\t\t\"y\": 0.598926\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.604137,\n\t\t\t\t\"y\": 0.607106\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593264,\n\t\t\t\t\"y\": 0.615759\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.583686,\n\t\t\t\t\"y\": 0.625788\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.581571,\n\t\t\t\t\"y\": 0.638896\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.590403,\n\t\t\t\t\"y\": 0.649477\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.601399,\n\t\t\t\t\"y\": 0.657972\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.612668,\n\t\t\t\t\"y\": 0.666105\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.624097,\n\t\t\t\t\"y\": 0.67401\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.635698,\n\t\t\t\t\"y\": 0.68166\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.647473,\n\t\t\t\t\"y\": 0.689038\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.65942,\n\t\t\t\t\"y\": 0.696132\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.671537,\n\t\t\t\t\"y\": 0.70293\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.68383,\n\t\t\t\t\"y\": 0.709406\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.696321,\n\t\t\t\t\"y\": 0.715487\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.70906,\n\t\t\t\t\"y\": 0.721023\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.722142,\n\t\t\t\t\"y\": 0.725682\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.735726,\n\t\t\t\t\"y\": 0.728435\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.748157,\n\t\t\t\t\"y\": 0.723965\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.746338,\n\t\t\t\t\"y\": 0.710798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.737537,\n\t\t\t\t\"y\": 0.700091\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.726788,\n\t\t\t\t\"y\": 0.691296\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71525,\n\t\t\t\t\"y\": 0.683555\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.703358,\n\t\t\t\t\"y\": 0.676371\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.691282,\n\t\t\t\t\"y\": 0.669498\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.67912,\n\t\t\t\t\"y\": 0.662779\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.666956,\n\t\t\t\t\"y\": 0.656063\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654915,\n\t\t\t\t\"y\": 0.649132\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.643401,\n\t\t\t\t\"y\": 0.64137\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.636968,\n\t\t\t\t\"y\": 0.629864\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.645452,\n\t\t\t\t\"y\": 0.619139\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.656667,\n\t\t\t\t\"y\": 0.610939\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.668288,\n\t\t\t\t\"y\": 0.60332\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.680005,\n\t\t\t\t\"y\": 0.59585\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.691711,\n\t\t\t\t\"y\": 0.588363\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.703332,\n\t\t\t\t\"y\": 0.580743\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.714775,\n\t\t\t\t\"y\": 0.572858\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.72587,\n\t\t\t\t\"y\": 0.564492\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.736135,\n\t\t\t\t\"y\": 0.555137\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.250774,\n\t\t\t\t\"y\": 0.548895\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.259885,\n\t\t\t\t\"y\": 0.540296\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.273621,\n\t\t\t\t\"y\": 0.541787\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.286842,\n\t\t\t\t\"y\": 0.546023\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.299677,\n\t\t\t\t\"y\": 0.551333\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.31224,\n\t\t\t\t\"y\": 0.557263\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.324591,\n\t\t\t\t\"y\": 0.563624\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.336763,\n\t\t\t\t\"y\": 0.570325\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.348764,\n\t\t\t\t\"y\": 0.577327\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.360594,\n\t\t\t\t\"y\": 0.584616\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.37225,\n\t\t\t\t\"y\": 0.592181\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.383733,\n\t\t\t\t\"y\": 0.600007\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.39505,\n\t\t\t\t\"y\": 0.608073\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406189,\n\t\t\t\t\"y\": 0.616383\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.416221,\n\t\t\t\t\"y\": 0.625949\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.418425,\n\t\t\t\t\"y\": 0.639\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.410002,\n\t\t\t\t\"y\": 0.649935\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.399364,\n\t\t\t\t\"y\": 0.658872\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.388203,\n\t\t\t\t\"y\": 0.667151\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.37689,\n\t\t\t\t\"y\": 0.675223\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.365604,\n\t\t\t\t\"y\": 0.683333\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.354488,\n\t\t\t\t\"y\": 0.691673\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.343596,\n\t\t\t\t\"y\": 0.700306\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.33276,\n\t\t\t\t\"y\": 0.70901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.321741,\n\t\t\t\t\"y\": 0.717478\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.310243,\n\t\t\t\t\"y\": 0.725276\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.297932,\n\t\t\t\t\"y\": 0.731688\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.284627,\n\t\t\t\t\"y\": 0.73556\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.270794,\n\t\t\t\t\"y\": 0.735856\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.258766,\n\t\t\t\t\"y\": 0.729757\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.261055,\n\t\t\t\t\"y\": 0.716888\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.270747,\n\t\t\t\t\"y\": 0.706962\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.281664,\n\t\t\t\t\"y\": 0.698364\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.293021,\n\t\t\t\t\"y\": 0.690357\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.304597,\n\t\t\t\t\"y\": 0.68267\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.316285,\n\t\t\t\t\"y\": 0.675154\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.328008,\n\t\t\t\t\"y\": 0.667692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.339676,\n\t\t\t\t\"y\": 0.660146\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.351086,\n\t\t\t\t\"y\": 0.652217\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.361187,\n\t\t\t\t\"y\": 0.642744\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.35984,\n\t\t\t\t\"y\": 0.630242\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.348829,\n\t\t\t\t\"y\": 0.621819\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.336877,\n\t\t\t\t\"y\": 0.614733\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.324734,\n\t\t\t\t\"y\": 0.60798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.312563,\n\t\t\t\t\"y\": 0.601279\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.30045,\n\t\t\t\t\"y\": 0.594471\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.288486,\n\t\t\t\t\"y\": 0.587406\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.276808,\n\t\t\t\t\"y\": 0.579877\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.265728,\n\t\t\t\t\"y\": 0.571498\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.256107,\n\t\t\t\t\"y\": 0.561501\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.437209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 3.4834e-10\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.437209\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.217437,\n\t\t\t\t\"y\": 0.209984\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.24475,\n\t\t\t\t\"y\": 0.219461\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.27269,\n\t\t\t\t\"y\": 0.226911\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.300941,\n\t\t\t\t\"y\": 0.233078\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.329388,\n\t\t\t\t\"y\": 0.238273\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.357971,\n\t\t\t\t\"y\": 0.242648\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.386658,\n\t\t\t\t\"y\": 0.24628\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.415427,\n\t\t\t\t\"y\": 0.249195\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.44426,\n\t\t\t\t\"y\": 0.251375\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.473142,\n\t\t\t\t\"y\": 0.252758\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.502053,\n\t\t\t\t\"y\": 0.253211\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.530961,\n\t\t\t\t\"y\": 0.252614\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.559838,\n\t\t\t\t\"y\": 0.251112\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.588663,\n\t\t\t\t\"y\": 0.248825\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.617421,\n\t\t\t\t\"y\": 0.245808\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.646095,\n\t\t\t\t\"y\": 0.242073\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.674661,\n\t\t\t\t\"y\": 0.237587\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.703084,\n\t\t\t\t\"y\": 0.232267\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.731301,\n\t\t\t\t\"y\": 0.225942\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.759179,\n\t\t\t\t\"y\": 0.218266\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.782531,\n\t\t\t\t\"y\": 0.214098\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.780488,\n\t\t\t\t\"y\": 0.242984\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.775292,\n\t\t\t\t\"y\": 0.271471\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767018,\n\t\t\t\t\"y\": 0.299218\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.755785,\n\t\t\t\t\"y\": 0.3259\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.741748,\n\t\t\t\t\"y\": 0.351214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.725095,\n\t\t\t\t\"y\": 0.374884\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.706043,\n\t\t\t\t\"y\": 0.396661\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.684827,\n\t\t\t\t\"y\": 0.416328\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.661699,\n\t\t\t\t\"y\": 0.433697\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.636924,\n\t\t\t\t\"y\": 0.448612\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.610771,\n\t\t\t\t\"y\": 0.460945\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.583518,\n\t\t\t\t\"y\": 0.470592\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.555443,\n\t\t\t\t\"y\": 0.477478\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.526825,\n\t\t\t\t\"y\": 0.481548\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.497947,\n\t\t\t\t\"y\": 0.482773\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.469089,\n\t\t\t\t\"y\": 0.481143\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.440531,\n\t\t\t\t\"y\": 0.47667\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.412555,\n\t\t\t\t\"y\": 0.469389\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.385442,\n\t\t\t\t\"y\": 0.459355\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.359468,\n\t\t\t\t\"y\": 0.446649\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.33491,\n\t\t\t\t\"y\": 0.431377\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.312038,\n\t\t\t\t\"y\": 0.413671\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.291114,\n\t\t\t\t\"y\": 0.393692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.272388,\n\t\t\t\t\"y\": 0.371633\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.256095,\n\t\t\t\t\"y\": 0.347714\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.242445,\n\t\t\t\t\"y\": 0.322187\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.231623,\n\t\t\t\t\"y\": 0.295335\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.223781,\n\t\t\t\t\"y\": 0.267463\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.219029,\n\t\t\t\t\"y\": 0.238898\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t]\n\t},\n\t\"weary\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.788689,\n\t\t\t\t\"y\": 0.742911\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.777843,\n\t\t\t\t\"y\": 0.747113\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767161,\n\t\t\t\t\"y\": 0.751718\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.756654,\n\t\t\t\t\"y\": 0.756712\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.746331,\n\t\t\t\t\"y\": 0.762079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.736203,\n\t\t\t\t\"y\": 0.767804\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.726276,\n\t\t\t\t\"y\": 0.773874\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.716559,\n\t\t\t\t\"y\": 0.780276\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.707061,\n\t\t\t\t\"y\": 0.786998\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.697787,\n\t\t\t\t\"y\": 0.794029\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.688746,\n\t\t\t\t\"y\": 0.801358\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.679945,\n\t\t\t\t\"y\": 0.808975\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.671392,\n\t\t\t\t\"y\": 0.81687\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.663095,\n\t\t\t\t\"y\": 0.825033\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.65506,\n\t\t\t\t\"y\": 0.833457\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.647296,\n\t\t\t\t\"y\": 0.842133\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.639812,\n\t\t\t\t\"y\": 0.851052\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.632617,\n\t\t\t\t\"y\": 0.860205\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.625718,\n\t\t\t\t\"y\": 0.869586\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.619127,\n\t\t\t\t\"y\": 0.879186\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.612854,\n\t\t\t\t\"y\": 0.888997\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606908,\n\t\t\t\t\"y\": 0.899012\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.601302,\n\t\t\t\t\"y\": 0.90922\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.596049,\n\t\t\t\t\"y\": 0.919616\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593295,\n\t\t\t\t\"y\": 0.915003\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.592467,\n\t\t\t\t\"y\": 0.903384\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.592662,\n\t\t\t\t\"y\": 0.891736\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593839,\n\t\t\t\t\"y\": 0.880147\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.595951,\n\t\t\t\t\"y\": 0.868691\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.598949,\n\t\t\t\t\"y\": 0.857435\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.602785,\n\t\t\t\t\"y\": 0.846438\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.607412,\n\t\t\t\t\"y\": 0.835749\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.612784,\n\t\t\t\t\"y\": 0.825417\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.618856,\n\t\t\t\t\"y\": 0.815481\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.625587,\n\t\t\t\t\"y\": 0.805981\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.632936,\n\t\t\t\t\"y\": 0.796953\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.640865,\n\t\t\t\t\"y\": 0.788431\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.649335,\n\t\t\t\t\"y\": 0.78045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.658311,\n\t\t\t\t\"y\": 0.773043\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.667755,\n\t\t\t\t\"y\": 0.766246\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.677629,\n\t\t\t\t\"y\": 0.760095\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.687896,\n\t\t\t\t\"y\": 0.754625\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.698514,\n\t\t\t\t\"y\": 0.749877\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.709439,\n\t\t\t\t\"y\": 0.74589\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.720624,\n\t\t\t\t\"y\": 0.742707\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.732014,\n\t\t\t\t\"y\": 0.74037\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.743551,\n\t\t\t\t\"y\": 0.738924\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.755166,\n\t\t\t\t\"y\": 0.738411\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.766783,\n\t\t\t\t\"y\": 0.738874\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.778315,\n\t\t\t\t\"y\": 0.74035\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.211311,\n\t\t\t\t\"y\": 0.742911\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.222157,\n\t\t\t\t\"y\": 0.747113\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232839,\n\t\t\t\t\"y\": 0.751718\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.243346,\n\t\t\t\t\"y\": 0.756712\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.253669,\n\t\t\t\t\"y\": 0.762079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.263797,\n\t\t\t\t\"y\": 0.767804\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.273724,\n\t\t\t\t\"y\": 0.773874\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.283441,\n\t\t\t\t\"y\": 0.780276\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.292939,\n\t\t\t\t\"y\": 0.786998\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.302213,\n\t\t\t\t\"y\": 0.794029\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.311254,\n\t\t\t\t\"y\": 0.801358\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.320055,\n\t\t\t\t\"y\": 0.808975\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.328608,\n\t\t\t\t\"y\": 0.81687\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.336905,\n\t\t\t\t\"y\": 0.825033\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.34494,\n\t\t\t\t\"y\": 0.833457\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.352704,\n\t\t\t\t\"y\": 0.842133\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.360188,\n\t\t\t\t\"y\": 0.851052\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.367383,\n\t\t\t\t\"y\": 0.860205\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.374282,\n\t\t\t\t\"y\": 0.869586\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.380873,\n\t\t\t\t\"y\": 0.879186\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.387146,\n\t\t\t\t\"y\": 0.888997\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.393092,\n\t\t\t\t\"y\": 0.899012\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.398698,\n\t\t\t\t\"y\": 0.90922\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.403951,\n\t\t\t\t\"y\": 0.919616\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406705,\n\t\t\t\t\"y\": 0.915003\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.407533,\n\t\t\t\t\"y\": 0.903384\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.407338,\n\t\t\t\t\"y\": 0.891736\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406161,\n\t\t\t\t\"y\": 0.880147\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.404049,\n\t\t\t\t\"y\": 0.868691\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.401051,\n\t\t\t\t\"y\": 0.857435\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.397215,\n\t\t\t\t\"y\": 0.846438\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.392588,\n\t\t\t\t\"y\": 0.835749\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.387216,\n\t\t\t\t\"y\": 0.825417\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.381144,\n\t\t\t\t\"y\": 0.815481\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.374413,\n\t\t\t\t\"y\": 0.805981\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.367064,\n\t\t\t\t\"y\": 0.796953\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.359135,\n\t\t\t\t\"y\": 0.788431\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.350665,\n\t\t\t\t\"y\": 0.78045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.341689,\n\t\t\t\t\"y\": 0.773043\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.332245,\n\t\t\t\t\"y\": 0.766246\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.322371,\n\t\t\t\t\"y\": 0.760095\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.312104,\n\t\t\t\t\"y\": 0.754625\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.301486,\n\t\t\t\t\"y\": 0.749877\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.290561,\n\t\t\t\t\"y\": 0.74589\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.279376,\n\t\t\t\t\"y\": 0.742707\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.267986,\n\t\t\t\t\"y\": 0.74037\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.256449,\n\t\t\t\t\"y\": 0.738924\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.244834,\n\t\t\t\t\"y\": 0.738411\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.233217,\n\t\t\t\t\"y\": 0.738874\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.221685,\n\t\t\t\t\"y\": 0.74035\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.801975,\n\t\t\t\t\"y\": 0.622889\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.795827,\n\t\t\t\t\"y\": 0.612045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.78769,\n\t\t\t\t\"y\": 0.602604\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.777996,\n\t\t\t\t\"y\": 0.594771\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767183,\n\t\t\t\t\"y\": 0.588577\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.755614,\n\t\t\t\t\"y\": 0.583941\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.743569,\n\t\t\t\t\"y\": 0.580739\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.731252,\n\t\t\t\t\"y\": 0.578837\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.718809,\n\t\t\t\t\"y\": 0.578112\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.70635,\n\t\t\t\t\"y\": 0.578458\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.693956,\n\t\t\t\t\"y\": 0.579788\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.681693,\n\t\t\t\t\"y\": 0.582028\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.669616,\n\t\t\t\t\"y\": 0.585124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.657775,\n\t\t\t\t\"y\": 0.589029\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.646218,\n\t\t\t\t\"y\": 0.593709\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.634991,\n\t\t\t\t\"y\": 0.599138\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.624147,\n\t\t\t\t\"y\": 0.605299\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.613744,\n\t\t\t\t\"y\": 0.612179\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.603848,\n\t\t\t\t\"y\": 0.619774\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.594538,\n\t\t\t\t\"y\": 0.628079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.585914,\n\t\t\t\t\"y\": 0.637096\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.578096,\n\t\t\t\t\"y\": 0.646822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.571236,\n\t\t\t\t\"y\": 0.657248\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.565527,\n\t\t\t\t\"y\": 0.668346\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.561205,\n\t\t\t\t\"y\": 0.680054\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.558552,\n\t\t\t\t\"y\": 0.692249\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.557874,\n\t\t\t\t\"y\": 0.704708\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.559439,\n\t\t\t\t\"y\": 0.717083\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.563313,\n\t\t\t\t\"y\": 0.728041\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.568858,\n\t\t\t\t\"y\": 0.716909\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.576627,\n\t\t\t\t\"y\": 0.707151\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.585416,\n\t\t\t\t\"y\": 0.698296\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.594824,\n\t\t\t\t\"y\": 0.690101\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.604667,\n\t\t\t\t\"y\": 0.682435\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.614847,\n\t\t\t\t\"y\": 0.675224\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.625304,\n\t\t\t\t\"y\": 0.668423\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.636003,\n\t\t\t\t\"y\": 0.662009\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.646918,\n\t\t\t\t\"y\": 0.655973\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.658036,\n\t\t\t\t\"y\": 0.650321\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.669349,\n\t\t\t\t\"y\": 0.645072\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.68085,\n\t\t\t\t\"y\": 0.64025\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.692516,\n\t\t\t\t\"y\": 0.635844\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.704328,\n\t\t\t\t\"y\": 0.631846\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.716272,\n\t\t\t\t\"y\": 0.628265\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.728339,\n\t\t\t\t\"y\": 0.625124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.74052,\n\t\t\t\t\"y\": 0.622467\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.75281,\n\t\t\t\t\"y\": 0.620369\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.765196,\n\t\t\t\t\"y\": 0.618956\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.77765,\n\t\t\t\t\"y\": 0.618458\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.790075,\n\t\t\t\t\"y\": 0.619349\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.198025,\n\t\t\t\t\"y\": 0.622889\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.204173,\n\t\t\t\t\"y\": 0.612045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.21231,\n\t\t\t\t\"y\": 0.602604\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.222004,\n\t\t\t\t\"y\": 0.594771\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232817,\n\t\t\t\t\"y\": 0.588577\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.244386,\n\t\t\t\t\"y\": 0.583941\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.256431,\n\t\t\t\t\"y\": 0.580739\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.268748,\n\t\t\t\t\"y\": 0.578837\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.281191,\n\t\t\t\t\"y\": 0.578112\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.29365,\n\t\t\t\t\"y\": 0.578458\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.306044,\n\t\t\t\t\"y\": 0.579788\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.318307,\n\t\t\t\t\"y\": 0.582028\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.330384,\n\t\t\t\t\"y\": 0.585124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.342225,\n\t\t\t\t\"y\": 0.589029\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.353782,\n\t\t\t\t\"y\": 0.593709\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.365009,\n\t\t\t\t\"y\": 0.599138\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.375853,\n\t\t\t\t\"y\": 0.605299\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.386256,\n\t\t\t\t\"y\": 0.612179\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.396152,\n\t\t\t\t\"y\": 0.619774\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.405462,\n\t\t\t\t\"y\": 0.628079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.414086,\n\t\t\t\t\"y\": 0.637096\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.421904,\n\t\t\t\t\"y\": 0.646822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.428764,\n\t\t\t\t\"y\": 0.657248\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.434473,\n\t\t\t\t\"y\": 0.668346\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.438795,\n\t\t\t\t\"y\": 0.680054\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.441448,\n\t\t\t\t\"y\": 0.692249\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.442126,\n\t\t\t\t\"y\": 0.704708\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.440561,\n\t\t\t\t\"y\": 0.717083\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.436687,\n\t\t\t\t\"y\": 0.728041\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.431142,\n\t\t\t\t\"y\": 0.716909\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.423373,\n\t\t\t\t\"y\": 0.707151\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.414584,\n\t\t\t\t\"y\": 0.698296\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.405176,\n\t\t\t\t\"y\": 0.690101\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.395333,\n\t\t\t\t\"y\": 0.682435\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.385153,\n\t\t\t\t\"y\": 0.675224\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.374696,\n\t\t\t\t\"y\": 0.668423\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.363997,\n\t\t\t\t\"y\": 0.662009\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.353082,\n\t\t\t\t\"y\": 0.655973\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.341964,\n\t\t\t\t\"y\": 0.650321\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.330651,\n\t\t\t\t\"y\": 0.645072\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.31915,\n\t\t\t\t\"y\": 0.64025\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.307484,\n\t\t\t\t\"y\": 0.635844\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.295672,\n\t\t\t\t\"y\": 0.631846\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.283728,\n\t\t\t\t\"y\": 0.628265\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.271661,\n\t\t\t\t\"y\": 0.625124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.25948,\n\t\t\t\t\"y\": 0.622467\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.24719,\n\t\t\t\t\"y\": 0.620369\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.234804,\n\t\t\t\t\"y\": 0.618956\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.22235,\n\t\t\t\t\"y\": 0.618458\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.209925,\n\t\t\t\t\"y\": 0.619349\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.437209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 3.4834e-10\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.437209\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.217437,\n\t\t\t\t\"y\": 0.209984\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.24475,\n\t\t\t\t\"y\": 0.219461\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.27269,\n\t\t\t\t\"y\": 0.226911\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.300941,\n\t\t\t\t\"y\": 0.233078\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.329388,\n\t\t\t\t\"y\": 0.238273\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.357971,\n\t\t\t\t\"y\": 0.242648\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.386658,\n\t\t\t\t\"y\": 0.24628\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.415427,\n\t\t\t\t\"y\": 0.249195\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.44426,\n\t\t\t\t\"y\": 0.251375\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.473142,\n\t\t\t\t\"y\": 0.252758\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.502053,\n\t\t\t\t\"y\": 0.253211\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.530961,\n\t\t\t\t\"y\": 0.252614\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.559838,\n\t\t\t\t\"y\": 0.251112\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.588663,\n\t\t\t\t\"y\": 0.248825\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.617421,\n\t\t\t\t\"y\": 0.245808\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.646095,\n\t\t\t\t\"y\": 0.242073\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.674661,\n\t\t\t\t\"y\": 0.237587\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.703084,\n\t\t\t\t\"y\": 0.232267\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.731301,\n\t\t\t\t\"y\": 0.225942\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.759179,\n\t\t\t\t\"y\": 0.218266\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.782531,\n\t\t\t\t\"y\": 0.214098\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.780488,\n\t\t\t\t\"y\": 0.242984\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.775292,\n\t\t\t\t\"y\": 0.271471\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767018,\n\t\t\t\t\"y\": 0.299218\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.755785,\n\t\t\t\t\"y\": 0.3259\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.741748,\n\t\t\t\t\"y\": 0.351214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.725095,\n\t\t\t\t\"y\": 0.374884\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.706043,\n\t\t\t\t\"y\": 0.396661\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.684827,\n\t\t\t\t\"y\": 0.416328\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.661699,\n\t\t\t\t\"y\": 0.433697\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.636924,\n\t\t\t\t\"y\": 0.448612\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.610771,\n\t\t\t\t\"y\": 0.460945\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.583518,\n\t\t\t\t\"y\": 0.470592\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.555443,\n\t\t\t\t\"y\": 0.477478\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.526825,\n\t\t\t\t\"y\": 0.481548\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.497947,\n\t\t\t\t\"y\": 0.482773\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.469089,\n\t\t\t\t\"y\": 0.481143\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.440531,\n\t\t\t\t\"y\": 0.47667\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.412555,\n\t\t\t\t\"y\": 0.469389\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.385442,\n\t\t\t\t\"y\": 0.459355\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.359468,\n\t\t\t\t\"y\": 0.446649\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.33491,\n\t\t\t\t\"y\": 0.431377\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.312038,\n\t\t\t\t\"y\": 0.413671\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.291114,\n\t\t\t\t\"y\": 0.393692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.272388,\n\t\t\t\t\"y\": 0.371633\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.256095,\n\t\t\t\t\"y\": 0.347714\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.242445,\n\t\t\t\t\"y\": 0.322187\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.231623,\n\t\t\t\t\"y\": 0.295335\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.223781,\n\t\t\t\t\"y\": 0.267463\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.219029,\n\t\t\t\t\"y\": 0.238898\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t]\n\t},\n\t\"open_mouth\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.708191,\n\t\t\t\t\"y\": 0.6214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.707865,\n\t\t\t\t\"y\": 0.614079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.706885,\n\t\t\t\t\"y\": 0.606817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.705245,\n\t\t\t\t\"y\": 0.599675\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.702935,\n\t\t\t\t\"y\": 0.592722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.699944,\n\t\t\t\t\"y\": 0.586036\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.696261,\n\t\t\t\t\"y\": 0.579706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.691878,\n\t\t\t\t\"y\": 0.573841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.6868,\n\t\t\t\t\"y\": 0.568571\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.681053,\n\t\t\t\t\"y\": 0.564045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.674695,\n\t\t\t\t\"y\": 0.560432\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.667839,\n\t\t\t\t\"y\": 0.557899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.66065,\n\t\t\t\t\"y\": 0.556591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.653343,\n\t\t\t\t\"y\": 0.556591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.646154,\n\t\t\t\t\"y\": 0.557899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.639298,\n\t\t\t\t\"y\": 0.560432\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.632941,\n\t\t\t\t\"y\": 0.564045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.627193,\n\t\t\t\t\"y\": 0.568571\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.622115,\n\t\t\t\t\"y\": 0.573841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.617732,\n\t\t\t\t\"y\": 0.579706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.614049,\n\t\t\t\t\"y\": 0.586036\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.611058,\n\t\t\t\t\"y\": 0.592722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.608748,\n\t\t\t\t\"y\": 0.599675\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.607108,\n\t\t\t\t\"y\": 0.606817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606128,\n\t\t\t\t\"y\": 0.614079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.605802,\n\t\t\t\t\"y\": 0.6214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606128,\n\t\t\t\t\"y\": 0.628721\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.607108,\n\t\t\t\t\"y\": 0.635983\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.608748,\n\t\t\t\t\"y\": 0.643125\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.611058,\n\t\t\t\t\"y\": 0.650077\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.614049,\n\t\t\t\t\"y\": 0.656764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.617732,\n\t\t\t\t\"y\": 0.663094\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.622115,\n\t\t\t\t\"y\": 0.668959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.627193,\n\t\t\t\t\"y\": 0.674229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.632941,\n\t\t\t\t\"y\": 0.678755\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.639298,\n\t\t\t\t\"y\": 0.682368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.646154,\n\t\t\t\t\"y\": 0.684901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.653343,\n\t\t\t\t\"y\": 0.686209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.66065,\n\t\t\t\t\"y\": 0.686209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.667839,\n\t\t\t\t\"y\": 0.684901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.674695,\n\t\t\t\t\"y\": 0.682368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.681053,\n\t\t\t\t\"y\": 0.678755\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.6868,\n\t\t\t\t\"y\": 0.674229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.691878,\n\t\t\t\t\"y\": 0.668959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.696261,\n\t\t\t\t\"y\": 0.663094\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.699944,\n\t\t\t\t\"y\": 0.656764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.702935,\n\t\t\t\t\"y\": 0.650077\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.705245,\n\t\t\t\t\"y\": 0.643125\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.706885,\n\t\t\t\t\"y\": 0.635983\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.707865,\n\t\t\t\t\"y\": 0.628721\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.291809,\n\t\t\t\t\"y\": 0.6214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.292135,\n\t\t\t\t\"y\": 0.614079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.293115,\n\t\t\t\t\"y\": 0.606817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.294755,\n\t\t\t\t\"y\": 0.599675\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.297065,\n\t\t\t\t\"y\": 0.592722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.300056,\n\t\t\t\t\"y\": 0.586036\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.303739,\n\t\t\t\t\"y\": 0.579706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.308122,\n\t\t\t\t\"y\": 0.573841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.3132,\n\t\t\t\t\"y\": 0.568571\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.318947,\n\t\t\t\t\"y\": 0.564045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.325305,\n\t\t\t\t\"y\": 0.560432\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.332161,\n\t\t\t\t\"y\": 0.557899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.33935,\n\t\t\t\t\"y\": 0.556591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.346657,\n\t\t\t\t\"y\": 0.556591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.353846,\n\t\t\t\t\"y\": 0.557899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.360702,\n\t\t\t\t\"y\": 0.560432\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.367059,\n\t\t\t\t\"y\": 0.564045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.372807,\n\t\t\t\t\"y\": 0.568571\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.377885,\n\t\t\t\t\"y\": 0.573841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.382268,\n\t\t\t\t\"y\": 0.579706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.385951,\n\t\t\t\t\"y\": 0.586036\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.388942,\n\t\t\t\t\"y\": 0.592722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.391252,\n\t\t\t\t\"y\": 0.599675\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.392892,\n\t\t\t\t\"y\": 0.606817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.393872,\n\t\t\t\t\"y\": 0.614079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.394198,\n\t\t\t\t\"y\": 0.6214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.393872,\n\t\t\t\t\"y\": 0.628721\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.392892,\n\t\t\t\t\"y\": 0.635983\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.391252,\n\t\t\t\t\"y\": 0.643125\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.388942,\n\t\t\t\t\"y\": 0.650077\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.385951,\n\t\t\t\t\"y\": 0.656764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.382268,\n\t\t\t\t\"y\": 0.663094\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.377885,\n\t\t\t\t\"y\": 0.668959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.372807,\n\t\t\t\t\"y\": 0.674229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.367059,\n\t\t\t\t\"y\": 0.678755\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.360702,\n\t\t\t\t\"y\": 0.682368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.353846,\n\t\t\t\t\"y\": 0.684901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.346657,\n\t\t\t\t\"y\": 0.686209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.33935,\n\t\t\t\t\"y\": 0.686209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.332161,\n\t\t\t\t\"y\": 0.684901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.325305,\n\t\t\t\t\"y\": 0.682368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.318947,\n\t\t\t\t\"y\": 0.678755\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.3132,\n\t\t\t\t\"y\": 0.674229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.308122,\n\t\t\t\t\"y\": 0.668959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.303739,\n\t\t\t\t\"y\": 0.663094\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.300056,\n\t\t\t\t\"y\": 0.656764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.297065,\n\t\t\t\t\"y\": 0.650077\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.294755,\n\t\t\t\t\"y\": 0.643125\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.293115,\n\t\t\t\t\"y\": 0.635983\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.292135,\n\t\t\t\t\"y\": 0.628721\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.437209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 3.4834e-10\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.437209\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.393082,\n\t\t\t\t\"y\": 0.300992\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.393955,\n\t\t\t\t\"y\": 0.287796\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.396555,\n\t\t\t\t\"y\": 0.27483\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.400828,\n\t\t\t\t\"y\": 0.262317\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.40669,\n\t\t\t\t\"y\": 0.250467\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.414024,\n\t\t\t\t\"y\": 0.239472\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.422695,\n\t\t\t\t\"y\": 0.229499\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.432546,\n\t\t\t\t\"y\": 0.220697\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.443411,\n\t\t\t\t\"y\": 0.213185\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.455113,\n\t\t\t\t\"y\": 0.207064\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.467468,\n\t\t\t\t\"y\": 0.202408\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.480293,\n\t\t\t\t\"y\": 0.199275\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.4934,\n\t\t\t\t\"y\": 0.197699\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5066,\n\t\t\t\t\"y\": 0.197699\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.519707,\n\t\t\t\t\"y\": 0.199275\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.532532,\n\t\t\t\t\"y\": 0.202408\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.544887,\n\t\t\t\t\"y\": 0.207064\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.556589,\n\t\t\t\t\"y\": 0.213185\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.567454,\n\t\t\t\t\"y\": 0.220697\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.577305,\n\t\t\t\t\"y\": 0.229499\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.585976,\n\t\t\t\t\"y\": 0.239472\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.59331,\n\t\t\t\t\"y\": 0.250467\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.599172,\n\t\t\t\t\"y\": 0.262317\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.603445,\n\t\t\t\t\"y\": 0.27483\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606045,\n\t\t\t\t\"y\": 0.287796\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606918,\n\t\t\t\t\"y\": 0.300992\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606045,\n\t\t\t\t\"y\": 0.314188\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.603445,\n\t\t\t\t\"y\": 0.327154\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.599172,\n\t\t\t\t\"y\": 0.339667\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.59331,\n\t\t\t\t\"y\": 0.351517\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.585976,\n\t\t\t\t\"y\": 0.362512\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.577305,\n\t\t\t\t\"y\": 0.372485\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.567454,\n\t\t\t\t\"y\": 0.381287\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.556589,\n\t\t\t\t\"y\": 0.388799\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.544887,\n\t\t\t\t\"y\": 0.39492\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.532532,\n\t\t\t\t\"y\": 0.399576\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.519707,\n\t\t\t\t\"y\": 0.402709\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5066,\n\t\t\t\t\"y\": 0.404285\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.4934,\n\t\t\t\t\"y\": 0.404285\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.480293,\n\t\t\t\t\"y\": 0.402709\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.467468,\n\t\t\t\t\"y\": 0.399576\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.455113,\n\t\t\t\t\"y\": 0.39492\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.443411,\n\t\t\t\t\"y\": 0.388799\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.432546,\n\t\t\t\t\"y\": 0.381287\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.422695,\n\t\t\t\t\"y\": 0.372485\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.414024,\n\t\t\t\t\"y\": 0.362512\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.40669,\n\t\t\t\t\"y\": 0.351517\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.400828,\n\t\t\t\t\"y\": 0.339667\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.396555,\n\t\t\t\t\"y\": 0.327154\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.393955,\n\t\t\t\t\"y\": 0.314188\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t]\n\t},\n\t\"hushed\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.841084,\n\t\t\t\t\"y\": 0.665623\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.834425,\n\t\t\t\t\"y\": 0.672666\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.827528,\n\t\t\t\t\"y\": 0.679475\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.820405,\n\t\t\t\t\"y\": 0.686047\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.813068,\n\t\t\t\t\"y\": 0.692377\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.805527,\n\t\t\t\t\"y\": 0.698463\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.797793,\n\t\t\t\t\"y\": 0.704299\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.789875,\n\t\t\t\t\"y\": 0.709883\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.781782,\n\t\t\t\t\"y\": 0.715209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.773524,\n\t\t\t\t\"y\": 0.720275\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.76511,\n\t\t\t\t\"y\": 0.725075\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.756548,\n\t\t\t\t\"y\": 0.729605\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.747846,\n\t\t\t\t\"y\": 0.73386\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.739013,\n\t\t\t\t\"y\": 0.737834\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.730057,\n\t\t\t\t\"y\": 0.741522\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.720987,\n\t\t\t\t\"y\": 0.744917\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.711811,\n\t\t\t\t\"y\": 0.748013\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.702537,\n\t\t\t\t\"y\": 0.750803\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.693176,\n\t\t\t\t\"y\": 0.753279\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.683735,\n\t\t\t\t\"y\": 0.755434\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.674225,\n\t\t\t\t\"y\": 0.757259\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.664657,\n\t\t\t\t\"y\": 0.758745\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.655042,\n\t\t\t\t\"y\": 0.759882\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.64539,\n\t\t\t\t\"y\": 0.760659\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.647298,\n\t\t\t\t\"y\": 0.764004\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.65599,\n\t\t\t\t\"y\": 0.768272\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.665024,\n\t\t\t\t\"y\": 0.771754\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.674321,\n\t\t\t\t\"y\": 0.774457\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.683806,\n\t\t\t\t\"y\": 0.776392\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.693414,\n\t\t\t\t\"y\": 0.777578\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.703085,\n\t\t\t\t\"y\": 0.778032\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.712762,\n\t\t\t\t\"y\": 0.777777\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.722397,\n\t\t\t\t\"y\": 0.776834\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.731944,\n\t\t\t\t\"y\": 0.775223\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.741359,\n\t\t\t\t\"y\": 0.772967\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.750603,\n\t\t\t\t\"y\": 0.770085\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.759637,\n\t\t\t\t\"y\": 0.766597\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.768422,\n\t\t\t\t\"y\": 0.762521\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.776921,\n\t\t\t\t\"y\": 0.757876\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.785096,\n\t\t\t\t\"y\": 0.752679\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.792907,\n\t\t\t\t\"y\": 0.746948\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.800315,\n\t\t\t\t\"y\": 0.740703\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.807276,\n\t\t\t\t\"y\": 0.733963\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.813748,\n\t\t\t\t\"y\": 0.726748\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.819682,\n\t\t\t\t\"y\": 0.719084\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.825029,\n\t\t\t\t\"y\": 0.710998\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.829737,\n\t\t\t\t\"y\": 0.702523\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.833752,\n\t\t\t\t\"y\": 0.693697\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.837018,\n\t\t\t\t\"y\": 0.684567\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.839479,\n\t\t\t\t\"y\": 0.675187\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.158916,\n\t\t\t\t\"y\": 0.665623\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.165575,\n\t\t\t\t\"y\": 0.672666\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.172472,\n\t\t\t\t\"y\": 0.679475\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.179595,\n\t\t\t\t\"y\": 0.686047\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.186932,\n\t\t\t\t\"y\": 0.692377\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.194473,\n\t\t\t\t\"y\": 0.698463\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.202207,\n\t\t\t\t\"y\": 0.704299\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.210125,\n\t\t\t\t\"y\": 0.709883\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.218218,\n\t\t\t\t\"y\": 0.715209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.226476,\n\t\t\t\t\"y\": 0.720275\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.23489,\n\t\t\t\t\"y\": 0.725075\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.243452,\n\t\t\t\t\"y\": 0.729605\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.252154,\n\t\t\t\t\"y\": 0.73386\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.260987,\n\t\t\t\t\"y\": 0.737834\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.269943,\n\t\t\t\t\"y\": 0.741522\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.279013,\n\t\t\t\t\"y\": 0.744917\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.288189,\n\t\t\t\t\"y\": 0.748013\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.297463,\n\t\t\t\t\"y\": 0.750803\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.306824,\n\t\t\t\t\"y\": 0.753279\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.316265,\n\t\t\t\t\"y\": 0.755434\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.325775,\n\t\t\t\t\"y\": 0.757259\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.335343,\n\t\t\t\t\"y\": 0.758745\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.344958,\n\t\t\t\t\"y\": 0.759882\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.35461,\n\t\t\t\t\"y\": 0.760659\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.352702,\n\t\t\t\t\"y\": 0.764004\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.34401,\n\t\t\t\t\"y\": 0.768272\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.334976,\n\t\t\t\t\"y\": 0.771754\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.325679,\n\t\t\t\t\"y\": 0.774457\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.316194,\n\t\t\t\t\"y\": 0.776392\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.306586,\n\t\t\t\t\"y\": 0.777578\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.296915,\n\t\t\t\t\"y\": 0.778032\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.287238,\n\t\t\t\t\"y\": 0.777777\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.277603,\n\t\t\t\t\"y\": 0.776834\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.268056,\n\t\t\t\t\"y\": 0.775223\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.258641,\n\t\t\t\t\"y\": 0.772967\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.249397,\n\t\t\t\t\"y\": 0.770085\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.240363,\n\t\t\t\t\"y\": 0.766597\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.231578,\n\t\t\t\t\"y\": 0.762521\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.223079,\n\t\t\t\t\"y\": 0.757876\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.214904,\n\t\t\t\t\"y\": 0.752679\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.207093,\n\t\t\t\t\"y\": 0.746948\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.199685,\n\t\t\t\t\"y\": 0.740703\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.192724,\n\t\t\t\t\"y\": 0.733963\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.186252,\n\t\t\t\t\"y\": 0.726748\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.180318,\n\t\t\t\t\"y\": 0.719084\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.174971,\n\t\t\t\t\"y\": 0.710998\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.170263,\n\t\t\t\t\"y\": 0.702523\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.166248,\n\t\t\t\t\"y\": 0.693697\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.162982,\n\t\t\t\t\"y\": 0.684567\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.160521,\n\t\t\t\t\"y\": 0.675187\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.742431,\n\t\t\t\t\"y\": 0.518479\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.742105,\n\t\t\t\t\"y\": 0.511157\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.741124,\n\t\t\t\t\"y\": 0.503895\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.739484,\n\t\t\t\t\"y\": 0.496754\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.737174,\n\t\t\t\t\"y\": 0.489801\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.734183,\n\t\t\t\t\"y\": 0.483114\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.7305,\n\t\t\t\t\"y\": 0.476785\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.726118,\n\t\t\t\t\"y\": 0.47092\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.72104,\n\t\t\t\t\"y\": 0.46565\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.715292,\n\t\t\t\t\"y\": 0.461124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.708935,\n\t\t\t\t\"y\": 0.45751\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.702078,\n\t\t\t\t\"y\": 0.454978\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.694889,\n\t\t\t\t\"y\": 0.45367\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.687583,\n\t\t\t\t\"y\": 0.45367\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.680394,\n\t\t\t\t\"y\": 0.454978\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.673537,\n\t\t\t\t\"y\": 0.45751\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.66718,\n\t\t\t\t\"y\": 0.461124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.661432,\n\t\t\t\t\"y\": 0.46565\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.656355,\n\t\t\t\t\"y\": 0.47092\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.651972,\n\t\t\t\t\"y\": 0.476785\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.648289,\n\t\t\t\t\"y\": 0.483114\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.645298,\n\t\t\t\t\"y\": 0.489801\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.642988,\n\t\t\t\t\"y\": 0.496754\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.641348,\n\t\t\t\t\"y\": 0.503895\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.640368,\n\t\t\t\t\"y\": 0.511157\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.640041,\n\t\t\t\t\"y\": 0.518479\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.640368,\n\t\t\t\t\"y\": 0.5258\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.641348,\n\t\t\t\t\"y\": 0.533062\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.642988,\n\t\t\t\t\"y\": 0.540203\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.645298,\n\t\t\t\t\"y\": 0.547156\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.648289,\n\t\t\t\t\"y\": 0.553843\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.651972,\n\t\t\t\t\"y\": 0.560172\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.656355,\n\t\t\t\t\"y\": 0.566037\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.661432,\n\t\t\t\t\"y\": 0.571307\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.66718,\n\t\t\t\t\"y\": 0.575833\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.673537,\n\t\t\t\t\"y\": 0.579447\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.680394,\n\t\t\t\t\"y\": 0.581979\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.687583,\n\t\t\t\t\"y\": 0.583288\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.694889,\n\t\t\t\t\"y\": 0.583288\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.702078,\n\t\t\t\t\"y\": 0.581979\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.708935,\n\t\t\t\t\"y\": 0.579447\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.715292,\n\t\t\t\t\"y\": 0.575833\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.72104,\n\t\t\t\t\"y\": 0.571307\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.726118,\n\t\t\t\t\"y\": 0.566037\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.7305,\n\t\t\t\t\"y\": 0.560172\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.734183,\n\t\t\t\t\"y\": 0.553843\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.737174,\n\t\t\t\t\"y\": 0.547156\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.739484,\n\t\t\t\t\"y\": 0.540203\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.741124,\n\t\t\t\t\"y\": 0.533062\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.742105,\n\t\t\t\t\"y\": 0.5258\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.257569,\n\t\t\t\t\"y\": 0.518479\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.257895,\n\t\t\t\t\"y\": 0.511157\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.258876,\n\t\t\t\t\"y\": 0.503895\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.260516,\n\t\t\t\t\"y\": 0.496754\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.262826,\n\t\t\t\t\"y\": 0.489801\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.265817,\n\t\t\t\t\"y\": 0.483114\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.2695,\n\t\t\t\t\"y\": 0.476785\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.273882,\n\t\t\t\t\"y\": 0.47092\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.27896,\n\t\t\t\t\"y\": 0.46565\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.284708,\n\t\t\t\t\"y\": 0.461124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.291065,\n\t\t\t\t\"y\": 0.45751\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.297922,\n\t\t\t\t\"y\": 0.454978\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.305111,\n\t\t\t\t\"y\": 0.45367\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.312417,\n\t\t\t\t\"y\": 0.45367\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.319606,\n\t\t\t\t\"y\": 0.454978\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.326463,\n\t\t\t\t\"y\": 0.45751\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.33282,\n\t\t\t\t\"y\": 0.461124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.338568,\n\t\t\t\t\"y\": 0.46565\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.343645,\n\t\t\t\t\"y\": 0.47092\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.348028,\n\t\t\t\t\"y\": 0.476785\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.351711,\n\t\t\t\t\"y\": 0.483114\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.354702,\n\t\t\t\t\"y\": 0.489801\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.357012,\n\t\t\t\t\"y\": 0.496754\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.358652,\n\t\t\t\t\"y\": 0.503895\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.359632,\n\t\t\t\t\"y\": 0.511157\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.359959,\n\t\t\t\t\"y\": 0.518479\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.359632,\n\t\t\t\t\"y\": 0.5258\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.358652,\n\t\t\t\t\"y\": 0.533062\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.357012,\n\t\t\t\t\"y\": 0.540203\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.354702,\n\t\t\t\t\"y\": 0.547156\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.351711,\n\t\t\t\t\"y\": 0.553843\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.348028,\n\t\t\t\t\"y\": 0.560172\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.343645,\n\t\t\t\t\"y\": 0.566037\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.338568,\n\t\t\t\t\"y\": 0.571307\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.33282,\n\t\t\t\t\"y\": 0.575833\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.326463,\n\t\t\t\t\"y\": 0.579447\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.319606,\n\t\t\t\t\"y\": 0.581979\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.312417,\n\t\t\t\t\"y\": 0.583288\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.305111,\n\t\t\t\t\"y\": 0.583288\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.297922,\n\t\t\t\t\"y\": 0.581979\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.291065,\n\t\t\t\t\"y\": 0.579447\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.284708,\n\t\t\t\t\"y\": 0.575833\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.27896,\n\t\t\t\t\"y\": 0.571307\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.273882,\n\t\t\t\t\"y\": 0.566037\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.2695,\n\t\t\t\t\"y\": 0.560172\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.265817,\n\t\t\t\t\"y\": 0.553843\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.262826,\n\t\t\t\t\"y\": 0.547156\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.260516,\n\t\t\t\t\"y\": 0.540203\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.258876,\n\t\t\t\t\"y\": 0.533062\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.257895,\n\t\t\t\t\"y\": 0.5258\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.437209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 3.4834e-10\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.437209\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.411641,\n\t\t\t\t\"y\": 0.255964\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.412362,\n\t\t\t\t\"y\": 0.245058\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.414511,\n\t\t\t\t\"y\": 0.234343\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.418043,\n\t\t\t\t\"y\": 0.224002\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.422886,\n\t\t\t\t\"y\": 0.214209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.428948,\n\t\t\t\t\"y\": 0.205122\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.436113,\n\t\t\t\t\"y\": 0.196881\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.444255,\n\t\t\t\t\"y\": 0.189606\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.453234,\n\t\t\t\t\"y\": 0.183399\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.462904,\n\t\t\t\t\"y\": 0.17834\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.473115,\n\t\t\t\t\"y\": 0.174492\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.483714,\n\t\t\t\t\"y\": 0.171903\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.494545,\n\t\t\t\t\"y\": 0.1706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.505455,\n\t\t\t\t\"y\": 0.1706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.516286,\n\t\t\t\t\"y\": 0.171903\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.526885,\n\t\t\t\t\"y\": 0.174492\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.537096,\n\t\t\t\t\"y\": 0.17834\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.546766,\n\t\t\t\t\"y\": 0.183399\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.555745,\n\t\t\t\t\"y\": 0.189606\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.563887,\n\t\t\t\t\"y\": 0.196881\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.571052,\n\t\t\t\t\"y\": 0.205122\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.577114,\n\t\t\t\t\"y\": 0.214209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.581957,\n\t\t\t\t\"y\": 0.224002\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.585489,\n\t\t\t\t\"y\": 0.234343\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.587638,\n\t\t\t\t\"y\": 0.245058\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.588359,\n\t\t\t\t\"y\": 0.255964\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.587638,\n\t\t\t\t\"y\": 0.266869\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.585489,\n\t\t\t\t\"y\": 0.277585\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.581957,\n\t\t\t\t\"y\": 0.287925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.577114,\n\t\t\t\t\"y\": 0.297718\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.571052,\n\t\t\t\t\"y\": 0.306805\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.563887,\n\t\t\t\t\"y\": 0.315047\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.555745,\n\t\t\t\t\"y\": 0.322321\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.546766,\n\t\t\t\t\"y\": 0.328529\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.537096,\n\t\t\t\t\"y\": 0.333588\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.526885,\n\t\t\t\t\"y\": 0.337435\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.516286,\n\t\t\t\t\"y\": 0.340025\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.505455,\n\t\t\t\t\"y\": 0.341327\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.494545,\n\t\t\t\t\"y\": 0.341327\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.483714,\n\t\t\t\t\"y\": 0.340025\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.473115,\n\t\t\t\t\"y\": 0.337435\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.462904,\n\t\t\t\t\"y\": 0.333588\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.453234,\n\t\t\t\t\"y\": 0.328529\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.444255,\n\t\t\t\t\"y\": 0.322321\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.436113,\n\t\t\t\t\"y\": 0.315047\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.428948,\n\t\t\t\t\"y\": 0.306805\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.422886,\n\t\t\t\t\"y\": 0.297718\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.418043,\n\t\t\t\t\"y\": 0.287925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.414511,\n\t\t\t\t\"y\": 0.277585\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.412362,\n\t\t\t\t\"y\": 0.266869\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t]\n\t},\n\t\"frowning\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.742431,\n\t\t\t\t\"y\": 0.518479\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.742105,\n\t\t\t\t\"y\": 0.511157\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.741124,\n\t\t\t\t\"y\": 0.503895\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.739484,\n\t\t\t\t\"y\": 0.496754\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.737174,\n\t\t\t\t\"y\": 0.489801\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.734183,\n\t\t\t\t\"y\": 0.483114\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.7305,\n\t\t\t\t\"y\": 0.476785\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.726118,\n\t\t\t\t\"y\": 0.47092\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.72104,\n\t\t\t\t\"y\": 0.46565\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.715292,\n\t\t\t\t\"y\": 0.461124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.708935,\n\t\t\t\t\"y\": 0.45751\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.702078,\n\t\t\t\t\"y\": 0.454978\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.694889,\n\t\t\t\t\"y\": 0.45367\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.687583,\n\t\t\t\t\"y\": 0.45367\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.680394,\n\t\t\t\t\"y\": 0.454978\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.673537,\n\t\t\t\t\"y\": 0.45751\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.66718,\n\t\t\t\t\"y\": 0.461124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.661432,\n\t\t\t\t\"y\": 0.46565\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.656355,\n\t\t\t\t\"y\": 0.47092\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.651972,\n\t\t\t\t\"y\": 0.476785\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.648289,\n\t\t\t\t\"y\": 0.483114\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.645298,\n\t\t\t\t\"y\": 0.489801\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.642988,\n\t\t\t\t\"y\": 0.496754\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.641348,\n\t\t\t\t\"y\": 0.503895\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.640368,\n\t\t\t\t\"y\": 0.511157\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.640041,\n\t\t\t\t\"y\": 0.518479\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.640368,\n\t\t\t\t\"y\": 0.5258\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.641348,\n\t\t\t\t\"y\": 0.533062\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.642988,\n\t\t\t\t\"y\": 0.540203\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.645298,\n\t\t\t\t\"y\": 0.547156\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.648289,\n\t\t\t\t\"y\": 0.553843\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.651972,\n\t\t\t\t\"y\": 0.560172\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.656355,\n\t\t\t\t\"y\": 0.566037\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.661432,\n\t\t\t\t\"y\": 0.571307\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.66718,\n\t\t\t\t\"y\": 0.575833\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.673537,\n\t\t\t\t\"y\": 0.579447\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.680394,\n\t\t\t\t\"y\": 0.581979\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.687583,\n\t\t\t\t\"y\": 0.583288\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.694889,\n\t\t\t\t\"y\": 0.583288\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.702078,\n\t\t\t\t\"y\": 0.581979\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.708935,\n\t\t\t\t\"y\": 0.579447\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.715292,\n\t\t\t\t\"y\": 0.575833\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.72104,\n\t\t\t\t\"y\": 0.571307\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.726118,\n\t\t\t\t\"y\": 0.566037\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.7305,\n\t\t\t\t\"y\": 0.560172\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.734183,\n\t\t\t\t\"y\": 0.553843\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.737174,\n\t\t\t\t\"y\": 0.547156\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.739484,\n\t\t\t\t\"y\": 0.540203\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.741124,\n\t\t\t\t\"y\": 0.533062\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.742105,\n\t\t\t\t\"y\": 0.5258\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.257569,\n\t\t\t\t\"y\": 0.518479\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.257895,\n\t\t\t\t\"y\": 0.511157\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.258876,\n\t\t\t\t\"y\": 0.503895\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.260516,\n\t\t\t\t\"y\": 0.496754\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.262826,\n\t\t\t\t\"y\": 0.489801\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.265817,\n\t\t\t\t\"y\": 0.483114\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.2695,\n\t\t\t\t\"y\": 0.476785\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.273882,\n\t\t\t\t\"y\": 0.47092\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.27896,\n\t\t\t\t\"y\": 0.46565\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.284708,\n\t\t\t\t\"y\": 0.461124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.291065,\n\t\t\t\t\"y\": 0.45751\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.297922,\n\t\t\t\t\"y\": 0.454978\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.305111,\n\t\t\t\t\"y\": 0.45367\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.312417,\n\t\t\t\t\"y\": 0.45367\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.319606,\n\t\t\t\t\"y\": 0.454978\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.326463,\n\t\t\t\t\"y\": 0.45751\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.33282,\n\t\t\t\t\"y\": 0.461124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.338568,\n\t\t\t\t\"y\": 0.46565\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.343645,\n\t\t\t\t\"y\": 0.47092\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.348028,\n\t\t\t\t\"y\": 0.476785\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.351711,\n\t\t\t\t\"y\": 0.483114\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.354702,\n\t\t\t\t\"y\": 0.489801\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.357012,\n\t\t\t\t\"y\": 0.496754\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.358652,\n\t\t\t\t\"y\": 0.503895\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.359632,\n\t\t\t\t\"y\": 0.511157\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.359959,\n\t\t\t\t\"y\": 0.518479\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.359632,\n\t\t\t\t\"y\": 0.5258\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.358652,\n\t\t\t\t\"y\": 0.533062\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.357012,\n\t\t\t\t\"y\": 0.540203\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.354702,\n\t\t\t\t\"y\": 0.547156\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.351711,\n\t\t\t\t\"y\": 0.553843\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.348028,\n\t\t\t\t\"y\": 0.560172\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.343645,\n\t\t\t\t\"y\": 0.566037\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.338568,\n\t\t\t\t\"y\": 0.571307\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.33282,\n\t\t\t\t\"y\": 0.575833\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.326463,\n\t\t\t\t\"y\": 0.579447\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.319606,\n\t\t\t\t\"y\": 0.581979\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.312417,\n\t\t\t\t\"y\": 0.583288\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.305111,\n\t\t\t\t\"y\": 0.583288\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.297922,\n\t\t\t\t\"y\": 0.581979\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.291065,\n\t\t\t\t\"y\": 0.579447\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.284708,\n\t\t\t\t\"y\": 0.575833\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.27896,\n\t\t\t\t\"y\": 0.571307\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.273882,\n\t\t\t\t\"y\": 0.566037\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.2695,\n\t\t\t\t\"y\": 0.560172\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.265817,\n\t\t\t\t\"y\": 0.553843\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.262826,\n\t\t\t\t\"y\": 0.547156\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.260516,\n\t\t\t\t\"y\": 0.540203\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.258876,\n\t\t\t\t\"y\": 0.533062\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.257895,\n\t\t\t\t\"y\": 0.5258\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.437209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 3.4834e-10\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.437209\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.364222,\n\t\t\t\t\"y\": 0.266079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.356036,\n\t\t\t\t\"y\": 0.252957\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.350177,\n\t\t\t\t\"y\": 0.238652\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.347724,\n\t\t\t\t\"y\": 0.223404\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.349488,\n\t\t\t\t\"y\": 0.208071\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.355779,\n\t\t\t\t\"y\": 0.194\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.366523,\n\t\t\t\t\"y\": 0.182993\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.380618,\n\t\t\t\t\"y\": 0.176875\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.395993,\n\t\t\t\t\"y\": 0.176073\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.411216,\n\t\t\t\t\"y\": 0.178681\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.426137,\n\t\t\t\t\"y\": 0.182719\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.440936,\n\t\t\t\t\"y\": 0.187192\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.455783,\n\t\t\t\t\"y\": 0.1915\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.470801,\n\t\t\t\t\"y\": 0.195154\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.486049,\n\t\t\t\t\"y\": 0.197664\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.501474,\n\t\t\t\t\"y\": 0.198487\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.516876,\n\t\t\t\t\"y\": 0.197298\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.53208,\n\t\t\t\t\"y\": 0.194529\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.547059,\n\t\t\t\t\"y\": 0.190714\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.561886,\n\t\t\t\t\"y\": 0.186336\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.576693,\n\t\t\t\t\"y\": 0.181893\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.59166,\n\t\t\t\t\"y\": 0.178031\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606949,\n\t\t\t\t\"y\": 0.175879\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.622235,\n\t\t\t\t\"y\": 0.177614\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.635837,\n\t\t\t\t\"y\": 0.184762\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.645776,\n\t\t\t\t\"y\": 0.196508\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.651191,\n\t\t\t\t\"y\": 0.210945\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.65212,\n\t\t\t\t\"y\": 0.226354\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.648931,\n\t\t\t\t\"y\": 0.241467\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.642556,\n\t\t\t\t\"y\": 0.255552\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.634016,\n\t\t\t\t\"y\": 0.268447\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.623943,\n\t\t\t\t\"y\": 0.280184\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.612705,\n\t\t\t\t\"y\": 0.290809\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.600515,\n\t\t\t\t\"y\": 0.300323\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.587493,\n\t\t\t\t\"y\": 0.308657\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.57373,\n\t\t\t\t\"y\": 0.315694\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.559353,\n\t\t\t\t\"y\": 0.321368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.544508,\n\t\t\t\t\"y\": 0.325662\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.529337,\n\t\t\t\t\"y\": 0.328606\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.513973,\n\t\t\t\t\"y\": 0.330266\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.498526,\n\t\t\t\t\"y\": 0.330727\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.483087,\n\t\t\t\t\"y\": 0.330044\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.467751,\n\t\t\t\t\"y\": 0.328146\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.452631,\n\t\t\t\t\"y\": 0.324949\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.437864,\n\t\t\t\t\"y\": 0.320392\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.423594,\n\t\t\t\t\"y\": 0.314456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.409963,\n\t\t\t\t\"y\": 0.307164\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.397094,\n\t\t\t\t\"y\": 0.298596\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.385073,\n\t\t\t\t\"y\": 0.288867\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.374037,\n\t\t\t\t\"y\": 0.278032\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t]\n\t},\n\t\"anguished\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.841084,\n\t\t\t\t\"y\": 0.665623\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.834425,\n\t\t\t\t\"y\": 0.672666\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.827528,\n\t\t\t\t\"y\": 0.679475\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.820405,\n\t\t\t\t\"y\": 0.686047\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.813068,\n\t\t\t\t\"y\": 0.692377\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.805527,\n\t\t\t\t\"y\": 0.698463\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.797793,\n\t\t\t\t\"y\": 0.704299\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.789875,\n\t\t\t\t\"y\": 0.709883\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.781782,\n\t\t\t\t\"y\": 0.715209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.773524,\n\t\t\t\t\"y\": 0.720275\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.76511,\n\t\t\t\t\"y\": 0.725075\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.756548,\n\t\t\t\t\"y\": 0.729605\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.747846,\n\t\t\t\t\"y\": 0.73386\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.739013,\n\t\t\t\t\"y\": 0.737834\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.730057,\n\t\t\t\t\"y\": 0.741522\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.720987,\n\t\t\t\t\"y\": 0.744917\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.711811,\n\t\t\t\t\"y\": 0.748013\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.702537,\n\t\t\t\t\"y\": 0.750803\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.693176,\n\t\t\t\t\"y\": 0.753279\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.683735,\n\t\t\t\t\"y\": 0.755434\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.674225,\n\t\t\t\t\"y\": 0.757259\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.664657,\n\t\t\t\t\"y\": 0.758745\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.655042,\n\t\t\t\t\"y\": 0.759882\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.64539,\n\t\t\t\t\"y\": 0.760659\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.647298,\n\t\t\t\t\"y\": 0.764004\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.65599,\n\t\t\t\t\"y\": 0.768272\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.665024,\n\t\t\t\t\"y\": 0.771754\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.674321,\n\t\t\t\t\"y\": 0.774457\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.683806,\n\t\t\t\t\"y\": 0.776392\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.693414,\n\t\t\t\t\"y\": 0.777578\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.703085,\n\t\t\t\t\"y\": 0.778032\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.712762,\n\t\t\t\t\"y\": 0.777777\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.722397,\n\t\t\t\t\"y\": 0.776834\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.731944,\n\t\t\t\t\"y\": 0.775223\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.741359,\n\t\t\t\t\"y\": 0.772967\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.750603,\n\t\t\t\t\"y\": 0.770085\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.759637,\n\t\t\t\t\"y\": 0.766597\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.768422,\n\t\t\t\t\"y\": 0.762521\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.776921,\n\t\t\t\t\"y\": 0.757876\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.785096,\n\t\t\t\t\"y\": 0.752679\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.792907,\n\t\t\t\t\"y\": 0.746948\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.800315,\n\t\t\t\t\"y\": 0.740703\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.807276,\n\t\t\t\t\"y\": 0.733963\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.813748,\n\t\t\t\t\"y\": 0.726748\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.819682,\n\t\t\t\t\"y\": 0.719084\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.825029,\n\t\t\t\t\"y\": 0.710998\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.829737,\n\t\t\t\t\"y\": 0.702523\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.833752,\n\t\t\t\t\"y\": 0.693697\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.837018,\n\t\t\t\t\"y\": 0.684567\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.839479,\n\t\t\t\t\"y\": 0.675187\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.158916,\n\t\t\t\t\"y\": 0.665623\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.165575,\n\t\t\t\t\"y\": 0.672666\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.172472,\n\t\t\t\t\"y\": 0.679475\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.179595,\n\t\t\t\t\"y\": 0.686047\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.186932,\n\t\t\t\t\"y\": 0.692377\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.194473,\n\t\t\t\t\"y\": 0.698463\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.202207,\n\t\t\t\t\"y\": 0.704299\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.210125,\n\t\t\t\t\"y\": 0.709883\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.218218,\n\t\t\t\t\"y\": 0.715209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.226476,\n\t\t\t\t\"y\": 0.720275\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.23489,\n\t\t\t\t\"y\": 0.725075\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.243452,\n\t\t\t\t\"y\": 0.729605\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.252154,\n\t\t\t\t\"y\": 0.73386\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.260987,\n\t\t\t\t\"y\": 0.737834\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.269943,\n\t\t\t\t\"y\": 0.741522\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.279013,\n\t\t\t\t\"y\": 0.744917\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.288189,\n\t\t\t\t\"y\": 0.748013\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.297463,\n\t\t\t\t\"y\": 0.750803\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.306824,\n\t\t\t\t\"y\": 0.753279\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.316265,\n\t\t\t\t\"y\": 0.755434\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.325775,\n\t\t\t\t\"y\": 0.757259\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.335343,\n\t\t\t\t\"y\": 0.758745\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.344958,\n\t\t\t\t\"y\": 0.759882\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.35461,\n\t\t\t\t\"y\": 0.760659\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.352702,\n\t\t\t\t\"y\": 0.764004\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.34401,\n\t\t\t\t\"y\": 0.768272\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.334976,\n\t\t\t\t\"y\": 0.771754\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.325679,\n\t\t\t\t\"y\": 0.774457\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.316194,\n\t\t\t\t\"y\": 0.776392\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.306586,\n\t\t\t\t\"y\": 0.777578\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.296915,\n\t\t\t\t\"y\": 0.778032\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.287238,\n\t\t\t\t\"y\": 0.777777\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.277603,\n\t\t\t\t\"y\": 0.776834\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.268056,\n\t\t\t\t\"y\": 0.775223\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.258641,\n\t\t\t\t\"y\": 0.772967\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.249397,\n\t\t\t\t\"y\": 0.770085\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.240363,\n\t\t\t\t\"y\": 0.766597\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.231578,\n\t\t\t\t\"y\": 0.762521\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.223079,\n\t\t\t\t\"y\": 0.757876\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.214904,\n\t\t\t\t\"y\": 0.752679\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.207093,\n\t\t\t\t\"y\": 0.746948\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.199685,\n\t\t\t\t\"y\": 0.740703\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.192724,\n\t\t\t\t\"y\": 0.733963\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.186252,\n\t\t\t\t\"y\": 0.726748\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.180318,\n\t\t\t\t\"y\": 0.719084\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.174971,\n\t\t\t\t\"y\": 0.710998\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.170263,\n\t\t\t\t\"y\": 0.702523\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.166248,\n\t\t\t\t\"y\": 0.693697\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.162982,\n\t\t\t\t\"y\": 0.684567\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.160521,\n\t\t\t\t\"y\": 0.675187\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.742431,\n\t\t\t\t\"y\": 0.518479\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.742105,\n\t\t\t\t\"y\": 0.511157\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.741124,\n\t\t\t\t\"y\": 0.503895\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.739484,\n\t\t\t\t\"y\": 0.496754\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.737174,\n\t\t\t\t\"y\": 0.489801\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.734183,\n\t\t\t\t\"y\": 0.483114\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.7305,\n\t\t\t\t\"y\": 0.476785\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.726118,\n\t\t\t\t\"y\": 0.47092\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.72104,\n\t\t\t\t\"y\": 0.46565\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.715292,\n\t\t\t\t\"y\": 0.461124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.708935,\n\t\t\t\t\"y\": 0.45751\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.702078,\n\t\t\t\t\"y\": 0.454978\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.694889,\n\t\t\t\t\"y\": 0.45367\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.687583,\n\t\t\t\t\"y\": 0.45367\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.680394,\n\t\t\t\t\"y\": 0.454978\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.673537,\n\t\t\t\t\"y\": 0.45751\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.66718,\n\t\t\t\t\"y\": 0.461124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.661432,\n\t\t\t\t\"y\": 0.46565\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.656355,\n\t\t\t\t\"y\": 0.47092\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.651972,\n\t\t\t\t\"y\": 0.476785\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.648289,\n\t\t\t\t\"y\": 0.483114\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.645298,\n\t\t\t\t\"y\": 0.489801\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.642988,\n\t\t\t\t\"y\": 0.496754\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.641348,\n\t\t\t\t\"y\": 0.503895\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.640368,\n\t\t\t\t\"y\": 0.511157\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.640041,\n\t\t\t\t\"y\": 0.518479\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.640368,\n\t\t\t\t\"y\": 0.5258\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.641348,\n\t\t\t\t\"y\": 0.533062\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.642988,\n\t\t\t\t\"y\": 0.540203\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.645298,\n\t\t\t\t\"y\": 0.547156\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.648289,\n\t\t\t\t\"y\": 0.553843\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.651972,\n\t\t\t\t\"y\": 0.560172\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.656355,\n\t\t\t\t\"y\": 0.566037\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.661432,\n\t\t\t\t\"y\": 0.571307\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.66718,\n\t\t\t\t\"y\": 0.575833\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.673537,\n\t\t\t\t\"y\": 0.579447\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.680394,\n\t\t\t\t\"y\": 0.581979\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.687583,\n\t\t\t\t\"y\": 0.583288\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.694889,\n\t\t\t\t\"y\": 0.583288\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.702078,\n\t\t\t\t\"y\": 0.581979\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.708935,\n\t\t\t\t\"y\": 0.579447\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.715292,\n\t\t\t\t\"y\": 0.575833\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.72104,\n\t\t\t\t\"y\": 0.571307\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.726118,\n\t\t\t\t\"y\": 0.566037\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.7305,\n\t\t\t\t\"y\": 0.560172\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.734183,\n\t\t\t\t\"y\": 0.553843\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.737174,\n\t\t\t\t\"y\": 0.547156\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.739484,\n\t\t\t\t\"y\": 0.540203\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.741124,\n\t\t\t\t\"y\": 0.533062\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.742105,\n\t\t\t\t\"y\": 0.5258\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.257569,\n\t\t\t\t\"y\": 0.518479\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.257895,\n\t\t\t\t\"y\": 0.511157\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.258876,\n\t\t\t\t\"y\": 0.503895\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.260516,\n\t\t\t\t\"y\": 0.496754\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.262826,\n\t\t\t\t\"y\": 0.489801\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.265817,\n\t\t\t\t\"y\": 0.483114\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.2695,\n\t\t\t\t\"y\": 0.476785\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.273882,\n\t\t\t\t\"y\": 0.47092\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.27896,\n\t\t\t\t\"y\": 0.46565\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.284708,\n\t\t\t\t\"y\": 0.461124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.291065,\n\t\t\t\t\"y\": 0.45751\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.297922,\n\t\t\t\t\"y\": 0.454978\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.305111,\n\t\t\t\t\"y\": 0.45367\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.312417,\n\t\t\t\t\"y\": 0.45367\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.319606,\n\t\t\t\t\"y\": 0.454978\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.326463,\n\t\t\t\t\"y\": 0.45751\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.33282,\n\t\t\t\t\"y\": 0.461124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.338568,\n\t\t\t\t\"y\": 0.46565\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.343645,\n\t\t\t\t\"y\": 0.47092\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.348028,\n\t\t\t\t\"y\": 0.476785\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.351711,\n\t\t\t\t\"y\": 0.483114\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.354702,\n\t\t\t\t\"y\": 0.489801\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.357012,\n\t\t\t\t\"y\": 0.496754\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.358652,\n\t\t\t\t\"y\": 0.503895\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.359632,\n\t\t\t\t\"y\": 0.511157\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.359959,\n\t\t\t\t\"y\": 0.518479\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.359632,\n\t\t\t\t\"y\": 0.5258\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.358652,\n\t\t\t\t\"y\": 0.533062\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.357012,\n\t\t\t\t\"y\": 0.540203\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.354702,\n\t\t\t\t\"y\": 0.547156\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.351711,\n\t\t\t\t\"y\": 0.553843\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.348028,\n\t\t\t\t\"y\": 0.560172\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.343645,\n\t\t\t\t\"y\": 0.566037\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.338568,\n\t\t\t\t\"y\": 0.571307\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.33282,\n\t\t\t\t\"y\": 0.575833\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.326463,\n\t\t\t\t\"y\": 0.579447\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.319606,\n\t\t\t\t\"y\": 0.581979\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.312417,\n\t\t\t\t\"y\": 0.583288\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.305111,\n\t\t\t\t\"y\": 0.583288\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.297922,\n\t\t\t\t\"y\": 0.581979\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.291065,\n\t\t\t\t\"y\": 0.579447\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.284708,\n\t\t\t\t\"y\": 0.575833\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.27896,\n\t\t\t\t\"y\": 0.571307\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.273882,\n\t\t\t\t\"y\": 0.566037\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.2695,\n\t\t\t\t\"y\": 0.560172\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.265817,\n\t\t\t\t\"y\": 0.553843\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.262826,\n\t\t\t\t\"y\": 0.547156\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.260516,\n\t\t\t\t\"y\": 0.540203\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.258876,\n\t\t\t\t\"y\": 0.533062\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.257895,\n\t\t\t\t\"y\": 0.5258\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.437209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 3.4834e-10\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.437209\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.364222,\n\t\t\t\t\"y\": 0.266079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.356036,\n\t\t\t\t\"y\": 0.252957\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.350177,\n\t\t\t\t\"y\": 0.238652\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.347724,\n\t\t\t\t\"y\": 0.223404\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.349488,\n\t\t\t\t\"y\": 0.208071\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.355779,\n\t\t\t\t\"y\": 0.194\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.366523,\n\t\t\t\t\"y\": 0.182993\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.380618,\n\t\t\t\t\"y\": 0.176875\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.395993,\n\t\t\t\t\"y\": 0.176073\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.411216,\n\t\t\t\t\"y\": 0.178681\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.426137,\n\t\t\t\t\"y\": 0.182719\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.440936,\n\t\t\t\t\"y\": 0.187192\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.455783,\n\t\t\t\t\"y\": 0.1915\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.470801,\n\t\t\t\t\"y\": 0.195154\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.486049,\n\t\t\t\t\"y\": 0.197664\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.501474,\n\t\t\t\t\"y\": 0.198487\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.516876,\n\t\t\t\t\"y\": 0.197298\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.53208,\n\t\t\t\t\"y\": 0.194529\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.547059,\n\t\t\t\t\"y\": 0.190714\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.561886,\n\t\t\t\t\"y\": 0.186336\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.576693,\n\t\t\t\t\"y\": 0.181893\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.59166,\n\t\t\t\t\"y\": 0.178031\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606949,\n\t\t\t\t\"y\": 0.175879\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.622235,\n\t\t\t\t\"y\": 0.177614\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.635837,\n\t\t\t\t\"y\": 0.184762\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.645776,\n\t\t\t\t\"y\": 0.196508\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.651191,\n\t\t\t\t\"y\": 0.210945\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.65212,\n\t\t\t\t\"y\": 0.226354\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.648931,\n\t\t\t\t\"y\": 0.241467\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.642556,\n\t\t\t\t\"y\": 0.255552\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.634016,\n\t\t\t\t\"y\": 0.268447\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.623943,\n\t\t\t\t\"y\": 0.280184\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.612705,\n\t\t\t\t\"y\": 0.290809\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.600515,\n\t\t\t\t\"y\": 0.300323\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.587493,\n\t\t\t\t\"y\": 0.308657\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.57373,\n\t\t\t\t\"y\": 0.315694\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.559353,\n\t\t\t\t\"y\": 0.321368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.544508,\n\t\t\t\t\"y\": 0.325662\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.529337,\n\t\t\t\t\"y\": 0.328606\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.513973,\n\t\t\t\t\"y\": 0.330266\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.498526,\n\t\t\t\t\"y\": 0.330727\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.483087,\n\t\t\t\t\"y\": 0.330044\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.467751,\n\t\t\t\t\"y\": 0.328146\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.452631,\n\t\t\t\t\"y\": 0.324949\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.437864,\n\t\t\t\t\"y\": 0.320392\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.423594,\n\t\t\t\t\"y\": 0.314456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.409963,\n\t\t\t\t\"y\": 0.307164\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.397094,\n\t\t\t\t\"y\": 0.298596\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.385073,\n\t\t\t\t\"y\": 0.288867\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.374037,\n\t\t\t\t\"y\": 0.278032\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t]\n\t},\n\t\"dizzy_face\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.827877,\n\t\t\t\t\"y\": 0.755618\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.820405,\n\t\t\t\t\"y\": 0.761788\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.812725,\n\t\t\t\t\"y\": 0.767696\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.80485,\n\t\t\t\t\"y\": 0.773341\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.796792,\n\t\t\t\t\"y\": 0.77872\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.788562,\n\t\t\t\t\"y\": 0.783831\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.78017,\n\t\t\t\t\"y\": 0.78867\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.771627,\n\t\t\t\t\"y\": 0.793237\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.762943,\n\t\t\t\t\"y\": 0.797527\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.754126,\n\t\t\t\t\"y\": 0.801537\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.745187,\n\t\t\t\t\"y\": 0.805265\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.736134,\n\t\t\t\t\"y\": 0.808706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.726976,\n\t\t\t\t\"y\": 0.811857\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.717723,\n\t\t\t\t\"y\": 0.814713\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.708383,\n\t\t\t\t\"y\": 0.81727\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.698965,\n\t\t\t\t\"y\": 0.819522\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.689478,\n\t\t\t\t\"y\": 0.821465\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.679933,\n\t\t\t\t\"y\": 0.823092\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.670338,\n\t\t\t\t\"y\": 0.824397\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.660705,\n\t\t\t\t\"y\": 0.825373\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.651044,\n\t\t\t\t\"y\": 0.826013\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.641366,\n\t\t\t\t\"y\": 0.826309\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.631684,\n\t\t\t\t\"y\": 0.826253\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.62201,\n\t\t\t\t\"y\": 0.825836\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.623493,\n\t\t\t\t\"y\": 0.82939\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.631595,\n\t\t\t\t\"y\": 0.834696\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.640134,\n\t\t\t\t\"y\": 0.839265\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.649029,\n\t\t\t\t\"y\": 0.843092\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.658205,\n\t\t\t\t\"y\": 0.846181\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.667595,\n\t\t\t\t\"y\": 0.84854\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.677136,\n\t\t\t\t\"y\": 0.850182\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.686771,\n\t\t\t\t\"y\": 0.85112\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.696449,\n\t\t\t\t\"y\": 0.851371\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.706121,\n\t\t\t\t\"y\": 0.850948\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.715742,\n\t\t\t\t\"y\": 0.849869\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.725269,\n\t\t\t\t\"y\": 0.848147\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.734662,\n\t\t\t\t\"y\": 0.845797\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.743881,\n\t\t\t\t\"y\": 0.842834\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.752885,\n\t\t\t\t\"y\": 0.839271\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.761635,\n\t\t\t\t\"y\": 0.83512\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.77009,\n\t\t\t\t\"y\": 0.830395\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.778208,\n\t\t\t\t\"y\": 0.825109\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.785943,\n\t\t\t\t\"y\": 0.819277\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.793251,\n\t\t\t\t\"y\": 0.812914\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.80008,\n\t\t\t\t\"y\": 0.806039\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.806378,\n\t\t\t\t\"y\": 0.798673\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.81209,\n\t\t\t\t\"y\": 0.790842\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.817157,\n\t\t\t\t\"y\": 0.782577\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.821518,\n\t\t\t\t\"y\": 0.773918\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.825112,\n\t\t\t\t\"y\": 0.764912\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.172123,\n\t\t\t\t\"y\": 0.755618\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.179595,\n\t\t\t\t\"y\": 0.761788\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.187275,\n\t\t\t\t\"y\": 0.767696\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.19515,\n\t\t\t\t\"y\": 0.773341\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.203208,\n\t\t\t\t\"y\": 0.77872\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.211438,\n\t\t\t\t\"y\": 0.783831\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.21983,\n\t\t\t\t\"y\": 0.78867\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.228373,\n\t\t\t\t\"y\": 0.793237\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.237057,\n\t\t\t\t\"y\": 0.797527\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.245874,\n\t\t\t\t\"y\": 0.801537\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.254813,\n\t\t\t\t\"y\": 0.805265\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.263866,\n\t\t\t\t\"y\": 0.808706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.273024,\n\t\t\t\t\"y\": 0.811857\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.282277,\n\t\t\t\t\"y\": 0.814713\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.291617,\n\t\t\t\t\"y\": 0.81727\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.301035,\n\t\t\t\t\"y\": 0.819522\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.310522,\n\t\t\t\t\"y\": 0.821465\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.320067,\n\t\t\t\t\"y\": 0.823092\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.329662,\n\t\t\t\t\"y\": 0.824397\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.339295,\n\t\t\t\t\"y\": 0.825373\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.348956,\n\t\t\t\t\"y\": 0.826013\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.358634,\n\t\t\t\t\"y\": 0.826309\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.368316,\n\t\t\t\t\"y\": 0.826253\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.37799,\n\t\t\t\t\"y\": 0.825836\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.376507,\n\t\t\t\t\"y\": 0.82939\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.368405,\n\t\t\t\t\"y\": 0.834696\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.359866,\n\t\t\t\t\"y\": 0.839265\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.350971,\n\t\t\t\t\"y\": 0.843092\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.341795,\n\t\t\t\t\"y\": 0.846181\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.332405,\n\t\t\t\t\"y\": 0.84854\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.322864,\n\t\t\t\t\"y\": 0.850182\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.313229,\n\t\t\t\t\"y\": 0.85112\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.303551,\n\t\t\t\t\"y\": 0.851371\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.293879,\n\t\t\t\t\"y\": 0.850948\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.284258,\n\t\t\t\t\"y\": 0.849869\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.274731,\n\t\t\t\t\"y\": 0.848147\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.265338,\n\t\t\t\t\"y\": 0.845797\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.256119,\n\t\t\t\t\"y\": 0.842834\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.247115,\n\t\t\t\t\"y\": 0.839271\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.238365,\n\t\t\t\t\"y\": 0.83512\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.22991,\n\t\t\t\t\"y\": 0.830395\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.221792,\n\t\t\t\t\"y\": 0.825109\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.214057,\n\t\t\t\t\"y\": 0.819277\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.206749,\n\t\t\t\t\"y\": 0.812914\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.19992,\n\t\t\t\t\"y\": 0.806039\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.193622,\n\t\t\t\t\"y\": 0.798673\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.18791,\n\t\t\t\t\"y\": 0.790842\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.182843,\n\t\t\t\t\"y\": 0.782577\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.178482,\n\t\t\t\t\"y\": 0.773918\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.174888,\n\t\t\t\t\"y\": 0.764912\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.756852,\n\t\t\t\t\"y\": 0.486857\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.742382,\n\t\t\t\t\"y\": 0.476199\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.723672,\n\t\t\t\t\"y\": 0.483189\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.708534,\n\t\t\t\t\"y\": 0.496633\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.6948,\n\t\t\t\t\"y\": 0.511553\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.680965,\n\t\t\t\t\"y\": 0.526378\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.666554,\n\t\t\t\t\"y\": 0.540642\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.652155,\n\t\t\t\t\"y\": 0.542478\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.637712,\n\t\t\t\t\"y\": 0.528245\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.623795,\n\t\t\t\t\"y\": 0.513498\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.610117,\n\t\t\t\t\"y\": 0.498526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.59528,\n\t\t\t\t\"y\": 0.484736\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.577064,\n\t\t\t\t\"y\": 0.476411\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.560294,\n\t\t\t\t\"y\": 0.484257\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.567243,\n\t\t\t\t\"y\": 0.502628\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.580983,\n\t\t\t\t\"y\": 0.517523\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.595878,\n\t\t\t\t\"y\": 0.531279\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.611112,\n\t\t\t\t\"y\": 0.544658\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.626102,\n\t\t\t\t\"y\": 0.558308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.63682,\n\t\t\t\t\"y\": 0.575005\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.625687,\n\t\t\t\t\"y\": 0.591217\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.609769,\n\t\t\t\t\"y\": 0.603766\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.59364,\n\t\t\t\t\"y\": 0.616048\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.577979,\n\t\t\t\t\"y\": 0.628918\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.563881,\n\t\t\t\t\"y\": 0.643455\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.555162,\n\t\t\t\t\"y\": 0.661529\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.567869,\n\t\t\t\t\"y\": 0.671771\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.586363,\n\t\t\t\t\"y\": 0.663653\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.603393,\n\t\t\t\t\"y\": 0.652673\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.619625,\n\t\t\t\t\"y\": 0.640533\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.635221,\n\t\t\t\t\"y\": 0.627581\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.650207,\n\t\t\t\t\"y\": 0.613926\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.664733,\n\t\t\t\t\"y\": 0.612114\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.679643,\n\t\t\t\t\"y\": 0.625852\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.695158,\n\t\t\t\t\"y\": 0.638901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.711305,\n\t\t\t\t\"y\": 0.651155\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.728211,\n\t\t\t\t\"y\": 0.662328\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.746438,\n\t\t\t\t\"y\": 0.671086\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.761794,\n\t\t\t\t\"y\": 0.664148\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.75452,\n\t\t\t\t\"y\": 0.645559\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.740807,\n\t\t\t\t\"y\": 0.630671\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.725261,\n\t\t\t\t\"y\": 0.617663\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.709159,\n\t\t\t\t\"y\": 0.605347\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.693154,\n\t\t\t\t\"y\": 0.592906\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.680301,\n\t\t\t\t\"y\": 0.577607\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.688886,\n\t\t\t\t\"y\": 0.560169\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.703754,\n\t\t\t\t\"y\": 0.546389\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.718996,\n\t\t\t\t\"y\": 0.533019\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.733965,\n\t\t\t\t\"y\": 0.519344\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.747948,\n\t\t\t\t\"y\": 0.504671\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.243148,\n\t\t\t\t\"y\": 0.486857\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.257618,\n\t\t\t\t\"y\": 0.476199\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.276328,\n\t\t\t\t\"y\": 0.483189\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.291466,\n\t\t\t\t\"y\": 0.496633\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.3052,\n\t\t\t\t\"y\": 0.511553\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.319035,\n\t\t\t\t\"y\": 0.526378\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.333446,\n\t\t\t\t\"y\": 0.540642\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.347845,\n\t\t\t\t\"y\": 0.542478\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.362288,\n\t\t\t\t\"y\": 0.528245\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.376205,\n\t\t\t\t\"y\": 0.513498\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.389883,\n\t\t\t\t\"y\": 0.498526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.40472,\n\t\t\t\t\"y\": 0.484736\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.422936,\n\t\t\t\t\"y\": 0.476411\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.439706,\n\t\t\t\t\"y\": 0.484257\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.432757,\n\t\t\t\t\"y\": 0.502628\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.419017,\n\t\t\t\t\"y\": 0.517523\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.404122,\n\t\t\t\t\"y\": 0.531279\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.388888,\n\t\t\t\t\"y\": 0.544658\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.373898,\n\t\t\t\t\"y\": 0.558308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.36318,\n\t\t\t\t\"y\": 0.575005\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.374313,\n\t\t\t\t\"y\": 0.591217\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.390231,\n\t\t\t\t\"y\": 0.603766\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.40636,\n\t\t\t\t\"y\": 0.616048\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.422021,\n\t\t\t\t\"y\": 0.628918\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.436119,\n\t\t\t\t\"y\": 0.643455\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.444838,\n\t\t\t\t\"y\": 0.661529\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.432131,\n\t\t\t\t\"y\": 0.671771\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.413637,\n\t\t\t\t\"y\": 0.663653\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.396607,\n\t\t\t\t\"y\": 0.652673\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.380375,\n\t\t\t\t\"y\": 0.640533\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.364779,\n\t\t\t\t\"y\": 0.627581\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.349793,\n\t\t\t\t\"y\": 0.613926\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.335267,\n\t\t\t\t\"y\": 0.612114\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.320357,\n\t\t\t\t\"y\": 0.625852\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.304842,\n\t\t\t\t\"y\": 0.638901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.288695,\n\t\t\t\t\"y\": 0.651155\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.271789,\n\t\t\t\t\"y\": 0.662328\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.253562,\n\t\t\t\t\"y\": 0.671086\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.238206,\n\t\t\t\t\"y\": 0.664148\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.24548,\n\t\t\t\t\"y\": 0.645559\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.259193,\n\t\t\t\t\"y\": 0.630671\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.274739,\n\t\t\t\t\"y\": 0.617663\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.290841,\n\t\t\t\t\"y\": 0.605347\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.306846,\n\t\t\t\t\"y\": 0.592906\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.319699,\n\t\t\t\t\"y\": 0.577607\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.311114,\n\t\t\t\t\"y\": 0.560169\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.296246,\n\t\t\t\t\"y\": 0.546389\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.281004,\n\t\t\t\t\"y\": 0.533019\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.266035,\n\t\t\t\t\"y\": 0.519344\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.252052,\n\t\t\t\t\"y\": 0.504671\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.437209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 3.4834e-10\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.437209\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.345081,\n\t\t\t\t\"y\": 0.254813\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.346346,\n\t\t\t\t\"y\": 0.235693\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.350113,\n\t\t\t\t\"y\": 0.216906\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.356305,\n\t\t\t\t\"y\": 0.198776\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.364798,\n\t\t\t\t\"y\": 0.181606\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.375425,\n\t\t\t\t\"y\": 0.165674\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.387989,\n\t\t\t\t\"y\": 0.151224\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.402263,\n\t\t\t\t\"y\": 0.13847\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.418006,\n\t\t\t\t\"y\": 0.127586\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.43496,\n\t\t\t\t\"y\": 0.118716\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.452863,\n\t\t\t\t\"y\": 0.111971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.471446,\n\t\t\t\t\"y\": 0.10743\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.490436,\n\t\t\t\t\"y\": 0.105147\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.509564,\n\t\t\t\t\"y\": 0.105147\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.528554,\n\t\t\t\t\"y\": 0.10743\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.547137,\n\t\t\t\t\"y\": 0.111971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.56504,\n\t\t\t\t\"y\": 0.118716\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.581994,\n\t\t\t\t\"y\": 0.127586\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.597737,\n\t\t\t\t\"y\": 0.13847\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.612011,\n\t\t\t\t\"y\": 0.151224\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.624575,\n\t\t\t\t\"y\": 0.165674\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.635202,\n\t\t\t\t\"y\": 0.181606\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.643695,\n\t\t\t\t\"y\": 0.198776\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.649887,\n\t\t\t\t\"y\": 0.216906\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.653654,\n\t\t\t\t\"y\": 0.235693\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654919,\n\t\t\t\t\"y\": 0.254813\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.653654,\n\t\t\t\t\"y\": 0.273934\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.649887,\n\t\t\t\t\"y\": 0.292721\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.643695,\n\t\t\t\t\"y\": 0.310851\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.635202,\n\t\t\t\t\"y\": 0.328021\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.624575,\n\t\t\t\t\"y\": 0.343953\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.612011,\n\t\t\t\t\"y\": 0.358402\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.597737,\n\t\t\t\t\"y\": 0.371157\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.581994,\n\t\t\t\t\"y\": 0.382041\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.56504,\n\t\t\t\t\"y\": 0.390911\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.547137,\n\t\t\t\t\"y\": 0.397656\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.528554,\n\t\t\t\t\"y\": 0.402197\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.509564,\n\t\t\t\t\"y\": 0.40448\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.490436,\n\t\t\t\t\"y\": 0.40448\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.471446,\n\t\t\t\t\"y\": 0.402197\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.452863,\n\t\t\t\t\"y\": 0.397656\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.43496,\n\t\t\t\t\"y\": 0.390911\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.418006,\n\t\t\t\t\"y\": 0.382041\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.402263,\n\t\t\t\t\"y\": 0.371157\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.387989,\n\t\t\t\t\"y\": 0.358402\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.375425,\n\t\t\t\t\"y\": 0.343953\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.364798,\n\t\t\t\t\"y\": 0.328021\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.356305,\n\t\t\t\t\"y\": 0.310851\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.350113,\n\t\t\t\t\"y\": 0.292721\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.346346,\n\t\t\t\t\"y\": 0.273934\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t]\n\t}\n};\n\n/***/ }),\n/* 146 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__.p + \"EmojiBackground.5da8c62d.png\";\n\n/***/ }),\n/* 147 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(71);\n\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// emojimation.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 147);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 23d3a9113317dc632963","var core = module.exports = {version: '2.4.0'};\nif(typeof __e == 'number')__e = core; // eslint-disable-line no-undef\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/~/core-js/library/modules/_core.js\n// module id = 0\n// module chunks = 0","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\nif(typeof __g == 'number')__g = global; // eslint-disable-line no-undef\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/~/core-js/library/modules/_global.js\n// module id = 1\n// module chunks = 0","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function(){\n  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/~/core-js/library/modules/_descriptors.js\n// module id = 2\n// module chunks = 0","var global    = require('./_global')\n  , core      = require('./_core')\n  , ctx       = require('./_ctx')\n  , hide      = require('./_hide')\n  , PROTOTYPE = 'prototype';\n\nvar $export = function(type, name, source){\n  var IS_FORCED = type & $export.F\n    , IS_GLOBAL = type & $export.G\n    , IS_STATIC = type & $export.S\n    , IS_PROTO  = type & $export.P\n    , IS_BIND   = type & $export.B\n    , IS_WRAP   = type & $export.W\n    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})\n    , expProto  = exports[PROTOTYPE]\n    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE]\n    , key, own, out;\n  if(IS_GLOBAL)source = name;\n  for(key in source){\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if(own && key in exports)continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function(C){\n      var F = function(a, b, c){\n        if(this instanceof C){\n          switch(arguments.length){\n            case 0: return new C;\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if(IS_PROTO){\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if(type & $export.R && expProto && !expProto[key])hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library` \nmodule.exports = $export;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/~/core-js/library/modules/_export.js\n// module id = 3\n// module chunks = 0","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function(it, key){\n  return hasOwnProperty.call(it, key);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/~/core-js/library/modules/_has.js\n// module id = 4\n// module chunks = 0","var anObject       = require('./_an-object')\n  , IE8_DOM_DEFINE = require('./_ie8-dom-define')\n  , toPrimitive    = require('./_to-primitive')\n  , dP             = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes){\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if(IE8_DOM_DEFINE)try {\n    return dP(O, P, Attributes);\n  } catch(e){ /* empty */ }\n  if('get' in Attributes || 'set' in Attributes)throw TypeError('Accessors not supported!');\n  if('value' in Attributes)O[P] = Attributes.value;\n  return O;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/~/core-js/library/modules/_object-dp.js\n// module id = 5\n// module chunks = 0","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject')\n  , defined = require('./_defined');\nmodule.exports = function(it){\n  return IObject(defined(it));\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/~/core-js/library/modules/_to-iobject.js\n// module id = 6\n// module chunks = 0","module.exports = function(exec){\n  try {\n    return !!exec();\n  } catch(e){\n    return true;\n  }\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/~/core-js/library/modules/_fails.js\n// module id = 8\n// module chunks = 0","var dP         = require('./_object-dp')\n  , createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function(object, key, value){\n  return dP.f(object, key, createDesc(1, value));\n} : function(object, key, value){\n  object[key] = value;\n  return object;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/~/core-js/library/modules/_hide.js\n// module id = 9\n// module chunks = 0","// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys       = require('./_object-keys-internal')\n  , enumBugKeys = require('./_enum-bug-keys');\n\nmodule.exports = Object.keys || function keys(O){\n  return $keys(O, enumBugKeys);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/~/core-js/library/modules/_object-keys.js\n// module id = 10\n// module chunks = 0","var store      = require('./_shared')('wks')\n  , uid        = require('./_uid')\n  , Symbol     = require('./_global').Symbol\n  , USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function(name){\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/~/core-js/library/modules/_wks.js\n// module id = 11\n// module chunks = 0","var isObject = require('./_is-object');\nmodule.exports = function(it){\n  if(!isObject(it))throw TypeError(it + ' is not an object!');\n  return it;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/~/core-js/library/modules/_an-object.js\n// module id = 12\n// module chunks = 0","module.exports = function(it){\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/~/core-js/library/modules/_is-object.js\n// module id = 13\n// module chunks = 0","import constant from \"./constant\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-interpolate/src/color.js\n// module id = 14\n// module chunks = 0","exports.f = {}.propertyIsEnumerable;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/~/core-js/library/modules/_object-pie.js\n// module id = 15\n// module chunks = 0","module.exports = function(bitmap, value){\n  return {\n    enumerable  : !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable    : !(bitmap & 4),\n    value       : value\n  };\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/~/core-js/library/modules/_property-desc.js\n// module id = 16\n// module chunks = 0","// 7.1.13 ToObject(argument)\nvar defined = require('./_defined');\nmodule.exports = function(it){\n  return Object(defined(it));\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/~/core-js/library/modules/_to-object.js\n// module id = 17\n// module chunks = 0","var id = 0\n  , px = Math.random();\nmodule.exports = function(key){\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/~/core-js/library/modules/_uid.js\n// module id = 18\n// module chunks = 0","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-interpolate/src/number.js\n// module id = 19\n// module chunks = 0","\"use strict\";\n\nexports.__esModule = true;\n\nvar _assign = require(\"../core-js/object/assign\");\n\nvar _assign2 = _interopRequireDefault(_assign);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _assign2.default || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/helpers/extends.js\n// module id = 20\n// module chunks = 0","\"use strict\";\n\nexports.__esModule = true;\n\nvar _iterator = require(\"../core-js/symbol/iterator\");\n\nvar _iterator2 = _interopRequireDefault(_iterator);\n\nvar _symbol = require(\"../core-js/symbol\");\n\nvar _symbol2 = _interopRequireDefault(_symbol);\n\nvar _typeof = typeof _symbol2.default === \"function\" && typeof _iterator2.default === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof _symbol2.default === \"function\" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? \"symbol\" : typeof obj; };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = typeof _symbol2.default === \"function\" && _typeof(_iterator2.default) === \"symbol\" ? function (obj) {\n  return typeof obj === \"undefined\" ? \"undefined\" : _typeof(obj);\n} : function (obj) {\n  return obj && typeof _symbol2.default === \"function\" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? \"symbol\" : typeof obj === \"undefined\" ? \"undefined\" : _typeof(obj);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/helpers/typeof.js\n// module id = 21\n// module chunks = 0","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function(it){\n  if(it == undefined)throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/~/core-js/library/modules/_defined.js\n// module id = 22\n// module chunks = 0","// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/~/core-js/library/modules/_enum-bug-keys.js\n// module id = 23\n// module chunks = 0","module.exports = {};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/~/core-js/library/modules/_iterators.js\n// module id = 24\n// module chunks = 0","module.exports = true;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/~/core-js/library/modules/_library.js\n// module id = 25\n// module chunks = 0","// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\nvar anObject    = require('./_an-object')\n  , dPs         = require('./_object-dps')\n  , enumBugKeys = require('./_enum-bug-keys')\n  , IE_PROTO    = require('./_shared-key')('IE_PROTO')\n  , Empty       = function(){ /* empty */ }\n  , PROTOTYPE   = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function(){\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = require('./_dom-create')('iframe')\n    , i      = enumBugKeys.length\n    , lt     = '<'\n    , gt     = '>'\n    , iframeDocument;\n  iframe.style.display = 'none';\n  require('./_html').appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while(i--)delete createDict[PROTOTYPE][enumBugKeys[i]];\n  return createDict();\n};\n\nmodule.exports = Object.create || function create(O, Properties){\n  var result;\n  if(O !== null){\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty;\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/~/core-js/library/modules/_object-create.js\n// module id = 26\n// module chunks = 0","exports.f = Object.getOwnPropertySymbols;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/~/core-js/library/modules/_object-gops.js\n// module id = 27\n// module chunks = 0","var def = require('./_object-dp').f\n  , has = require('./_has')\n  , TAG = require('./_wks')('toStringTag');\n\nmodule.exports = function(it, tag, stat){\n  if(it && !has(it = stat ? it : it.prototype, TAG))def(it, TAG, {configurable: true, value: tag});\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/~/core-js/library/modules/_set-to-string-tag.js\n// module id = 28\n// module chunks = 0","var shared = require('./_shared')('keys')\n  , uid    = require('./_uid');\nmodule.exports = function(key){\n  return shared[key] || (shared[key] = uid(key));\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/~/core-js/library/modules/_shared-key.js\n// module id = 29\n// module chunks = 0","var global = require('./_global')\n  , SHARED = '__core-js_shared__'\n  , store  = global[SHARED] || (global[SHARED] = {});\nmodule.exports = function(key){\n  return store[key] || (store[key] = {});\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/~/core-js/library/modules/_shared.js\n// module id = 30\n// module chunks = 0","// 7.1.4 ToInteger\nvar ceil  = Math.ceil\n  , floor = Math.floor;\nmodule.exports = function(it){\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/~/core-js/library/modules/_to-integer.js\n// module id = 31\n// module chunks = 0","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function(it, S){\n  if(!isObject(it))return it;\n  var fn, val;\n  if(S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;\n  if(typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it)))return val;\n  if(!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/~/core-js/library/modules/_to-primitive.js\n// module id = 32\n// module chunks = 0","var global         = require('./_global')\n  , core           = require('./_core')\n  , LIBRARY        = require('./_library')\n  , wksExt         = require('./_wks-ext')\n  , defineProperty = require('./_object-dp').f;\nmodule.exports = function(name){\n  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});\n  if(name.charAt(0) != '_' && !(name in $Symbol))defineProperty($Symbol, name, {value: wksExt.f(name)});\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/~/core-js/library/modules/_wks-define.js\n// module id = 33\n// module chunks = 0","exports.f = require('./_wks');\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/~/core-js/library/modules/_wks-ext.js\n// module id = 34\n// module chunks = 0","import define, {extend} from \"./define\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex3 = /^#([0-9a-f]{3})$/,\n    reHex6 = /^#([0-9a-f]{6})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nexport default function color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-color/src/color.js\n// module id = 35\n// module chunks = 0","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-color/src/define.js\n// module id = 36\n// module chunks = 0","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-interpolate/src/basis.js\n// module id = 37\n// module chunks = 0","import {color} from \"d3-color\";\nimport rgb from \"./rgb\";\nimport array from \"./array\";\nimport date from \"./date\";\nimport number from \"./number\";\nimport object from \"./object\";\nimport string from \"./string\";\nimport constant from \"./constant\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-interpolate/src/value.js\n// module id = 38\n// module chunks = 0","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof requestAnimationFrame === \"function\" ? requestAnimationFrame : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow;\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, delay);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clockNow, interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-timer/src/timer.js\n// module id = 40\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_41__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}\n// module id = 41\n// module chunks = 0","module.exports = { \"default\": require(\"core-js/library/fn/object/define-property\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/core-js/object/define-property.js\n// module id = 42\n// module chunks = 0","module.exports = { \"default\": require(\"core-js/library/fn/object/get-prototype-of\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/core-js/object/get-prototype-of.js\n// module id = 43\n// module chunks = 0","module.exports = { \"default\": require(\"core-js/library/fn/object/keys\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/core-js/object/keys.js\n// module id = 44\n// module chunks = 0","\"use strict\";\n\nexports.__esModule = true;\n\nexports.default = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/helpers/classCallCheck.js\n// module id = 45\n// module chunks = 0","\"use strict\";\n\nexports.__esModule = true;\n\nvar _defineProperty = require(\"../core-js/object/define-property\");\n\nvar _defineProperty2 = _interopRequireDefault(_defineProperty);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      (0, _defineProperty2.default)(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/helpers/createClass.js\n// module id = 46\n// module chunks = 0","\"use strict\";\n\nexports.__esModule = true;\n\nvar _defineProperty = require(\"../core-js/object/define-property\");\n\nvar _defineProperty2 = _interopRequireDefault(_defineProperty);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (obj, key, value) {\n  if (key in obj) {\n    (0, _defineProperty2.default)(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/helpers/defineProperty.js\n// module id = 47\n// module chunks = 0","\"use strict\";\n\nexports.__esModule = true;\n\nvar _setPrototypeOf = require(\"../core-js/object/set-prototype-of\");\n\nvar _setPrototypeOf2 = _interopRequireDefault(_setPrototypeOf);\n\nvar _create = require(\"../core-js/object/create\");\n\nvar _create2 = _interopRequireDefault(_create);\n\nvar _typeof2 = require(\"../helpers/typeof\");\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : (0, _typeof3.default)(superClass)));\n  }\n\n  subClass.prototype = (0, _create2.default)(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf2.default ? (0, _setPrototypeOf2.default)(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/helpers/inherits.js\n// module id = 48\n// module chunks = 0","\"use strict\";\n\nexports.__esModule = true;\n\nvar _typeof2 = require(\"../helpers/typeof\");\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && ((typeof call === \"undefined\" ? \"undefined\" : (0, _typeof3.default)(call)) === \"object\" || typeof call === \"function\") ? call : self;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/helpers/possibleConstructorReturn.js\n// module id = 49\n// module chunks = 0","var toString = {}.toString;\n\nmodule.exports = function(it){\n  return toString.call(it).slice(8, -1);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/~/core-js/library/modules/_cof.js\n// module id = 50\n// module chunks = 0","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function(fn, that, length){\n  aFunction(fn);\n  if(that === undefined)return fn;\n  switch(length){\n    case 1: return function(a){\n      return fn.call(that, a);\n    };\n    case 2: return function(a, b){\n      return fn.call(that, a, b);\n    };\n    case 3: return function(a, b, c){\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function(/* ...args */){\n    return fn.apply(that, arguments);\n  };\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/~/core-js/library/modules/_ctx.js\n// module id = 51\n// module chunks = 0","var isObject = require('./_is-object')\n  , document = require('./_global').document\n  // in old IE typeof document.createElement is 'object'\n  , is = isObject(document) && isObject(document.createElement);\nmodule.exports = function(it){\n  return is ? document.createElement(it) : {};\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/~/core-js/library/modules/_dom-create.js\n// module id = 52\n// module chunks = 0","module.exports = !require('./_descriptors') && !require('./_fails')(function(){\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', {get: function(){ return 7; }}).a != 7;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/~/core-js/library/modules/_ie8-dom-define.js\n// module id = 53\n// module chunks = 0","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/~/core-js/library/modules/_iobject.js\n// module id = 54\n// module chunks = 0","'use strict';\nvar LIBRARY        = require('./_library')\n  , $export        = require('./_export')\n  , redefine       = require('./_redefine')\n  , hide           = require('./_hide')\n  , has            = require('./_has')\n  , Iterators      = require('./_iterators')\n  , $iterCreate    = require('./_iter-create')\n  , setToStringTag = require('./_set-to-string-tag')\n  , getPrototypeOf = require('./_object-gpo')\n  , ITERATOR       = require('./_wks')('iterator')\n  , BUGGY          = !([].keys && 'next' in [].keys()) // Safari has buggy iterators w/o `next`\n  , FF_ITERATOR    = '@@iterator'\n  , KEYS           = 'keys'\n  , VALUES         = 'values';\n\nvar returnThis = function(){ return this; };\n\nmodule.exports = function(Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED){\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function(kind){\n    if(!BUGGY && kind in proto)return proto[kind];\n    switch(kind){\n      case KEYS: return function keys(){ return new Constructor(this, kind); };\n      case VALUES: return function values(){ return new Constructor(this, kind); };\n    } return function entries(){ return new Constructor(this, kind); };\n  };\n  var TAG        = NAME + ' Iterator'\n    , DEF_VALUES = DEFAULT == VALUES\n    , VALUES_BUG = false\n    , proto      = Base.prototype\n    , $native    = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT]\n    , $default   = $native || getMethod(DEFAULT)\n    , $entries   = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined\n    , $anyNative = NAME == 'Array' ? proto.entries || $native : $native\n    , methods, key, IteratorPrototype;\n  // Fix native\n  if($anyNative){\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base));\n    if(IteratorPrototype !== Object.prototype){\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if(!LIBRARY && !has(IteratorPrototype, ITERATOR))hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if(DEF_VALUES && $native && $native.name !== VALUES){\n    VALUES_BUG = true;\n    $default = function values(){ return $native.call(this); };\n  }\n  // Define iterator\n  if((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])){\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG]  = returnThis;\n  if(DEFAULT){\n    methods = {\n      values:  DEF_VALUES ? $default : getMethod(VALUES),\n      keys:    IS_SET     ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if(FORCED)for(key in methods){\n      if(!(key in proto))redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/~/core-js/library/modules/_iter-define.js\n// module id = 55\n// module chunks = 0","var pIE            = require('./_object-pie')\n  , createDesc     = require('./_property-desc')\n  , toIObject      = require('./_to-iobject')\n  , toPrimitive    = require('./_to-primitive')\n  , has            = require('./_has')\n  , IE8_DOM_DEFINE = require('./_ie8-dom-define')\n  , gOPD           = Object.getOwnPropertyDescriptor;\n\nexports.f = require('./_descriptors') ? gOPD : function getOwnPropertyDescriptor(O, P){\n  O = toIObject(O);\n  P = toPrimitive(P, true);\n  if(IE8_DOM_DEFINE)try {\n    return gOPD(O, P);\n  } catch(e){ /* empty */ }\n  if(has(O, P))return createDesc(!pIE.f.call(O, P), O[P]);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/~/core-js/library/modules/_object-gopd.js\n// module id = 56\n// module chunks = 0","// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)\nvar $keys      = require('./_object-keys-internal')\n  , hiddenKeys = require('./_enum-bug-keys').concat('length', 'prototype');\n\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O){\n  return $keys(O, hiddenKeys);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/~/core-js/library/modules/_object-gopn.js\n// module id = 57\n// module chunks = 0","// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\nvar has         = require('./_has')\n  , toObject    = require('./_to-object')\n  , IE_PROTO    = require('./_shared-key')('IE_PROTO')\n  , ObjectProto = Object.prototype;\n\nmodule.exports = Object.getPrototypeOf || function(O){\n  O = toObject(O);\n  if(has(O, IE_PROTO))return O[IE_PROTO];\n  if(typeof O.constructor == 'function' && O instanceof O.constructor){\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto : null;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/~/core-js/library/modules/_object-gpo.js\n// module id = 58\n// module chunks = 0","var has          = require('./_has')\n  , toIObject    = require('./_to-iobject')\n  , arrayIndexOf = require('./_array-includes')(false)\n  , IE_PROTO     = require('./_shared-key')('IE_PROTO');\n\nmodule.exports = function(object, names){\n  var O      = toIObject(object)\n    , i      = 0\n    , result = []\n    , key;\n  for(key in O)if(key != IE_PROTO)has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while(names.length > i)if(has(O, key = names[i++])){\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/~/core-js/library/modules/_object-keys-internal.js\n// module id = 59\n// module chunks = 0","// most Object methods by ES6 should accept primitives\nvar $export = require('./_export')\n  , core    = require('./_core')\n  , fails   = require('./_fails');\nmodule.exports = function(KEY, exec){\n  var fn  = (core.Object || {})[KEY] || Object[KEY]\n    , exp = {};\n  exp[KEY] = exec(fn);\n  $export($export.S + $export.F * fails(function(){ fn(1); }), 'Object', exp);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/~/core-js/library/modules/_object-sap.js\n// module id = 60\n// module chunks = 0","module.exports = require('./_hide');\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/~/core-js/library/modules/_redefine.js\n// module id = 61\n// module chunks = 0","export var deg2rad = Math.PI / 180;\nexport var rad2deg = 180 / Math.PI;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-color/src/math.js\n// module id = 62\n// module chunks = 0","import value from \"./value\";\n\nexport default function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(nb),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-interpolate/src/array.js\n// module id = 63\n// module chunks = 0","import {basis} from \"./basis\";\n\nexport default function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-interpolate/src/basisClosed.js\n// module id = 64\n// module chunks = 0","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-interpolate/src/constant.js\n// module id = 65\n// module chunks = 0","export default function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-interpolate/src/date.js\n// module id = 66\n// module chunks = 0","import value from \"./value\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-interpolate/src/object.js\n// module id = 67\n// module chunks = 0","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis\";\nimport basisClosed from \"./basisClosed\";\nimport nogamma, {gamma} from \"./color\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-interpolate/src/rgb.js\n// module id = 68\n// module chunks = 0","import number from \"./number\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-interpolate/src/string.js\n// module id = 69\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _NodeGroup = require('./NodeGroup');\n\nvar _NodeGroup2 = _interopRequireDefault(_NodeGroup);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _NodeGroup2.default; /* eslint-disable flowtype/require-valid-file-annotation */\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/resonance/NodeGroup/index.js\n// module id = 70\n// module chunks = 0","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\nimport { NodeGroup } from 'resonance';\n\nimport emotions from '../public/emotions.json';\nimport background from '../public/EmojiBackground.png';\n\nclass Tweener extends Component {\n  componentWillMount() {\n    //define d3 drawing functions\n    const x = d3.scaleLinear()\n      .rangeRound([0, 1000]);\n    const y = d3.scaleLinear()\n      .rangeRound([0, 1000]);\n    this.line = d3.line()\n      .curve(d3.curveBasisClosed)\n      .x(function (d) { return x(+d.x); })\n      .y(function (d) { return y(1 - +d.y); });\n    //create svg shading def\n    this.svgShading = (\n      <defs>\n        <pattern id=\"image0\" x=\"0%\" y=\"0%\" height=\"100%\" width=\"100%\"\n          viewBox=\"0 0 512 512\"\n          preserveAspectRatio=\"none\"\n        >\n          <image x=\"0%\" y=\"0%\" width=\"512\" height=\"512\" xlinkHref={background}></image>\n        </pattern>\n      </defs >\n    )\n  }\n\n  render() {\n    const emotion = this.props.emotion === 'upside_down_face' ? 'slightly_smiling_face' : this.props.emotion;\n\n    const { le, re, lb, rb, mouth, head, tongue } = emotions[emotion];\n    const headColor = this.props.headColor;\n    const tongueColor = this.props.tongueColor;\n    const eyeColor = this.props.eyeColor;\n    const browColor = this.props.browColor;\n    const mouthColor = this.props.mouthColor;\n\n    const dataArray = [\n      { key: \"head\", data: head, fill: headColor },\n      { key: \"headImg\", data: head, fill: \"url(#image0)\" },\n      { key: \"le\", data: le, fill: eyeColor },\n      { key: \"re\", data: re, fill: eyeColor },\n      { key: \"lb\", data: lb, fill: browColor },\n      { key: \"rb\", data: rb, fill: browColor },\n      { key: \"mouth\", data: mouth, fill: mouthColor },\n      { key: \"tongue\", data: tongue, fill: tongueColor }\n    ];\n\n    return (\n      <div style={{ width: this.props.width, height: this.props.height, position: 'relative', ...this.props.style }}>\n        <svg\n          viewBox=\"0 0 1000 1000\"\n          preserveAspectRatio=\"none\"\n          style={{\n            position: 'absolute',\n            left: 0, top: 0, width: '100%', height: '100%',\n          }}\n        >\n          {this.svgShading}\n          <NodeGroup\n            data={dataArray}\n            keyAccessor={(d, i) => {\n              return d.key;\n            }}\n            start={(data) => ({\n              opacity: 1,\n              fill: [data.fill],\n              d: [this.line(data.data)]\n            })}\n            update={(data, i) => ({\n              opacity: [1],\n              fill: [data.fill],\n              transform: [this.props.emotion === \"upside_down_face\" ? \"rotate(180, 500, 500)\" : \"rotate(0, 500, 500)\"],\n              d: [this.line(data.data)],\n              timing: { duration: this.props.duration },\n            })}\n          >\n            {(nodes) => {\n              return (\n                <g>\n                  {nodes.map(({ key, data, state }) => {\n                    return (\n                      <path key={key}{...state} />\n                    )\n                  })}\n                </g>\n              )\n            }}\n          </NodeGroup>\n        </svg>\n      </div>\n    )\n  }\n}\n\nTweener.propTypes = {\n  width: PropTypes.string,\n  height: PropTypes.string,\n  emotion: PropTypes.string,\n  responsive: PropTypes.bool,\n  headColor: PropTypes.string,\n  tongueColor: PropTypes.string,\n  eyeColor: PropTypes.string,\n  mouthColor: PropTypes.string,\n  browColor: PropTypes.string,\n  duration: PropTypes.number\n};\n\nTweener.defaultProps = {\n  width: '200px',\n  height: '200px',\n  emotion: 'joy',\n  responsive: true,\n  headColor: 'yellow',\n  tongueColor: 'red',\n  eyeColor: 'black',\n  mouthColor: 'black',\n  browColor: 'black',\n  duration: 800\n};\n\nexport default Tweener;\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","module.exports = { \"default\": require(\"core-js/library/fn/object/assign\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/core-js/object/assign.js\n// module id = 72\n// module chunks = 0","module.exports = { \"default\": require(\"core-js/library/fn/object/create\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/core-js/object/create.js\n// module id = 73\n// module chunks = 0","module.exports = { \"default\": require(\"core-js/library/fn/object/set-prototype-of\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/core-js/object/set-prototype-of.js\n// module id = 74\n// module chunks = 0","module.exports = { \"default\": require(\"core-js/library/fn/symbol\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/core-js/symbol.js\n// module id = 75\n// module chunks = 0","module.exports = { \"default\": require(\"core-js/library/fn/symbol/iterator\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/core-js/symbol/iterator.js\n// module id = 76\n// module chunks = 0","require('../../modules/es6.object.assign');\nmodule.exports = require('../../modules/_core').Object.assign;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/~/core-js/library/fn/object/assign.js\n// module id = 77\n// module chunks = 0","require('../../modules/es6.object.create');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function create(P, D){\n  return $Object.create(P, D);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/~/core-js/library/fn/object/create.js\n// module id = 78\n// module chunks = 0","require('../../modules/es6.object.define-property');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function defineProperty(it, key, desc){\n  return $Object.defineProperty(it, key, desc);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/~/core-js/library/fn/object/define-property.js\n// module id = 79\n// module chunks = 0","require('../../modules/es6.object.get-prototype-of');\nmodule.exports = require('../../modules/_core').Object.getPrototypeOf;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/~/core-js/library/fn/object/get-prototype-of.js\n// module id = 80\n// module chunks = 0","require('../../modules/es6.object.keys');\nmodule.exports = require('../../modules/_core').Object.keys;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/~/core-js/library/fn/object/keys.js\n// module id = 81\n// module chunks = 0","require('../../modules/es6.object.set-prototype-of');\nmodule.exports = require('../../modules/_core').Object.setPrototypeOf;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/~/core-js/library/fn/object/set-prototype-of.js\n// module id = 82\n// module chunks = 0","require('../../modules/es6.symbol');\nrequire('../../modules/es6.object.to-string');\nrequire('../../modules/es7.symbol.async-iterator');\nrequire('../../modules/es7.symbol.observable');\nmodule.exports = require('../../modules/_core').Symbol;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/~/core-js/library/fn/symbol/index.js\n// module id = 83\n// module chunks = 0","require('../../modules/es6.string.iterator');\nrequire('../../modules/web.dom.iterable');\nmodule.exports = require('../../modules/_wks-ext').f('iterator');\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/~/core-js/library/fn/symbol/iterator.js\n// module id = 84\n// module chunks = 0","module.exports = function(it){\n  if(typeof it != 'function')throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/~/core-js/library/modules/_a-function.js\n// module id = 85\n// module chunks = 0","module.exports = function(){ /* empty */ };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/~/core-js/library/modules/_add-to-unscopables.js\n// module id = 86\n// module chunks = 0","// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject')\n  , toLength  = require('./_to-length')\n  , toIndex   = require('./_to-index');\nmodule.exports = function(IS_INCLUDES){\n  return function($this, el, fromIndex){\n    var O      = toIObject($this)\n      , length = toLength(O.length)\n      , index  = toIndex(fromIndex, length)\n      , value;\n    // Array#includes uses SameValueZero equality algorithm\n    if(IS_INCLUDES && el != el)while(length > index){\n      value = O[index++];\n      if(value != value)return true;\n    // Array#toIndex ignores holes, Array#includes - not\n    } else for(;length > index; index++)if(IS_INCLUDES || index in O){\n      if(O[index] === el)return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/~/core-js/library/modules/_array-includes.js\n// module id = 87\n// module chunks = 0","// all enumerable object keys, includes symbols\nvar getKeys = require('./_object-keys')\n  , gOPS    = require('./_object-gops')\n  , pIE     = require('./_object-pie');\nmodule.exports = function(it){\n  var result     = getKeys(it)\n    , getSymbols = gOPS.f;\n  if(getSymbols){\n    var symbols = getSymbols(it)\n      , isEnum  = pIE.f\n      , i       = 0\n      , key;\n    while(symbols.length > i)if(isEnum.call(it, key = symbols[i++]))result.push(key);\n  } return result;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/~/core-js/library/modules/_enum-keys.js\n// module id = 88\n// module chunks = 0","module.exports = require('./_global').document && document.documentElement;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/~/core-js/library/modules/_html.js\n// module id = 89\n// module chunks = 0","// 7.2.2 IsArray(argument)\nvar cof = require('./_cof');\nmodule.exports = Array.isArray || function isArray(arg){\n  return cof(arg) == 'Array';\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/~/core-js/library/modules/_is-array.js\n// module id = 90\n// module chunks = 0","'use strict';\nvar create         = require('./_object-create')\n  , descriptor     = require('./_property-desc')\n  , setToStringTag = require('./_set-to-string-tag')\n  , IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nrequire('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function(){ return this; });\n\nmodule.exports = function(Constructor, NAME, next){\n  Constructor.prototype = create(IteratorPrototype, {next: descriptor(1, next)});\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/~/core-js/library/modules/_iter-create.js\n// module id = 91\n// module chunks = 0","module.exports = function(done, value){\n  return {value: value, done: !!done};\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/~/core-js/library/modules/_iter-step.js\n// module id = 92\n// module chunks = 0","var getKeys   = require('./_object-keys')\n  , toIObject = require('./_to-iobject');\nmodule.exports = function(object, el){\n  var O      = toIObject(object)\n    , keys   = getKeys(O)\n    , length = keys.length\n    , index  = 0\n    , key;\n  while(length > index)if(O[key = keys[index++]] === el)return key;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/~/core-js/library/modules/_keyof.js\n// module id = 93\n// module chunks = 0","var META     = require('./_uid')('meta')\n  , isObject = require('./_is-object')\n  , has      = require('./_has')\n  , setDesc  = require('./_object-dp').f\n  , id       = 0;\nvar isExtensible = Object.isExtensible || function(){\n  return true;\n};\nvar FREEZE = !require('./_fails')(function(){\n  return isExtensible(Object.preventExtensions({}));\n});\nvar setMeta = function(it){\n  setDesc(it, META, {value: {\n    i: 'O' + ++id, // object ID\n    w: {}          // weak collections IDs\n  }});\n};\nvar fastKey = function(it, create){\n  // return primitive with prefix\n  if(!isObject(it))return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if(!has(it, META)){\n    // can't set metadata to uncaught frozen object\n    if(!isExtensible(it))return 'F';\n    // not necessary to add metadata\n    if(!create)return 'E';\n    // add missing metadata\n    setMeta(it);\n  // return object ID\n  } return it[META].i;\n};\nvar getWeak = function(it, create){\n  if(!has(it, META)){\n    // can't set metadata to uncaught frozen object\n    if(!isExtensible(it))return true;\n    // not necessary to add metadata\n    if(!create)return false;\n    // add missing metadata\n    setMeta(it);\n  // return hash weak collections IDs\n  } return it[META].w;\n};\n// add metadata on freeze-family methods calling\nvar onFreeze = function(it){\n  if(FREEZE && meta.NEED && isExtensible(it) && !has(it, META))setMeta(it);\n  return it;\n};\nvar meta = module.exports = {\n  KEY:      META,\n  NEED:     false,\n  fastKey:  fastKey,\n  getWeak:  getWeak,\n  onFreeze: onFreeze\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/~/core-js/library/modules/_meta.js\n// module id = 94\n// module chunks = 0","'use strict';\n// 19.1.2.1 Object.assign(target, source, ...)\nvar getKeys  = require('./_object-keys')\n  , gOPS     = require('./_object-gops')\n  , pIE      = require('./_object-pie')\n  , toObject = require('./_to-object')\n  , IObject  = require('./_iobject')\n  , $assign  = Object.assign;\n\n// should work with symbols and should have deterministic property order (V8 bug)\nmodule.exports = !$assign || require('./_fails')(function(){\n  var A = {}\n    , B = {}\n    , S = Symbol()\n    , K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function(k){ B[k] = k; });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source){ // eslint-disable-line no-unused-vars\n  var T     = toObject(target)\n    , aLen  = arguments.length\n    , index = 1\n    , getSymbols = gOPS.f\n    , isEnum     = pIE.f;\n  while(aLen > index){\n    var S      = IObject(arguments[index++])\n      , keys   = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S)\n      , length = keys.length\n      , j      = 0\n      , key;\n    while(length > j)if(isEnum.call(S, key = keys[j++]))T[key] = S[key];\n  } return T;\n} : $assign;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/~/core-js/library/modules/_object-assign.js\n// module id = 95\n// module chunks = 0","var dP       = require('./_object-dp')\n  , anObject = require('./_an-object')\n  , getKeys  = require('./_object-keys');\n\nmodule.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties){\n  anObject(O);\n  var keys   = getKeys(Properties)\n    , length = keys.length\n    , i = 0\n    , P;\n  while(length > i)dP.f(O, P = keys[i++], Properties[P]);\n  return O;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/~/core-js/library/modules/_object-dps.js\n// module id = 96\n// module chunks = 0","// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\nvar toIObject = require('./_to-iobject')\n  , gOPN      = require('./_object-gopn').f\n  , toString  = {}.toString;\n\nvar windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames\n  ? Object.getOwnPropertyNames(window) : [];\n\nvar getWindowNames = function(it){\n  try {\n    return gOPN(it);\n  } catch(e){\n    return windowNames.slice();\n  }\n};\n\nmodule.exports.f = function getOwnPropertyNames(it){\n  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/~/core-js/library/modules/_object-gopn-ext.js\n// module id = 97\n// module chunks = 0","// Works with __proto__ only. Old v8 can't work with null proto objects.\n/* eslint-disable no-proto */\nvar isObject = require('./_is-object')\n  , anObject = require('./_an-object');\nvar check = function(O, proto){\n  anObject(O);\n  if(!isObject(proto) && proto !== null)throw TypeError(proto + \": can't set as prototype!\");\n};\nmodule.exports = {\n  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line\n    function(test, buggy, set){\n      try {\n        set = require('./_ctx')(Function.call, require('./_object-gopd').f(Object.prototype, '__proto__').set, 2);\n        set(test, []);\n        buggy = !(test instanceof Array);\n      } catch(e){ buggy = true; }\n      return function setPrototypeOf(O, proto){\n        check(O, proto);\n        if(buggy)O.__proto__ = proto;\n        else set(O, proto);\n        return O;\n      };\n    }({}, false) : undefined),\n  check: check\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/~/core-js/library/modules/_set-proto.js\n// module id = 98\n// module chunks = 0","var toInteger = require('./_to-integer')\n  , defined   = require('./_defined');\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function(TO_STRING){\n  return function(that, pos){\n    var s = String(defined(that))\n      , i = toInteger(pos)\n      , l = s.length\n      , a, b;\n    if(i < 0 || i >= l)return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/~/core-js/library/modules/_string-at.js\n// module id = 99\n// module chunks = 0","var toInteger = require('./_to-integer')\n  , max       = Math.max\n  , min       = Math.min;\nmodule.exports = function(index, length){\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/~/core-js/library/modules/_to-index.js\n// module id = 100\n// module chunks = 0","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer')\n  , min       = Math.min;\nmodule.exports = function(it){\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/~/core-js/library/modules/_to-length.js\n// module id = 101\n// module chunks = 0","'use strict';\nvar addToUnscopables = require('./_add-to-unscopables')\n  , step             = require('./_iter-step')\n  , Iterators        = require('./_iterators')\n  , toIObject        = require('./_to-iobject');\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = require('./_iter-define')(Array, 'Array', function(iterated, kind){\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function(){\n  var O     = this._t\n    , kind  = this._k\n    , index = this._i++;\n  if(!O || index >= O.length){\n    this._t = undefined;\n    return step(1);\n  }\n  if(kind == 'keys'  )return step(0, index);\n  if(kind == 'values')return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/~/core-js/library/modules/es6.array.iterator.js\n// module id = 102\n// module chunks = 0","// 19.1.3.1 Object.assign(target, source)\nvar $export = require('./_export');\n\n$export($export.S + $export.F, 'Object', {assign: require('./_object-assign')});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/~/core-js/library/modules/es6.object.assign.js\n// module id = 103\n// module chunks = 0","var $export = require('./_export')\n// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\n$export($export.S, 'Object', {create: require('./_object-create')});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/~/core-js/library/modules/es6.object.create.js\n// module id = 104\n// module chunks = 0","var $export = require('./_export');\n// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)\n$export($export.S + $export.F * !require('./_descriptors'), 'Object', {defineProperty: require('./_object-dp').f});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/~/core-js/library/modules/es6.object.define-property.js\n// module id = 105\n// module chunks = 0","// 19.1.2.9 Object.getPrototypeOf(O)\nvar toObject        = require('./_to-object')\n  , $getPrototypeOf = require('./_object-gpo');\n\nrequire('./_object-sap')('getPrototypeOf', function(){\n  return function getPrototypeOf(it){\n    return $getPrototypeOf(toObject(it));\n  };\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/~/core-js/library/modules/es6.object.get-prototype-of.js\n// module id = 106\n// module chunks = 0","// 19.1.2.14 Object.keys(O)\nvar toObject = require('./_to-object')\n  , $keys    = require('./_object-keys');\n\nrequire('./_object-sap')('keys', function(){\n  return function keys(it){\n    return $keys(toObject(it));\n  };\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/~/core-js/library/modules/es6.object.keys.js\n// module id = 107\n// module chunks = 0","// 19.1.3.19 Object.setPrototypeOf(O, proto)\nvar $export = require('./_export');\n$export($export.S, 'Object', {setPrototypeOf: require('./_set-proto').set});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/~/core-js/library/modules/es6.object.set-prototype-of.js\n// module id = 108\n// module chunks = 0","'use strict';\nvar $at  = require('./_string-at')(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\nrequire('./_iter-define')(String, 'String', function(iterated){\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function(){\n  var O     = this._t\n    , index = this._i\n    , point;\n  if(index >= O.length)return {value: undefined, done: true};\n  point = $at(O, index);\n  this._i += point.length;\n  return {value: point, done: false};\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/~/core-js/library/modules/es6.string.iterator.js\n// module id = 110\n// module chunks = 0","'use strict';\n// ECMAScript 6 symbols shim\nvar global         = require('./_global')\n  , has            = require('./_has')\n  , DESCRIPTORS    = require('./_descriptors')\n  , $export        = require('./_export')\n  , redefine       = require('./_redefine')\n  , META           = require('./_meta').KEY\n  , $fails         = require('./_fails')\n  , shared         = require('./_shared')\n  , setToStringTag = require('./_set-to-string-tag')\n  , uid            = require('./_uid')\n  , wks            = require('./_wks')\n  , wksExt         = require('./_wks-ext')\n  , wksDefine      = require('./_wks-define')\n  , keyOf          = require('./_keyof')\n  , enumKeys       = require('./_enum-keys')\n  , isArray        = require('./_is-array')\n  , anObject       = require('./_an-object')\n  , toIObject      = require('./_to-iobject')\n  , toPrimitive    = require('./_to-primitive')\n  , createDesc     = require('./_property-desc')\n  , _create        = require('./_object-create')\n  , gOPNExt        = require('./_object-gopn-ext')\n  , $GOPD          = require('./_object-gopd')\n  , $DP            = require('./_object-dp')\n  , $keys          = require('./_object-keys')\n  , gOPD           = $GOPD.f\n  , dP             = $DP.f\n  , gOPN           = gOPNExt.f\n  , $Symbol        = global.Symbol\n  , $JSON          = global.JSON\n  , _stringify     = $JSON && $JSON.stringify\n  , PROTOTYPE      = 'prototype'\n  , HIDDEN         = wks('_hidden')\n  , TO_PRIMITIVE   = wks('toPrimitive')\n  , isEnum         = {}.propertyIsEnumerable\n  , SymbolRegistry = shared('symbol-registry')\n  , AllSymbols     = shared('symbols')\n  , OPSymbols      = shared('op-symbols')\n  , ObjectProto    = Object[PROTOTYPE]\n  , USE_NATIVE     = typeof $Symbol == 'function'\n  , QObject        = global.QObject;\n// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173\nvar setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;\n\n// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687\nvar setSymbolDesc = DESCRIPTORS && $fails(function(){\n  return _create(dP({}, 'a', {\n    get: function(){ return dP(this, 'a', {value: 7}).a; }\n  })).a != 7;\n}) ? function(it, key, D){\n  var protoDesc = gOPD(ObjectProto, key);\n  if(protoDesc)delete ObjectProto[key];\n  dP(it, key, D);\n  if(protoDesc && it !== ObjectProto)dP(ObjectProto, key, protoDesc);\n} : dP;\n\nvar wrap = function(tag){\n  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);\n  sym._k = tag;\n  return sym;\n};\n\nvar isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function(it){\n  return typeof it == 'symbol';\n} : function(it){\n  return it instanceof $Symbol;\n};\n\nvar $defineProperty = function defineProperty(it, key, D){\n  if(it === ObjectProto)$defineProperty(OPSymbols, key, D);\n  anObject(it);\n  key = toPrimitive(key, true);\n  anObject(D);\n  if(has(AllSymbols, key)){\n    if(!D.enumerable){\n      if(!has(it, HIDDEN))dP(it, HIDDEN, createDesc(1, {}));\n      it[HIDDEN][key] = true;\n    } else {\n      if(has(it, HIDDEN) && it[HIDDEN][key])it[HIDDEN][key] = false;\n      D = _create(D, {enumerable: createDesc(0, false)});\n    } return setSymbolDesc(it, key, D);\n  } return dP(it, key, D);\n};\nvar $defineProperties = function defineProperties(it, P){\n  anObject(it);\n  var keys = enumKeys(P = toIObject(P))\n    , i    = 0\n    , l = keys.length\n    , key;\n  while(l > i)$defineProperty(it, key = keys[i++], P[key]);\n  return it;\n};\nvar $create = function create(it, P){\n  return P === undefined ? _create(it) : $defineProperties(_create(it), P);\n};\nvar $propertyIsEnumerable = function propertyIsEnumerable(key){\n  var E = isEnum.call(this, key = toPrimitive(key, true));\n  if(this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key))return false;\n  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;\n};\nvar $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key){\n  it  = toIObject(it);\n  key = toPrimitive(key, true);\n  if(it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key))return;\n  var D = gOPD(it, key);\n  if(D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key]))D.enumerable = true;\n  return D;\n};\nvar $getOwnPropertyNames = function getOwnPropertyNames(it){\n  var names  = gOPN(toIObject(it))\n    , result = []\n    , i      = 0\n    , key;\n  while(names.length > i){\n    if(!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META)result.push(key);\n  } return result;\n};\nvar $getOwnPropertySymbols = function getOwnPropertySymbols(it){\n  var IS_OP  = it === ObjectProto\n    , names  = gOPN(IS_OP ? OPSymbols : toIObject(it))\n    , result = []\n    , i      = 0\n    , key;\n  while(names.length > i){\n    if(has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true))result.push(AllSymbols[key]);\n  } return result;\n};\n\n// 19.4.1.1 Symbol([description])\nif(!USE_NATIVE){\n  $Symbol = function Symbol(){\n    if(this instanceof $Symbol)throw TypeError('Symbol is not a constructor!');\n    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);\n    var $set = function(value){\n      if(this === ObjectProto)$set.call(OPSymbols, value);\n      if(has(this, HIDDEN) && has(this[HIDDEN], tag))this[HIDDEN][tag] = false;\n      setSymbolDesc(this, tag, createDesc(1, value));\n    };\n    if(DESCRIPTORS && setter)setSymbolDesc(ObjectProto, tag, {configurable: true, set: $set});\n    return wrap(tag);\n  };\n  redefine($Symbol[PROTOTYPE], 'toString', function toString(){\n    return this._k;\n  });\n\n  $GOPD.f = $getOwnPropertyDescriptor;\n  $DP.f   = $defineProperty;\n  require('./_object-gopn').f = gOPNExt.f = $getOwnPropertyNames;\n  require('./_object-pie').f  = $propertyIsEnumerable;\n  require('./_object-gops').f = $getOwnPropertySymbols;\n\n  if(DESCRIPTORS && !require('./_library')){\n    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);\n  }\n\n  wksExt.f = function(name){\n    return wrap(wks(name));\n  }\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, {Symbol: $Symbol});\n\nfor(var symbols = (\n  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14\n  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'\n).split(','), i = 0; symbols.length > i; )wks(symbols[i++]);\n\nfor(var symbols = $keys(wks.store), i = 0; symbols.length > i; )wksDefine(symbols[i++]);\n\n$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {\n  // 19.4.2.1 Symbol.for(key)\n  'for': function(key){\n    return has(SymbolRegistry, key += '')\n      ? SymbolRegistry[key]\n      : SymbolRegistry[key] = $Symbol(key);\n  },\n  // 19.4.2.5 Symbol.keyFor(sym)\n  keyFor: function keyFor(key){\n    if(isSymbol(key))return keyOf(SymbolRegistry, key);\n    throw TypeError(key + ' is not a symbol!');\n  },\n  useSetter: function(){ setter = true; },\n  useSimple: function(){ setter = false; }\n});\n\n$export($export.S + $export.F * !USE_NATIVE, 'Object', {\n  // 19.1.2.2 Object.create(O [, Properties])\n  create: $create,\n  // 19.1.2.4 Object.defineProperty(O, P, Attributes)\n  defineProperty: $defineProperty,\n  // 19.1.2.3 Object.defineProperties(O, Properties)\n  defineProperties: $defineProperties,\n  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)\n  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,\n  // 19.1.2.7 Object.getOwnPropertyNames(O)\n  getOwnPropertyNames: $getOwnPropertyNames,\n  // 19.1.2.8 Object.getOwnPropertySymbols(O)\n  getOwnPropertySymbols: $getOwnPropertySymbols\n});\n\n// 24.3.2 JSON.stringify(value [, replacer [, space]])\n$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function(){\n  var S = $Symbol();\n  // MS Edge converts symbol values to JSON as {}\n  // WebKit converts symbol values to JSON as null\n  // V8 throws on boxed symbols\n  return _stringify([S]) != '[null]' || _stringify({a: S}) != '{}' || _stringify(Object(S)) != '{}';\n})), 'JSON', {\n  stringify: function stringify(it){\n    if(it === undefined || isSymbol(it))return; // IE8 returns string on undefined\n    var args = [it]\n      , i    = 1\n      , replacer, $replacer;\n    while(arguments.length > i)args.push(arguments[i++]);\n    replacer = args[1];\n    if(typeof replacer == 'function')$replacer = replacer;\n    if($replacer || !isArray(replacer))replacer = function(key, value){\n      if($replacer)value = $replacer.call(this, key, value);\n      if(!isSymbol(value))return value;\n    };\n    args[1] = replacer;\n    return _stringify.apply($JSON, args);\n  }\n});\n\n// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)\n$Symbol[PROTOTYPE][TO_PRIMITIVE] || require('./_hide')($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);\n// 19.4.3.5 Symbol.prototype[@@toStringTag]\nsetToStringTag($Symbol, 'Symbol');\n// 20.2.1.9 Math[@@toStringTag]\nsetToStringTag(Math, 'Math', true);\n// 24.3.3 JSON[@@toStringTag]\nsetToStringTag(global.JSON, 'JSON', true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/~/core-js/library/modules/es6.symbol.js\n// module id = 111\n// module chunks = 0","require('./_wks-define')('asyncIterator');\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/~/core-js/library/modules/es7.symbol.async-iterator.js\n// module id = 112\n// module chunks = 0","require('./_wks-define')('observable');\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/~/core-js/library/modules/es7.symbol.observable.js\n// module id = 113\n// module chunks = 0","require('./es6.array.iterator');\nvar global        = require('./_global')\n  , hide          = require('./_hide')\n  , Iterators     = require('./_iterators')\n  , TO_STRING_TAG = require('./_wks')('toStringTag');\n\nfor(var collections = ['NodeList', 'DOMTokenList', 'MediaList', 'StyleSheetList', 'CSSRuleList'], i = 0; i < 5; i++){\n  var NAME       = collections[i]\n    , Collection = global[NAME]\n    , proto      = Collection && Collection.prototype;\n  if(proto && !proto[TO_STRING_TAG])hide(proto, TO_STRING_TAG, NAME);\n  Iterators[NAME] = Iterators.Array;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/~/core-js/library/modules/web.dom.iterable.js\n// module id = 114\n// module chunks = 0","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb, darker, brighter} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-color/src/cubehelix.js\n// module id = 115\n// module chunks = 0","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\nvar Kn = 18,\n    Xn = 0.950470, // D65 standard referent\n    Yn = 1,\n    Zn = 1.088830,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var b = rgb2xyz(o.r),\n      a = rgb2xyz(o.g),\n      l = rgb2xyz(o.b),\n      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nexport default function lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nexport function Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nexport function hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-color/src/lab.js\n// module id = 116\n// module chunks = 0","import {cubehelix as colorCubehelix} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction cubehelix(hue) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = colorCubehelix(start)).h, (end = colorCubehelix(end)).h),\n          s = color(start.s, end.s),\n          l = color(start.l, end.l),\n          opacity = color(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\nexport default cubehelix(hue);\nexport var cubehelixLong = cubehelix(color);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-interpolate/src/cubehelix.js\n// module id = 118\n// module chunks = 0","import {hcl as colorHcl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hcl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),\n        c = color(start.c, end.c),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hcl(hue);\nexport var hclLong = hcl(color);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-interpolate/src/hcl.js\n// module id = 119\n// module chunks = 0","import {hsl as colorHsl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hsl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),\n        s = color(start.s, end.s),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hsl(hue);\nexport var hslLong = hsl(color);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-interpolate/src/hsl.js\n// module id = 120\n// module chunks = 0","import {lab as colorLab} from \"d3-color\";\nimport color from \"./color\";\n\nexport default function lab(start, end) {\n  var l = color((start = colorLab(start)).l, (end = colorLab(end)).l),\n      a = color(start.a, end.a),\n      b = color(start.b, end.b),\n      opacity = color(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-interpolate/src/lab.js\n// module id = 121\n// module chunks = 0","export default function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-interpolate/src/quantize.js\n// module id = 122\n// module chunks = 0","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-interpolate/src/round.js\n// module id = 123\n// module chunks = 0","var degrees = 180 / Math.PI;\n\nexport var identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nexport default function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-interpolate/src/transform/decompose.js\n// module id = 124\n// module chunks = 0","import number from \"../number\";\nimport {parseCss, parseSvg} from \"./parse\";\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nexport var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nexport var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-interpolate/src/transform/index.js\n// module id = 125\n// module chunks = 0","import decompose, {identity} from \"./decompose\";\n\nvar cssNode,\n    cssRoot,\n    cssView,\n    svgNode;\n\nexport function parseCss(value) {\n  if (value === \"none\") return identity;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nexport function parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-interpolate/src/transform/parse.js\n// module id = 126\n// module chunks = 0","var rho = Math.SQRT2,\n    rho2 = 2,\n    rho4 = 4,\n    epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nexport default function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    }\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    }\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-interpolate/src/zoom.js\n// module id = 127\n// module chunks = 0","import {Timer, now} from \"./timer\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-timer/src/interval.js\n// module id = 128\n// module chunks = 0","import {Timer} from \"./timer\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-timer/src/timeout.js\n// module id = 129\n// module chunks = 0","// https://d3js.org Version 4.9.1. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar version = \"4.9.1\";\n\nvar ascending = function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n};\n\nvar bisector = function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n};\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n\nvar ascendingBisect = bisector(ascending);\nvar bisectRight = ascendingBisect.right;\nvar bisectLeft = ascendingBisect.left;\n\nvar pairs = function(array, f) {\n  if (f == null) f = pair;\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = f(p, p = array[++i]);\n  return pairs;\n};\n\nfunction pair(a, b) {\n  return [a, b];\n}\n\nvar cross = function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n};\n\nvar descending = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar number = function(x) {\n  return x === null ? NaN : +x;\n};\n\nvar variance = function(values, valueof) {\n  var n = values.length,\n      m = 0,\n      i = -1,\n      mean = 0,\n      value,\n      delta,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  if (m > 1) return sum / (m - 1);\n};\n\nvar deviation = function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n};\n\nvar extent = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return [min, max];\n};\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\nvar map = array.map;\n\nvar constant = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar identity = function(x) {\n  return x;\n};\n\nvar sequence = function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n};\n\nvar e10 = Math.sqrt(50);\nvar e5 = Math.sqrt(10);\nvar e2 = Math.sqrt(2);\n\nvar ticks = function(start, stop, count) {\n  var reverse = stop < start,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  if (reverse) n = start, start = stop, stop = n;\n\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n};\n\nfunction tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nfunction tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n\nvar sturges = function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n};\n\nvar histogram = function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      tz = tickStep(x0, x1, tz);\n      tz = sequence(Math.ceil(x0 / tz) * tz, Math.floor(x1 / tz) * tz, tz); // exclusive\n    }\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] > x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n};\n\nvar threshold = function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n};\n\nvar freedmanDiaconis = function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n};\n\nvar scott = function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n};\n\nvar max = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return max;\n};\n\nvar mean = function(values, valueof) {\n  var n = values.length,\n      m = n,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) sum += value;\n      else --m;\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n      else --m;\n    }\n  }\n\n  if (m) return sum / m;\n};\n\nvar median = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      numbers = [];\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  return threshold(numbers.sort(ascending), 0.5);\n};\n\nvar merge = function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n};\n\nvar min = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  return min;\n};\n\nvar permute = function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n};\n\nvar scan = function(values, compare) {\n  if (!(n = values.length)) return;\n  var n,\n      i = 0,\n      j = 0,\n      xi,\n      xj = values[j];\n\n  if (compare == null) compare = ascending;\n\n  while (++i < n) {\n    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n      xj = xi, j = i;\n    }\n  }\n\n  if (compare(xj, xj) === 0) return j;\n};\n\nvar shuffle = function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n};\n\nvar sum = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (value = +valueof(values[i], i, values)) sum += value;\n    }\n  }\n\n  return sum;\n};\n\nvar transpose = function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n};\n\nfunction length(d) {\n  return d.length;\n}\n\nvar zip = function() {\n  return transpose(arguments);\n};\n\nvar slice$1 = Array.prototype.slice;\n\nvar identity$1 = function(x) {\n  return x;\n};\n\nvar top = 1;\nvar right = 2;\nvar bottom = 3;\nvar left = 4;\nvar epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + (x + 0.5) + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + (y + 0.5) + \")\";\n}\n\nfunction center(scale) {\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$1) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = range[0] + 0.5,\n        range1 = range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : identity$1)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice$1.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice$1.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice$1.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nfunction axisTop(scale) {\n  return axis(top, scale);\n}\n\nfunction axisRight(scale) {\n  return axis(right, scale);\n}\n\nfunction axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nfunction axisLeft(scale) {\n  return axis(left, scale);\n}\n\nvar noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\nvar namespaces = {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n\nvar namespace = function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n};\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nvar creator = function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n};\n\nvar nextId = 0;\n\nfunction local$1() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local$1.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nvar matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nvar matcher$1 = matcher;\n\nvar filterEvents = {};\n\nexports.event = null;\n\nif (typeof document !== \"undefined\") {\n  var element$1 = document.documentElement;\n  if (!(\"onmouseenter\" in element$1)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n    exports.event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      exports.event = event0;\n    }\n  };\n}\n\nfunction parseTypenames$1(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nvar selection_on = function(typename, value, capture) {\n  var typenames = parseTypenames$1(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n};\n\nfunction customEvent(event1, listener, that, args) {\n  var event0 = exports.event;\n  event1.sourceEvent = exports.event;\n  exports.event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    exports.event = event0;\n  }\n}\n\nvar sourceEvent = function() {\n  var current = exports.event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n};\n\nvar point = function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n};\n\nvar mouse = function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n};\n\nfunction none() {}\n\nvar selector = function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n};\n\nvar selection_select = function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nfunction empty$1() {\n  return [];\n}\n\nvar selectorAll = function(selector) {\n  return selector == null ? empty$1 : function() {\n    return this.querySelectorAll(selector);\n  };\n};\n\nvar selection_selectAll = function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n};\n\nvar selection_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nvar sparse = function(update) {\n  return new Array(update.length);\n};\n\nvar selection_enter = function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n};\n\nfunction EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n\nvar constant$1 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nvar selection_data = function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant$1(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n};\n\nvar selection_exit = function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n};\n\nvar selection_merge = function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n};\n\nvar selection_order = function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n};\n\nvar selection_sort = function(compare) {\n  if (!compare) compare = ascending$1;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n};\n\nfunction ascending$1(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nvar selection_call = function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n};\n\nvar selection_nodes = function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n};\n\nvar selection_node = function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n};\n\nvar selection_size = function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n};\n\nvar selection_empty = function() {\n  return !this.node();\n};\n\nvar selection_each = function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n};\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nvar selection_attr = function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n};\n\nvar defaultView = function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n};\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nvar selection_style = function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n};\n\nfunction styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n\nfunction propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nvar selection_property = function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n};\n\nfunction classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nvar selection_classed = function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n};\n\nfunction textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nvar selection_text = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n};\n\nfunction htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nvar selection_html = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n};\n\nfunction raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nvar selection_raise = function() {\n  return this.each(raise);\n};\n\nfunction lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nvar selection_lower = function() {\n  return this.each(lower);\n};\n\nvar selection_append = function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n};\n\nfunction constantNull() {\n  return null;\n}\n\nvar selection_insert = function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n};\n\nfunction remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nvar selection_remove = function() {\n  return this.each(remove);\n};\n\nvar selection_datum = function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n};\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nvar selection_dispatch = function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n};\n\nvar root = [null];\n\nfunction Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nvar select = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n};\n\nvar selectAll = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n};\n\nvar touch = function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n};\n\nvar touches = function(node, touches) {\n  if (touches == null) touches = sourceEvent().touches;\n\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n    points[i] = point(node, touches[i]);\n  }\n\n  return points;\n};\n\nfunction nopropagation() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar dragDisable = function(view) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n};\n\nfunction yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection$$1.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection$$1.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n\nvar constant$2 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$1() {\n  return !exports.event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n}\n\nvar drag = function() {\n  var filter = defaultFilter$1,\n      container = defaultContainer,\n      subject = defaultSubject,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection$$1) {\n    selection$$1\n        .on(\"mousedown.drag\", mousedowned)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(exports.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    dragDisable(exports.event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = exports.event.clientX;\n    mousedowny = exports.event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = exports.event.clientX - mousedownx, dy = exports.event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(exports.event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(exports.event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches$$1 = exports.event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches$$1[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$2(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$2(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$2(_), drag) : subject;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n};\n\nvar define = function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n};\n\nfunction extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n\nfunction Color() {}\n\nvar darker = 0.7;\nvar brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\";\nvar reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\";\nvar reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\";\nvar reHex3 = /^#([0-9a-f]{3})$/;\nvar reHex6 = /^#([0-9a-f]{6})$/;\nvar reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\");\nvar reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\");\nvar reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\");\nvar reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\");\nvar reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\");\nvar reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nfunction color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nfunction rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nfunction rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nfunction Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nfunction hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nfunction hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n\nvar deg2rad = Math.PI / 180;\nvar rad2deg = 180 / Math.PI;\n\nvar Kn = 18;\nvar Xn = 0.950470;\nvar Yn = 1;\nvar Zn = 1.088830;\nvar t0 = 4 / 29;\nvar t1 = 6 / 29;\nvar t2 = 3 * t1 * t1;\nvar t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var b = rgb2xyz(o.r),\n      a = rgb2xyz(o.g),\n      l = rgb2xyz(o.b),\n      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nfunction lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nfunction Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nfunction hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n\nvar A = -0.14861;\nvar B = +1.78277;\nvar C = -0.29227;\nvar D = -0.90649;\nvar E = +1.97294;\nvar ED = E * D;\nvar EB = E * B;\nvar BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nfunction cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n\nfunction basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nvar basis$1 = function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar basisClosed = function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar constant$3 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nfunction hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$3(isNaN(a) ? b : a);\n}\n\nfunction gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant$3(isNaN(a) ? b : a);\n  };\n}\n\nfunction nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant$3(isNaN(a) ? b : a);\n}\n\nvar interpolateRgb = ((function rgbGamma(y) {\n  var color$$1 = gamma(y);\n\n  function rgb$$1(start, end) {\n    var r = color$$1((start = rgb(start)).r, (end = rgb(end)).r),\n        g = color$$1(start.g, end.g),\n        b = color$$1(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb$$1.gamma = rgbGamma;\n\n  return rgb$$1;\n}))(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color$$1;\n    for (i = 0; i < n; ++i) {\n      color$$1 = rgb(colors[i]);\n      r[i] = color$$1.r || 0;\n      g[i] = color$$1.g || 0;\n      b[i] = color$$1.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color$$1.opacity = 1;\n    return function(t) {\n      color$$1.r = r(t);\n      color$$1.g = g(t);\n      color$$1.b = b(t);\n      return color$$1 + \"\";\n    };\n  };\n}\n\nvar rgbBasis = rgbSpline(basis$1);\nvar rgbBasisClosed = rgbSpline(basisClosed);\n\nvar array$1 = function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(nb),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = interpolateValue(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n};\n\nvar date = function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n};\n\nvar reinterpolate = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n};\n\nvar object = function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = interpolateValue(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n};\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\nvar reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nvar interpolateString = function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: reinterpolate(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n};\n\nvar interpolateValue = function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant$3(b)\n      : (t === \"number\" ? reinterpolate\n      : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n      : b instanceof color ? interpolateRgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array$1\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : reinterpolate)(a, b);\n};\n\nvar interpolateRound = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n};\n\nvar degrees = 180 / Math.PI;\n\nvar identity$2 = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nvar decompose = function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n};\n\nvar cssNode;\nvar cssRoot;\nvar cssView;\nvar svgNode;\n\nfunction parseCss(value) {\n  if (value === \"none\") return identity$2;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nfunction parseSvg(value) {\n  if (value == null) return identity$2;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: reinterpolate(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: reinterpolate(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\nvar rho = Math.SQRT2;\nvar rho2 = 2;\nvar rho4 = 4;\nvar epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nvar interpolateZoom = function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    };\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    };\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n};\n\nfunction hsl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hsl(start)).h, (end = hsl(end)).h),\n        s = nogamma(start.s, end.s),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hsl$2 = hsl$1(hue);\nvar hslLong = hsl$1(nogamma);\n\nfunction lab$1(start, end) {\n  var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n      a = nogamma(start.a, end.a),\n      b = nogamma(start.b, end.b),\n      opacity = nogamma(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n\nfunction hcl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hcl(start)).h, (end = hcl(end)).h),\n        c = nogamma(start.c, end.c),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hcl$2 = hcl$1(hue);\nvar hclLong = hcl$1(nogamma);\n\nfunction cubehelix$1(hue$$1) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix$$1(start, end) {\n      var h = hue$$1((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n          s = nogamma(start.s, end.s),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix$$1.gamma = cubehelixGamma;\n\n    return cubehelix$$1;\n  })(1);\n}\n\nvar cubehelix$2 = cubehelix$1(hue);\nvar cubehelixLong = cubehelix$1(nogamma);\n\nvar quantize = function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n};\n\nvar frame = 0;\nvar timeout = 0;\nvar interval = 0;\nvar pokeDelay = 1000;\nvar taskHead;\nvar taskTail;\nvar clockLast = 0;\nvar clockNow = 0;\nvar clockSkew = 0;\nvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\nvar setFrame = typeof requestAnimationFrame === \"function\" ? requestAnimationFrame : function(f) { setTimeout(f, 17); };\n\nfunction now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nfunction Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nfunction timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nfunction timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow;\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, delay);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clockNow, interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n\nvar timeout$1 = function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n};\n\nvar interval$1 = function(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n};\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nvar CREATED = 0;\nvar SCHEDULED = 1;\nvar STARTING = 2;\nvar STARTED = 3;\nvar RUNNING = 4;\nvar ENDING = 5;\nvar ENDED = 6;\n\nvar schedule = function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n};\n\nfunction init(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction set$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction get$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout$1(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout$1(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n\nvar interrupt = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n};\n\nvar selection_interrupt = function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n};\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set$1(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set$1(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nvar transition_tween = function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get$1(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n};\n\nfunction tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set$1(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get$1(node, id).value[name];\n  };\n}\n\nvar interpolate$$1 = function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? reinterpolate\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n};\n\nfunction attrRemove$1(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS$1(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant$1(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS$1(fullname, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction$1(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS$1(fullname, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_attr = function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransformSvg : interpolate$$1;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n      : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value + \"\"));\n};\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_attrTween = function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n};\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nvar transition_delay = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get$1(this.node(), id).delay;\n};\n\nfunction durationFunction(id, value) {\n  return function() {\n    set$1(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set$1(this, id).duration = value;\n  };\n}\n\nvar transition_duration = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get$1(this.node(), id).duration;\n};\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set$1(this, id).ease = value;\n  };\n}\n\nvar transition_ease = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get$1(this.node(), id).ease;\n};\n\nvar transition_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n};\n\nvar transition_merge = function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n};\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set$1;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nvar transition_on = function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get$1(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n};\n\nfunction removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nvar transition_remove = function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n};\n\nvar transition_select = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selector(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select$$1.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n};\n\nvar transition_selectAll = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selectorAll(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select$$1.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n};\n\nvar Selection$1 = selection.prototype.constructor;\n\nvar transition_selection = function() {\n  return new Selection$1(this._groups, this._parents);\n};\n\nfunction styleRemove$1(name, interpolate$$2) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = styleValue(this, name),\n        value1 = (this.style.removeProperty(name), styleValue(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$2(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant$1(name, interpolate$$2, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = styleValue(this, name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$2(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction$1(name, interpolate$$2, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = styleValue(this, name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), styleValue(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$2(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_style = function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransformCss : interpolate$$1;\n  return value == null ? this\n          .styleTween(name, styleRemove$1(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant$1(name, i, value + \"\"), priority);\n};\n\nfunction styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_styleTween = function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n};\n\nfunction textConstant$1(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction$1(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nvar transition_text = function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction$1(tweenValue(this, \"text\", value))\n      : textConstant$1(value == null ? \"\" : value + \"\"));\n};\n\nvar transition_transition = function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get$1(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n};\n\nvar id = 0;\n\nfunction Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nfunction transition(name) {\n  return selection().transition(name);\n}\n\nfunction newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n\nfunction linear$1(t) {\n  return +t;\n}\n\nfunction quadIn(t) {\n  return t * t;\n}\n\nfunction quadOut(t) {\n  return t * (2 - t);\n}\n\nfunction quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n\nfunction cubicIn(t) {\n  return t * t * t;\n}\n\nfunction cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nfunction cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n\nvar exponent = 3;\n\nvar polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nvar polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nvar polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n\nvar pi = Math.PI;\nvar halfPi = pi / 2;\n\nfunction sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nfunction sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nfunction sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n\nfunction expIn(t) {\n  return Math.pow(2, 10 * t - 10);\n}\n\nfunction expOut(t) {\n  return 1 - Math.pow(2, -10 * t);\n}\n\nfunction expInOut(t) {\n  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n}\n\nfunction circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nfunction circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nfunction circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n\nvar b1 = 4 / 11;\nvar b2 = 6 / 11;\nvar b3 = 8 / 11;\nvar b4 = 3 / 4;\nvar b5 = 9 / 11;\nvar b6 = 10 / 11;\nvar b7 = 15 / 16;\nvar b8 = 21 / 22;\nvar b9 = 63 / 64;\nvar b0 = 1 / b1 / b1;\n\nfunction bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nfunction bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nfunction bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n\nvar overshoot = 1.70158;\n\nvar backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nvar backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nvar backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n\nvar tau = 2 * Math.PI;\nvar amplitude = 1;\nvar period = 0.3;\n\nvar elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nvar elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nvar elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: cubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nvar selection_transition = function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n};\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n\nvar root$1 = [null];\n\nvar active = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n        return new Transition([[node]], root$1, name, +i);\n      }\n    }\n  }\n\n  return null;\n};\n\nvar constant$4 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar BrushEvent = function(target, type, selection) {\n  this.target = target;\n  this.type = type;\n  this.selection = selection;\n};\n\nfunction nopropagation$1() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$1 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar MODE_DRAG = {name: \"drag\"};\nvar MODE_SPACE = {name: \"space\"};\nvar MODE_HANDLE = {name: \"handle\"};\nvar MODE_CENTER = {name: \"center\"};\n\nvar X = {\n  name: \"x\",\n  handles: [\"e\", \"w\"].map(type),\n  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type),\n  input: function(xy) { return xy; },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local$$1(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nfunction brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nfunction brushX() {\n  return brush$1(X);\n}\n\nfunction brushY() {\n  return brush$1(Y);\n}\n\nvar brush = function() {\n  return brush$1(XY);\n};\n\nfunction brush$1(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local$$1(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .on(\"mousedown.brush touchstart.brush\", started);\n  }\n\n  brush.move = function(group, selection$$1) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(this, arguments) : selection$$1, state.extent),\n                i = interpolateValue(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && empty(selection1) ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 && selection1 ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(that, args) : selection$$1, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 == null || empty(selection1) ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection$$1 = local$$1(this).selection;\n\n    if (selection$$1) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection$$1[0][0])\n          .attr(\"y\", selection$$1[0][1])\n          .attr(\"width\", selection$$1[1][0] - selection$$1[0][0])\n          .attr(\"height\", selection$$1[1][1] - selection$$1[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection$$1[1][0] - handleSize / 2 : selection$$1[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection$$1[1][1] - handleSize / 2 : selection$$1[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection$$1[1][0] - selection$$1[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection$$1[1][1] - selection$$1[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$1(); }\n    else if (touchending) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = exports.event.target.__data__.type,\n        mode = (exports.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local$$1(that),\n        extent = state.extent,\n        selection$$1 = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && exports.event.shiftKey,\n        lockX,\n        lockY,\n        point0 = mouse(that),\n        point = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === \"overlay\") {\n      state.selection = selection$$1 = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection$$1[0][0];\n      n0 = selection$$1[0][1];\n      e0 = selection$$1[1][0];\n      s0 = selection$$1[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (exports.event.touches) {\n      group\n          .on(\"touchmove.brush\", moved, true)\n          .on(\"touchend.brush touchcancel.brush\", ended, true);\n    } else {\n      var view = select(exports.event.view)\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n\n      dragDisable(exports.event.view);\n    }\n\n    nopropagation$1();\n    interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = mouse(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent$1();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection$$1[0][0], e1 = selection$$1[1][0];\n      if (lockY) n1 = selection$$1[0][1], s1 = selection$$1[1][1];\n\n      if (selection$$1[0][0] !== w1\n          || selection$$1[0][1] !== n1\n          || selection$$1[1][0] !== e1\n          || selection$$1[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation$1();\n      if (exports.event.touches) {\n        if (exports.event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n      } else {\n        yesdrag(exports.event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection$$1)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$1();\n    }\n\n    function keyupped() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (exports.event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$1();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$4([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$4(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n\nvar cos = Math.cos;\nvar sin = Math.sin;\nvar pi$1 = Math.PI;\nvar halfPi$1 = pi$1 / 2;\nvar tau$1 = pi$1 * 2;\nvar max$1 = Math.max;\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nvar chord = function() {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = [],\n        groupIndex = sequence(n),\n        subgroupIndex = [],\n        chords = [],\n        groups = chords.groups = new Array(n),\n        subgroups = new Array(n * n),\n        k,\n        x,\n        x0,\n        dx,\n        i,\n        j;\n\n    // Compute the sum.\n    k = 0, i = -1; while (++i < n) {\n      x = 0, j = -1; while (++j < n) {\n        x += matrix[i][j];\n      }\n      groupSums.push(x);\n      subgroupIndex.push(sequence(n));\n      k += x;\n    }\n\n    // Sort groups…\n    if (sortGroups) groupIndex.sort(function(a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    });\n\n    // Sort subgroups…\n    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n      d.sort(function(a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    });\n\n    // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n    k = max$1(0, tau$1 - padAngle * n) / k;\n    dx = k ? padAngle : tau$1 / n;\n\n    // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n    x = 0, i = -1; while (++i < n) {\n      x0 = x, j = -1; while (++j < n) {\n        var di = groupIndex[i],\n            dj = subgroupIndex[di][j],\n            v = matrix[di][dj],\n            a0 = x,\n            a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    }\n\n    // Generate chords for each (non-empty) subgroup-subgroup link.\n    i = -1; while (++i < n) {\n      j = i - 1; while (++j < n) {\n        var source = subgroups[j * n + i],\n            target = subgroups[i * n + j];\n        if (source.value || target.value) {\n          chords.push(source.value < target.value\n              ? {source: target, target: source}\n              : {source: source, target: target});\n        }\n      }\n    }\n\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n};\n\nvar slice$2 = Array.prototype.slice;\n\nvar constant$5 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar pi$2 = Math.PI;\nvar tau$2 = 2 * pi$2;\nvar epsilon$1 = 1e-6;\nvar tauEpsilon = tau$2 - epsilon$1;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon$1)) {}\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon$1) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi$2 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon$1) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon$1 || Math.abs(this._y1 - y0) > epsilon$1) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau$2 + tau$2;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon$1) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi$2)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nvar ribbon = function() {\n  var source = defaultSource,\n      target = defaultTarget,\n      radius = defaultRadius,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        argv = slice$2.call(arguments),\n        s = source.apply(this, argv),\n        t = target.apply(this, argv),\n        sr = +radius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi$1,\n        sa1 = endAngle.apply(this, argv) - halfPi$1,\n        sx0 = sr * cos(sa0),\n        sy0 = sr * sin(sa0),\n        tr = +radius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi$1,\n        ta1 = endAngle.apply(this, argv) - halfPi$1;\n\n    if (!context) context = buffer = path();\n\n    context.moveTo(sx0, sy0);\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n      context.arc(0, 0, tr, ta0, ta1);\n    }\n    context.quadraticCurveTo(0, 0, sx0, sy0);\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  ribbon.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : radius;\n  };\n\n  ribbon.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : endAngle;\n  };\n\n  ribbon.source = function(_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function(_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n  };\n\n  return ribbon;\n};\n\nvar prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map$1.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map$1(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nvar nest = function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) return rollup != null\n        ? rollup(array) : (sortValues != null\n        ? array.sort(sortValues)\n        : array);\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map$1(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n};\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map$1();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n\nfunction Set() {}\n\nvar proto = map$1.prototype;\n\nSet.prototype = set$2.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set$2(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nvar keys = function(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n};\n\nvar values = function(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n};\n\nvar entries = function(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n};\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nvar dsv = function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      delimiterCode = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns;\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var EOL = {}, // sentinel value for end-of-line\n        EOF = {}, // sentinel value for end-of-file\n        rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // the current line number\n        t, // the current token\n        eol; // is the current token followed by EOL?\n\n    function token() {\n      if (I >= N) return EOF; // special case: end of file\n      if (eol) return eol = false, EOL; // special case: end of line\n\n      // special case: quotes\n      var j = I, c;\n      if (text.charCodeAt(j) === 34) {\n        var i = j;\n        while (i++ < N) {\n          if (text.charCodeAt(i) === 34) {\n            if (text.charCodeAt(i + 1) !== 34) break;\n            ++i;\n          }\n        }\n        I = i + 2;\n        c = text.charCodeAt(i + 1);\n        if (c === 13) {\n          eol = true;\n          if (text.charCodeAt(i + 2) === 10) ++I;\n        } else if (c === 10) {\n          eol = true;\n        }\n        return text.slice(j + 1, i).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // common case: find next delimiter or newline\n      while (I < N) {\n        var k = 1;\n        c = text.charCodeAt(I++);\n        if (c === 10) eol = true; // \\n\n        else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } // \\r|\\r\\n\n        else if (c !== delimiterCode) continue;\n        return text.slice(j, I - k);\n      }\n\n      // special case: last token before EOF\n      return text.slice(j);\n    }\n\n    while ((t = token()) !== EOF) {\n      var a = [];\n      while (t !== EOL && t !== EOF) {\n        a.push(t);\n        t = token();\n      }\n      if (f && (a = f(a, n++)) == null) continue;\n      rows.push(a);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\\\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n};\n\nvar csv = dsv(\",\");\n\nvar csvParse = csv.parse;\nvar csvParseRows = csv.parseRows;\nvar csvFormat = csv.format;\nvar csvFormatRows = csv.formatRows;\n\nvar tsv = dsv(\"\\t\");\n\nvar tsvParse = tsv.parse;\nvar tsvParseRows = tsv.parseRows;\nvar tsvFormat = tsv.format;\nvar tsvFormatRows = tsv.formatRows;\n\nvar center$1 = function(x, y) {\n  var nodes;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n};\n\nvar constant$6 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar jiggle = function() {\n  return (Math.random() - 0.5) * 1e-6;\n};\n\nvar tree_add = function(d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n};\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nfunction addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, inherit the existing extent.\n  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n\nvar tree_cover = function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n      case 0: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n        break;\n      }\n      case 1: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n        break;\n      }\n      case 2: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n        break;\n      }\n      case 3: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n        break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  // If the quadtree covers the point already, just return.\n  else return this;\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n};\n\nvar tree_data = function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n};\n\nvar tree_extent = function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n};\n\nvar Quad = function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n};\n\nvar tree_find = function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n};\n\nvar tree_remove = function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n};\n\nfunction removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n\nvar tree_root = function() {\n  return this._root;\n};\n\nvar tree_size = function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n};\n\nvar tree_visit = function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n};\n\nvar tree_visitAfter = function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n};\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nvar tree_x = function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n};\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nvar tree_y = function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n};\n\nfunction quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nvar collide = function(radius) {\n  var nodes,\n      radii,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant$6(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(), l += x * x;\n            if (y === 0) y = jiggle(), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : radius;\n  };\n\n  return force;\n};\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"missing: \" + nodeId);\n  return node;\n}\n\nvar link = function(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant$6(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle();\n        y = target.y + target.vy - source.y - source.vy || jiggle();\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = map$1(nodes, id),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$6(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n};\n\nfunction x$1(d) {\n  return d.x;\n}\n\nfunction y$1(d) {\n  return d.y;\n}\n\nvar initialRadius = 10;\nvar initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nvar simulation = function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = map$1(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick() {\n    var i, n = nodes.length, node;\n\n    alpha += (alphaTarget - alpha) * alphaDecay;\n\n    forces.each(function(force) {\n      force(alpha);\n    });\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i];\n      if (node.fx == null) node.x += node.vx *= velocityDecay;\n      else node.x = node.fx, node.vx = 0;\n      if (node.fy == null) node.y += node.vy *= velocityDecay;\n      else node.y = node.fy, node.vy = 0;\n    }\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n};\n\nvar manyBody = function() {\n  var nodes,\n      node,\n      alpha,\n      strength = constant$6(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x$1, y$1).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, x$$1, y$$1, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x$$1 = y$$1 = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = q.value)) {\n          strength += c, x$$1 += c * q.x, y$$1 += c * q.y;\n        }\n      }\n      quad.x = x$$1 / strength;\n      quad.y = y$$1 / strength;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x$$1 = quad.x - node.x,\n        y$$1 = quad.y - node.y,\n        w = x2 - x1,\n        l = x$$1 * x$$1 + y$$1 * y$$1;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n        if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x$$1 * quad.value * alpha / l;\n        node.vy += y$$1 * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n      if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x$$1 * w;\n      node.vy += y$$1 * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n};\n\nvar x$2 = function(x) {\n  var strength = constant$6(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant$6(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : x;\n  };\n\n  return force;\n};\n\nvar y$2 = function(y) {\n  var strength = constant$6(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant$6(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : y;\n  };\n\n  return force;\n};\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nvar formatDecimal = function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n};\n\nvar exponent$1 = function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n};\n\nvar formatGroup = function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n};\n\nvar formatNumerals = function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n};\n\nvar formatDefault = function(x, p) {\n  x = x.toPrecision(p);\n\n  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (x[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      case \"e\": break out;\n      default: if (i0 > 0) i0 = 0; break;\n    }\n  }\n\n  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n};\n\nvar prefixExponent;\n\nvar formatPrefixAuto = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n};\n\nvar formatRounded = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n};\n\nvar formatTypes = {\n  \"\": formatDefault,\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n\n// [[fill]align][sign][symbol][0][width][,][.precision][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\nfunction formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\n  var match,\n      fill = match[1] || \" \",\n      align = match[2] || \">\",\n      sign = match[3] || \"-\",\n      symbol = match[4] || \"\",\n      zero = !!match[5],\n      width = match[6] && +match[6],\n      comma = !!match[7],\n      precision = match[8] && +match[8].slice(1),\n      type = match[9] || \"\";\n\n  // The \"n\" type is an alias for \",g\".\n  if (type === \"n\") comma = true, type = \"g\";\n\n  // Map invalid types to the default format.\n  else if (!formatTypes[type]) type = \"\";\n\n  // If zero fill is specified, padding goes after sign and before digits.\n  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n  this.fill = fill;\n  this.align = align;\n  this.sign = sign;\n  this.symbol = symbol;\n  this.zero = zero;\n  this.width = width;\n  this.comma = comma;\n  this.precision = precision;\n  this.type = type;\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + this.type;\n};\n\nvar identity$3 = function(x) {\n  return x;\n};\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\\xB5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nvar formatLocale = function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity$3,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        type = specifier.type;\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = !type || /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? (type ? 6 : 12)\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n};\n\nvar locale$1;\n\n\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nfunction defaultLocale(definition) {\n  locale$1 = formatLocale(definition);\n  exports.format = locale$1.format;\n  exports.formatPrefix = locale$1.formatPrefix;\n  return locale$1;\n}\n\nvar precisionFixed = function(step) {\n  return Math.max(0, -exponent$1(Math.abs(step)));\n};\n\nvar precisionPrefix = function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n};\n\nvar precisionRound = function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n};\n\n// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nvar adder = function() {\n  return new Adder;\n};\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add$1(temp, y, this.t);\n    add$1(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add$1(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n\nvar epsilon$2 = 1e-6;\nvar epsilon2$1 = 1e-12;\nvar pi$3 = Math.PI;\nvar halfPi$2 = pi$3 / 2;\nvar quarterPi = pi$3 / 4;\nvar tau$3 = pi$3 * 2;\n\nvar degrees$1 = 180 / pi$3;\nvar radians = pi$3 / 180;\n\nvar abs = Math.abs;\nvar atan = Math.atan;\nvar atan2 = Math.atan2;\nvar cos$1 = Math.cos;\nvar ceil = Math.ceil;\nvar exp = Math.exp;\n\nvar log = Math.log;\nvar pow = Math.pow;\nvar sin$1 = Math.sin;\nvar sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nvar sqrt = Math.sqrt;\nvar tan = Math.tan;\n\nfunction acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi$3 : Math.acos(x);\n}\n\nfunction asin(x) {\n  return x > 1 ? halfPi$2 : x < -1 ? -halfPi$2 : Math.asin(x);\n}\n\nfunction haversin(x) {\n  return (x = sin$1(x / 2)) * x;\n}\n\nfunction noop$1() {}\n\nfunction streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nvar geoStream = function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n};\n\nvar areaRingSum = adder();\n\nvar areaSum = adder();\nvar lambda00;\nvar phi00;\nvar lambda0;\nvar cosPhi0;\nvar sinPhi0;\n\nvar areaStream = {\n  point: noop$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau$3 + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop$1;\n  },\n  sphere: function() {\n    areaSum.add(tau$3);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos$1(phi),\n      sinPhi = sin$1(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n      v = k * sdLambda * sin$1(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nvar area = function(object) {\n  areaSum.reset();\n  geoStream(object, areaStream);\n  return areaSum * 2;\n};\n\nfunction spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nfunction cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n  return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n}\n\nfunction cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nfunction cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nfunction cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nfunction cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nfunction cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n\nvar lambda0$1;\nvar phi0;\nvar lambda1;\nvar phi1;\nvar lambda2;\nvar lambda00$1;\nvar phi00$1;\nvar p0;\nvar deltaSum = adder();\nvar ranges;\nvar range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon$2) phi1 = 90;\n    else if (deltaSum < -epsilon$2) phi0 = -90;\n    range[0] = lambda0$1, range[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign$$1 = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees$1 * sign$$1,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = inflection[1] * degrees$1;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = -inflection[1] * degrees$1;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0$1) {\n        if (lambda < lambda0$1) lambda0$1 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0$1, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00$1 = lambda, phi00$1 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00$1, phi00$1);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon$2) lambda0$1 = -(lambda1 = 180);\n  range[0] = lambda0$1, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nvar bounds = function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n  ranges = [];\n  geoStream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0$1 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0$1, phi0], [lambda1, phi1]];\n};\n\nvar W0;\nvar W1;\nvar X0;\nvar Y0;\nvar Z0;\nvar X1;\nvar Y1;\nvar Z1;\nvar X2;\nvar Y2;\nvar Z2;\nvar lambda00$2;\nvar phi00$2;\nvar x0;\nvar y0;\nvar z0; // previous point\n\nvar centroidStream = {\n  sphere: noop$1,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00$2, phi00$2);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00$2 = lambda, phi00$2 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nvar centroid = function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  geoStream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2$1) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon$2) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2$1) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees$1, asin(z / sqrt(m)) * degrees$1];\n};\n\nvar constant$7 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar compose = function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n};\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau$3) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos$1(deltaPhi),\n      sinDeltaPhi = sin$1(deltaPhi),\n      cosDeltaGamma = cos$1(deltaGamma),\n      sinDeltaGamma = sin$1(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nvar rotation = function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  };\n\n  return forward;\n};\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nfunction circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos$1(radius),\n      sinRadius = sin$1(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau$3;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$3;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau$3 - epsilon$2) % tau$3;\n}\n\nvar circle = function() {\n  var center = constant$7([0, 0]),\n      radius = constant$7(90),\n      precision = constant$7(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees$1, x[1] *= degrees$1;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$7([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$7(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$7(+_), circle) : precision;\n  };\n\n  return circle;\n};\n\nvar clipBuffer = function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop$1,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n};\n\nvar clipLine = function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n};\n\nvar pointEqual = function(a, b) {\n  return abs(a[0] - b[0]) < epsilon$2 && abs(a[1] - b[1]) < epsilon$2;\n};\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nvar clipPolygon = function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link$1(subject);\n  link$1(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n};\n\nfunction link$1(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n\nvar clipMax = 1e9;\nvar clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nfunction clipExtent(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon$2 ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon$2 ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon$2 ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipPolygon(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n\nvar extent$1 = function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n};\n\nvar sum$1 = adder();\n\nvar polygonContains = function(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      normal = [sin$1(lambda), -cos$1(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum$1.reset();\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin$1(phi0),\n        cosPhi0 = cos$1(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin$1(phi1),\n          cosPhi1 = cos$1(phi1),\n          delta = lambda1 - lambda0,\n          sign$$1 = delta >= 0 ? 1 : -1,\n          absDelta = sign$$1 * delta,\n          antimeridian = absDelta > pi$3,\n          k = sinPhi0 * sinPhi1;\n\n      sum$1.add(atan2(k * sign$$1 * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n      angle += antimeridian ? delta + sign$$1 * tau$3 : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon$2 || angle < epsilon$2 && sum$1 < -epsilon$2) ^ (winding & 1);\n};\n\nvar lengthSum = adder();\nvar lambda0$2;\nvar sinPhi0$1;\nvar cosPhi0$1;\n\nvar lengthStream = {\n  sphere: noop$1,\n  point: noop$1,\n  lineStart: lengthLineStart,\n  lineEnd: noop$1,\n  polygonStart: noop$1,\n  polygonEnd: noop$1\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop$1;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin$1(phi),\n      cosPhi = cos$1(phi),\n      delta = abs(lambda - lambda0$2),\n      cosDelta = cos$1(delta),\n      sinDelta = sin$1(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n}\n\nvar length$1 = function(object) {\n  lengthSum.reset();\n  geoStream(object, lengthStream);\n  return +lengthSum;\n};\n\nvar coordinates = [null, null];\nvar object$1 = {type: \"LineString\", coordinates: coordinates};\n\nvar distance = function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length$1(object$1);\n};\n\nvar containsObjectType = {\n  Feature: function(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function(object, point) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n    return false;\n  }\n};\n\nvar containsGeometryType = {\n  Sphere: function() {\n    return true;\n  },\n  Point: function(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n    return false;\n  },\n  LineString: function(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n    return false;\n  },\n  Polygon: function(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n    return false;\n  },\n  GeometryCollection: function(object, point) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n      ? containsGeometryType[geometry.type](geometry, point)\n      : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ab = distance(coordinates[0], coordinates[1]),\n      ao = distance(coordinates[0], point),\n      ob = distance(point, coordinates[1]);\n  return ao + ob <= ab + epsilon$2;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nvar contains = function(object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type)\n      ? containsObjectType[object.type]\n      : containsGeometry)(object, point);\n};\n\nfunction graticuleX(y0, y1, dy) {\n  var y = sequence(y0, y1 - epsilon$2, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = sequence(x0, x1 - epsilon$2, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nfunction graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return sequence(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(sequence(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(sequence(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$2; }).map(x))\n        .concat(sequence(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$2; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon$2], [180, 90 - epsilon$2]])\n      .extentMinor([[-180, -80 - epsilon$2], [180, 80 + epsilon$2]]);\n}\n\nfunction graticule10() {\n  return graticule()();\n}\n\nvar interpolate$1 = function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos$1(y0),\n      sy0 = sin$1(y0),\n      cy1 = cos$1(y1),\n      sy1 = sin$1(y1),\n      kx0 = cy0 * cos$1(x0),\n      ky0 = cy0 * sin$1(x0),\n      kx1 = cy1 * cos$1(x1),\n      ky1 = cy1 * sin$1(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin$1(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin$1(t *= d) / k,\n        A = sin$1(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees$1,\n      atan2(z, sqrt(x * x + y * y)) * degrees$1\n    ];\n  } : function() {\n    return [x0 * degrees$1, y0 * degrees$1];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n};\n\nvar identity$4 = function(x) {\n  return x;\n};\n\nvar areaSum$1 = adder();\nvar areaRingSum$1 = adder();\nvar x00;\nvar y00;\nvar x0$1;\nvar y0$1;\n\nvar areaStream$1 = {\n  point: noop$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: function() {\n    areaStream$1.lineStart = areaRingStart$1;\n    areaStream$1.lineEnd = areaRingEnd$1;\n  },\n  polygonEnd: function() {\n    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$1;\n    areaSum$1.add(abs(areaRingSum$1));\n    areaRingSum$1.reset();\n  },\n  result: function() {\n    var area = areaSum$1 / 2;\n    areaSum$1.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart$1() {\n  areaStream$1.point = areaPointFirst$1;\n}\n\nfunction areaPointFirst$1(x, y) {\n  areaStream$1.point = areaPoint$1;\n  x00 = x0$1 = x, y00 = y0$1 = y;\n}\n\nfunction areaPoint$1(x, y) {\n  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n  x0$1 = x, y0$1 = y;\n}\n\nfunction areaRingEnd$1() {\n  areaPoint$1(x00, y00);\n}\n\nvar x0$2 = Infinity;\nvar y0$2 = x0$2;\nvar x1 = -x0$2;\nvar y1 = x1;\n\nvar boundsStream$1 = {\n  point: boundsPoint$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: noop$1,\n  polygonEnd: noop$1,\n  result: function() {\n    var bounds = [[x0$2, y0$2], [x1, y1]];\n    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint$1(x, y) {\n  if (x < x0$2) x0$2 = x;\n  if (x > x1) x1 = x;\n  if (y < y0$2) y0$2 = y;\n  if (y > y1) y1 = y;\n}\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0$1 = 0;\nvar Y0$1 = 0;\nvar Z0$1 = 0;\nvar X1$1 = 0;\nvar Y1$1 = 0;\nvar Z1$1 = 0;\nvar X2$1 = 0;\nvar Y2$1 = 0;\nvar Z2$1 = 0;\nvar x00$1;\nvar y00$1;\nvar x0$3;\nvar y0$3;\n\nvar centroidStream$1 = {\n  point: centroidPoint$1,\n  lineStart: centroidLineStart$1,\n  lineEnd: centroidLineEnd$1,\n  polygonStart: function() {\n    centroidStream$1.lineStart = centroidRingStart$1;\n    centroidStream$1.lineEnd = centroidRingEnd$1;\n  },\n  polygonEnd: function() {\n    centroidStream$1.point = centroidPoint$1;\n    centroidStream$1.lineStart = centroidLineStart$1;\n    centroidStream$1.lineEnd = centroidLineEnd$1;\n  },\n  result: function() {\n    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n        : [NaN, NaN];\n    X0$1 = Y0$1 = Z0$1 =\n    X1$1 = Y1$1 = Z1$1 =\n    X2$1 = Y2$1 = Z2$1 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint$1(x, y) {\n  X0$1 += x;\n  Y0$1 += y;\n  ++Z0$1;\n}\n\nfunction centroidLineStart$1() {\n  centroidStream$1.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream$1.point = centroidPointLine;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0$3, dy = y - y0$3, z = sqrt(dx * dx + dy * dy);\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidLineEnd$1() {\n  centroidStream$1.point = centroidPoint$1;\n}\n\nfunction centroidRingStart$1() {\n  centroidStream$1.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd$1() {\n  centroidPointRing(x00$1, y00$1);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream$1.point = centroidPointRing;\n  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0$3,\n      dy = y - y0$3,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n\n  z = y0$3 * x - x0$3 * y;\n  X2$1 += z * (x0$3 + x);\n  Y2$1 += z * (y0$3 + y);\n  Z2$1 += z * 3;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau$3);\n        break;\n      }\n    }\n  },\n  result: noop$1\n};\n\nvar lengthSum$1 = adder();\nvar lengthRing;\nvar x00$2;\nvar y00$2;\nvar x0$4;\nvar y0$4;\n\nvar lengthStream$1 = {\n  point: noop$1,\n  lineStart: function() {\n    lengthStream$1.point = lengthPointFirst$1;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint$1(x00$2, y00$2);\n    lengthStream$1.point = noop$1;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum$1;\n    lengthSum$1.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst$1(x, y) {\n  lengthStream$1.point = lengthPoint$1;\n  x00$2 = x0$4 = x, y00$2 = y0$4 = y;\n}\n\nfunction lengthPoint$1(x, y) {\n  x0$4 -= x, y0$4 -= y;\n  lengthSum$1.add(sqrt(x0$4 * x0$4 + y0$4 * y0$4));\n  x0$4 = x, y0$4 = y;\n}\n\nfunction PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle$1(4.5),\n  pointRadius: function(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        if (this._circle == null) this._circle = circle$1(this._radius);\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle$1(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n\nvar index$1 = function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      geoStream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    geoStream(object, projectionStream(areaStream$1));\n    return areaStream$1.result();\n  };\n\n  path.measure = function(object) {\n    geoStream(object, projectionStream(lengthStream$1));\n    return lengthStream$1.result();\n  };\n\n  path.bounds = function(object) {\n    geoStream(object, projectionStream(boundsStream$1));\n    return boundsStream$1.result();\n  };\n\n  path.centroid = function(object) {\n    geoStream(object, projectionStream(centroidStream$1));\n    return centroidStream$1.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity$4) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n};\n\nvar clip = function(pointVisible, clipLine, interpolate, start) {\n  return function(rotate, sink) {\n    var line = clipLine(sink),\n        rotatedStart = rotate.invert(start[0], start[1]),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, rotatedStart);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipPolygon(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      var point = rotate(lambda, phi);\n      if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      var point = rotate(lambda, phi);\n      line.point(point[0], point[1]);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      var point = rotate(lambda, phi);\n      ringSink.point(point[0], point[1]);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n};\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi$2 - epsilon$2 : halfPi$2 - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi$2 - epsilon$2 : halfPi$2 - b[1]);\n}\n\nvar clipAntimeridian = clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi$3, -halfPi$2]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi$3 : -pi$3,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi$3) < epsilon$2) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$2 : -halfPi$2);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi$3) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon$2) lambda0 -= sign0 * epsilon$2; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon$2) lambda1 -= sign1 * epsilon$2;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon$2\n      ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n          - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi$2;\n    stream.point(-pi$3, phi);\n    stream.point(0, phi);\n    stream.point(pi$3, phi);\n    stream.point(pi$3, 0);\n    stream.point(pi$3, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi$3, -phi);\n    stream.point(-pi$3, 0);\n    stream.point(-pi$3, phi);\n  } else if (abs(from[0] - to[0]) > epsilon$2) {\n    var lambda = from[0] < to[0] ? pi$3 : -pi$3;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n\nvar clipCircle = function(radius, delta) {\n  var cr = cos$1(radius),\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon$2; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos$1(lambda) * cos$1(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi$3 : -pi$3), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon$2;\n            point1[1] += epsilon$2;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi$3) < epsilon$2,\n        meridian = polar || delta < epsilon$2;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$2 ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi$3 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi$3 - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$3, radius - pi$3]);\n};\n\nvar transform = function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n};\n\nfunction transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n\nfunction fitExtent(projection, extent, object) {\n  var w = extent[1][0] - extent[0][0],\n      h = extent[1][1] - extent[0][1],\n      clip = projection.clipExtent && projection.clipExtent();\n\n  projection\n      .scale(150)\n      .translate([0, 0]);\n\n  if (clip != null) projection.clipExtent(null);\n\n  geoStream(object, projection.stream(boundsStream$1));\n\n  var b = boundsStream$1.result(),\n      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\n  if (clip != null) projection.clipExtent(clip);\n\n  return projection\n      .scale(k * 150)\n      .translate([x, y]);\n}\n\nfunction fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nvar maxDepth = 16;\nvar cosMinDistance = cos$1(30 * radians); // cos(minimum angular distance)\n\nvar resample = function(project, delta2) {\n  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n};\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample$1(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon$2 || abs(lambda0 - lambda1) < epsilon$2 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nfunction projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      dx, dy, lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n      theta = null, preclip = clipAntimeridian, // clip angle\n      x0 = null, y0, x1, y1, postclip = identity$4, // clip extent\n      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    point = projectRotate(point[0] * radians, point[1] * radians);\n    return [point[0] * k + dx, dy - point[1] * k];\n  }\n\n  function invert(point) {\n    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n    return point && [point[0] * degrees$1, point[1] * degrees$1];\n  }\n\n  function projectTransform(x, y) {\n    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  function recenter() {\n    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n    var center = project(lambda, phi);\n    dx = x - center[0] * k;\n    dy = y + center[1] * k;\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n\nfunction conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi$3 / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n  };\n\n  return p;\n}\n\nfunction cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos$1(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin$1(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n\nfunction conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin$1(y0), n = (sy0 + sin$1(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon$2) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin$1(y)) / n;\n    return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nvar conicEqualArea = function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n};\n\nvar albers = function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n};\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nvar albersUsa = function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon$2, y + 0.120 * k + epsilon$2], [x - 0.214 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon$2, y + 0.166 * k + epsilon$2], [x - 0.115 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n};\n\nfunction azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos$1(x),\n        cy = cos$1(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin$1(x),\n      k * sin$1(y)\n    ];\n  }\n}\n\nfunction azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin$1(c),\n        cc = cos$1(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n\nvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nvar azimuthalEqualArea = function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n};\n\nvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin$1(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nvar azimuthalEquidistant = function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n};\n\nfunction mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi$2 + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi$2];\n};\n\nvar mercator = function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau$3);\n};\n\nfunction mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi$3 * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n\nfunction tany(y) {\n  return tan((halfPi$2 + y) / 2);\n}\n\nfunction conicConformalRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : log(cy0 / cos$1(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi$2 + epsilon$2) y = -halfPi$2 + epsilon$2; }\n    else { if (y > halfPi$2 - epsilon$2) y = halfPi$2 - epsilon$2; }\n    var r = f / pow(tany(y), n);\n    return [r * sin$1(n * x), f - r * cos$1(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy);\n    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi$2];\n  };\n\n  return project;\n}\n\nvar conicConformal = function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n};\n\nfunction equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nvar equirectangular = function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n};\n\nfunction conicEquidistantRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon$2) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin$1(nx), g - gy * cos$1(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nvar conicEquidistant = function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n};\n\nfunction gnomonicRaw(x, y) {\n  var cy = cos$1(y), k = cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nvar gnomonic = function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n};\n\nfunction scaleTranslate(kx, ky, tx, ty) {\n  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity$4 : transformer({\n    point: function(x, y) {\n      this.stream.point(x * kx + tx, y * ky + ty);\n    }\n  });\n}\n\nvar identity$5 = function() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform = identity$4, // scale, translate and reflect\n      x0 = null, y0, x1, y1, clip = identity$4, // clip extent\n      cache,\n      cacheStream,\n      projection;\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return projection = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = transform(clip(cacheStream = stream));\n    },\n    clipExtent: function(_) {\n      return arguments.length ? (clip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    },\n    scale: function(_) {\n      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n    },\n    translate: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n    },\n    reflectX: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n    },\n    reflectY: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n    },\n    fitExtent: function(extent, object) {\n      return fitExtent(projection, extent, object);\n    },\n    fitSize: function(size, object) {\n      return fitSize(projection, size, object);\n    }\n  };\n};\n\nfunction orthographicRaw(x, y) {\n  return [cos$1(y) * sin$1(x), sin$1(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nvar orthographic = function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon$2);\n};\n\nfunction stereographicRaw(x, y) {\n  var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nvar stereographic = function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n};\n\nfunction transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi$2 + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi$2];\n};\n\nvar transverseMercator = function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n};\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nvar cluster = function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n};\n\nfunction count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nvar node_count = function() {\n  return this.eachAfter(count);\n};\n\nvar node_each = function(callback) {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n  return this;\n};\n\nvar node_eachBefore = function(callback) {\n  var node = this, nodes = [node], children, i;\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n  return this;\n};\n\nvar node_eachAfter = function(callback) {\n  var node = this, nodes = [node], next = [], children, i, n;\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n  while (node = next.pop()) {\n    callback(node);\n  }\n  return this;\n};\n\nvar node_sum = function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n};\n\nvar node_sort = function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n};\n\nvar node_path = function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n};\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n\nvar node_ancestors = function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n};\n\nvar node_descendants = function() {\n  var nodes = [];\n  this.each(function(node) {\n    nodes.push(node);\n  });\n  return nodes;\n};\n\nvar node_leaves = function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n};\n\nvar node_links = function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n};\n\nfunction hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nfunction computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nfunction Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n\nfunction Node$2(value) {\n  this._ = value;\n  this.next = null;\n}\n\nvar shuffle$1 = function(array) {\n  var i,\n      n = (array = array.slice()).length,\n      head = null,\n      node = head;\n\n  while (n) {\n    var next = new Node$2(array[n - 1]);\n    if (node) node = node.next = next;\n    else node = head = next;\n    array[i] = array[--n];\n  }\n\n  return {\n    head: head,\n    tail: node\n  };\n};\n\nvar enclose = function(circles) {\n  return encloseN(shuffle$1(circles), []);\n};\n\nfunction encloses(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r - b.r;\n  return dr * dr + 1e-6 > dx * dx + dy * dy;\n}\n\n// Returns the smallest circle that contains circles L and intersects circles B.\nfunction encloseN(L, B) {\n  var circle,\n      l0 = null,\n      l1 = L.head,\n      l2,\n      p1;\n\n  switch (B.length) {\n    case 1: circle = enclose1(B[0]); break;\n    case 2: circle = enclose2(B[0], B[1]); break;\n    case 3: circle = enclose3(B[0], B[1], B[2]); break;\n  }\n\n  while (l1) {\n    p1 = l1._, l2 = l1.next;\n    if (!circle || !encloses(circle, p1)) {\n\n      // Temporarily truncate L before l1.\n      if (l0) L.tail = l0, l0.next = null;\n      else L.head = L.tail = null;\n\n      B.push(p1);\n      circle = encloseN(L, B); // Note: reorders L!\n      B.pop();\n\n      // Move l1 to the front of L and reconnect the truncated list L.\n      if (L.head) l1.next = L.head, L.head = l1;\n      else l1.next = null, L.head = L.tail = l1;\n      l0 = L.tail, l0.next = l2;\n\n    } else {\n      l0 = l1;\n    }\n    l1 = l2;\n  }\n\n  L.tail = l0;\n  return circle;\n}\n\nfunction enclose1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction enclose2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction enclose3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = 2 * (x1 - x2),\n      b2 = 2 * (y1 - y2),\n      c2 = 2 * (r2 - r1),\n      d2 = x1 * x1 + y1 * y1 - r1 * r1 - x2 * x2 - y2 * y2 + r2 * r2,\n      a3 = 2 * (x1 - x3),\n      b3 = 2 * (y1 - y3),\n      c3 = 2 * (r3 - r1),\n      d3 = x1 * x1 + y1 * y1 - r1 * r1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / ab - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / ab - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (xa * xb + ya * yb + r1),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = (-B - Math.sqrt(B * B - 4 * A * C)) / (2 * A);\n  return {\n    x: xa + xb * r + x1,\n    y: ya + yb * r + y1,\n    r: r\n  };\n}\n\nfunction place(a, b, c) {\n  var ax = a.x,\n      ay = a.y,\n      da = b.r + c.r,\n      db = a.r + c.r,\n      dx = b.x - ax,\n      dy = b.y - ay,\n      dc = dx * dx + dy * dy;\n  if (dc) {\n    var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n        y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n    c.x = ax + x * dx + y * dy;\n    c.y = ay + x * dy - y * dx;\n  } else {\n    c.x = ax + db;\n    c.y = ay;\n  }\n}\n\nfunction intersects(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r + b.r;\n  return dr * dr - 1e-6 > dx * dx + dy * dy;\n}\n\nfunction distance2(node, x, y) {\n  var a = node._,\n      b = node.next._,\n      ab = a.r + b.r,\n      dx = (a.x * b.r + b.x * a.r) / ab - x,\n      dy = (a.y * b.r + b.y * a.r) / ab - y;\n  return dx * dx + dy * dy;\n}\n\nfunction Node$1(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nfunction packEnclose(circles) {\n  if (!(n = circles.length)) return 0;\n\n  var a, b, c, n;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the weighted centroid.\n  var aa = a.r * a.r,\n      ba = b.r * b.r,\n      ca = c.r * c.r,\n      oa = aa + ba + ca,\n      ox = aa * a.x + ba * b.x + ca * c.x,\n      oy = aa * a.y + ba * b.y + ca * c.y,\n      cx, cy, i, j, k, sj, sk;\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    // “Closeness” is determined by linear distance along the front-chain.\n    // “Ahead” or “behind” is likewise determined by linear distance.\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          b = j, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sj += j._.r, j = j.next;\n      } else {\n        if (intersects(k._, c._)) {\n          a = k, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sk += k._.r, k = k.previous;\n      }\n    } while (j !== k.next);\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Update the weighted centroid.\n    oa += ca = c._.r * c._.r;\n    ox += ca * c._.x;\n    oy += ca * c._.y;\n\n    // Compute the new closest circle pair to the centroid.\n    aa = distance2(a, cx = ox / oa, cy = oy / oa);\n    while ((c = c.next) !== b) {\n      if ((ca = distance2(c, cx, cy)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nvar siblings = function(circles) {\n  packEnclose(circles);\n  return circles;\n};\n\nfunction optional(f) {\n  return f == null ? null : required(f);\n}\n\nfunction required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n\nfunction constantZero() {\n  return 0;\n}\n\nvar constant$8 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction defaultRadius$1(d) {\n  return Math.sqrt(d.value);\n}\n\nvar index$2 = function() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildren(padding, 0.5))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius$1))\n          .eachAfter(packChildren(constantZero, 1))\n          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant$8(+x), pack) : padding;\n  };\n\n  return pack;\n};\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n\nvar roundNode = function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n};\n\nvar treemapDice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n};\n\nvar partition = function() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n};\n\nvar keyPrefix$1 = \"$\";\nvar preroot = {depth: -1};\nvar ambiguous = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nvar stratify = function() {\n  var id = defaultId,\n      parentId = defaultParentId;\n\n  function stratify(data) {\n    var d,\n        i,\n        n = data.length,\n        root,\n        parent,\n        node,\n        nodes = new Array(n),\n        nodeId,\n        nodeKey,\n        nodeByKey = {};\n\n    for (i = 0; i < n; ++i) {\n      d = data[i], node = nodes[i] = new Node(d);\n      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = keyPrefix$1 + (node.id = nodeId);\n        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], nodeId = parentId(data[i], i, data);\n      if (nodeId == null || !(nodeId += \"\")) {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      } else {\n        parent = nodeByKey[keyPrefix$1 + nodeId];\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = required(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = required(x), stratify) : parentId;\n  };\n\n  return stratify;\n};\n\nfunction defaultSeparation$1(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nvar tree = function() {\n  var separation = defaultSeparation$1,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n};\n\nvar treemapSlice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n};\n\nvar phi = (1 + Math.sqrt(5)) / 2;\n\nfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nvar squarify = ((function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n}))(phi);\n\nvar index$3 = function() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n};\n\nvar binary = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((x1 - x0) > (y1 - y0)) {\n      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    } else {\n      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    }\n  }\n};\n\nvar sliceDice = function(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n};\n\nvar resquarify = ((function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n}))(phi);\n\nvar area$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      a,\n      b = polygon[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    area += a[1] * b[0] - a[0] * b[1];\n  }\n\n  return area / 2;\n};\n\nvar centroid$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      x = 0,\n      y = 0,\n      a,\n      b = polygon[n - 1],\n      c,\n      k = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    k += c = a[0] * b[1] - b[0] * a[1];\n    x += (a[0] + b[0]) * c;\n    y += (a[1] + b[1]) * c;\n  }\n\n  return k *= 3, [x / k, y / k];\n};\n\n// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n// negative if clockwise, and zero if the points are collinear.\nvar cross$1 = function(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n};\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n}\n\n// Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\nfunction computeUpperHullIndexes(points) {\n  var n = points.length,\n      indexes = [0, 1],\n      size = 2;\n\n  for (var i = 2; i < n; ++i) {\n    while (size > 1 && cross$1(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nvar hull = function(points) {\n  if ((n = points.length) < 3) return null;\n\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  sortedPoints.sort(lexicographicOrder);\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n  // Construct the hull polygon, removing possible duplicate endpoints.\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = [];\n\n  // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n  return hull;\n};\n\nvar contains$1 = function(polygon, point) {\n  var n = polygon.length,\n      p = polygon[n - 1],\n      x = point[0], y = point[1],\n      x0 = p[0], y0 = p[1],\n      x1, y1,\n      inside = false;\n\n  for (var i = 0; i < n; ++i) {\n    p = polygon[i], x1 = p[0], y1 = p[1];\n    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n    x0 = x1, y0 = y1;\n  }\n\n  return inside;\n};\n\nvar length$2 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      b = polygon[n - 1],\n      xa,\n      ya,\n      xb = b[0],\n      yb = b[1],\n      perimeter = 0;\n\n  while (++i < n) {\n    xa = xb;\n    ya = yb;\n    b = polygon[i];\n    xb = b[0];\n    yb = b[1];\n    xa -= xb;\n    ya -= yb;\n    perimeter += Math.sqrt(xa * xa + ya * ya);\n  }\n\n  return perimeter;\n};\n\nvar slice$3 = [].slice;\n\nvar noabort = {};\n\nfunction Queue(size) {\n  this._size = size;\n  this._call =\n  this._error = null;\n  this._tasks = [];\n  this._data = [];\n  this._waiting =\n  this._active =\n  this._ended =\n  this._start = 0; // inside a synchronous task callback?\n}\n\nQueue.prototype = queue.prototype = {\n  constructor: Queue,\n  defer: function(callback) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n    if (this._call) throw new Error(\"defer after await\");\n    if (this._error != null) return this;\n    var t = slice$3.call(arguments, 1);\n    t.push(callback);\n    ++this._waiting, this._tasks.push(t);\n    poke$1(this);\n    return this;\n  },\n  abort: function() {\n    if (this._error == null) abort(this, new Error(\"abort\"));\n    return this;\n  },\n  await: function(callback) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n    if (this._call) throw new Error(\"multiple await\");\n    this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n    maybeNotify(this);\n    return this;\n  },\n  awaitAll: function(callback) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n    if (this._call) throw new Error(\"multiple await\");\n    this._call = callback;\n    maybeNotify(this);\n    return this;\n  }\n};\n\nfunction poke$1(q) {\n  if (!q._start) {\n    try { start$1(q); } // let the current task complete\n    catch (e) {\n      if (q._tasks[q._ended + q._active - 1]) abort(q, e); // task errored synchronously\n      else if (!q._data) throw e; // await callback errored synchronously\n    }\n  }\n}\n\nfunction start$1(q) {\n  while (q._start = q._waiting && q._active < q._size) {\n    var i = q._ended + q._active,\n        t = q._tasks[i],\n        j = t.length - 1,\n        c = t[j];\n    t[j] = end(q, i);\n    --q._waiting, ++q._active;\n    t = c.apply(null, t);\n    if (!q._tasks[i]) continue; // task finished synchronously\n    q._tasks[i] = t || noabort;\n  }\n}\n\nfunction end(q, i) {\n  return function(e, r) {\n    if (!q._tasks[i]) return; // ignore multiple callbacks\n    --q._active, ++q._ended;\n    q._tasks[i] = null;\n    if (q._error != null) return; // ignore secondary errors\n    if (e != null) {\n      abort(q, e);\n    } else {\n      q._data[i] = r;\n      if (q._waiting) poke$1(q);\n      else maybeNotify(q);\n    }\n  };\n}\n\nfunction abort(q, e) {\n  var i = q._tasks.length, t;\n  q._error = e; // ignore active callbacks\n  q._data = undefined; // allow gc\n  q._waiting = NaN; // prevent starting\n\n  while (--i >= 0) {\n    if (t = q._tasks[i]) {\n      q._tasks[i] = null;\n      if (t.abort) {\n        try { t.abort(); }\n        catch (e) { /* ignore */ }\n      }\n    }\n  }\n\n  q._active = NaN; // allow notification\n  maybeNotify(q);\n}\n\nfunction maybeNotify(q) {\n  if (!q._active && q._call) {\n    var d = q._data;\n    q._data = undefined; // allow gc\n    q._call(q._error, d);\n  }\n}\n\nfunction queue(concurrency) {\n  if (concurrency == null) concurrency = Infinity;\n  else if (!((concurrency = +concurrency) >= 1)) throw new Error(\"invalid concurrency\");\n  return new Queue(concurrency);\n}\n\nvar defaultSource$1 = function() {\n  return Math.random();\n};\n\nvar uniform = ((function sourceRandomUniform(source) {\n  function randomUniform(min, max) {\n    min = min == null ? 0 : +min;\n    max = max == null ? 1 : +max;\n    if (arguments.length === 1) max = min, min = 0;\n    else max -= min;\n    return function() {\n      return source() * max + min;\n    };\n  }\n\n  randomUniform.source = sourceRandomUniform;\n\n  return randomUniform;\n}))(defaultSource$1);\n\nvar normal = ((function sourceRandomNormal(source) {\n  function randomNormal(mu, sigma) {\n    var x, r;\n    mu = mu == null ? 0 : +mu;\n    sigma = sigma == null ? 1 : +sigma;\n    return function() {\n      var y;\n\n      // If available, use the second previously-generated uniform random.\n      if (x != null) y = x, x = null;\n\n      // Otherwise, generate a new x and y.\n      else do {\n        x = source() * 2 - 1;\n        y = source() * 2 - 1;\n        r = x * x + y * y;\n      } while (!r || r > 1);\n\n      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n    };\n  }\n\n  randomNormal.source = sourceRandomNormal;\n\n  return randomNormal;\n}))(defaultSource$1);\n\nvar logNormal = ((function sourceRandomLogNormal(source) {\n  function randomLogNormal() {\n    var randomNormal = normal.source(source).apply(this, arguments);\n    return function() {\n      return Math.exp(randomNormal());\n    };\n  }\n\n  randomLogNormal.source = sourceRandomLogNormal;\n\n  return randomLogNormal;\n}))(defaultSource$1);\n\nvar irwinHall = ((function sourceRandomIrwinHall(source) {\n  function randomIrwinHall(n) {\n    return function() {\n      for (var sum = 0, i = 0; i < n; ++i) sum += source();\n      return sum;\n    };\n  }\n\n  randomIrwinHall.source = sourceRandomIrwinHall;\n\n  return randomIrwinHall;\n}))(defaultSource$1);\n\nvar bates = ((function sourceRandomBates(source) {\n  function randomBates(n) {\n    var randomIrwinHall = irwinHall.source(source)(n);\n    return function() {\n      return randomIrwinHall() / n;\n    };\n  }\n\n  randomBates.source = sourceRandomBates;\n\n  return randomBates;\n}))(defaultSource$1);\n\nvar exponential$1 = ((function sourceRandomExponential(source) {\n  function randomExponential(lambda) {\n    return function() {\n      return -Math.log(1 - source()) / lambda;\n    };\n  }\n\n  randomExponential.source = sourceRandomExponential;\n\n  return randomExponential;\n}))(defaultSource$1);\n\nvar request = function(url, callback) {\n  var request,\n      event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n      mimeType,\n      headers = map$1(),\n      xhr = new XMLHttpRequest,\n      user = null,\n      password = null,\n      response,\n      responseType,\n      timeout = 0;\n\n  // If IE does not support CORS, use XDomainRequest.\n  if (typeof XDomainRequest !== \"undefined\"\n      && !(\"withCredentials\" in xhr)\n      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\n  \"onload\" in xhr\n      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\n  function respond(o) {\n    var status = xhr.status, result;\n    if (!status && hasResponse(xhr)\n        || status >= 200 && status < 300\n        || status === 304) {\n      if (response) {\n        try {\n          result = response.call(request, xhr);\n        } catch (e) {\n          event.call(\"error\", request, e);\n          return;\n        }\n      } else {\n        result = xhr;\n      }\n      event.call(\"load\", request, result);\n    } else {\n      event.call(\"error\", request, o);\n    }\n  }\n\n  xhr.onprogress = function(e) {\n    event.call(\"progress\", request, e);\n  };\n\n  request = {\n    header: function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers.get(name);\n      if (value == null) headers.remove(name);\n      else headers.set(name, value + \"\");\n      return request;\n    },\n\n    // If mimeType is non-null and no Accept header is set, a default is used.\n    mimeType: function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return request;\n    },\n\n    // Specifies what type the response value should take;\n    // for instance, arraybuffer, blob, document, or text.\n    responseType: function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return request;\n    },\n\n    timeout: function(value) {\n      if (!arguments.length) return timeout;\n      timeout = +value;\n      return request;\n    },\n\n    user: function(value) {\n      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n    },\n\n    password: function(value) {\n      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n    },\n\n    // Specify how to convert the response content to a specific type;\n    // changes the callback value on \"load\" events.\n    response: function(value) {\n      response = value;\n      return request;\n    },\n\n    // Alias for send(\"GET\", …).\n    get: function(data, callback) {\n      return request.send(\"GET\", data, callback);\n    },\n\n    // Alias for send(\"POST\", …).\n    post: function(data, callback) {\n      return request.send(\"POST\", data, callback);\n    },\n\n    // If callback is non-null, it will be used for error and load events.\n    send: function(method, data, callback) {\n      xhr.open(method, url, true, user, password);\n      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n      if (responseType != null) xhr.responseType = responseType;\n      if (timeout > 0) xhr.timeout = timeout;\n      if (callback == null && typeof data === \"function\") callback = data, data = null;\n      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n      if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n      event.call(\"beforesend\", request, xhr);\n      xhr.send(data == null ? null : data);\n      return request;\n    },\n\n    abort: function() {\n      xhr.abort();\n      return request;\n    },\n\n    on: function() {\n      var value = event.on.apply(event, arguments);\n      return value === event ? request : value;\n    }\n  };\n\n  if (callback != null) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    return request.get(callback);\n  }\n\n  return request;\n};\n\nfunction fixCallback(callback) {\n  return function(error, xhr) {\n    callback(error == null ? xhr : null);\n  };\n}\n\nfunction hasResponse(xhr) {\n  var type = xhr.responseType;\n  return type && type !== \"text\"\n      ? xhr.response // null on error\n      : xhr.responseText; // \"\" on error\n}\n\nvar type$1 = function(defaultMimeType, response) {\n  return function(url, callback) {\n    var r = request(url).mimeType(defaultMimeType).response(response);\n    if (callback != null) {\n      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n      return r.get(callback);\n    }\n    return r;\n  };\n};\n\nvar html = type$1(\"text/html\", function(xhr) {\n  return document.createRange().createContextualFragment(xhr.responseText);\n});\n\nvar json = type$1(\"application/json\", function(xhr) {\n  return JSON.parse(xhr.responseText);\n});\n\nvar text = type$1(\"text/plain\", function(xhr) {\n  return xhr.responseText;\n});\n\nvar xml = type$1(\"application/xml\", function(xhr) {\n  var xml = xhr.responseXML;\n  if (!xml) throw new Error(\"parse error\");\n  return xml;\n});\n\nvar dsv$1 = function(defaultMimeType, parse) {\n  return function(url, row, callback) {\n    if (arguments.length < 3) callback = row, row = null;\n    var r = request(url).mimeType(defaultMimeType);\n    r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n    r.row(row);\n    return callback ? r.get(callback) : r;\n  };\n};\n\nfunction responseOf(parse, row) {\n  return function(request$$1) {\n    return parse(request$$1.responseText, row);\n  };\n}\n\nvar csv$1 = dsv$1(\"text/csv\", csvParse);\n\nvar tsv$1 = dsv$1(\"text/tab-separated-values\", tsvParse);\n\nvar array$2 = Array.prototype;\n\nvar map$3 = array$2.map;\nvar slice$4 = array$2.slice;\n\nvar implicit = {name: \"implicit\"};\n\nfunction ordinal(range) {\n  var index = map$1(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice$4.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map$1();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$4.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n\nfunction band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range$$1 = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range$$1[1] < range$$1[0],\n        start = range$$1[reverse - 0],\n        stop = range$$1[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range$$1)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nfunction point$1() {\n  return pointish(band().paddingInner(1));\n}\n\nvar constant$9 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar number$1 = function(x) {\n  return +x;\n};\n\nvar unit = [0, 1];\n\nfunction deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant$9(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range$$1, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range$$1[0], r1 = range$$1[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range$$1, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range$$1.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range$$1 = range$$1.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range$$1[i], range$$1[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisectRight(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nfunction copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nfunction continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range$$1 = unit,\n      interpolate$$1 = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range$$1.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range$$1, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range$$1, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$4.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = slice$4.call(_), interpolate$$1 = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n  };\n\n  return rescale();\n}\n\nvar tickFormat = function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return exports.formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return exports.format(specifier);\n};\n\nfunction linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nfunction linear$2() {\n  var scale = continuous(deinterpolateLinear, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear$2());\n  };\n\n  return linearish(scale);\n}\n\nfunction identity$6() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity$6().domain(domain);\n  };\n\n  return linearish(scale);\n}\n\nvar nice = function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n};\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant$9(b);\n}\n\nfunction reinterpolate$1(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nfunction log$1() {\n  var scale = continuous(deinterpolate, reinterpolate$1).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log$1().base(base));\n  };\n\n  return scale;\n}\n\nfunction raise$1(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nfunction pow$1() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise$1(b, exponent) - (a = raise$1(a, exponent)))\n        ? function(x) { return (raise$1(x, exponent) - a) / b; }\n        : constant$9(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise$1(b, exponent) - (a = raise$1(a, exponent));\n    return function(t) { return raise$1(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow$1().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nfunction sqrt$1() {\n  return pow$1().exponent(0.5);\n}\n\nfunction quantile$$1() {\n  var domain = [],\n      range$$1 = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range$$1.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range$$1[bisectRight(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$4.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile$$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nfunction quantize$1() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range$$1 = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range$$1 = slice$4.call(_)).length - 1, rescale()) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize$1()\n        .domain([x0, x1])\n        .range(range$$1);\n  };\n\n  return linearish(scale);\n}\n\nfunction threshold$1() {\n  var domain = [0.5],\n      range$$1 = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice$4.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$4.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nvar t0$1 = new Date;\nvar t1$1 = new Date;\n\nfunction newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [];\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) while (--step >= 0) while (offseti(date, 1), !test(date)) {} // eslint-disable-line no-empty\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0$1.setTime(+start), t1$1.setTime(+end);\n      floori(t0$1), floori(t1$1);\n      return Math.floor(count(t0$1, t1$1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n\nvar millisecond = newInterval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return newInterval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nvar milliseconds = millisecond.range;\n\nvar durationSecond$1 = 1e3;\nvar durationMinute$1 = 6e4;\nvar durationHour$1 = 36e5;\nvar durationDay$1 = 864e5;\nvar durationWeek$1 = 6048e5;\n\nvar second = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationSecond$1) * durationSecond$1);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond$1);\n}, function(start, end) {\n  return (end - start) / durationSecond$1;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nvar seconds = second.range;\n\nvar minute = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationMinute$1) * durationMinute$1);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute$1);\n}, function(start, end) {\n  return (end - start) / durationMinute$1;\n}, function(date) {\n  return date.getMinutes();\n});\n\nvar minutes = minute.range;\n\nvar hour = newInterval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute$1 % durationHour$1;\n  if (offset < 0) offset += durationHour$1;\n  date.setTime(Math.floor((+date - offset) / durationHour$1) * durationHour$1 + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour$1);\n}, function(start, end) {\n  return (end - start) / durationHour$1;\n}, function(date) {\n  return date.getHours();\n});\n\nvar hours = hour.range;\n\nvar day = newInterval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationDay$1;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nvar days = day.range;\n\nfunction weekday(i) {\n  return newInterval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationWeek$1;\n  });\n}\n\nvar sunday = weekday(0);\nvar monday = weekday(1);\nvar tuesday = weekday(2);\nvar wednesday = weekday(3);\nvar thursday = weekday(4);\nvar friday = weekday(5);\nvar saturday = weekday(6);\n\nvar sundays = sunday.range;\nvar mondays = monday.range;\nvar tuesdays = tuesday.range;\nvar wednesdays = wednesday.range;\nvar thursdays = thursday.range;\nvar fridays = friday.range;\nvar saturdays = saturday.range;\n\nvar month = newInterval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nvar months = month.range;\n\nvar year = newInterval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nvar years = year.range;\n\nvar utcMinute = newInterval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute$1);\n}, function(start, end) {\n  return (end - start) / durationMinute$1;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nvar utcMinutes = utcMinute.range;\n\nvar utcHour = newInterval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour$1);\n}, function(start, end) {\n  return (end - start) / durationHour$1;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nvar utcHours = utcHour.range;\n\nvar utcDay = newInterval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay$1;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nvar utcDays = utcDay.range;\n\nfunction utcWeekday(i) {\n  return newInterval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek$1;\n  });\n}\n\nvar utcSunday = utcWeekday(0);\nvar utcMonday = utcWeekday(1);\nvar utcTuesday = utcWeekday(2);\nvar utcWednesday = utcWeekday(3);\nvar utcThursday = utcWeekday(4);\nvar utcFriday = utcWeekday(5);\nvar utcSaturday = utcWeekday(6);\n\nvar utcSundays = utcSunday.range;\nvar utcMondays = utcMonday.range;\nvar utcTuesdays = utcTuesday.range;\nvar utcWednesdays = utcWednesday.range;\nvar utcThursdays = utcThursday.range;\nvar utcFridays = utcFriday.range;\nvar utcSaturdays = utcSaturday.range;\n\nvar utcMonth = newInterval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nvar utcMonths = utcMonth.range;\n\nvar utcYear = newInterval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nvar utcYears = utcYear.range;\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nfunction formatLocale$1(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"S\": formatSeconds,\n    \"U\": formatWeekNumberSunday,\n    \"w\": formatWeekdayNumber,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"S\": formatUTCSeconds,\n    \"U\": formatUTCWeekNumberSunday,\n    \"w\": formatUTCWeekdayNumber,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"S\": parseSeconds,\n    \"U\": parseWeekNumberSunday,\n    \"w\": parseWeekdayNumber,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0);\n      if (i != string.length) return null;\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n        var day$$1 = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day$$1 + 5) % 7 : d.w + d.U * 7 - (day$$1 + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\nvar numberRe = /^\\s*\\d+/;\nvar percentRe = /^%/;\nvar requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + day.count(year(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(sunday.count(year(d), d), p, 2);\n}\n\nfunction formatWeekdayNumber(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(monday.count(year(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekdayNumber(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nvar locale$2;\n\n\n\n\n\ndefaultLocale$1({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nfunction defaultLocale$1(definition) {\n  locale$2 = formatLocale$1(definition);\n  exports.timeFormat = locale$2.format;\n  exports.timeParse = locale$2.parse;\n  exports.utcFormat = locale$2.utcFormat;\n  exports.utcParse = locale$2.utcParse;\n  return locale$2;\n}\n\nvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : exports.utcFormat(isoSpecifier);\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : exports.utcParse(isoSpecifier);\n\nvar durationSecond = 1000;\nvar durationMinute = durationSecond * 60;\nvar durationHour = durationMinute * 60;\nvar durationDay = durationHour * 24;\nvar durationWeek = durationDay * 7;\nvar durationMonth = durationDay * 30;\nvar durationYear = durationDay * 365;\n\nfunction date$1(t) {\n  return new Date(t);\n}\n\nfunction number$2(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nfunction calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format) {\n  var scale = continuous(deinterpolateLinear, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second$$1,  1,      durationSecond],\n    [second$$1,  5,  5 * durationSecond],\n    [second$$1, 15, 15 * durationSecond],\n    [second$$1, 30, 30 * durationSecond],\n    [minute$$1,  1,      durationMinute],\n    [minute$$1,  5,  5 * durationMinute],\n    [minute$$1, 15, 15 * durationMinute],\n    [minute$$1, 30, 30 * durationMinute],\n    [  hour$$1,  1,      durationHour  ],\n    [  hour$$1,  3,  3 * durationHour  ],\n    [  hour$$1,  6,  6 * durationHour  ],\n    [  hour$$1, 12, 12 * durationHour  ],\n    [   day$$1,  1,      durationDay   ],\n    [   day$$1,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month$$1,  1,      durationMonth ],\n    [ month$$1,  3,  3 * durationMonth ],\n    [  year$$1,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second$$1(date) < date ? formatMillisecond\n        : minute$$1(date) < date ? formatSecond\n        : hour$$1(date) < date ? formatMinute\n        : day$$1(date) < date ? formatHour\n        : month$$1(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year$$1(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year$$1;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = tickStep(start, stop, interval);\n        interval = millisecond$$1;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map$3.call(_, number$2)) : domain().map(date$1);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format));\n  };\n\n  return scale;\n}\n\nvar time = function() {\n  return calendar(year, month, sunday, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n};\n\nvar utcTime = function() {\n  return calendar(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n};\n\nvar colors = function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n};\n\nvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\nvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\nvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\nvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\nvar cubehelix$3 = cubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\nvar warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nvar rainbow$1 = function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n};\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\nfunction sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n\nvar constant$10 = function(x) {\n  return function constant() {\n    return x;\n  };\n};\n\nvar abs$1 = Math.abs;\nvar atan2$1 = Math.atan2;\nvar cos$2 = Math.cos;\nvar max$2 = Math.max;\nvar min$1 = Math.min;\nvar sin$2 = Math.sin;\nvar sqrt$2 = Math.sqrt;\n\nvar epsilon$3 = 1e-12;\nvar pi$4 = Math.PI;\nvar halfPi$3 = pi$4 / 2;\nvar tau$4 = 2 * pi$4;\n\nfunction acos$1(x) {\n  return x > 1 ? 0 : x < -1 ? pi$4 : Math.acos(x);\n}\n\nfunction asin$1(x) {\n  return x >= 1 ? halfPi$3 : x <= -1 ? -halfPi$3 : Math.asin(x);\n}\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt$2(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt$2(max$2(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nvar arc = function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant$10(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi$3,\n        a1 = endAngle.apply(this, arguments) - halfPi$3,\n        da = abs$1(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon$3)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau$4 - epsilon$3) {\n      context.moveTo(r1 * cos$2(a0), r1 * sin$2(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon$3) {\n        context.moveTo(r0 * cos$2(a1), r0 * sin$2(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon$3) && (padRadius ? +padRadius.apply(this, arguments) : sqrt$2(r0 * r0 + r1 * r1)),\n          rc = min$1(abs$1(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon$3) {\n        var p0 = asin$1(rp / r0 * sin$2(ap)),\n            p1 = asin$1(rp / r1 * sin$2(ap));\n        if ((da0 -= p0 * 2) > epsilon$3) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon$3) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos$2(a01),\n          y01 = r1 * sin$2(a01),\n          x10 = r0 * cos$2(a10),\n          y10 = r0 * sin$2(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon$3) {\n        var x11 = r1 * cos$2(a11),\n            y11 = r1 * sin$2(a11),\n            x00 = r0 * cos$2(a00),\n            y00 = r0 * sin$2(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi$4) {\n          var oc = da0 > epsilon$3 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin$2(acos$1((ax * bx + ay * by) / (sqrt$2(ax * ax + ay * ay) * sqrt$2(bx * bx + by * by))) / 2),\n              lc = sqrt$2(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min$1(rc, (r0 - lc) / (kc - 1));\n          rc1 = min$1(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon$3)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon$3) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon$3) || !(da0 > epsilon$3)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon$3) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$4 / 2;\n    return [cos$2(a) * r, sin$2(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n};\n\nfunction Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nvar curveLinear = function(context) {\n  return new Linear(context);\n};\n\nfunction x$3(p) {\n  return p[0];\n}\n\nfunction y$3(p) {\n  return p[1];\n}\n\nvar line = function() {\n  var x$$1 = x$3,\n      y$$1 = y$3,\n      defined = constant$10(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : x$$1;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : y$$1;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n};\n\nvar area$2 = function() {\n  var x0 = x$3,\n      x1 = null,\n      y0 = constant$10(0),\n      y1 = y$3,\n      defined = constant$10(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n};\n\nvar descending$1 = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar identity$7 = function(d) {\n  return d;\n};\n\nvar pie = function() {\n  var value = identity$7,\n      sortValues = descending$1,\n      sort = null,\n      startAngle = constant$10(0),\n      endAngle = constant$10(tau$4),\n      padAngle = constant$10(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau$4, Math.max(-tau$4, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : padAngle;\n  };\n\n  return pie;\n};\n\nvar curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nfunction curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n\nfunction radialLine(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nvar radialLine$1 = function() {\n  return radialLine(line().curve(curveRadialLinear));\n};\n\nvar radialArea = function() {\n  var a = area$2().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return radialLine(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return radialLine(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return radialLine(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return radialLine(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n};\n\nvar slice$5 = Array.prototype.slice;\n\nvar radialPoint = function(x, y) {\n  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];\n};\n\nfunction linkSource(d) {\n  return d.source;\n}\n\nfunction linkTarget(d) {\n  return d.target;\n}\n\nfunction link$2(curve) {\n  var source = linkSource,\n      target = linkTarget,\n      x$$1 = x$3,\n      y$$1 = y$3,\n      context = null;\n\n  function link() {\n    var buffer, argv = slice$5.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);\n    if (!context) context = buffer = path();\n    curve(context, +x$$1.apply(this, (argv[0] = s, argv)), +y$$1.apply(this, argv), +x$$1.apply(this, (argv[0] = t, argv)), +y$$1.apply(this, argv));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  link.source = function(_) {\n    return arguments.length ? (source = _, link) : source;\n  };\n\n  link.target = function(_) {\n    return arguments.length ? (target = _, link) : target;\n  };\n\n  link.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$10(+_), link) : x$$1;\n  };\n\n  link.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$10(+_), link) : y$$1;\n  };\n\n  link.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), link) : context;\n  };\n\n  return link;\n}\n\nfunction curveHorizontal(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);\n}\n\nfunction curveVertical(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);\n}\n\nfunction curveRadial$1(context, x0, y0, x1, y1) {\n  var p0 = radialPoint(x0, y0),\n      p1 = radialPoint(x0, y0 = (y0 + y1) / 2),\n      p2 = radialPoint(x1, y0),\n      p3 = radialPoint(x1, y1);\n  context.moveTo(p0[0], p0[1]);\n  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n}\n\nfunction linkHorizontal() {\n  return link$2(curveHorizontal);\n}\n\nfunction linkVertical() {\n  return link$2(curveVertical);\n}\n\nfunction linkRadial() {\n  var l = link$2(curveRadial$1);\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n  return l;\n}\n\nvar circle$2 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi$4);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau$4);\n  }\n};\n\nvar cross$2 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n\nvar tan30 = Math.sqrt(1 / 3);\nvar tan30_2 = tan30 * 2;\n\nvar diamond = {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n\nvar ka = 0.89081309152928522810;\nvar kr = Math.sin(pi$4 / 10) / Math.sin(7 * pi$4 / 10);\nvar kx = Math.sin(tau$4 / 10) * kr;\nvar ky = -Math.cos(tau$4 / 10) * kr;\n\nvar star = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau$4 * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n\nvar square = {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n\nvar sqrt3 = Math.sqrt(3);\n\nvar triangle = {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n\nvar c = -0.5;\nvar s = Math.sqrt(3) / 2;\nvar k = 1 / Math.sqrt(12);\nvar a = (k / 2 + 1) * 3;\n\nvar wye = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n\nvar symbols = [\n  circle$2,\n  cross$2,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nvar symbol = function() {\n  var type = constant$10(circle$2),\n      size = constant$10(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$10(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$10(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n};\n\nvar noop$2 = function() {};\n\nfunction point$2(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nfunction Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point$2(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basis$2 = function(context) {\n  return new Basis(context);\n};\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisClosed$1 = function(context) {\n  return new BasisClosed(context);\n};\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisOpen = function(context) {\n  return new BasisOpen(context);\n};\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nvar bundle = ((function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n}))(0.85);\n\nfunction point$3(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nfunction Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point$3(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinal = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalClosed = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalOpen = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction point$4(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon$3) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon$3) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRom = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomClosed = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomOpen = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nvar linearClosed = function(context) {\n  return new LinearClosed(context);\n};\n\nfunction sign$1(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign$1(s0) + sign$1(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point$5(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point$5(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point$5(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point$5(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n};\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nfunction monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nfunction monotoneY(context) {\n  return new MonotoneY(context);\n}\n\nfunction Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nvar natural = function(context) {\n  return new Natural(context);\n};\n\nfunction Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nvar step = function(context) {\n  return new Step(context, 0.5);\n};\n\nfunction stepBefore(context) {\n  return new Step(context, 0);\n}\n\nfunction stepAfter(context) {\n  return new Step(context, 1);\n}\n\nvar none$1 = function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n};\n\nvar none$2 = function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n};\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nvar stack = function() {\n  var keys = constant$10([]),\n      order = none$2,\n      offset = none$1,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$10(slice$5.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? none$2 : typeof _ === \"function\" ? _ : constant$10(slice$5.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? none$1 : _, stack) : offset;\n  };\n\n  return stack;\n};\n\nvar expand = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none$1(series, order);\n};\n\nvar diverging = function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = yp;\n      }\n    }\n  }\n};\n\nvar silhouette = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none$1(series, order);\n};\n\nvar wiggle = function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none$1(series, order);\n};\n\nvar ascending$2 = function(series) {\n  var sums = series.map(sum$2);\n  return none$2(series).sort(function(a, b) { return sums[a] - sums[b]; });\n};\n\nfunction sum$2(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n\nvar descending$2 = function(series) {\n  return ascending$2(series).reverse();\n};\n\nvar insideOut = function(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum$2),\n      order = none$2(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n};\n\nvar reverse = function(series) {\n  return none$2(series).reverse();\n};\n\nvar constant$11 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction x$4(d) {\n  return d[0];\n}\n\nfunction y$4(d) {\n  return d[1];\n}\n\nfunction RedBlackTree() {\n  this._ = null; // root node\n}\n\nfunction RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nfunction createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nfunction createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nfunction setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nfunction clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$4\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon$4)) {\n      delete edges[i];\n    }\n  }\n}\n\nfunction createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nfunction cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nfunction cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nfunction sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nfunction clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon$4 || Math.abs(endY - startY) > epsilon$4) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon$4 && y1 - endY > epsilon$4 ? [x0, Math.abs(startX - x0) < epsilon$4 ? startY : y1]\n              : Math.abs(endY - y1) < epsilon$4 && x1 - endX > epsilon$4 ? [Math.abs(startY - y1) < epsilon$4 ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon$4 && endY - y0 > epsilon$4 ? [x1, Math.abs(startX - x1) < epsilon$4 ? startY : y0]\n              : Math.abs(endY - y0) < epsilon$4 && endX - x0 > epsilon$4 ? [Math.abs(startY - y0) < epsilon$4 ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n\nvar circlePool = [];\n\nvar firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nfunction attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2$2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nfunction detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nfunction removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon$4\n      && Math.abs(y - lArc.circle.cy) < epsilon$4) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon$4\n      && Math.abs(y - rArc.circle.cy) < epsilon$4) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon$4) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon$4) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon$4) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon$4) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n\nvar epsilon$4 = 1e-6;\nvar epsilon2$2 = 1e-12;\nvar beaches;\nvar cells;\nvar circles;\nvar edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nfunction Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n};\n\nvar voronoi = function() {\n  var x$$1 = x$4,\n      y$$1 = y$4,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x$$1(d, i, data) / epsilon$4) * epsilon$4, Math.round(y$$1(d, i, data) / epsilon$4) * epsilon$4];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : x$$1;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : y$$1;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n};\n\nvar constant$12 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction ZoomEvent(target, type, transform) {\n  this.target = target;\n  this.type = type;\n  this.transform = transform;\n}\n\nfunction Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nvar identity$8 = new Transform(1, 0, 0);\n\ntransform$1.prototype = Transform.prototype;\n\nfunction transform$1(node) {\n  return node.__zoom || identity$8;\n}\n\nfunction nopropagation$2() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$2 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$2() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent$1() {\n  var e = this, w, h;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    w = e.width.baseVal.value;\n    h = e.height.baseVal.value;\n  } else {\n    w = e.clientWidth;\n    h = e.clientHeight;\n  }\n  return [[0, 0], [w, h]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity$8;\n}\n\nvar zoom = function() {\n  var filter = defaultFilter$2,\n      extent = defaultExtent$1,\n      k0 = 0,\n      k1 = Infinity,\n      x0 = -k1,\n      x1 = k1,\n      y0 = x0,\n      y1 = x1,\n      duration = 250,\n      interpolate$$1 = interpolateZoom,\n      gestures = [],\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150,\n      clickDistance2 = 0;\n\n  function zoom(selection$$1) {\n    selection$$1\n        .on(\"wheel.zoom\", wheeled)\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .property(\"__zoom\", defaultTransform);\n  }\n\n  zoom.transform = function(collection, transform) {\n    var selection$$1 = collection.selection ? collection.selection() : collection;\n    selection$$1.property(\"__zoom\", defaultTransform);\n    if (collection !== selection$$1) {\n      schedule(collection, transform);\n    } else {\n      selection$$1.interrupt().each(function() {\n        gesture(this, arguments)\n            .start()\n            .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n            .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection$$1, k) {\n    zoom.scaleTo(selection$$1, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    });\n  };\n\n  zoom.scaleTo = function(selection$$1, k) {\n    zoom.transform(selection$$1, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = centroid(e),\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e);\n    });\n  };\n\n  zoom.translateBy = function(selection$$1, x, y) {\n    zoom.transform(selection$$1, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments));\n    });\n  };\n\n  function scale(transform, k) {\n    k = Math.max(k0, Math.min(k1, k));\n    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n  }\n\n  function translate(transform, p0, p1) {\n    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n  }\n\n  function constrain(transform, extent) {\n    var dx0 = transform.invertX(extent[0][0]) - x0,\n        dx1 = transform.invertX(extent[1][0]) - x1,\n        dy0 = transform.invertY(extent[0][1]) - y0,\n        dy1 = transform.invertY(extent[1][1]) - y1;\n    return transform.translate(\n      dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n      dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n    );\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition$$1, transform, center) {\n    transition$$1\n        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args),\n              e = extent.apply(that, args),\n              p = center || centroid(e),\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n              i = interpolate$$1(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args) {\n    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n      if ((g = gestures[i]).that === that) {\n        return g;\n      }\n    }\n    return new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.index = -1;\n    this.active = 0;\n    this.extent = extent.apply(that, args);\n  }\n\n  Gesture.prototype = {\n    start: function() {\n      if (++this.active === 1) {\n        this.index = gestures.push(this) - 1;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n      this.that.__zoom = transform;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        gestures.splice(this.index, 1);\n        this.index = -1;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function wheeled() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        t = this.__zoom,\n        k = Math.max(k0, Math.min(k1, t.k * Math.pow(2, -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500))),\n        p = mouse(this);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent$2();\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        v = select(exports.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = mouse(this),\n        x0 = exports.event.clientX,\n        y0 = exports.event.clientY;\n\n    dragDisable(exports.event.view);\n    nopropagation$2();\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved() {\n      noevent$2();\n      if (!g.moved) {\n        var dx = exports.event.clientX - x0, dy = exports.event.clientY - y0;\n        g.moved = dx * dx + dy * dy > clickDistance2;\n      }\n      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent));\n    }\n\n    function mouseupped() {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      yesdrag(exports.event.view, g.moved);\n      noevent$2();\n      g.end();\n    }\n  }\n\n  function dblclicked() {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = mouse(this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments));\n\n    noevent$2();\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n    else select(this).call(zoom.transform, t1);\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        started,\n        n = touches$$1.length, i, t, p;\n\n    nopropagation$2();\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p, started = true;\n      else if (!g.touch1) g.touch1 = p;\n    }\n\n    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n    if (touchstarting) {\n      touchstarting = clearTimeout(touchstarting);\n      if (!g.touch1) {\n        g.end();\n        p = select(this).on(\"dblclick.zoom\");\n        if (p) p.apply(this, arguments);\n        return;\n      }\n    }\n\n    if (started) {\n      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t, p, l;\n\n    noevent$2();\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent));\n  }\n\n  function touchended() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t;\n\n    nopropagation$2();\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);\n    else g.end();\n  }\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$12(!!_), zoom) : filter;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$12([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (k0 = +_[0], k1 = +_[1], zoom) : [k0, k1];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], zoom) : [[x0, y0], [x1, y1]];\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, zoom) : interpolate$$1;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  zoom.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);\n  };\n    \n  return zoom;\n};\n\nexports.version = version;\nexports.bisect = bisectRight;\nexports.bisectRight = bisectRight;\nexports.bisectLeft = bisectLeft;\nexports.ascending = ascending;\nexports.bisector = bisector;\nexports.cross = cross;\nexports.descending = descending;\nexports.deviation = deviation;\nexports.extent = extent;\nexports.histogram = histogram;\nexports.thresholdFreedmanDiaconis = freedmanDiaconis;\nexports.thresholdScott = scott;\nexports.thresholdSturges = sturges;\nexports.max = max;\nexports.mean = mean;\nexports.median = median;\nexports.merge = merge;\nexports.min = min;\nexports.pairs = pairs;\nexports.permute = permute;\nexports.quantile = threshold;\nexports.range = sequence;\nexports.scan = scan;\nexports.shuffle = shuffle;\nexports.sum = sum;\nexports.ticks = ticks;\nexports.tickIncrement = tickIncrement;\nexports.tickStep = tickStep;\nexports.transpose = transpose;\nexports.variance = variance;\nexports.zip = zip;\nexports.axisTop = axisTop;\nexports.axisRight = axisRight;\nexports.axisBottom = axisBottom;\nexports.axisLeft = axisLeft;\nexports.brush = brush;\nexports.brushX = brushX;\nexports.brushY = brushY;\nexports.brushSelection = brushSelection;\nexports.chord = chord;\nexports.ribbon = ribbon;\nexports.nest = nest;\nexports.set = set$2;\nexports.map = map$1;\nexports.keys = keys;\nexports.values = values;\nexports.entries = entries;\nexports.color = color;\nexports.rgb = rgb;\nexports.hsl = hsl;\nexports.lab = lab;\nexports.hcl = hcl;\nexports.cubehelix = cubehelix;\nexports.dispatch = dispatch;\nexports.drag = drag;\nexports.dragDisable = dragDisable;\nexports.dragEnable = yesdrag;\nexports.dsvFormat = dsv;\nexports.csvParse = csvParse;\nexports.csvParseRows = csvParseRows;\nexports.csvFormat = csvFormat;\nexports.csvFormatRows = csvFormatRows;\nexports.tsvParse = tsvParse;\nexports.tsvParseRows = tsvParseRows;\nexports.tsvFormat = tsvFormat;\nexports.tsvFormatRows = tsvFormatRows;\nexports.easeLinear = linear$1;\nexports.easeQuad = quadInOut;\nexports.easeQuadIn = quadIn;\nexports.easeQuadOut = quadOut;\nexports.easeQuadInOut = quadInOut;\nexports.easeCubic = cubicInOut;\nexports.easeCubicIn = cubicIn;\nexports.easeCubicOut = cubicOut;\nexports.easeCubicInOut = cubicInOut;\nexports.easePoly = polyInOut;\nexports.easePolyIn = polyIn;\nexports.easePolyOut = polyOut;\nexports.easePolyInOut = polyInOut;\nexports.easeSin = sinInOut;\nexports.easeSinIn = sinIn;\nexports.easeSinOut = sinOut;\nexports.easeSinInOut = sinInOut;\nexports.easeExp = expInOut;\nexports.easeExpIn = expIn;\nexports.easeExpOut = expOut;\nexports.easeExpInOut = expInOut;\nexports.easeCircle = circleInOut;\nexports.easeCircleIn = circleIn;\nexports.easeCircleOut = circleOut;\nexports.easeCircleInOut = circleInOut;\nexports.easeBounce = bounceOut;\nexports.easeBounceIn = bounceIn;\nexports.easeBounceOut = bounceOut;\nexports.easeBounceInOut = bounceInOut;\nexports.easeBack = backInOut;\nexports.easeBackIn = backIn;\nexports.easeBackOut = backOut;\nexports.easeBackInOut = backInOut;\nexports.easeElastic = elasticOut;\nexports.easeElasticIn = elasticIn;\nexports.easeElasticOut = elasticOut;\nexports.easeElasticInOut = elasticInOut;\nexports.forceCenter = center$1;\nexports.forceCollide = collide;\nexports.forceLink = link;\nexports.forceManyBody = manyBody;\nexports.forceSimulation = simulation;\nexports.forceX = x$2;\nexports.forceY = y$2;\nexports.formatDefaultLocale = defaultLocale;\nexports.formatLocale = formatLocale;\nexports.formatSpecifier = formatSpecifier;\nexports.precisionFixed = precisionFixed;\nexports.precisionPrefix = precisionPrefix;\nexports.precisionRound = precisionRound;\nexports.geoArea = area;\nexports.geoBounds = bounds;\nexports.geoCentroid = centroid;\nexports.geoCircle = circle;\nexports.geoClipExtent = extent$1;\nexports.geoContains = contains;\nexports.geoDistance = distance;\nexports.geoGraticule = graticule;\nexports.geoGraticule10 = graticule10;\nexports.geoInterpolate = interpolate$1;\nexports.geoLength = length$1;\nexports.geoPath = index$1;\nexports.geoAlbers = albers;\nexports.geoAlbersUsa = albersUsa;\nexports.geoAzimuthalEqualArea = azimuthalEqualArea;\nexports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\nexports.geoAzimuthalEquidistant = azimuthalEquidistant;\nexports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\nexports.geoConicConformal = conicConformal;\nexports.geoConicConformalRaw = conicConformalRaw;\nexports.geoConicEqualArea = conicEqualArea;\nexports.geoConicEqualAreaRaw = conicEqualAreaRaw;\nexports.geoConicEquidistant = conicEquidistant;\nexports.geoConicEquidistantRaw = conicEquidistantRaw;\nexports.geoEquirectangular = equirectangular;\nexports.geoEquirectangularRaw = equirectangularRaw;\nexports.geoGnomonic = gnomonic;\nexports.geoGnomonicRaw = gnomonicRaw;\nexports.geoIdentity = identity$5;\nexports.geoProjection = projection;\nexports.geoProjectionMutator = projectionMutator;\nexports.geoMercator = mercator;\nexports.geoMercatorRaw = mercatorRaw;\nexports.geoOrthographic = orthographic;\nexports.geoOrthographicRaw = orthographicRaw;\nexports.geoStereographic = stereographic;\nexports.geoStereographicRaw = stereographicRaw;\nexports.geoTransverseMercator = transverseMercator;\nexports.geoTransverseMercatorRaw = transverseMercatorRaw;\nexports.geoRotation = rotation;\nexports.geoStream = geoStream;\nexports.geoTransform = transform;\nexports.cluster = cluster;\nexports.hierarchy = hierarchy;\nexports.pack = index$2;\nexports.packSiblings = siblings;\nexports.packEnclose = enclose;\nexports.partition = partition;\nexports.stratify = stratify;\nexports.tree = tree;\nexports.treemap = index$3;\nexports.treemapBinary = binary;\nexports.treemapDice = treemapDice;\nexports.treemapSlice = treemapSlice;\nexports.treemapSliceDice = sliceDice;\nexports.treemapSquarify = squarify;\nexports.treemapResquarify = resquarify;\nexports.interpolate = interpolateValue;\nexports.interpolateArray = array$1;\nexports.interpolateBasis = basis$1;\nexports.interpolateBasisClosed = basisClosed;\nexports.interpolateDate = date;\nexports.interpolateNumber = reinterpolate;\nexports.interpolateObject = object;\nexports.interpolateRound = interpolateRound;\nexports.interpolateString = interpolateString;\nexports.interpolateTransformCss = interpolateTransformCss;\nexports.interpolateTransformSvg = interpolateTransformSvg;\nexports.interpolateZoom = interpolateZoom;\nexports.interpolateRgb = interpolateRgb;\nexports.interpolateRgbBasis = rgbBasis;\nexports.interpolateRgbBasisClosed = rgbBasisClosed;\nexports.interpolateHsl = hsl$2;\nexports.interpolateHslLong = hslLong;\nexports.interpolateLab = lab$1;\nexports.interpolateHcl = hcl$2;\nexports.interpolateHclLong = hclLong;\nexports.interpolateCubehelix = cubehelix$2;\nexports.interpolateCubehelixLong = cubehelixLong;\nexports.quantize = quantize;\nexports.path = path;\nexports.polygonArea = area$1;\nexports.polygonCentroid = centroid$1;\nexports.polygonHull = hull;\nexports.polygonContains = contains$1;\nexports.polygonLength = length$2;\nexports.quadtree = quadtree;\nexports.queue = queue;\nexports.randomUniform = uniform;\nexports.randomNormal = normal;\nexports.randomLogNormal = logNormal;\nexports.randomBates = bates;\nexports.randomIrwinHall = irwinHall;\nexports.randomExponential = exponential$1;\nexports.request = request;\nexports.html = html;\nexports.json = json;\nexports.text = text;\nexports.xml = xml;\nexports.csv = csv$1;\nexports.tsv = tsv$1;\nexports.scaleBand = band;\nexports.scalePoint = point$1;\nexports.scaleIdentity = identity$6;\nexports.scaleLinear = linear$2;\nexports.scaleLog = log$1;\nexports.scaleOrdinal = ordinal;\nexports.scaleImplicit = implicit;\nexports.scalePow = pow$1;\nexports.scaleSqrt = sqrt$1;\nexports.scaleQuantile = quantile$$1;\nexports.scaleQuantize = quantize$1;\nexports.scaleThreshold = threshold$1;\nexports.scaleTime = time;\nexports.scaleUtc = utcTime;\nexports.schemeCategory10 = category10;\nexports.schemeCategory20b = category20b;\nexports.schemeCategory20c = category20c;\nexports.schemeCategory20 = category20;\nexports.interpolateCubehelixDefault = cubehelix$3;\nexports.interpolateRainbow = rainbow$1;\nexports.interpolateWarm = warm;\nexports.interpolateCool = cool;\nexports.interpolateViridis = viridis;\nexports.interpolateMagma = magma;\nexports.interpolateInferno = inferno;\nexports.interpolatePlasma = plasma;\nexports.scaleSequential = sequential;\nexports.creator = creator;\nexports.local = local$1;\nexports.matcher = matcher$1;\nexports.mouse = mouse;\nexports.namespace = namespace;\nexports.namespaces = namespaces;\nexports.select = select;\nexports.selectAll = selectAll;\nexports.selection = selection;\nexports.selector = selector;\nexports.selectorAll = selectorAll;\nexports.style = styleValue;\nexports.touch = touch;\nexports.touches = touches;\nexports.window = defaultView;\nexports.customEvent = customEvent;\nexports.arc = arc;\nexports.area = area$2;\nexports.line = line;\nexports.pie = pie;\nexports.radialArea = radialArea;\nexports.radialLine = radialLine$1;\nexports.linkHorizontal = linkHorizontal;\nexports.linkVertical = linkVertical;\nexports.linkRadial = linkRadial;\nexports.symbol = symbol;\nexports.symbols = symbols;\nexports.symbolCircle = circle$2;\nexports.symbolCross = cross$2;\nexports.symbolDiamond = diamond;\nexports.symbolSquare = square;\nexports.symbolStar = star;\nexports.symbolTriangle = triangle;\nexports.symbolWye = wye;\nexports.curveBasisClosed = basisClosed$1;\nexports.curveBasisOpen = basisOpen;\nexports.curveBasis = basis$2;\nexports.curveBundle = bundle;\nexports.curveCardinalClosed = cardinalClosed;\nexports.curveCardinalOpen = cardinalOpen;\nexports.curveCardinal = cardinal;\nexports.curveCatmullRomClosed = catmullRomClosed;\nexports.curveCatmullRomOpen = catmullRomOpen;\nexports.curveCatmullRom = catmullRom;\nexports.curveLinearClosed = linearClosed;\nexports.curveLinear = curveLinear;\nexports.curveMonotoneX = monotoneX;\nexports.curveMonotoneY = monotoneY;\nexports.curveNatural = natural;\nexports.curveStep = step;\nexports.curveStepAfter = stepAfter;\nexports.curveStepBefore = stepBefore;\nexports.stack = stack;\nexports.stackOffsetExpand = expand;\nexports.stackOffsetDiverging = diverging;\nexports.stackOffsetNone = none$1;\nexports.stackOffsetSilhouette = silhouette;\nexports.stackOffsetWiggle = wiggle;\nexports.stackOrderAscending = ascending$2;\nexports.stackOrderDescending = descending$2;\nexports.stackOrderInsideOut = insideOut;\nexports.stackOrderNone = none$2;\nexports.stackOrderReverse = reverse;\nexports.timeInterval = newInterval;\nexports.timeMillisecond = millisecond;\nexports.timeMilliseconds = milliseconds;\nexports.utcMillisecond = millisecond;\nexports.utcMilliseconds = milliseconds;\nexports.timeSecond = second;\nexports.timeSeconds = seconds;\nexports.utcSecond = second;\nexports.utcSeconds = seconds;\nexports.timeMinute = minute;\nexports.timeMinutes = minutes;\nexports.timeHour = hour;\nexports.timeHours = hours;\nexports.timeDay = day;\nexports.timeDays = days;\nexports.timeWeek = sunday;\nexports.timeWeeks = sundays;\nexports.timeSunday = sunday;\nexports.timeSundays = sundays;\nexports.timeMonday = monday;\nexports.timeMondays = mondays;\nexports.timeTuesday = tuesday;\nexports.timeTuesdays = tuesdays;\nexports.timeWednesday = wednesday;\nexports.timeWednesdays = wednesdays;\nexports.timeThursday = thursday;\nexports.timeThursdays = thursdays;\nexports.timeFriday = friday;\nexports.timeFridays = fridays;\nexports.timeSaturday = saturday;\nexports.timeSaturdays = saturdays;\nexports.timeMonth = month;\nexports.timeMonths = months;\nexports.timeYear = year;\nexports.timeYears = years;\nexports.utcMinute = utcMinute;\nexports.utcMinutes = utcMinutes;\nexports.utcHour = utcHour;\nexports.utcHours = utcHours;\nexports.utcDay = utcDay;\nexports.utcDays = utcDays;\nexports.utcWeek = utcSunday;\nexports.utcWeeks = utcSundays;\nexports.utcSunday = utcSunday;\nexports.utcSundays = utcSundays;\nexports.utcMonday = utcMonday;\nexports.utcMondays = utcMondays;\nexports.utcTuesday = utcTuesday;\nexports.utcTuesdays = utcTuesdays;\nexports.utcWednesday = utcWednesday;\nexports.utcWednesdays = utcWednesdays;\nexports.utcThursday = utcThursday;\nexports.utcThursdays = utcThursdays;\nexports.utcFriday = utcFriday;\nexports.utcFridays = utcFridays;\nexports.utcSaturday = utcSaturday;\nexports.utcSaturdays = utcSaturdays;\nexports.utcMonth = utcMonth;\nexports.utcMonths = utcMonths;\nexports.utcYear = utcYear;\nexports.utcYears = utcYears;\nexports.timeFormatDefaultLocale = defaultLocale$1;\nexports.timeFormatLocale = formatLocale$1;\nexports.isoFormat = formatIso;\nexports.isoParse = parseIso;\nexports.now = now;\nexports.timer = timer;\nexports.timerFlush = timerFlush;\nexports.timeout = timeout$1;\nexports.interval = interval$1;\nexports.transition = transition;\nexports.active = active;\nexports.interrupt = interrupt;\nexports.voronoi = voronoi;\nexports.zoom = zoom;\nexports.zoomTransform = transform$1;\nexports.zoomIdentity = identity$8;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3/build/d3.js\n// module id = 130\n// module chunks = 0","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308,\n    NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Creates a function that invokes `func`, with the `this` binding and arguments\n * of the created function, while it's called less than `n` times. Subsequent\n * calls to the created function return the result of the last `func` invocation.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Function\n * @param {number} n The number of calls at which `func` is no longer invoked.\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new restricted function.\n * @example\n *\n * jQuery(element).on('click', _.before(5, addContactToList));\n * // => Allows adding up to 4 contacts to the list.\n */\nfunction before(n, func) {\n  var result;\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  n = toInteger(n);\n  return function() {\n    if (--n > 0) {\n      result = func.apply(this, arguments);\n    }\n    if (n <= 1) {\n      func = undefined;\n    }\n    return result;\n  };\n}\n\n/**\n * Creates a function that is restricted to invoking `func` once. Repeat calls\n * to the function return the value of the first invocation. The `func` is\n * invoked with the `this` binding and arguments of the created function.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new restricted function.\n * @example\n *\n * var initialize = _.once(createApplication);\n * initialize();\n * initialize();\n * // => `createApplication` is invoked once\n */\nfunction once(func) {\n  return before(2, func);\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = once;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash.once/index.js\n// module id = 131\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n//  weak\n/* eslint guard-for-in: \"off\", no-restricted-syntax: \"off\" */\n// Node constructor used to manage transitions internally\n// Basically a modified preact component (https://github.com/developit/preact)\n\nfunction extend(obj, props) {\n  for (var i in props) {\n    obj[i] = props[i]; // eslint-disable-line no-param-reassign\n  }\n\n  return obj;\n}\n\nfunction Node(key, data, type) {\n  this.key = key;\n  this.data = data;\n  this.type = type;\n  this.state = {};\n}\n\nextend(Node.prototype, {\n  setState: function setState(state) {\n    var s = this.state;\n    extend(s, typeof state === 'function' ? state(s) : state);\n  },\n  updateData: function updateData(data) {\n    this.data = data;\n\n    return this;\n  },\n  updateType: function updateType(type) {\n    this.type = type;\n\n    return this;\n  }\n});\n\nexports.default = Node;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/resonance/Node/Node.js\n// module id = 132\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _Node = require('./Node');\n\nvar _Node2 = _interopRequireDefault(_Node);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _Node2.default; /* eslint-disable flowtype/require-valid-file-annotation */\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/resonance/Node/index.js\n// module id = 133\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _d3Timer = require('d3-timer');\n\nvar _Node = require('../Node');\n\nvar _Node2 = _interopRequireDefault(_Node);\n\nvar _mergeKeys = require('../core/mergeKeys');\n\nvar _mergeKeys2 = _interopRequireDefault(_mergeKeys);\n\nvar _types = require('../core/types');\n\nvar _transition = require('../core/transition');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//  weak\n/* eslint max-len: \"off\" */\n\nvar NodeGroup = function (_Component) {\n  (0, _inherits3.default)(NodeGroup, _Component);\n\n  function NodeGroup() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    (0, _classCallCheck3.default)(this, NodeGroup);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = NodeGroup.__proto__ || (0, _getPrototypeOf2.default)(NodeGroup)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      nodes: []\n    }, _this.animate = function () {\n      if (_this.unmounting) {\n        return;\n      }\n\n      var pending = false;\n\n      var nextNodeKeys = [];\n      var length = _this.nodeKeys.length;\n\n      for (var i = 0; i < length; i++) {\n        var k = _this.nodeKeys[i];\n        var n = _this.nodeHash[k];\n\n        if (n.TRANSITION_SCHEDULES) {\n          pending = true;\n        }\n\n        if (n.type === _types.LEAVE && !n.TRANSITION_SCHEDULES) {\n          delete _this.nodeHash[k];\n        } else {\n          nextNodeKeys.push(k);\n        }\n      }\n\n      if (!pending) {\n        _this.interval.stop();\n      }\n\n      _this.nodeKeys = nextNodeKeys;\n      _this.renderNodes();\n    }, _this.nodeHash = {}, _this.nodeKeys = [], _this.interval = null, _this.unmounting = false, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);\n  }\n\n  (0, _createClass3.default)(NodeGroup, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.updateNodes(this.props);\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(next) {\n      if (next.data !== this.props.data) {\n        this.updateNodes(next);\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      var _this2 = this;\n\n      this.unmounting = true;\n\n      if (this.interval) {\n        this.interval.stop();\n      }\n\n      this.nodeKeys.forEach(function (key) {\n        _transition.stop.call(_this2.nodeHash[key]);\n      });\n    }\n  }, {\n    key: 'updateNodes',\n    value: function updateNodes(props) {\n      var data = props.data,\n          keyAccessor = props.keyAccessor,\n          start = props.start,\n          enter = props.enter,\n          update = props.update,\n          leave = props.leave;\n\n\n      var currKeyIndex = {};\n      var currNodeKeys = this.nodeKeys;\n      var currNodeKeysLength = this.nodeKeys.length;\n\n      for (var i = 0; i < currNodeKeysLength; i++) {\n        currKeyIndex[currNodeKeys[i]] = i;\n      }\n\n      var nextKeyIndex = {};\n      var nextNodeKeys = [];\n\n      for (var _i = 0; _i < data.length; _i++) {\n        var d = data[_i];\n        var k = keyAccessor(d);\n\n        nextKeyIndex[k] = _i;\n        nextNodeKeys.push(k);\n\n        if (currKeyIndex[k] === undefined) {\n          this.nodeHash[k] = new _Node2.default(k, d, _types.ENTER);\n        }\n      }\n\n      for (var _i2 = 0; _i2 < currNodeKeysLength; _i2++) {\n        var _k = currNodeKeys[_i2];\n        var n = this.nodeHash[_k];\n\n        if (nextKeyIndex[_k] !== undefined) {\n          n.updateData(data[nextKeyIndex[_k]]);\n          n.updateType(_types.UPDATE);\n        } else {\n          n.updateType(_types.LEAVE);\n        }\n      }\n\n      this.nodeKeys = (0, _mergeKeys2.default)(currNodeKeys, currKeyIndex, nextNodeKeys, nextKeyIndex);\n\n      for (var _i3 = 0; _i3 < this.nodeKeys.length; _i3++) {\n        var _k2 = this.nodeKeys[_i3];\n        var _n = this.nodeHash[_k2];\n        var _d = _n.data;\n\n        if (_n.type === _types.ENTER) {\n          _n.setState(start(_d, nextKeyIndex[_k2]));\n          _transition.transition.call(_n, enter(_d, nextKeyIndex[_k2]));\n        } else if (_n.type === _types.LEAVE) {\n          _transition.transition.call(_n, leave(_d, currKeyIndex[_k2]));\n        } else {\n          _transition.transition.call(_n, update(_d, nextKeyIndex[_k2]));\n        }\n      }\n\n      if (!this.interval) {\n        this.interval = (0, _d3Timer.interval)(this.animate);\n      } else {\n        this.interval.restart(this.animate);\n      }\n\n      this.renderNodes();\n    }\n  }, {\n    key: 'renderNodes',\n    value: function renderNodes() {\n      var _this3 = this;\n\n      this.setState(function () {\n        return {\n          nodes: _this3.nodeKeys.map(function (key) {\n            return _this3.nodeHash[key];\n          })\n        };\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var renderedChildren = this.props.children(this.state.nodes);\n      return renderedChildren && _react2.default.Children.only(renderedChildren);\n    }\n  }]);\n  return NodeGroup;\n}(_react.Component);\n\nNodeGroup.defaultProps = {\n  enter: function enter() {},\n  update: function update() {},\n  leave: function leave() {}\n};\nexports.default = NodeGroup;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/resonance/NodeGroup/NodeGroup.js\n// module id = 134\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _NodeGroup = require('../NodeGroup');\n\nvar _NodeGroup2 = _interopRequireDefault(_NodeGroup);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//  weak\n/* eslint max-len: \"off\" */\n\nvar tickKeyAccessor = function tickKeyAccessor(d) {\n  return 'tick-' + d.val;\n};\n\nvar TickGroup = function (_Component) {\n  (0, _inherits3.default)(TickGroup, _Component);\n\n  function TickGroup() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    (0, _classCallCheck3.default)(this, TickGroup);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = TickGroup.__proto__ || (0, _getPrototypeOf2.default)(TickGroup)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      ticks: []\n    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);\n  }\n\n  (0, _createClass3.default)(TickGroup, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _props = this.props,\n          scale = _props.scale,\n          tickCount = _props.tickCount;\n\n      var ticks = scale.ticks ? scale.ticks(tickCount) : [];\n      this.updateTicks(ticks.map(function (d) {\n        return { val: d };\n      }));\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(next) {\n      if (next.scale !== this.props.scale) {\n        var _scale = next.scale,\n            _tickCount = next.tickCount;\n\n        var ticks = _scale.ticks ? _scale.ticks(_tickCount) : [];\n        this.updateTicks(ticks.map(function (d) {\n          return { val: d };\n        }));\n      }\n    }\n  }, {\n    key: 'updateTicks',\n    value: function updateTicks(ticks) {\n      this.setState(function () {\n        return { ticks: ticks };\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props2 = this.props,\n          start = _props2.start,\n          enter = _props2.enter,\n          update = _props2.update,\n          leave = _props2.leave,\n          children = _props2.children;\n\n\n      return _react2.default.createElement(\n        _NodeGroup2.default,\n        {\n          data: this.state.ticks,\n          keyAccessor: tickKeyAccessor,\n          start: start,\n          enter: enter,\n          update: update,\n          leave: leave\n        },\n        children\n      );\n    }\n  }]);\n  return TickGroup;\n}(_react.Component);\n\nTickGroup.defaultProps = {\n  enter: function enter() {},\n  update: function update() {},\n  leave: function leave() {}\n};\nexports.default = TickGroup;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/resonance/TickGroup/TickGroup.js\n// module id = 135\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _TickGroup = require('./TickGroup');\n\nvar _TickGroup2 = _interopRequireDefault(_TickGroup);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _TickGroup2.default; /* eslint-disable flowtype/require-valid-file-annotation */\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/resonance/TickGroup/index.js\n// module id = 136\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n//  weak\n/* eslint no-continue: \"off\" */\n/* based on react-motion's mergeDiff (https://github.com/chenglou/react-motion) */\n\nfunction mergeKeys(currNodeKeys, currKeyIndex, nextNodeKeys, nextKeyIndex) {\n  var allKeys = [];\n\n  for (var i = 0; i < nextNodeKeys.length; i++) {\n    allKeys[i] = nextNodeKeys[i];\n  }\n\n  for (var _i = 0; _i < currNodeKeys.length; _i++) {\n    if (nextKeyIndex[currNodeKeys[_i]] === undefined) {\n      allKeys.push(currNodeKeys[_i]);\n    }\n  }\n\n  return allKeys.sort(function (a, b) {\n    var nextOrderA = nextKeyIndex[a];\n    var nextOrderB = nextKeyIndex[b];\n    var currOrderA = currKeyIndex[a];\n    var currOrderB = currKeyIndex[b];\n\n    if (nextOrderA != null && nextOrderB != null) {\n      return nextKeyIndex[a] - nextKeyIndex[b];\n    } else if (currOrderA != null && currOrderB != null) {\n      return currKeyIndex[a] - currKeyIndex[b];\n    } else if (nextOrderA != null) {\n      for (var _i2 = 0; _i2 < nextNodeKeys.length; _i2++) {\n        var pivot = nextNodeKeys[_i2];\n\n        if (!currKeyIndex[pivot]) {\n          continue;\n        }\n\n        if (nextOrderA < nextKeyIndex[pivot] && currOrderB > currKeyIndex[pivot]) {\n          return -1;\n        } else if (nextOrderA > nextKeyIndex[pivot] && currOrderB < currKeyIndex[pivot]) {\n          return 1;\n        }\n      }\n\n      return 1;\n    }\n\n    for (var _i3 = 0; _i3 < nextNodeKeys.length; _i3++) {\n      var _pivot = nextNodeKeys[_i3];\n\n      if (!currKeyIndex[_pivot]) {\n        continue;\n      }\n\n      if (nextOrderB < nextKeyIndex[_pivot] && currOrderA > currKeyIndex[_pivot]) {\n        return 1;\n      } else if (nextOrderB > nextKeyIndex[_pivot] && currOrderA < currKeyIndex[_pivot]) {\n        return -1;\n      }\n    }\n\n    return -1;\n  });\n}\n\nexports.default = mergeKeys;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/resonance/core/mergeKeys.js\n// module id = 137\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _transition = require('./transition');\n\nObject.defineProperty(exports, 'transition', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_transition).default;\n  }\n});\n\nvar _stop = require('./stop');\n\nObject.defineProperty(exports, 'stop', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_stop).default;\n  }\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/resonance/core/transition/index.js\n// module id = 138\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nexports.default = function (node, stateKey, id, timing, tweens) {\n  var events = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n\n  var schedules = node.TRANSITION_SCHEDULES;\n  if (!schedules) {\n    node.TRANSITION_SCHEDULES = {}; // eslint-disable-line no-param-reassign\n  } else if (id in schedules) {\n    return;\n  }\n\n  var config = (0, _extends3.default)({ stateKey: stateKey, events: events, tweens: tweens }, timing, { timer: null, state: CREATED });\n  create(node, id, config);\n};\n\nvar _d3Timer = require('d3-timer');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar CREATED = 0; //  weak\n/* eslint no-use-before-define: \"off\" */\n// Apapted from https://github.com/d3/d3-transition/blob/master/src/transition/schedule.js\n\nvar SCHEDULED = 1;\nvar STARTING = 2;\nvar STARTED = 3;\nvar RUNNING = 4;\nvar ENDING = 5;\nvar ENDED = 6;\n\nfunction create(node, id, config) {\n  var schedules = node.TRANSITION_SCHEDULES;\n\n  // Initialize the transition timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  var transition = (0, _extends3.default)({}, config);\n  var n = transition.tweens.length;\n  var tweens = new Array(n);\n\n  schedules[id] = transition;\n  transition.timer = (0, _d3Timer.timer)(schedule, 0, transition.time);\n\n  function schedule(elapsed) {\n    transition.state = SCHEDULED;\n    transition.timer.restart(start, transition.delay, transition.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (transition.delay <= elapsed) {\n      start(elapsed - transition.delay);\n    }\n  }\n\n  function start(elapsed) {\n    // eslint-disable-line consistent-return\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (transition.state !== SCHEDULED) return stop();\n\n    for (var sid in schedules) {\n      // eslint-disable-line\n      var s = schedules[sid];\n\n      if (s.stateKey !== transition.stateKey) {\n        continue; // eslint-disable-line no-continue\n      }\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (s.state === STARTED) return (0, _d3Timer.timeout)(start);\n\n      // 1. Interrupt the active transition, if any. dispatch the interrupt event.\n      // 2. Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n\n      if (s.state === RUNNING) {\n        s.state = ENDED;\n        s.timer.stop();\n        if (s.events.interrupt && typeof s.events.interrupt === 'function') {\n          s.events.interrupt.call(this);\n        }\n        delete schedules[sid];\n      } else if (+sid < id) {\n        s.state = ENDED;\n        s.timer.stop();\n        delete schedules[sid];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    (0, _d3Timer.timeout)(function () {\n      if (transition.state === STARTED) {\n        transition.state = RUNNING;\n        transition.timer.restart(tick, transition.delay, transition.time);\n        tick(elapsed);\n      }\n    });\n\n    transition.state = STARTING;\n    if (transition.events.start && typeof transition.events.start === 'function') {\n      transition.events.start.call(node);\n    }\n\n    if (transition.state !== STARTING) {\n      // interrupted\n      return; // eslint-disable-line consistent-return\n    }\n\n    transition.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    var j = -1;\n\n    for (var i = 0; i < n; ++i) {\n      var res = transition.tweens[i].call(node);\n\n      if (res) {\n        tweens[++j] = res;\n      }\n    }\n\n    tweens.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = 1;\n\n    if (elapsed < transition.duration) {\n      t = transition.ease.call(null, elapsed / transition.duration);\n    } else {\n      transition.timer.restart(stop);\n      transition.state = ENDING;\n    }\n\n    var i = -1;\n\n    while (++i < tweens.length) {\n      tweens[i].call(null, t);\n    }\n\n    if (transition.state === ENDING) {\n      if (transition.events.end && typeof transition.events.end === 'function') {\n        transition.events.end.call(node);\n      }\n      stop();\n    }\n  }\n\n  function stop() {\n    transition.state = ENDED;\n    transition.timer.stop();\n\n    delete schedules[id];\n    for (var i in schedules) {\n      return;\n    } // eslint-disable-line guard-for-in, no-restricted-syntax\n    delete node.TRANSITION_SCHEDULES; // eslint-disable-line no-param-reassign\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/resonance/core/transition/schedule.js\n// module id = 139\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _keys = require(\"babel-runtime/core-js/object/keys\");\n\nvar _keys2 = _interopRequireDefault(_keys);\n\nexports.default = stop;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//  weak\n\nfunction stop() {\n  var ts = this.TRANSITION_SCHEDULES;\n\n  if (ts) {\n    (0, _keys2.default)(ts).forEach(function (s) {\n      ts[s].timer.stop();\n    });\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/resonance/core/transition/stop.js\n// module id = 140\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.preset = undefined;\n\nvar _defineProperty2 = require('babel-runtime/helpers/defineProperty');\n\nvar _defineProperty3 = _interopRequireDefault(_defineProperty2);\n\nvar _typeof2 = require('babel-runtime/helpers/typeof');\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nvar _keys = require('babel-runtime/core-js/object/keys');\n\nvar _keys2 = _interopRequireDefault(_keys);\n\nvar _extends5 = require('babel-runtime/helpers/extends');\n\nvar _extends6 = _interopRequireDefault(_extends5);\n\nexports.newId = newId;\nexports.default = transition;\n\nvar _d3Timer = require('d3-timer');\n\nvar _lodash = require('lodash.once');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _tween = require('./tween');\n\nvar _tween2 = _interopRequireDefault(_tween);\n\nvar _schedule = require('./schedule');\n\nvar _schedule2 = _interopRequireDefault(_schedule);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//  weak\n\nvar id = 0;\n\nfunction newId() {\n  return ++id;\n}\n\n// from https://github.com/d3/d3-ease/blob/master/src/cubic.js\nfunction easeCubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2; // eslint-disable-line\n}\n\nvar preset = exports.preset = {\n  time: null,\n  delay: 0,\n  duration: 250,\n  ease: easeCubicInOut\n};\n\nfunction scheduleTransitions() {\n  var _this = this;\n\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var transitions = (0, _extends6.default)({}, config);\n\n  var events = transitions.events || {};\n  delete transitions.events;\n\n  // each event handler should be called only once\n  (0, _keys2.default)(events).forEach(function (d) {\n    if (typeof events[d] !== 'function') {\n      throw new Error('Event handlers must be a function');\n    } else {\n      events[d] = (0, _lodash2.default)(events[d]);\n    }\n  });\n\n  var timing = transitions.timing || {};\n  delete transitions.timing;\n\n  (0, _keys2.default)(transitions).forEach(function (stateKey) {\n    var tweens = [];\n\n    if ((0, _typeof3.default)(transitions[stateKey]) === 'object' && Array.isArray(transitions[stateKey]) === false) {\n      (0, _keys2.default)(transitions[stateKey]).forEach(function (attr) {\n        var val = transitions[stateKey][attr];\n\n        if (Array.isArray(val)) {\n          if (val.length === 1) {\n            tweens.push(_tween2.default.call(_this, stateKey, attr, val[0]));\n          } else {\n            _this.setState(function (state) {\n              return (0, _defineProperty3.default)({}, stateKey, (0, _extends6.default)({}, state[stateKey], (0, _defineProperty3.default)({}, attr, val[0])));\n            });\n\n            tweens.push(_tween2.default.call(_this, stateKey, attr, val[1]));\n          }\n        } else if (typeof val === 'function') {\n          var getResonanceCustomTween = function getResonanceCustomTween() {\n            var resonanceCustomTween = function resonanceCustomTween(t) {\n              _this.setState(function (state) {\n                return (0, _defineProperty3.default)({}, stateKey, (0, _extends6.default)({}, state[stateKey], (0, _defineProperty3.default)({}, attr, val(t))));\n              });\n            };\n\n            return resonanceCustomTween;\n          };\n\n          tweens.push(getResonanceCustomTween);\n        } else {\n          _this.setState(function (state) {\n            return (0, _defineProperty3.default)({}, stateKey, (0, _extends6.default)({}, state[stateKey], (0, _defineProperty3.default)({}, attr, val)));\n          });\n          // This assures any existing transitions are stopped\n          tweens.push(_tween2.default.call(_this, stateKey, attr, val));\n        }\n      });\n    } else {\n      var val = transitions[stateKey];\n\n      if (Array.isArray(val)) {\n        if (val.length === 1) {\n          tweens.push(_tween2.default.call(_this, null, stateKey, val[0]));\n        } else {\n          _this.setState(function () {\n            return (0, _defineProperty3.default)({}, stateKey, val[0]);\n          });\n\n          tweens.push(_tween2.default.call(_this, null, stateKey, val[1]));\n        }\n      } else if (typeof val === 'function') {\n        var getResonanceCustomTween = function getResonanceCustomTween() {\n          var resonanceCustomTween = function resonanceCustomTween(t) {\n            _this.setState(function () {\n              return (0, _defineProperty3.default)({}, stateKey, val(t));\n            });\n          };\n\n          return resonanceCustomTween;\n        };\n\n        tweens.push(getResonanceCustomTween);\n      } else {\n        _this.setState(function () {\n          return (0, _defineProperty3.default)({}, stateKey, val);\n        });\n        // This assures any existing transitions are stopped\n        tweens.push(_tween2.default.call(_this, null, stateKey, val));\n      }\n    }\n\n    var timingConfig = (0, _extends6.default)({}, preset, timing, { time: (0, _d3Timer.now)() });\n    (0, _schedule2.default)(_this, stateKey, newId(), timingConfig, tweens, events);\n  });\n}\n\nfunction transition(config) {\n  var _this2 = this;\n\n  if (Array.isArray(config)) {\n    config.forEach(function (c) {\n      scheduleTransitions.call(_this2, c);\n    });\n  } else {\n    scheduleTransitions.call(this, config);\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/resonance/core/transition/transition.js\n// module id = 141\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends3 = require('babel-runtime/helpers/extends');\n\nvar _extends4 = _interopRequireDefault(_extends3);\n\nvar _defineProperty2 = require('babel-runtime/helpers/defineProperty');\n\nvar _defineProperty3 = _interopRequireDefault(_defineProperty2);\n\nexports.getInterpolator = getInterpolator;\n\nexports.default = function (nameSpace, attr, value) {\n  return getTween.call(this, nameSpace, attr, getInterpolator(attr, value), value);\n};\n\nvar _d3Interpolate = require('d3-interpolate');\n\nvar _d3Color = require('d3-color');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//  weak\n\nfunction getTween(nameSpace, attr, interpol, value1) {\n  return function tween() {\n    var _this = this;\n\n    var value0 = nameSpace ? this.state[nameSpace][attr] : this.state[attr];\n\n    if (value0 === value1) {\n      return null;\n    }\n\n    var i = interpol(value0, value1);\n\n    var stateTween = void 0;\n\n    if (nameSpace === null) {\n      stateTween = function stateTween(t) {\n        _this.setState(function () {\n          return (0, _defineProperty3.default)({}, attr, i(t));\n        });\n      };\n    } else {\n      stateTween = function stateTween(t) {\n        _this.setState(function (state) {\n          return (0, _defineProperty3.default)({}, nameSpace, (0, _extends4.default)({}, state[nameSpace], (0, _defineProperty3.default)({}, attr, i(t))));\n        });\n      };\n    }\n\n    return stateTween;\n  };\n}\n\nfunction getInterpolator(attr, value) {\n  if (attr === 'transform') {\n    return _d3Interpolate.interpolateTransformSvg;\n  } else if (typeof value === 'number') {\n    return _d3Interpolate.interpolateNumber;\n  } else if (value instanceof _d3Color.color || (0, _d3Color.color)(value) !== null) {\n    return _d3Interpolate.interpolateRgb;\n  }\n\n  return _d3Interpolate.interpolateString;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/resonance/core/transition/tween.js\n// module id = 142\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n//  weak\n\nvar ENTER = exports.ENTER = 'ENTER';\nvar UPDATE = exports.UPDATE = 'UPDATE';\nvar LEAVE = exports.LEAVE = 'LEAVE';\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/resonance/core/types.js\n// module id = 143\n// module chunks = 0","module.exports = {\n\t\"joy\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.80942,\n\t\t\t\t\"y\": 0.656686\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.805027,\n\t\t\t\t\"y\": 0.665678\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.800255,\n\t\t\t\t\"y\": 0.674474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.795113,\n\t\t\t\t\"y\": 0.683058\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.789609,\n\t\t\t\t\"y\": 0.691414\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.783755,\n\t\t\t\t\"y\": 0.699527\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.77756,\n\t\t\t\t\"y\": 0.707382\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.771036,\n\t\t\t\t\"y\": 0.714965\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.764195,\n\t\t\t\t\"y\": 0.722262\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.757049,\n\t\t\t\t\"y\": 0.72926\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.749611,\n\t\t\t\t\"y\": 0.735945\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.741896,\n\t\t\t\t\"y\": 0.742307\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.733916,\n\t\t\t\t\"y\": 0.748332\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.725687,\n\t\t\t\t\"y\": 0.754011\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.717223,\n\t\t\t\t\"y\": 0.759332\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.708541,\n\t\t\t\t\"y\": 0.764287\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.699655,\n\t\t\t\t\"y\": 0.768865\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.690582,\n\t\t\t\t\"y\": 0.773059\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.681339,\n\t\t\t\t\"y\": 0.776862\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.671942,\n\t\t\t\t\"y\": 0.780265\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.662409,\n\t\t\t\t\"y\": 0.783263\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.652756,\n\t\t\t\t\"y\": 0.785851\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.643003,\n\t\t\t\t\"y\": 0.788024\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.646177,\n\t\t\t\t\"y\": 0.791121\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.655697,\n\t\t\t\t\"y\": 0.794152\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.665429,\n\t\t\t\t\"y\": 0.796415\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.675309,\n\t\t\t\t\"y\": 0.797893\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.685276,\n\t\t\t\t\"y\": 0.798578\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.695265,\n\t\t\t\t\"y\": 0.798466\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.705214,\n\t\t\t\t\"y\": 0.797557\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.715059,\n\t\t\t\t\"y\": 0.795857\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.724737,\n\t\t\t\t\"y\": 0.793377\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.734188,\n\t\t\t\t\"y\": 0.790132\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.743351,\n\t\t\t\t\"y\": 0.786144\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.752167,\n\t\t\t\t\"y\": 0.781437\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.760581,\n\t\t\t\t\"y\": 0.776041\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.76854,\n\t\t\t\t\"y\": 0.769991\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.775993,\n\t\t\t\t\"y\": 0.763325\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.782892,\n\t\t\t\t\"y\": 0.756086\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.789194,\n\t\t\t\t\"y\": 0.748319\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.794858,\n\t\t\t\t\"y\": 0.740074\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.799849,\n\t\t\t\t\"y\": 0.731403\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.804135,\n\t\t\t\t\"y\": 0.722361\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.807689,\n\t\t\t\t\"y\": 0.713006\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.810488,\n\t\t\t\t\"y\": 0.703397\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.812514,\n\t\t\t\t\"y\": 0.693595\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.813754,\n\t\t\t\t\"y\": 0.683663\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.814201,\n\t\t\t\t\"y\": 0.673663\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.813852,\n\t\t\t\t\"y\": 0.66366\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.812709,\n\t\t\t\t\"y\": 0.653716\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.187977,\n\t\t\t\t\"y\": 0.65085\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.192123,\n\t\t\t\t\"y\": 0.659958\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.196654,\n\t\t\t\t\"y\": 0.668882\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.201561,\n\t\t\t\t\"y\": 0.677603\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.206836,\n\t\t\t\t\"y\": 0.686106\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.212467,\n\t\t\t\t\"y\": 0.694376\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.218446,\n\t\t\t\t\"y\": 0.702397\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.224761,\n\t\t\t\t\"y\": 0.710156\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.231401,\n\t\t\t\t\"y\": 0.717637\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.238354,\n\t\t\t\t\"y\": 0.724827\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.245607,\n\t\t\t\t\"y\": 0.731714\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.253147,\n\t\t\t\t\"y\": 0.738283\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.260959,\n\t\t\t\t\"y\": 0.744524\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.269031,\n\t\t\t\t\"y\": 0.750426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.277347,\n\t\t\t\t\"y\": 0.755976\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.285891,\n\t\t\t\t\"y\": 0.761166\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.294649,\n\t\t\t\t\"y\": 0.765986\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.303604,\n\t\t\t\t\"y\": 0.770426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.312741,\n\t\t\t\t\"y\": 0.77448\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.322041,\n\t\t\t\t\"y\": 0.778138\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.33149,\n\t\t\t\t\"y\": 0.781396\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.341068,\n\t\t\t\t\"y\": 0.784247\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.350759,\n\t\t\t\t\"y\": 0.786685\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.359764,\n\t\t\t\t\"y\": 0.788791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.350409,\n\t\t\t\t\"y\": 0.792304\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.340805,\n\t\t\t\t\"y\": 0.79506\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.331013,\n\t\t\t\t\"y\": 0.79704\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.321094,\n\t\t\t\t\"y\": 0.798233\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.311112,\n\t\t\t\t\"y\": 0.79863\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.30113,\n\t\t\t\t\"y\": 0.798229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.291212,\n\t\t\t\t\"y\": 0.797033\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28142,\n\t\t\t\t\"y\": 0.79505\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.271817,\n\t\t\t\t\"y\": 0.792291\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.262463,\n\t\t\t\t\"y\": 0.788775\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.253419,\n\t\t\t\t\"y\": 0.784523\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.244742,\n\t\t\t\t\"y\": 0.779564\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.236486,\n\t\t\t\t\"y\": 0.773927\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.228704,\n\t\t\t\t\"y\": 0.76765\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.221447,\n\t\t\t\t\"y\": 0.760772\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.214759,\n\t\t\t\t\"y\": 0.753336\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.208683,\n\t\t\t\t\"y\": 0.74539\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.203258,\n\t\t\t\t\"y\": 0.736985\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.198518,\n\t\t\t\t\"y\": 0.728174\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.194494,\n\t\t\t\t\"y\": 0.719012\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.191211,\n\t\t\t\t\"y\": 0.709558\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.18869,\n\t\t\t\t\"y\": 0.699872\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.186947,\n\t\t\t\t\"y\": 0.690016\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.185992,\n\t\t\t\t\"y\": 0.680052\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.185833,\n\t\t\t\t\"y\": 0.670044\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.18647,\n\t\t\t\t\"y\": 0.660055\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.708191,\n\t\t\t\t\"y\": 0.6214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.707865,\n\t\t\t\t\"y\": 0.614079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.706885,\n\t\t\t\t\"y\": 0.606817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.705245,\n\t\t\t\t\"y\": 0.599675\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.702935,\n\t\t\t\t\"y\": 0.592722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.699944,\n\t\t\t\t\"y\": 0.586036\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.696261,\n\t\t\t\t\"y\": 0.579706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.691878,\n\t\t\t\t\"y\": 0.573841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.6868,\n\t\t\t\t\"y\": 0.568571\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.681053,\n\t\t\t\t\"y\": 0.564045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.674695,\n\t\t\t\t\"y\": 0.560432\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.667839,\n\t\t\t\t\"y\": 0.557899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.66065,\n\t\t\t\t\"y\": 0.556591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.653343,\n\t\t\t\t\"y\": 0.556591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.646154,\n\t\t\t\t\"y\": 0.557899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.639298,\n\t\t\t\t\"y\": 0.560432\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.632941,\n\t\t\t\t\"y\": 0.564045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.627193,\n\t\t\t\t\"y\": 0.568571\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.622115,\n\t\t\t\t\"y\": 0.573841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.617732,\n\t\t\t\t\"y\": 0.579706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.614049,\n\t\t\t\t\"y\": 0.586036\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.611058,\n\t\t\t\t\"y\": 0.592722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.608748,\n\t\t\t\t\"y\": 0.599675\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.607108,\n\t\t\t\t\"y\": 0.606817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606128,\n\t\t\t\t\"y\": 0.614079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.605802,\n\t\t\t\t\"y\": 0.6214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606128,\n\t\t\t\t\"y\": 0.628721\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.607108,\n\t\t\t\t\"y\": 0.635983\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.608748,\n\t\t\t\t\"y\": 0.643125\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.611058,\n\t\t\t\t\"y\": 0.650077\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.614049,\n\t\t\t\t\"y\": 0.656764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.617732,\n\t\t\t\t\"y\": 0.663094\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.622115,\n\t\t\t\t\"y\": 0.668959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.627193,\n\t\t\t\t\"y\": 0.674229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.632941,\n\t\t\t\t\"y\": 0.678755\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.639298,\n\t\t\t\t\"y\": 0.682368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.646154,\n\t\t\t\t\"y\": 0.684901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.653343,\n\t\t\t\t\"y\": 0.686209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.66065,\n\t\t\t\t\"y\": 0.686209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.667839,\n\t\t\t\t\"y\": 0.684901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.674695,\n\t\t\t\t\"y\": 0.682368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.681053,\n\t\t\t\t\"y\": 0.678755\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.6868,\n\t\t\t\t\"y\": 0.674229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.691878,\n\t\t\t\t\"y\": 0.668959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.696261,\n\t\t\t\t\"y\": 0.663094\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.699944,\n\t\t\t\t\"y\": 0.656764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.702935,\n\t\t\t\t\"y\": 0.650077\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.705245,\n\t\t\t\t\"y\": 0.643125\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.706885,\n\t\t\t\t\"y\": 0.635983\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.707865,\n\t\t\t\t\"y\": 0.628721\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.291809,\n\t\t\t\t\"y\": 0.6214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.292135,\n\t\t\t\t\"y\": 0.614079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.293115,\n\t\t\t\t\"y\": 0.606817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.294755,\n\t\t\t\t\"y\": 0.599675\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.297065,\n\t\t\t\t\"y\": 0.592722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.300056,\n\t\t\t\t\"y\": 0.586036\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.303739,\n\t\t\t\t\"y\": 0.579706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.308122,\n\t\t\t\t\"y\": 0.573841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.3132,\n\t\t\t\t\"y\": 0.568571\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.318947,\n\t\t\t\t\"y\": 0.564045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.325305,\n\t\t\t\t\"y\": 0.560432\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.332161,\n\t\t\t\t\"y\": 0.557899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.33935,\n\t\t\t\t\"y\": 0.556591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.346657,\n\t\t\t\t\"y\": 0.556591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.353846,\n\t\t\t\t\"y\": 0.557899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.360702,\n\t\t\t\t\"y\": 0.560432\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.367059,\n\t\t\t\t\"y\": 0.564045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.372807,\n\t\t\t\t\"y\": 0.568571\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.377885,\n\t\t\t\t\"y\": 0.573841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.382268,\n\t\t\t\t\"y\": 0.579706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.385951,\n\t\t\t\t\"y\": 0.586036\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.388942,\n\t\t\t\t\"y\": 0.592722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.391252,\n\t\t\t\t\"y\": 0.599675\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.392892,\n\t\t\t\t\"y\": 0.606817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.393872,\n\t\t\t\t\"y\": 0.614079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.394198,\n\t\t\t\t\"y\": 0.6214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.393872,\n\t\t\t\t\"y\": 0.628721\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.392892,\n\t\t\t\t\"y\": 0.635983\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.391252,\n\t\t\t\t\"y\": 0.643125\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.388942,\n\t\t\t\t\"y\": 0.650077\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.385951,\n\t\t\t\t\"y\": 0.656764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.382268,\n\t\t\t\t\"y\": 0.663094\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.377885,\n\t\t\t\t\"y\": 0.668959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.372807,\n\t\t\t\t\"y\": 0.674229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.367059,\n\t\t\t\t\"y\": 0.678755\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.360702,\n\t\t\t\t\"y\": 0.682368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.353846,\n\t\t\t\t\"y\": 0.684901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.346657,\n\t\t\t\t\"y\": 0.686209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.33935,\n\t\t\t\t\"y\": 0.686209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.332161,\n\t\t\t\t\"y\": 0.684901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.325305,\n\t\t\t\t\"y\": 0.682368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.318947,\n\t\t\t\t\"y\": 0.678755\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.3132,\n\t\t\t\t\"y\": 0.674229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.308122,\n\t\t\t\t\"y\": 0.668959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.303739,\n\t\t\t\t\"y\": 0.663094\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.300056,\n\t\t\t\t\"y\": 0.656764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.297065,\n\t\t\t\t\"y\": 0.650077\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.294755,\n\t\t\t\t\"y\": 0.643125\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.293115,\n\t\t\t\t\"y\": 0.635983\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.292135,\n\t\t\t\t\"y\": 0.628721\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.437209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 3.4834e-10\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.437209\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.168942,\n\t\t\t\t\"y\": 0.440155\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.170863,\n\t\t\t\t\"y\": 0.4065\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.176591,\n\t\t\t\t\"y\": 0.373281\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.18603,\n\t\t\t\t\"y\": 0.340924\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.199024,\n\t\t\t\t\"y\": 0.309829\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.215366,\n\t\t\t\t\"y\": 0.280361\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.234809,\n\t\t\t\t\"y\": 0.252847\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.257076,\n\t\t\t\t\"y\": 0.227573\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.281866,\n\t\t\t\t\"y\": 0.204778\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.30887,\n\t\t\t\t\"y\": 0.184665\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.337769,\n\t\t\t\t\"y\": 0.167396\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.368243,\n\t\t\t\t\"y\": 0.1531\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.399972,\n\t\t\t\t\"y\": 0.141876\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.43264,\n\t\t\t\t\"y\": 0.133796\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.465935,\n\t\t\t\t\"y\": 0.128912\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.499543,\n\t\t\t\t\"y\": 0.127251\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.533156,\n\t\t\t\t\"y\": 0.128824\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.566462,\n\t\t\t\t\"y\": 0.133621\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.599152,\n\t\t\t\t\"y\": 0.141614\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.630911,\n\t\t\t\t\"y\": 0.152754\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.661423,\n\t\t\t\t\"y\": 0.166968\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.690368,\n\t\t\t\t\"y\": 0.184158\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.717428,\n\t\t\t\t\"y\": 0.204196\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.742283,\n\t\t\t\t\"y\": 0.22692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.764622,\n\t\t\t\t\"y\": 0.25213\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.784146,\n\t\t\t\t\"y\": 0.279586\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.800575,\n\t\t\t\t\"y\": 0.309005\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.813663,\n\t\t\t\t\"y\": 0.340062\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.823201,\n\t\t\t\t\"y\": 0.372389\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.829032,\n\t\t\t\t\"y\": 0.40559\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.831057,\n\t\t\t\t\"y\": 0.439239\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.80007,\n\t\t\t\t\"y\": 0.429581\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767515,\n\t\t\t\t\"y\": 0.421019\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.734605,\n\t\t\t\t\"y\": 0.413936\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.701476,\n\t\t\t\t\"y\": 0.407967\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.668192,\n\t\t\t\t\"y\": 0.402934\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.634791,\n\t\t\t\t\"y\": 0.398746\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.601298,\n\t\t\t\t\"y\": 0.395373\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.567733,\n\t\t\t\t\"y\": 0.392829\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.534112,\n\t\t\t\t\"y\": 0.391181\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.500457,\n\t\t\t\t\"y\": 0.390569\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.466802,\n\t\t\t\t\"y\": 0.391149\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.433179,\n\t\t\t\t\"y\": 0.392772\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.399612,\n\t\t\t\t\"y\": 0.395293\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.366118,\n\t\t\t\t\"y\": 0.398644\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.332714,\n\t\t\t\t\"y\": 0.402809\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.299426,\n\t\t\t\t\"y\": 0.407819\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.266292,\n\t\t\t\t\"y\": 0.41376\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.233375,\n\t\t\t\t\"y\": 0.42081\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.200807,\n\t\t\t\t\"y\": 0.429324\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t]\n\t},\n\t\"sadness\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.871404,\n\t\t\t\t\"y\": 0.591322\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.862798,\n\t\t\t\t\"y\": 0.586881\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.85383,\n\t\t\t\t\"y\": 0.583232\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.844581,\n\t\t\t\t\"y\": 0.58037\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.835127,\n\t\t\t\t\"y\": 0.578284\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.825537,\n\t\t\t\t\"y\": 0.576958\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.815874,\n\t\t\t\t\"y\": 0.576371\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.806195,\n\t\t\t\t\"y\": 0.576503\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.796549,\n\t\t\t\t\"y\": 0.577331\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.786985,\n\t\t\t\t\"y\": 0.578834\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.777545,\n\t\t\t\t\"y\": 0.580988\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.768272,\n\t\t\t\t\"y\": 0.583773\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.759204,\n\t\t\t\t\"y\": 0.587169\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.750378,\n\t\t\t\t\"y\": 0.591157\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.741833,\n\t\t\t\t\"y\": 0.595716\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.733606,\n\t\t\t\t\"y\": 0.600829\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.725735,\n\t\t\t\t\"y\": 0.606477\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71826,\n\t\t\t\t\"y\": 0.612641\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.711222,\n\t\t\t\t\"y\": 0.619302\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.704664,\n\t\t\t\t\"y\": 0.626437\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.698632,\n\t\t\t\t\"y\": 0.634024\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.693174,\n\t\t\t\t\"y\": 0.642035\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.68834,\n\t\t\t\t\"y\": 0.650439\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.684184,\n\t\t\t\t\"y\": 0.659199\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.680759,\n\t\t\t\t\"y\": 0.668271\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.678122,\n\t\t\t\t\"y\": 0.677603\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.676325,\n\t\t\t\t\"y\": 0.687133\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.679812,\n\t\t\t\t\"y\": 0.686535\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.686508,\n\t\t\t\t\"y\": 0.679527\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.693438,\n\t\t\t\t\"y\": 0.672752\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.700591,\n\t\t\t\t\"y\": 0.666213\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.707955,\n\t\t\t\t\"y\": 0.659914\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.715521,\n\t\t\t\t\"y\": 0.65386\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.723278,\n\t\t\t\t\"y\": 0.648054\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.731217,\n\t\t\t\t\"y\": 0.6425\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.739329,\n\t\t\t\t\"y\": 0.637203\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.747605,\n\t\t\t\t\"y\": 0.632167\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.756036,\n\t\t\t\t\"y\": 0.627398\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.764615,\n\t\t\t\t\"y\": 0.622899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.773332,\n\t\t\t\t\"y\": 0.618676\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.78218,\n\t\t\t\t\"y\": 0.614736\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.791151,\n\t\t\t\t\"y\": 0.611084\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.800235,\n\t\t\t\t\"y\": 0.607726\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.809424,\n\t\t\t\t\"y\": 0.60467\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818711,\n\t\t\t\t\"y\": 0.601923\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.828084,\n\t\t\t\t\"y\": 0.599493\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.837536,\n\t\t\t\t\"y\": 0.597389\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.847056,\n\t\t\t\t\"y\": 0.595619\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.856634,\n\t\t\t\t\"y\": 0.594193\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.866257,\n\t\t\t\t\"y\": 0.593122\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.126508,\n\t\t\t\t\"y\": 0.592557\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135009,\n\t\t\t\t\"y\": 0.587919\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.143894,\n\t\t\t\t\"y\": 0.584072\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.15308,\n\t\t\t\t\"y\": 0.581013\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.16249,\n\t\t\t\t\"y\": 0.578734\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.172051,\n\t\t\t\t\"y\": 0.57722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181701,\n\t\t\t\t\"y\": 0.57645\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.191382,\n\t\t\t\t\"y\": 0.576404\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.201041,\n\t\t\t\t\"y\": 0.57706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.21063,\n\t\t\t\t\"y\": 0.578395\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.220104,\n\t\t\t\t\"y\": 0.580388\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.229423,\n\t\t\t\t\"y\": 0.583017\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.238546,\n\t\t\t\t\"y\": 0.586262\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.247436,\n\t\t\t\t\"y\": 0.590103\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.256055,\n\t\t\t\t\"y\": 0.594521\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.264365,\n\t\t\t\t\"y\": 0.599497\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.272329,\n\t\t\t\t\"y\": 0.605013\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.279907,\n\t\t\t\t\"y\": 0.61105\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.287059,\n\t\t\t\t\"y\": 0.617588\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.293741,\n\t\t\t\t\"y\": 0.624607\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.299909,\n\t\t\t\t\"y\": 0.632083\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.305516,\n\t\t\t\t\"y\": 0.63999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.310511,\n\t\t\t\t\"y\": 0.648299\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.314842,\n\t\t\t\t\"y\": 0.656974\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.318455,\n\t\t\t\t\"y\": 0.665972\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.321294,\n\t\t\t\t\"y\": 0.675244\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.323307,\n\t\t\t\t\"y\": 0.684731\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.321827,\n\t\t\t\t\"y\": 0.688326\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.315192,\n\t\t\t\t\"y\": 0.681261\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.308319,\n\t\t\t\t\"y\": 0.674427\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.301221,\n\t\t\t\t\"y\": 0.667828\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.293909,\n\t\t\t\t\"y\": 0.661469\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.286393,\n\t\t\t\t\"y\": 0.655353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.278683,\n\t\t\t\t\"y\": 0.649485\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.270788,\n\t\t\t\t\"y\": 0.643867\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.262719,\n\t\t\t\t\"y\": 0.638506\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.254483,\n\t\t\t\t\"y\": 0.633404\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.24609,\n\t\t\t\t\"y\": 0.628567\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.237547,\n\t\t\t\t\"y\": 0.624\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.228864,\n\t\t\t\t\"y\": 0.619708\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.220048,\n\t\t\t\t\"y\": 0.615696\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.211107,\n\t\t\t\t\"y\": 0.611971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.202051,\n\t\t\t\t\"y\": 0.608539\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.192887,\n\t\t\t\t\"y\": 0.605407\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.183624,\n\t\t\t\t\"y\": 0.602582\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.174271,\n\t\t\t\t\"y\": 0.600072\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.164838,\n\t\t\t\t\"y\": 0.597885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.155334,\n\t\t\t\t\"y\": 0.59603\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.14577,\n\t\t\t\t\"y\": 0.594518\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.136157,\n\t\t\t\t\"y\": 0.593356\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.820623,\n\t\t\t\t\"y\": 0.450304\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.81908,\n\t\t\t\t\"y\": 0.437928\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.815172,\n\t\t\t\t\"y\": 0.426085\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.809222,\n\t\t\t\t\"y\": 0.415123\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.801621,\n\t\t\t\t\"y\": 0.405235\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.792734,\n\t\t\t\t\"y\": 0.396486\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.782862,\n\t\t\t\t\"y\": 0.388866\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.772241,\n\t\t\t\t\"y\": 0.382332\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.761053,\n\t\t\t\t\"y\": 0.376829\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.749436,\n\t\t\t\t\"y\": 0.372301\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.7375,\n\t\t\t\t\"y\": 0.368701\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.725332,\n\t\t\t\t\"y\": 0.365989\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.713005,\n\t\t\t\t\"y\": 0.364135\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.700581,\n\t\t\t\t\"y\": 0.363118\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.688117,\n\t\t\t\t\"y\": 0.362924\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.675667,\n\t\t\t\t\"y\": 0.36355\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.663285,\n\t\t\t\t\"y\": 0.365\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.65103,\n\t\t\t\t\"y\": 0.367285\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.638966,\n\t\t\t\t\"y\": 0.370428\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.627168,\n\t\t\t\t\"y\": 0.374457\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.615726,\n\t\t\t\t\"y\": 0.379413\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.604756,\n\t\t\t\t\"y\": 0.38534\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.594402,\n\t\t\t\t\"y\": 0.39229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.584854,\n\t\t\t\t\"y\": 0.400313\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.576359,\n\t\t\t\t\"y\": 0.409444\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.569227,\n\t\t\t\t\"y\": 0.419677\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.563828,\n\t\t\t\t\"y\": 0.430921\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.560545,\n\t\t\t\t\"y\": 0.442953\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.560362,\n\t\t\t\t\"y\": 0.453381\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.569957,\n\t\t\t\t\"y\": 0.445477\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.580968,\n\t\t\t\t\"y\": 0.439636\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.59254,\n\t\t\t\t\"y\": 0.434997\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.604415,\n\t\t\t\t\"y\": 0.431196\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.616479,\n\t\t\t\t\"y\": 0.428045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.628672,\n\t\t\t\t\"y\": 0.42544\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.640958,\n\t\t\t\t\"y\": 0.423319\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.653313,\n\t\t\t\t\"y\": 0.421647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.665719,\n\t\t\t\t\"y\": 0.420408\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.67816,\n\t\t\t\t\"y\": 0.419602\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.690622,\n\t\t\t\t\"y\": 0.419245\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.703089,\n\t\t\t\t\"y\": 0.419354\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.715544,\n\t\t\t\t\"y\": 0.41991\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.727972,\n\t\t\t\t\"y\": 0.420898\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.740358,\n\t\t\t\t\"y\": 0.422322\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.752684,\n\t\t\t\t\"y\": 0.4242\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.764924,\n\t\t\t\t\"y\": 0.426572\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.777042,\n\t\t\t\t\"y\": 0.429505\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.788976,\n\t\t\t\t\"y\": 0.433113\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.800606,\n\t\t\t\t\"y\": 0.437605\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.811641,\n\t\t\t\t\"y\": 0.443395\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.179374,\n\t\t\t\t\"y\": 0.450451\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.180888,\n\t\t\t\t\"y\": 0.438072\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.18477,\n\t\t\t\t\"y\": 0.426219\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.190698,\n\t\t\t\t\"y\": 0.415246\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.198281,\n\t\t\t\t\"y\": 0.405345\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.207156,\n\t\t\t\t\"y\": 0.396582\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.217018,\n\t\t\t\t\"y\": 0.388949\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.227631,\n\t\t\t\t\"y\": 0.382403\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.238813,\n\t\t\t\t\"y\": 0.376888\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.250425,\n\t\t\t\t\"y\": 0.372349\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.262358,\n\t\t\t\t\"y\": 0.368738\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.274524,\n\t\t\t\t\"y\": 0.366016\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28685,\n\t\t\t\t\"y\": 0.364152\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.299273,\n\t\t\t\t\"y\": 0.363125\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.311737,\n\t\t\t\t\"y\": 0.362922\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.324187,\n\t\t\t\t\"y\": 0.363538\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.33657,\n\t\t\t\t\"y\": 0.364978\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.348827,\n\t\t\t\t\"y\": 0.367253\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.360894,\n\t\t\t\t\"y\": 0.370386\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.372696,\n\t\t\t\t\"y\": 0.374405\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.384142,\n\t\t\t\t\"y\": 0.379349\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.395119,\n\t\t\t\t\"y\": 0.385264\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.405481,\n\t\t\t\t\"y\": 0.392202\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.415039,\n\t\t\t\t\"y\": 0.400212\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.423549,\n\t\t\t\t\"y\": 0.409331\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.430699,\n\t\t\t\t\"y\": 0.41955\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.43612,\n\t\t\t\t\"y\": 0.430783\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.43943,\n\t\t\t\t\"y\": 0.442808\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.439733,\n\t\t\t\t\"y\": 0.453493\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.430166,\n\t\t\t\t\"y\": 0.445555\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.419166,\n\t\t\t\t\"y\": 0.439697\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.407598,\n\t\t\t\t\"y\": 0.435047\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.395726,\n\t\t\t\t\"y\": 0.431236\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.383664,\n\t\t\t\t\"y\": 0.428079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.371472,\n\t\t\t\t\"y\": 0.425468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.359187,\n\t\t\t\t\"y\": 0.423341\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.346833,\n\t\t\t\t\"y\": 0.421664\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.334427,\n\t\t\t\t\"y\": 0.42042\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.321986,\n\t\t\t\t\"y\": 0.419609\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.309524,\n\t\t\t\t\"y\": 0.419246\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.297058,\n\t\t\t\t\"y\": 0.41935\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.284602,\n\t\t\t\t\"y\": 0.419901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.272174,\n\t\t\t\t\"y\": 0.420884\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.259787,\n\t\t\t\t\"y\": 0.422303\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.247461,\n\t\t\t\t\"y\": 0.424176\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.235219,\n\t\t\t\t\"y\": 0.426541\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.223099,\n\t\t\t\t\"y\": 0.429466\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.211163,\n\t\t\t\t\"y\": 0.433066\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.199528,\n\t\t\t\t\"y\": 0.437546\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.188483,\n\t\t\t\t\"y\": 0.443317\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.437209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 3.4834e-10\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.437209\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.408498,\n\t\t\t\t\"y\": 0.218355\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.403853,\n\t\t\t\t\"y\": 0.210108\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.403338,\n\t\t\t\t\"y\": 0.200563\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.40481,\n\t\t\t\t\"y\": 0.191179\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.410777,\n\t\t\t\t\"y\": 0.183835\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.419674,\n\t\t\t\t\"y\": 0.180638\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.429241,\n\t\t\t\t\"y\": 0.180591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.43881,\n\t\t\t\t\"y\": 0.180591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.448378,\n\t\t\t\t\"y\": 0.180591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.457947,\n\t\t\t\t\"y\": 0.180591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.467515,\n\t\t\t\t\"y\": 0.180591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.477083,\n\t\t\t\t\"y\": 0.180591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.486652,\n\t\t\t\t\"y\": 0.180591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.49622,\n\t\t\t\t\"y\": 0.180591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.505789,\n\t\t\t\t\"y\": 0.180591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.515357,\n\t\t\t\t\"y\": 0.180591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.524926,\n\t\t\t\t\"y\": 0.180591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.534494,\n\t\t\t\t\"y\": 0.180591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.544063,\n\t\t\t\t\"y\": 0.180591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.553631,\n\t\t\t\t\"y\": 0.180591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5632,\n\t\t\t\t\"y\": 0.180591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.572768,\n\t\t\t\t\"y\": 0.180591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.582337,\n\t\t\t\t\"y\": 0.180591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.591905,\n\t\t\t\t\"y\": 0.180591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.601432,\n\t\t\t\t\"y\": 0.181106\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.609663,\n\t\t\t\t\"y\": 0.185761\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.614308,\n\t\t\t\t\"y\": 0.194008\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.614823,\n\t\t\t\t\"y\": 0.203554\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.613351,\n\t\t\t\t\"y\": 0.212938\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.607383,\n\t\t\t\t\"y\": 0.220282\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.598487,\n\t\t\t\t\"y\": 0.223479\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.58892,\n\t\t\t\t\"y\": 0.223525\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.579351,\n\t\t\t\t\"y\": 0.223525\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.569783,\n\t\t\t\t\"y\": 0.223525\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.560214,\n\t\t\t\t\"y\": 0.223525\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.550646,\n\t\t\t\t\"y\": 0.223525\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.541077,\n\t\t\t\t\"y\": 0.223525\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531509,\n\t\t\t\t\"y\": 0.223525\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.52194,\n\t\t\t\t\"y\": 0.223525\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.512372,\n\t\t\t\t\"y\": 0.223525\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.502804,\n\t\t\t\t\"y\": 0.223525\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.493235,\n\t\t\t\t\"y\": 0.223525\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.483667,\n\t\t\t\t\"y\": 0.223525\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.474098,\n\t\t\t\t\"y\": 0.223525\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.46453,\n\t\t\t\t\"y\": 0.223525\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.454961,\n\t\t\t\t\"y\": 0.223525\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.445393,\n\t\t\t\t\"y\": 0.223525\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.435824,\n\t\t\t\t\"y\": 0.223525\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.426256,\n\t\t\t\t\"y\": 0.223525\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.416729,\n\t\t\t\t\"y\": 0.22301\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t]\n\t},\n\t\"disgust\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.888628,\n\t\t\t\t\"y\": 0.549601\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.882432,\n\t\t\t\t\"y\": 0.55825\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.876457,\n\t\t\t\t\"y\": 0.567056\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.8704,\n\t\t\t\t\"y\": 0.575806\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864155,\n\t\t\t\t\"y\": 0.584421\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.857651,\n\t\t\t\t\"y\": 0.592841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.850828,\n\t\t\t\t\"y\": 0.601004\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.843624,\n\t\t\t\t\"y\": 0.608831\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.835975,\n\t\t\t\t\"y\": 0.616221\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.827811,\n\t\t\t\t\"y\": 0.623033\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.819063,\n\t\t\t\t\"y\": 0.62907\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.80969,\n\t\t\t\t\"y\": 0.634075\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.799785,\n\t\t\t\t\"y\": 0.637918\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.789523,\n\t\t\t\t\"y\": 0.640668\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.779048,\n\t\t\t\t\"y\": 0.642446\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.768465,\n\t\t\t\t\"y\": 0.643388\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.757842,\n\t\t\t\t\"y\": 0.643636\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.74722,\n\t\t\t\t\"y\": 0.643325\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.736618,\n\t\t\t\t\"y\": 0.642596\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.726036,\n\t\t\t\t\"y\": 0.641613\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.715455,\n\t\t\t\t\"y\": 0.640627\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.70484,\n\t\t\t\t\"y\": 0.640274\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.695899,\n\t\t\t\t\"y\": 0.644645\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.699633,\n\t\t\t\t\"y\": 0.654235\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.7073,\n\t\t\t\t\"y\": 0.661579\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.716064,\n\t\t\t\t\"y\": 0.667589\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.72546,\n\t\t\t\t\"y\": 0.672554\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.735309,\n\t\t\t\t\"y\": 0.676542\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.745503,\n\t\t\t\t\"y\": 0.679534\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.755943,\n\t\t\t\t\"y\": 0.681507\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.766522,\n\t\t\t\t\"y\": 0.682475\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.777145,\n\t\t\t\t\"y\": 0.68244\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.787717,\n\t\t\t\t\"y\": 0.681391\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.798136,\n\t\t\t\t\"y\": 0.679316\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.808296,\n\t\t\t\t\"y\": 0.676208\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818085,\n\t\t\t\t\"y\": 0.672075\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.827391,\n\t\t\t\t\"y\": 0.666944\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.836113,\n\t\t\t\t\"y\": 0.660868\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.844163,\n\t\t\t\t\"y\": 0.653924\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.851483,\n\t\t\t\t\"y\": 0.64621\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.85807,\n\t\t\t\t\"y\": 0.637857\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864025,\n\t\t\t\t\"y\": 0.62904\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.86944,\n\t\t\t\t\"y\": 0.619879\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.874381,\n\t\t\t\t\"y\": 0.610453\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.878893,\n\t\t\t\t\"y\": 0.600813\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.882998,\n\t\t\t\t\"y\": 0.590992\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.886698,\n\t\t\t\t\"y\": 0.58101\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.889954,\n\t\t\t\t\"y\": 0.570875\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.892645,\n\t\t\t\t\"y\": 0.560576\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.894244,\n\t\t\t\t\"y\": 0.550063\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.114958,\n\t\t\t\t\"y\": 0.55447\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.120963,\n\t\t\t\t\"y\": 0.563255\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.126967,\n\t\t\t\t\"y\": 0.572041\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.133121,\n\t\t\t\t\"y\": 0.580722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.139506,\n\t\t\t\t\"y\": 0.589234\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.146184,\n\t\t\t\t\"y\": 0.597516\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.153216,\n\t\t\t\t\"y\": 0.605499\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.160664,\n\t\t\t\t\"y\": 0.613093\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.168597,\n\t\t\t\t\"y\": 0.620174\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.177086,\n\t\t\t\t\"y\": 0.626575\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.186189,\n\t\t\t\t\"y\": 0.632058\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.195886,\n\t\t\t\t\"y\": 0.636399\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.206014,\n\t\t\t\t\"y\": 0.639608\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.216412,\n\t\t\t\t\"y\": 0.641789\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.226959,\n\t\t\t\t\"y\": 0.643075\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.237571,\n\t\t\t\t\"y\": 0.643605\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.248197,\n\t\t\t\t\"y\": 0.643519\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.258808,\n\t\t\t\t\"y\": 0.642953\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.269398,\n\t\t\t\t\"y\": 0.642056\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.279975,\n\t\t\t\t\"y\": 0.641028\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.290574,\n\t\t\t\t\"y\": 0.640263\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.301057,\n\t\t\t\t\"y\": 0.641417\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.302948,\n\t\t\t\t\"y\": 0.650443\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.296197,\n\t\t\t\t\"y\": 0.658605\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.287813,\n\t\t\t\t\"y\": 0.665132\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.278659,\n\t\t\t\t\"y\": 0.670531\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.268991,\n\t\t\t\t\"y\": 0.67494\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.258934,\n\t\t\t\t\"y\": 0.678368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.248587,\n\t\t\t\t\"y\": 0.680779\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.238056,\n\t\t\t\t\"y\": 0.68218\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.22744,\n\t\t\t\t\"y\": 0.682579\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.216834,\n\t\t\t\t\"y\": 0.681969\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.206336,\n\t\t\t\t\"y\": 0.680338\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.196051,\n\t\t\t\t\"y\": 0.677676\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.186088,\n\t\t\t\t\"y\": 0.673984\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.17656,\n\t\t\t\t\"y\": 0.669279\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.167574,\n\t\t\t\t\"y\": 0.663602\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.159225,\n\t\t\t\t\"y\": 0.657022\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.151584,\n\t\t\t\t\"y\": 0.649627\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.144689,\n\t\t\t\t\"y\": 0.641529\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.138474,\n\t\t\t\t\"y\": 0.632894\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.132836,\n\t\t\t\t\"y\": 0.62387\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.127697,\n\t\t\t\t\"y\": 0.614551\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.123004,\n\t\t\t\t\"y\": 0.604998\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.118725,\n\t\t\t\t\"y\": 0.595252\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.114848,\n\t\t\t\t\"y\": 0.585338\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.111392,\n\t\t\t\t\"y\": 0.575269\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.108432,\n\t\t\t\t\"y\": 0.565044\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.106222,\n\t\t\t\t\"y\": 0.554633\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.10821,\n\t\t\t\t\"y\": 0.546289\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.839714,\n\t\t\t\t\"y\": 0.457489\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.838428,\n\t\t\t\t\"y\": 0.446948\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.834509,\n\t\t\t\t\"y\": 0.43708\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.828409,\n\t\t\t\t\"y\": 0.428386\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.820668,\n\t\t\t\t\"y\": 0.421116\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.811708,\n\t\t\t\t\"y\": 0.415417\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.801864,\n\t\t\t\t\"y\": 0.411446\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.791455,\n\t\t\t\t\"y\": 0.409381\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.780846,\n\t\t\t\t\"y\": 0.409361\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.770487,\n\t\t\t\t\"y\": 0.411624\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.76107,\n\t\t\t\t\"y\": 0.41648\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.753604,\n\t\t\t\t\"y\": 0.423989\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.748536,\n\t\t\t\t\"y\": 0.433326\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.744822,\n\t\t\t\t\"y\": 0.443299\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.741361,\n\t\t\t\t\"y\": 0.453366\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.736919,\n\t\t\t\t\"y\": 0.463022\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.729486,\n\t\t\t\t\"y\": 0.470445\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.719266,\n\t\t\t\t\"y\": 0.47305\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.708662,\n\t\t\t\t\"y\": 0.472623\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.698168,\n\t\t\t\t\"y\": 0.470955\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.687753,\n\t\t\t\t\"y\": 0.468838\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.677348,\n\t\t\t\t\"y\": 0.466674\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.66691,\n\t\t\t\t\"y\": 0.464674\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.656429,\n\t\t\t\t\"y\": 0.462917\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.645891,\n\t\t\t\t\"y\": 0.461548\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.635285,\n\t\t\t\t\"y\": 0.460995\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.627605,\n\t\t\t\t\"y\": 0.465407\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.634864,\n\t\t\t\t\"y\": 0.47307\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.643514,\n\t\t\t\t\"y\": 0.47925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.652542,\n\t\t\t\t\"y\": 0.484866\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.661798,\n\t\t\t\t\"y\": 0.490096\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.671246,\n\t\t\t\t\"y\": 0.494968\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.680904,\n\t\t\t\t\"y\": 0.499409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.690797,\n\t\t\t\t\"y\": 0.503293\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.700925,\n\t\t\t\t\"y\": 0.50651\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.711248,\n\t\t\t\t\"y\": 0.509031\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.721698,\n\t\t\t\t\"y\": 0.51096\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.732221,\n\t\t\t\t\"y\": 0.512441\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.742797,\n\t\t\t\t\"y\": 0.513481\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.753408,\n\t\t\t\t\"y\": 0.514048\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.764034,\n\t\t\t\t\"y\": 0.514104\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.774648,\n\t\t\t\t\"y\": 0.513599\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.785209,\n\t\t\t\t\"y\": 0.512436\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.795631,\n\t\t\t\t\"y\": 0.510376\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.805736,\n\t\t\t\t\"y\": 0.507109\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.815204,\n\t\t\t\t\"y\": 0.502304\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.823542,\n\t\t\t\t\"y\": 0.495734\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.830297,\n\t\t\t\t\"y\": 0.487538\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.835344,\n\t\t\t\t\"y\": 0.478186\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.838564,\n\t\t\t\t\"y\": 0.468055\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.176752,\n\t\t\t\t\"y\": 0.463582\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.186543,\n\t\t\t\t\"y\": 0.460986\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.197139,\n\t\t\t\t\"y\": 0.46175\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.207665,\n\t\t\t\t\"y\": 0.463204\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.218138,\n\t\t\t\t\"y\": 0.465011\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.228569,\n\t\t\t\t\"y\": 0.467047\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.238972,\n\t\t\t\t\"y\": 0.469223\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.249395,\n\t\t\t\t\"y\": 0.471297\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.259909,\n\t\t\t\t\"y\": 0.472821\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.270517,\n\t\t\t\t\"y\": 0.472885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.280473,\n\t\t\t\t\"y\": 0.469473\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.287236,\n\t\t\t\t\"y\": 0.461394\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.291386,\n\t\t\t\t\"y\": 0.451603\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.294814,\n\t\t\t\t\"y\": 0.441524\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.298683,\n\t\t\t\t\"y\": 0.431611\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.304117,\n\t\t\t\t\"y\": 0.422492\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.312004,\n\t\t\t\t\"y\": 0.415426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.321653,\n\t\t\t\t\"y\": 0.411046\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.332097,\n\t\t\t\t\"y\": 0.409207\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.3427,\n\t\t\t\t\"y\": 0.409601\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.353035,\n\t\t\t\t\"y\": 0.412012\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.362746,\n\t\t\t\t\"y\": 0.4163\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.371516,\n\t\t\t\t\"y\": 0.422287\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.379003,\n\t\t\t\t\"y\": 0.42982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.38476,\n\t\t\t\t\"y\": 0.438743\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.388235,\n\t\t\t\t\"y\": 0.448775\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.389062,\n\t\t\t\t\"y\": 0.459365\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.387524,\n\t\t\t\t\"y\": 0.469882\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.383968,\n\t\t\t\t\"y\": 0.479899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.378614,\n\t\t\t\t\"y\": 0.489079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.371565,\n\t\t\t\t\"y\": 0.497022\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.362988,\n\t\t\t\t\"y\": 0.503275\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.353376,\n\t\t\t\t\"y\": 0.507787\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.343196,\n\t\t\t\t\"y\": 0.510817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.33274,\n\t\t\t\t\"y\": 0.512698\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.322165,\n\t\t\t\t\"y\": 0.513731\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.311547,\n\t\t\t\t\"y\": 0.514133\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.300922,\n\t\t\t\t\"y\": 0.513984\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.290316,\n\t\t\t\t\"y\": 0.513331\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.279749,\n\t\t\t\t\"y\": 0.512212\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.269237,\n\t\t\t\t\"y\": 0.510655\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.258804,\n\t\t\t\t\"y\": 0.508634\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.248511,\n\t\t\t\t\"y\": 0.505994\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.238422,\n\t\t\t\t\"y\": 0.502654\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.228571,\n\t\t\t\t\"y\": 0.498663\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.218953,\n\t\t\t\t\"y\": 0.494138\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.209538,\n\t\t\t\t\"y\": 0.4892\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.200318,\n\t\t\t\t\"y\": 0.483906\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.191341,\n\t\t\t\t\"y\": 0.478211\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.182797,\n\t\t\t\t\"y\": 0.471886\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.437209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 3.4834e-10\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.437209\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.359368,\n\t\t\t\t\"y\": 0.167633\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.369543,\n\t\t\t\t\"y\": 0.177251\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.380707,\n\t\t\t\t\"y\": 0.185704\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.39254,\n\t\t\t\t\"y\": 0.19319\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.404868,\n\t\t\t\t\"y\": 0.199828\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.417584,\n\t\t\t\t\"y\": 0.205687\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.430616,\n\t\t\t\t\"y\": 0.2108\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.443915,\n\t\t\t\t\"y\": 0.215171\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.457441,\n\t\t\t\t\"y\": 0.218774\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.47116,\n\t\t\t\t\"y\": 0.22155\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.485033,\n\t\t\t\t\"y\": 0.223395\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.499007,\n\t\t\t\t\"y\": 0.224133\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.512989,\n\t\t\t\t\"y\": 0.223573\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.52688,\n\t\t\t\t\"y\": 0.221872\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.540623,\n\t\t\t\t\"y\": 0.21922\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.554179,\n\t\t\t\t\"y\": 0.21573\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.567512,\n\t\t\t\t\"y\": 0.211466\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.580585,\n\t\t\t\t\"y\": 0.206458\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593349,\n\t\t\t\t\"y\": 0.200706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.605738,\n\t\t\t\t\"y\": 0.194182\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.61765,\n\t\t\t\t\"y\": 0.186822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.628923,\n\t\t\t\t\"y\": 0.178516\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.639267,\n\t\t\t\t\"y\": 0.169079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.63974,\n\t\t\t\t\"y\": 0.179624\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.636513,\n\t\t\t\t\"y\": 0.193254\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.631122,\n\t\t\t\t\"y\": 0.206183\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.623851,\n\t\t\t\t\"y\": 0.218153\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.615006,\n\t\t\t\t\"y\": 0.229011\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.604879,\n\t\t\t\t\"y\": 0.238681\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593724,\n\t\t\t\t\"y\": 0.247143\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.581756,\n\t\t\t\t\"y\": 0.254406\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.569151,\n\t\t\t\t\"y\": 0.260495\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.556057,\n\t\t\t\t\"y\": 0.26544\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.542595,\n\t\t\t\t\"y\": 0.26927\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.52887,\n\t\t\t\t\"y\": 0.272008\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.514975,\n\t\t\t\t\"y\": 0.273673\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.500993,\n\t\t\t\t\"y\": 0.274276\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.487006,\n\t\t\t\t\"y\": 0.273823\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.473093,\n\t\t\t\t\"y\": 0.272309\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.459339,\n\t\t\t\t\"y\": 0.269724\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.445834,\n\t\t\t\t\"y\": 0.266051\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.43268,\n\t\t\t\t\"y\": 0.261266\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.419998,\n\t\t\t\t\"y\": 0.255341\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.407929,\n\t\t\t\t\"y\": 0.248246\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.396647,\n\t\t\t\t\"y\": 0.239956\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.386359,\n\t\t\t\t\"y\": 0.230456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.377315,\n\t\t\t\t\"y\": 0.219764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.369802,\n\t\t\t\t\"y\": 0.207944\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.364126,\n\t\t\t\t\"y\": 0.195139\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.360578,\n\t\t\t\t\"y\": 0.181588\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t]\n\t},\n\t\"anger\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.766058,\n\t\t\t\t\"y\": 0.567127\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.75643,\n\t\t\t\t\"y\": 0.566107\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.746841,\n\t\t\t\t\"y\": 0.564756\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.737304,\n\t\t\t\t\"y\": 0.563083\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.727827,\n\t\t\t\t\"y\": 0.561093\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.718421,\n\t\t\t\t\"y\": 0.558794\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.709094,\n\t\t\t\t\"y\": 0.556189\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.699855,\n\t\t\t\t\"y\": 0.553286\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.690713,\n\t\t\t\t\"y\": 0.550088\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.681678,\n\t\t\t\t\"y\": 0.5466\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.672758,\n\t\t\t\t\"y\": 0.542826\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.663963,\n\t\t\t\t\"y\": 0.53877\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.6553,\n\t\t\t\t\"y\": 0.534435\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.646781,\n\t\t\t\t\"y\": 0.529826\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.638413,\n\t\t\t\t\"y\": 0.524943\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.630209,\n\t\t\t\t\"y\": 0.519792\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.622177,\n\t\t\t\t\"y\": 0.514373\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.61433,\n\t\t\t\t\"y\": 0.50869\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606678,\n\t\t\t\t\"y\": 0.502745\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.599234,\n\t\t\t\t\"y\": 0.496541\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.592011,\n\t\t\t\t\"y\": 0.49008\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.585023,\n\t\t\t\t\"y\": 0.483366\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.578284,\n\t\t\t\t\"y\": 0.4764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.57181,\n\t\t\t\t\"y\": 0.469186\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.572407,\n\t\t\t\t\"y\": 0.477069\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.574606,\n\t\t\t\t\"y\": 0.486514\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.57762,\n\t\t\t\t\"y\": 0.495731\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.581395,\n\t\t\t\t\"y\": 0.504662\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.585876,\n\t\t\t\t\"y\": 0.51326\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.59101,\n\t\t\t\t\"y\": 0.521484\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.596744,\n\t\t\t\t\"y\": 0.529299\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.603028,\n\t\t\t\t\"y\": 0.536677\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.609817,\n\t\t\t\t\"y\": 0.543592\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.617066,\n\t\t\t\t\"y\": 0.550023\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.624731,\n\t\t\t\t\"y\": 0.555947\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.632774,\n\t\t\t\t\"y\": 0.561346\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.641155,\n\t\t\t\t\"y\": 0.566202\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.649836,\n\t\t\t\t\"y\": 0.570495\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.658781,\n\t\t\t\t\"y\": 0.574208\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.66795,\n\t\t\t\t\"y\": 0.57732\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.677306,\n\t\t\t\t\"y\": 0.579812\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.686809,\n\t\t\t\t\"y\": 0.581663\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.696417,\n\t\t\t\t\"y\": 0.582851\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.706085,\n\t\t\t\t\"y\": 0.583355\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.715764,\n\t\t\t\t\"y\": 0.583153\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.7254,\n\t\t\t\t\"y\": 0.582221\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.734934,\n\t\t\t\t\"y\": 0.58054\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.7443,\n\t\t\t\t\"y\": 0.578092\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.753427,\n\t\t\t\t\"y\": 0.574861\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.762236,\n\t\t\t\t\"y\": 0.570839\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.23147,\n\t\t\t\t\"y\": 0.567335\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.241107,\n\t\t\t\t\"y\": 0.5664\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.250707,\n\t\t\t\t\"y\": 0.565133\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.260258,\n\t\t\t\t\"y\": 0.563542\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.269751,\n\t\t\t\t\"y\": 0.561633\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.279177,\n\t\t\t\t\"y\": 0.559412\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.288525,\n\t\t\t\t\"y\": 0.556885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.297787,\n\t\t\t\t\"y\": 0.554058\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.306954,\n\t\t\t\t\"y\": 0.550935\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.316018,\n\t\t\t\t\"y\": 0.547521\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.324968,\n\t\t\t\t\"y\": 0.54382\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.333796,\n\t\t\t\t\"y\": 0.539836\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.342494,\n\t\t\t\t\"y\": 0.535572\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.351051,\n\t\t\t\t\"y\": 0.531033\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.359458,\n\t\t\t\t\"y\": 0.52622\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.367705,\n\t\t\t\t\"y\": 0.521137\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.375782,\n\t\t\t\t\"y\": 0.515786\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.383678,\n\t\t\t\t\"y\": 0.510171\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.391381,\n\t\t\t\t\"y\": 0.504293\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.398879,\n\t\t\t\t\"y\": 0.498155\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.40616,\n\t\t\t\t\"y\": 0.49176\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.41321,\n\t\t\t\t\"y\": 0.48511\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.420014,\n\t\t\t\t\"y\": 0.478208\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.426558,\n\t\t\t\t\"y\": 0.471057\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.428019,\n\t\t\t\t\"y\": 0.47462\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.426038,\n\t\t\t\t\"y\": 0.484114\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.423227,\n\t\t\t\t\"y\": 0.493395\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.419642,\n\t\t\t\t\"y\": 0.502404\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.415336,\n\t\t\t\t\"y\": 0.511092\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.410365,\n\t\t\t\t\"y\": 0.519414\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.40478,\n\t\t\t\t\"y\": 0.527337\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.398632,\n\t\t\t\t\"y\": 0.53483\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.391968,\n\t\t\t\t\"y\": 0.541866\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.384833,\n\t\t\t\t\"y\": 0.548423\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.37727,\n\t\t\t\t\"y\": 0.554479\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.36932,\n\t\t\t\t\"y\": 0.560014\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.361022,\n\t\t\t\t\"y\": 0.565011\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.352414,\n\t\t\t\t\"y\": 0.56945\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.343534,\n\t\t\t\t\"y\": 0.573313\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.334418,\n\t\t\t\t\"y\": 0.576581\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.325106,\n\t\t\t\t\"y\": 0.579233\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.315637,\n\t\t\t\t\"y\": 0.581251\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.306052,\n\t\t\t\t\"y\": 0.582611\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.296395,\n\t\t\t\t\"y\": 0.583293\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.286714,\n\t\t\t\t\"y\": 0.583273\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.277062,\n\t\t\t\t\"y\": 0.58253\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.267496,\n\t\t\t\t\"y\": 0.581043\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.25808,\n\t\t\t\t\"y\": 0.578793\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.248884,\n\t\t\t\t\"y\": 0.575763\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.239986,\n\t\t\t\t\"y\": 0.571945\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.687477,\n\t\t\t\t\"y\": 0.427502\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.687257,\n\t\t\t\t\"y\": 0.420034\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.686594,\n\t\t\t\t\"y\": 0.412592\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.685475,\n\t\t\t\t\"y\": 0.405205\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.683882,\n\t\t\t\t\"y\": 0.397906\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.681785,\n\t\t\t\t\"y\": 0.390737\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.679141,\n\t\t\t\t\"y\": 0.383751\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.675897,\n\t\t\t\t\"y\": 0.377026\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.67198,\n\t\t\t\t\"y\": 0.370671\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.667306,\n\t\t\t\t\"y\": 0.364856\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.66179,\n\t\t\t\t\"y\": 0.359841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.655399,\n\t\t\t\t\"y\": 0.35602\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.648272,\n\t\t\t\t\"y\": 0.353901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.640841,\n\t\t\t\t\"y\": 0.353901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.633714,\n\t\t\t\t\"y\": 0.35602\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.627322,\n\t\t\t\t\"y\": 0.359841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.621806,\n\t\t\t\t\"y\": 0.364856\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.617132,\n\t\t\t\t\"y\": 0.370671\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.613216,\n\t\t\t\t\"y\": 0.377026\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.609971,\n\t\t\t\t\"y\": 0.383751\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.607328,\n\t\t\t\t\"y\": 0.390737\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.60523,\n\t\t\t\t\"y\": 0.397906\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.603637,\n\t\t\t\t\"y\": 0.405205\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.602519,\n\t\t\t\t\"y\": 0.412592\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.601856,\n\t\t\t\t\"y\": 0.420034\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.601636,\n\t\t\t\t\"y\": 0.427502\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.601856,\n\t\t\t\t\"y\": 0.43497\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.602519,\n\t\t\t\t\"y\": 0.442412\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.603637,\n\t\t\t\t\"y\": 0.449799\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.60523,\n\t\t\t\t\"y\": 0.457098\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.607328,\n\t\t\t\t\"y\": 0.464267\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.609971,\n\t\t\t\t\"y\": 0.471253\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.613216,\n\t\t\t\t\"y\": 0.477978\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.617132,\n\t\t\t\t\"y\": 0.484333\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.621806,\n\t\t\t\t\"y\": 0.490148\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.627322,\n\t\t\t\t\"y\": 0.495163\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.633714,\n\t\t\t\t\"y\": 0.498984\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.640841,\n\t\t\t\t\"y\": 0.501103\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.648272,\n\t\t\t\t\"y\": 0.501103\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.655399,\n\t\t\t\t\"y\": 0.498984\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.66179,\n\t\t\t\t\"y\": 0.495163\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.667306,\n\t\t\t\t\"y\": 0.490148\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.67198,\n\t\t\t\t\"y\": 0.484333\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.675897,\n\t\t\t\t\"y\": 0.477978\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.679141,\n\t\t\t\t\"y\": 0.471253\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.681785,\n\t\t\t\t\"y\": 0.464267\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.683882,\n\t\t\t\t\"y\": 0.457098\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.685475,\n\t\t\t\t\"y\": 0.449799\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.686594,\n\t\t\t\t\"y\": 0.442412\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.687257,\n\t\t\t\t\"y\": 0.43497\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.312523,\n\t\t\t\t\"y\": 0.427502\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.312743,\n\t\t\t\t\"y\": 0.420034\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.313406,\n\t\t\t\t\"y\": 0.412592\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.314525,\n\t\t\t\t\"y\": 0.405205\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.316118,\n\t\t\t\t\"y\": 0.397906\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.318215,\n\t\t\t\t\"y\": 0.390737\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.320859,\n\t\t\t\t\"y\": 0.383751\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.324103,\n\t\t\t\t\"y\": 0.377026\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.32802,\n\t\t\t\t\"y\": 0.370671\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.332694,\n\t\t\t\t\"y\": 0.364856\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.33821,\n\t\t\t\t\"y\": 0.359841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.344601,\n\t\t\t\t\"y\": 0.35602\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.351728,\n\t\t\t\t\"y\": 0.353901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.359159,\n\t\t\t\t\"y\": 0.353901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.366286,\n\t\t\t\t\"y\": 0.35602\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.372678,\n\t\t\t\t\"y\": 0.359841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.378194,\n\t\t\t\t\"y\": 0.364856\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.382868,\n\t\t\t\t\"y\": 0.370671\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.386784,\n\t\t\t\t\"y\": 0.377026\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.390029,\n\t\t\t\t\"y\": 0.383751\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.392672,\n\t\t\t\t\"y\": 0.390737\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.39477,\n\t\t\t\t\"y\": 0.397906\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.396363,\n\t\t\t\t\"y\": 0.405205\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.397481,\n\t\t\t\t\"y\": 0.412592\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.398144,\n\t\t\t\t\"y\": 0.420034\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.398364,\n\t\t\t\t\"y\": 0.427502\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.398144,\n\t\t\t\t\"y\": 0.43497\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.397481,\n\t\t\t\t\"y\": 0.442412\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.396363,\n\t\t\t\t\"y\": 0.449799\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.39477,\n\t\t\t\t\"y\": 0.457098\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.392672,\n\t\t\t\t\"y\": 0.464267\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.390029,\n\t\t\t\t\"y\": 0.471253\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.386784,\n\t\t\t\t\"y\": 0.477978\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.382868,\n\t\t\t\t\"y\": 0.484333\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.378194,\n\t\t\t\t\"y\": 0.490148\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.372678,\n\t\t\t\t\"y\": 0.495163\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.366286,\n\t\t\t\t\"y\": 0.498984\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.359159,\n\t\t\t\t\"y\": 0.501103\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.351728,\n\t\t\t\t\"y\": 0.501103\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.344601,\n\t\t\t\t\"y\": 0.498984\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.33821,\n\t\t\t\t\"y\": 0.495163\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.332694,\n\t\t\t\t\"y\": 0.490148\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.32802,\n\t\t\t\t\"y\": 0.484333\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.324103,\n\t\t\t\t\"y\": 0.477978\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.320859,\n\t\t\t\t\"y\": 0.471253\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.318215,\n\t\t\t\t\"y\": 0.464267\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.316118,\n\t\t\t\t\"y\": 0.457098\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.314525,\n\t\t\t\t\"y\": 0.449799\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.313406,\n\t\t\t\t\"y\": 0.442412\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.312743,\n\t\t\t\t\"y\": 0.43497\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.437209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 3.4834e-10\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.437209\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.372012,\n\t\t\t\t\"y\": 0.180837\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.375868,\n\t\t\t\t\"y\": 0.179016\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.38631,\n\t\t\t\t\"y\": 0.186447\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.397391,\n\t\t\t\t\"y\": 0.19289\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.408903,\n\t\t\t\t\"y\": 0.198526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.420732,\n\t\t\t\t\"y\": 0.203458\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.43281,\n\t\t\t\t\"y\": 0.207744\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.44509,\n\t\t\t\t\"y\": 0.211409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.457539,\n\t\t\t\t\"y\": 0.214449\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.470129,\n\t\t\t\t\"y\": 0.216834\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.482833,\n\t\t\t\t\"y\": 0.218501\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.495617,\n\t\t\t\t\"y\": 0.219337\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.508427,\n\t\t\t\t\"y\": 0.219173\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.521191,\n\t\t\t\t\"y\": 0.218058\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.533862,\n\t\t\t\t\"y\": 0.216154\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.54641,\n\t\t\t\t\"y\": 0.213557\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.558809,\n\t\t\t\t\"y\": 0.210318\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.571029,\n\t\t\t\t\"y\": 0.206458\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.583034,\n\t\t\t\t\"y\": 0.201972\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.594773,\n\t\t\t\t\"y\": 0.196825\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606163,\n\t\t\t\t\"y\": 0.190949\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.617072,\n\t\t\t\t\"y\": 0.184218\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.627239,\n\t\t\t\t\"y\": 0.176416\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.627056,\n\t\t\t\t\"y\": 0.184783\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.623167,\n\t\t\t\t\"y\": 0.19701\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.617949,\n\t\t\t\t\"y\": 0.208731\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.611529,\n\t\t\t\t\"y\": 0.219836\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.604023,\n\t\t\t\t\"y\": 0.230237\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.595544,\n\t\t\t\t\"y\": 0.239858\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.586195,\n\t\t\t\t\"y\": 0.248632\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.576074,\n\t\t\t\t\"y\": 0.2565\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.565274,\n\t\t\t\t\"y\": 0.263402\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.553886,\n\t\t\t\t\"y\": 0.26928\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.542002,\n\t\t\t\t\"y\": 0.274071\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.529719,\n\t\t\t\t\"y\": 0.277713\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.517141,\n\t\t\t\t\"y\": 0.280138\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.504382,\n\t\t\t\t\"y\": 0.281275\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.491576,\n\t\t\t\t\"y\": 0.281059\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.478861,\n\t\t\t\t\"y\": 0.279508\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.466363,\n\t\t\t\t\"y\": 0.276691\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.454196,\n\t\t\t\t\"y\": 0.272679\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.442458,\n\t\t\t\t\"y\": 0.267537\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.431246,\n\t\t\t\t\"y\": 0.26133\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.420651,\n\t\t\t\t\"y\": 0.254116\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.410763,\n\t\t\t\t\"y\": 0.245956\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.401679,\n\t\t\t\t\"y\": 0.236907\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.393496,\n\t\t\t\t\"y\": 0.227032\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.386321,\n\t\t\t\t\"y\": 0.2164\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.380267,\n\t\t\t\t\"y\": 0.20509\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.375455,\n\t\t\t\t\"y\": 0.193197\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t]\n\t},\n\t\"fear\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.833505,\n\t\t\t\t\"y\": 0.670581\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.826431,\n\t\t\t\t\"y\": 0.677206\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.819136,\n\t\t\t\t\"y\": 0.683585\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.81163,\n\t\t\t\t\"y\": 0.689713\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.803925,\n\t\t\t\t\"y\": 0.695589\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.796032,\n\t\t\t\t\"y\": 0.701208\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.787961,\n\t\t\t\t\"y\": 0.706567\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.779722,\n\t\t\t\t\"y\": 0.711664\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.771324,\n\t\t\t\t\"y\": 0.716494\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.762778,\n\t\t\t\t\"y\": 0.721053\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.754091,\n\t\t\t\t\"y\": 0.725338\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.745273,\n\t\t\t\t\"y\": 0.729345\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.736332,\n\t\t\t\t\"y\": 0.733068\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.727276,\n\t\t\t\t\"y\": 0.736503\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.718115,\n\t\t\t\t\"y\": 0.739644\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.708857,\n\t\t\t\t\"y\": 0.742485\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.699511,\n\t\t\t\t\"y\": 0.745021\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.690087,\n\t\t\t\t\"y\": 0.747245\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.680593,\n\t\t\t\t\"y\": 0.749149\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.671039,\n\t\t\t\t\"y\": 0.750727\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.661436,\n\t\t\t\t\"y\": 0.751969\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.651795,\n\t\t\t\t\"y\": 0.752867\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.642128,\n\t\t\t\t\"y\": 0.753412\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.632448,\n\t\t\t\t\"y\": 0.753595\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.638092,\n\t\t\t\t\"y\": 0.758123\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.646636,\n\t\t\t\t\"y\": 0.762681\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.655546,\n\t\t\t\t\"y\": 0.766473\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.664742,\n\t\t\t\t\"y\": 0.769501\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.674153,\n\t\t\t\t\"y\": 0.771776\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.683711,\n\t\t\t\t\"y\": 0.773311\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.693358,\n\t\t\t\t\"y\": 0.774124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.703038,\n\t\t\t\t\"y\": 0.774232\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.712702,\n\t\t\t\t\"y\": 0.773655\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.722303,\n\t\t\t\t\"y\": 0.772412\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.731799,\n\t\t\t\t\"y\": 0.770521\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.741147,\n\t\t\t\t\"y\": 0.767999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.750309,\n\t\t\t\t\"y\": 0.764865\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.759245,\n\t\t\t\t\"y\": 0.761133\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767918,\n\t\t\t\t\"y\": 0.756822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.776287,\n\t\t\t\t\"y\": 0.751946\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.784313,\n\t\t\t\t\"y\": 0.746521\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.791953,\n\t\t\t\t\"y\": 0.740565\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.799165,\n\t\t\t\t\"y\": 0.734094\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.805903,\n\t\t\t\t\"y\": 0.727128\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.812116,\n\t\t\t\t\"y\": 0.71969\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.817755,\n\t\t\t\t\"y\": 0.711805\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.822764,\n\t\t\t\t\"y\": 0.703505\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.827086,\n\t\t\t\t\"y\": 0.694827\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.830665,\n\t\t\t\t\"y\": 0.685815\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.833441,\n\t\t\t\t\"y\": 0.676523\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.167571,\n\t\t\t\t\"y\": 0.671618\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.174679,\n\t\t\t\t\"y\": 0.678206\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.182008,\n\t\t\t\t\"y\": 0.684546\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.189545,\n\t\t\t\t\"y\": 0.690636\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.19728,\n\t\t\t\t\"y\": 0.696472\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.205201,\n\t\t\t\t\"y\": 0.702051\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.213299,\n\t\t\t\t\"y\": 0.70737\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.221563,\n\t\t\t\t\"y\": 0.712426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.229984,\n\t\t\t\t\"y\": 0.717214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.238552,\n\t\t\t\t\"y\": 0.721732\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.24726,\n\t\t\t\t\"y\": 0.725974\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.256098,\n\t\t\t\t\"y\": 0.729937\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.265057,\n\t\t\t\t\"y\": 0.733616\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.274129,\n\t\t\t\t\"y\": 0.737006\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.283306,\n\t\t\t\t\"y\": 0.740102\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.292578,\n\t\t\t\t\"y\": 0.742896\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.301937,\n\t\t\t\t\"y\": 0.745385\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.311373,\n\t\t\t\t\"y\": 0.74756\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.320877,\n\t\t\t\t\"y\": 0.749414\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.330438,\n\t\t\t\t\"y\": 0.75094\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.340048,\n\t\t\t\t\"y\": 0.75213\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.349693,\n\t\t\t\t\"y\": 0.752974\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.359363,\n\t\t\t\t\"y\": 0.753465\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.368787,\n\t\t\t\t\"y\": 0.753673\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.360618,\n\t\t\t\t\"y\": 0.758876\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.352012,\n\t\t\t\t\"y\": 0.763316\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.343053,\n\t\t\t\t\"y\": 0.766989\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.333819,\n\t\t\t\t\"y\": 0.7699\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.324382,\n\t\t\t\t\"y\": 0.77206\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.314806,\n\t\t\t\t\"y\": 0.773483\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.305151,\n\t\t\t\t\"y\": 0.774186\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.29547,\n\t\t\t\t\"y\": 0.774188\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.285813,\n\t\t\t\t\"y\": 0.773507\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.276225,\n\t\t\t\t\"y\": 0.772162\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.26675,\n\t\t\t\t\"y\": 0.770173\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.257428,\n\t\t\t\t\"y\": 0.767555\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.248298,\n\t\t\t\t\"y\": 0.764328\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.2394,\n\t\t\t\t\"y\": 0.760506\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.230772,\n\t\t\t\t\"y\": 0.756107\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.222453,\n\t\t\t\t\"y\": 0.751145\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.214483,\n\t\t\t\t\"y\": 0.745637\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.206906,\n\t\t\t\t\"y\": 0.7396\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.199764,\n\t\t\t\t\"y\": 0.733052\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.193104,\n\t\t\t\t\"y\": 0.726012\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.186976,\n\t\t\t\t\"y\": 0.718503\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181431,\n\t\t\t\t\"y\": 0.710552\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.176524,\n\t\t\t\t\"y\": 0.702191\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.172312,\n\t\t\t\t\"y\": 0.693458\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.168854,\n\t\t\t\t\"y\": 0.684399\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.166207,\n\t\t\t\t\"y\": 0.67507\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.750326,\n\t\t\t\t\"y\": 0.510601\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.749886,\n\t\t\t\t\"y\": 0.501845\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.748565,\n\t\t\t\t\"y\": 0.493177\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.746364,\n\t\t\t\t\"y\": 0.484692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.743283,\n\t\t\t\t\"y\": 0.476486\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.739327,\n\t\t\t\t\"y\": 0.468667\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.734506,\n\t\t\t\t\"y\": 0.461351\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.728843,\n\t\t\t\t\"y\": 0.454669\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.72238,\n\t\t\t\t\"y\": 0.448763\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.715184,\n\t\t\t\t\"y\": 0.443781\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.707355,\n\t\t\t\t\"y\": 0.439874\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.699033,\n\t\t\t\t\"y\": 0.437179\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.690396,\n\t\t\t\t\"y\": 0.435802\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.681651,\n\t\t\t\t\"y\": 0.435802\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.673015,\n\t\t\t\t\"y\": 0.437179\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.664693,\n\t\t\t\t\"y\": 0.439874\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.656864,\n\t\t\t\t\"y\": 0.443781\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.649668,\n\t\t\t\t\"y\": 0.448763\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.643204,\n\t\t\t\t\"y\": 0.454669\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.637542,\n\t\t\t\t\"y\": 0.461351\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.632721,\n\t\t\t\t\"y\": 0.468667\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.628764,\n\t\t\t\t\"y\": 0.476486\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.625684,\n\t\t\t\t\"y\": 0.484692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.623482,\n\t\t\t\t\"y\": 0.493177\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.622162,\n\t\t\t\t\"y\": 0.501845\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.621722,\n\t\t\t\t\"y\": 0.510601\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.622162,\n\t\t\t\t\"y\": 0.519358\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.623482,\n\t\t\t\t\"y\": 0.528025\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.625684,\n\t\t\t\t\"y\": 0.53651\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.628764,\n\t\t\t\t\"y\": 0.544716\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.632721,\n\t\t\t\t\"y\": 0.552535\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.637542,\n\t\t\t\t\"y\": 0.559851\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.643204,\n\t\t\t\t\"y\": 0.566533\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.649668,\n\t\t\t\t\"y\": 0.57244\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.656864,\n\t\t\t\t\"y\": 0.577421\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.664693,\n\t\t\t\t\"y\": 0.581328\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.673015,\n\t\t\t\t\"y\": 0.584023\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.681651,\n\t\t\t\t\"y\": 0.5854\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.690396,\n\t\t\t\t\"y\": 0.5854\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.699033,\n\t\t\t\t\"y\": 0.584023\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.707355,\n\t\t\t\t\"y\": 0.581328\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.715184,\n\t\t\t\t\"y\": 0.577421\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.72238,\n\t\t\t\t\"y\": 0.57244\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.728843,\n\t\t\t\t\"y\": 0.566533\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.734506,\n\t\t\t\t\"y\": 0.559851\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.739327,\n\t\t\t\t\"y\": 0.552535\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.743283,\n\t\t\t\t\"y\": 0.544716\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.746364,\n\t\t\t\t\"y\": 0.53651\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.748565,\n\t\t\t\t\"y\": 0.528025\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.749886,\n\t\t\t\t\"y\": 0.519358\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.249674,\n\t\t\t\t\"y\": 0.510601\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.250114,\n\t\t\t\t\"y\": 0.501845\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.251435,\n\t\t\t\t\"y\": 0.493177\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.253636,\n\t\t\t\t\"y\": 0.484692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.256717,\n\t\t\t\t\"y\": 0.476486\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.260673,\n\t\t\t\t\"y\": 0.468667\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.265494,\n\t\t\t\t\"y\": 0.461351\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.271157,\n\t\t\t\t\"y\": 0.454669\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.27762,\n\t\t\t\t\"y\": 0.448763\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.284816,\n\t\t\t\t\"y\": 0.443781\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.292645,\n\t\t\t\t\"y\": 0.439874\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.300967,\n\t\t\t\t\"y\": 0.437179\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.309604,\n\t\t\t\t\"y\": 0.435802\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.318349,\n\t\t\t\t\"y\": 0.435802\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.326985,\n\t\t\t\t\"y\": 0.437179\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.335307,\n\t\t\t\t\"y\": 0.439874\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.343136,\n\t\t\t\t\"y\": 0.443781\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.350332,\n\t\t\t\t\"y\": 0.448763\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.356796,\n\t\t\t\t\"y\": 0.454669\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.362458,\n\t\t\t\t\"y\": 0.461351\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.367279,\n\t\t\t\t\"y\": 0.468667\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.371236,\n\t\t\t\t\"y\": 0.476486\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.374316,\n\t\t\t\t\"y\": 0.484692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.376518,\n\t\t\t\t\"y\": 0.493177\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.377838,\n\t\t\t\t\"y\": 0.501845\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.378278,\n\t\t\t\t\"y\": 0.510601\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.377838,\n\t\t\t\t\"y\": 0.519358\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.376518,\n\t\t\t\t\"y\": 0.528025\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.374316,\n\t\t\t\t\"y\": 0.53651\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.371236,\n\t\t\t\t\"y\": 0.544716\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.367279,\n\t\t\t\t\"y\": 0.552535\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.362458,\n\t\t\t\t\"y\": 0.559851\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.356796,\n\t\t\t\t\"y\": 0.566533\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.350332,\n\t\t\t\t\"y\": 0.57244\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.343136,\n\t\t\t\t\"y\": 0.577421\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.335307,\n\t\t\t\t\"y\": 0.581328\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.326985,\n\t\t\t\t\"y\": 0.584023\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.318349,\n\t\t\t\t\"y\": 0.5854\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.309604,\n\t\t\t\t\"y\": 0.5854\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.300967,\n\t\t\t\t\"y\": 0.584023\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.292645,\n\t\t\t\t\"y\": 0.581328\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.284816,\n\t\t\t\t\"y\": 0.577421\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.27762,\n\t\t\t\t\"y\": 0.57244\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.271157,\n\t\t\t\t\"y\": 0.566533\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.265494,\n\t\t\t\t\"y\": 0.559851\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.260673,\n\t\t\t\t\"y\": 0.552535\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.256717,\n\t\t\t\t\"y\": 0.544716\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.253636,\n\t\t\t\t\"y\": 0.53651\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.251435,\n\t\t\t\t\"y\": 0.528025\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.250114,\n\t\t\t\t\"y\": 0.519358\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.437209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 3.4834e-10\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.437209\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.364222,\n\t\t\t\t\"y\": 0.266079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.356036,\n\t\t\t\t\"y\": 0.252957\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.350177,\n\t\t\t\t\"y\": 0.238652\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.347724,\n\t\t\t\t\"y\": 0.223404\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.349488,\n\t\t\t\t\"y\": 0.208071\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.355779,\n\t\t\t\t\"y\": 0.194\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.366523,\n\t\t\t\t\"y\": 0.182993\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.380618,\n\t\t\t\t\"y\": 0.176875\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.395993,\n\t\t\t\t\"y\": 0.176073\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.411216,\n\t\t\t\t\"y\": 0.178681\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.426137,\n\t\t\t\t\"y\": 0.182719\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.440936,\n\t\t\t\t\"y\": 0.187192\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.455783,\n\t\t\t\t\"y\": 0.1915\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.470801,\n\t\t\t\t\"y\": 0.195154\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.486049,\n\t\t\t\t\"y\": 0.197664\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.501474,\n\t\t\t\t\"y\": 0.198487\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.516876,\n\t\t\t\t\"y\": 0.197298\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.53208,\n\t\t\t\t\"y\": 0.194529\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.547059,\n\t\t\t\t\"y\": 0.190714\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.561886,\n\t\t\t\t\"y\": 0.186336\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.576693,\n\t\t\t\t\"y\": 0.181893\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.59166,\n\t\t\t\t\"y\": 0.178031\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606949,\n\t\t\t\t\"y\": 0.175879\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.622235,\n\t\t\t\t\"y\": 0.177614\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.635837,\n\t\t\t\t\"y\": 0.184762\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.645776,\n\t\t\t\t\"y\": 0.196508\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.651191,\n\t\t\t\t\"y\": 0.210945\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.65212,\n\t\t\t\t\"y\": 0.226354\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.648931,\n\t\t\t\t\"y\": 0.241467\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.642556,\n\t\t\t\t\"y\": 0.255552\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.634016,\n\t\t\t\t\"y\": 0.268447\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.623943,\n\t\t\t\t\"y\": 0.280184\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.612705,\n\t\t\t\t\"y\": 0.290809\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.600515,\n\t\t\t\t\"y\": 0.300323\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.587493,\n\t\t\t\t\"y\": 0.308657\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.57373,\n\t\t\t\t\"y\": 0.315694\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.559353,\n\t\t\t\t\"y\": 0.321368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.544508,\n\t\t\t\t\"y\": 0.325662\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.529337,\n\t\t\t\t\"y\": 0.328606\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.513973,\n\t\t\t\t\"y\": 0.330266\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.498526,\n\t\t\t\t\"y\": 0.330727\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.483087,\n\t\t\t\t\"y\": 0.330044\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.467751,\n\t\t\t\t\"y\": 0.328146\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.452631,\n\t\t\t\t\"y\": 0.324949\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.437864,\n\t\t\t\t\"y\": 0.320392\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.423594,\n\t\t\t\t\"y\": 0.314456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.409963,\n\t\t\t\t\"y\": 0.307164\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.397094,\n\t\t\t\t\"y\": 0.298596\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.385073,\n\t\t\t\t\"y\": 0.288867\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.374037,\n\t\t\t\t\"y\": 0.278032\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t]\n\t},\n\t\"grimacing\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.708191,\n\t\t\t\t\"y\": 0.6214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.707865,\n\t\t\t\t\"y\": 0.614079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.706885,\n\t\t\t\t\"y\": 0.606817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.705245,\n\t\t\t\t\"y\": 0.599675\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.702935,\n\t\t\t\t\"y\": 0.592722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.699944,\n\t\t\t\t\"y\": 0.586036\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.696261,\n\t\t\t\t\"y\": 0.579706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.691878,\n\t\t\t\t\"y\": 0.573841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.6868,\n\t\t\t\t\"y\": 0.568571\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.681053,\n\t\t\t\t\"y\": 0.564045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.674695,\n\t\t\t\t\"y\": 0.560432\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.667839,\n\t\t\t\t\"y\": 0.557899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.66065,\n\t\t\t\t\"y\": 0.556591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.653343,\n\t\t\t\t\"y\": 0.556591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.646154,\n\t\t\t\t\"y\": 0.557899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.639298,\n\t\t\t\t\"y\": 0.560432\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.632941,\n\t\t\t\t\"y\": 0.564045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.627193,\n\t\t\t\t\"y\": 0.568571\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.622115,\n\t\t\t\t\"y\": 0.573841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.617732,\n\t\t\t\t\"y\": 0.579706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.614049,\n\t\t\t\t\"y\": 0.586036\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.611058,\n\t\t\t\t\"y\": 0.592722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.608748,\n\t\t\t\t\"y\": 0.599675\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.607108,\n\t\t\t\t\"y\": 0.606817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606128,\n\t\t\t\t\"y\": 0.614079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.605802,\n\t\t\t\t\"y\": 0.6214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606128,\n\t\t\t\t\"y\": 0.628721\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.607108,\n\t\t\t\t\"y\": 0.635983\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.608748,\n\t\t\t\t\"y\": 0.643125\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.611058,\n\t\t\t\t\"y\": 0.650077\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.614049,\n\t\t\t\t\"y\": 0.656764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.617732,\n\t\t\t\t\"y\": 0.663094\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.622115,\n\t\t\t\t\"y\": 0.668959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.627193,\n\t\t\t\t\"y\": 0.674229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.632941,\n\t\t\t\t\"y\": 0.678755\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.639298,\n\t\t\t\t\"y\": 0.682368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.646154,\n\t\t\t\t\"y\": 0.684901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.653343,\n\t\t\t\t\"y\": 0.686209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.66065,\n\t\t\t\t\"y\": 0.686209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.667839,\n\t\t\t\t\"y\": 0.684901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.674695,\n\t\t\t\t\"y\": 0.682368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.681053,\n\t\t\t\t\"y\": 0.678755\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.6868,\n\t\t\t\t\"y\": 0.674229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.691878,\n\t\t\t\t\"y\": 0.668959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.696261,\n\t\t\t\t\"y\": 0.663094\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.699944,\n\t\t\t\t\"y\": 0.656764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.702935,\n\t\t\t\t\"y\": 0.650077\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.705245,\n\t\t\t\t\"y\": 0.643125\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.706885,\n\t\t\t\t\"y\": 0.635983\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.707865,\n\t\t\t\t\"y\": 0.628721\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.291809,\n\t\t\t\t\"y\": 0.6214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.292135,\n\t\t\t\t\"y\": 0.614079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.293115,\n\t\t\t\t\"y\": 0.606817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.294755,\n\t\t\t\t\"y\": 0.599675\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.297065,\n\t\t\t\t\"y\": 0.592722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.300056,\n\t\t\t\t\"y\": 0.586036\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.303739,\n\t\t\t\t\"y\": 0.579706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.308122,\n\t\t\t\t\"y\": 0.573841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.3132,\n\t\t\t\t\"y\": 0.568571\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.318947,\n\t\t\t\t\"y\": 0.564045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.325305,\n\t\t\t\t\"y\": 0.560432\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.332161,\n\t\t\t\t\"y\": 0.557899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.33935,\n\t\t\t\t\"y\": 0.556591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.346657,\n\t\t\t\t\"y\": 0.556591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.353846,\n\t\t\t\t\"y\": 0.557899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.360702,\n\t\t\t\t\"y\": 0.560432\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.367059,\n\t\t\t\t\"y\": 0.564045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.372807,\n\t\t\t\t\"y\": 0.568571\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.377885,\n\t\t\t\t\"y\": 0.573841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.382268,\n\t\t\t\t\"y\": 0.579706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.385951,\n\t\t\t\t\"y\": 0.586036\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.388942,\n\t\t\t\t\"y\": 0.592722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.391252,\n\t\t\t\t\"y\": 0.599675\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.392892,\n\t\t\t\t\"y\": 0.606817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.393872,\n\t\t\t\t\"y\": 0.614079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.394198,\n\t\t\t\t\"y\": 0.6214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.393872,\n\t\t\t\t\"y\": 0.628721\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.392892,\n\t\t\t\t\"y\": 0.635983\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.391252,\n\t\t\t\t\"y\": 0.643125\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.388942,\n\t\t\t\t\"y\": 0.650077\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.385951,\n\t\t\t\t\"y\": 0.656764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.382268,\n\t\t\t\t\"y\": 0.663094\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.377885,\n\t\t\t\t\"y\": 0.668959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.372807,\n\t\t\t\t\"y\": 0.674229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.367059,\n\t\t\t\t\"y\": 0.678755\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.360702,\n\t\t\t\t\"y\": 0.682368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.353846,\n\t\t\t\t\"y\": 0.684901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.346657,\n\t\t\t\t\"y\": 0.686209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.33935,\n\t\t\t\t\"y\": 0.686209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.332161,\n\t\t\t\t\"y\": 0.684901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.325305,\n\t\t\t\t\"y\": 0.682368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.318947,\n\t\t\t\t\"y\": 0.678755\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.3132,\n\t\t\t\t\"y\": 0.674229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.308122,\n\t\t\t\t\"y\": 0.668959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.303739,\n\t\t\t\t\"y\": 0.663094\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.300056,\n\t\t\t\t\"y\": 0.656764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.297065,\n\t\t\t\t\"y\": 0.650077\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.294755,\n\t\t\t\t\"y\": 0.643125\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.293115,\n\t\t\t\t\"y\": 0.635983\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.292135,\n\t\t\t\t\"y\": 0.628721\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.437209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 3.4834e-10\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.437209\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.193171,\n\t\t\t\t\"y\": 0.418165\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.18001,\n\t\t\t\t\"y\": 0.39105\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.17743,\n\t\t\t\t\"y\": 0.360891\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.178092,\n\t\t\t\t\"y\": 0.330544\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.187423,\n\t\t\t\t\"y\": 0.301846\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.208072,\n\t\t\t\t\"y\": 0.280065\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.23718,\n\t\t\t\t\"y\": 0.273499\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.267494,\n\t\t\t\t\"y\": 0.273499\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.297809,\n\t\t\t\t\"y\": 0.273499\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.328124,\n\t\t\t\t\"y\": 0.273499\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.358438,\n\t\t\t\t\"y\": 0.273499\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.388753,\n\t\t\t\t\"y\": 0.273499\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.419068,\n\t\t\t\t\"y\": 0.273499\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.449382,\n\t\t\t\t\"y\": 0.273499\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.479697,\n\t\t\t\t\"y\": 0.273499\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.510012,\n\t\t\t\t\"y\": 0.273499\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.540326,\n\t\t\t\t\"y\": 0.273499\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.570641,\n\t\t\t\t\"y\": 0.273499\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.600956,\n\t\t\t\t\"y\": 0.273499\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.631271,\n\t\t\t\t\"y\": 0.273499\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.661585,\n\t\t\t\t\"y\": 0.273499\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.6919,\n\t\t\t\t\"y\": 0.273499\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.722215,\n\t\t\t\t\"y\": 0.273499\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.752529,\n\t\t\t\t\"y\": 0.273499\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.7826,\n\t\t\t\t\"y\": 0.275757\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.806829,\n\t\t\t\t\"y\": 0.293305\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.81999,\n\t\t\t\t\"y\": 0.32042\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.82257,\n\t\t\t\t\"y\": 0.350579\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.821908,\n\t\t\t\t\"y\": 0.380926\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.812577,\n\t\t\t\t\"y\": 0.409624\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.791928,\n\t\t\t\t\"y\": 0.431405\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.76282,\n\t\t\t\t\"y\": 0.437971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.732506,\n\t\t\t\t\"y\": 0.437971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.702191,\n\t\t\t\t\"y\": 0.437971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.671876,\n\t\t\t\t\"y\": 0.437971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.641562,\n\t\t\t\t\"y\": 0.437971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.611247,\n\t\t\t\t\"y\": 0.437971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.580932,\n\t\t\t\t\"y\": 0.437971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.550618,\n\t\t\t\t\"y\": 0.437971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.520303,\n\t\t\t\t\"y\": 0.437971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.489988,\n\t\t\t\t\"y\": 0.437971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.459674,\n\t\t\t\t\"y\": 0.437971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.429359,\n\t\t\t\t\"y\": 0.437971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.399044,\n\t\t\t\t\"y\": 0.437971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.368729,\n\t\t\t\t\"y\": 0.437971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.338415,\n\t\t\t\t\"y\": 0.437971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.3081,\n\t\t\t\t\"y\": 0.437971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.277785,\n\t\t\t\t\"y\": 0.437971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.247471,\n\t\t\t\t\"y\": 0.437971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.2174,\n\t\t\t\t\"y\": 0.435713\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t]\n\t},\n\t\"grin\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.705551,\n\t\t\t\t\"y\": 0.520668\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.702107,\n\t\t\t\t\"y\": 0.52959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.696999,\n\t\t\t\t\"y\": 0.538579\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.690642,\n\t\t\t\t\"y\": 0.546732\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.683267,\n\t\t\t\t\"y\": 0.553975\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.67505,\n\t\t\t\t\"y\": 0.560243\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.66613,\n\t\t\t\t\"y\": 0.565458\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.656631,\n\t\t\t\t\"y\": 0.569518\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.646681,\n\t\t\t\t\"y\": 0.572284\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.636437,\n\t\t\t\t\"y\": 0.573566\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.626121,\n\t\t\t\t\"y\": 0.573184\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.61598,\n\t\t\t\t\"y\": 0.57124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606211,\n\t\t\t\t\"y\": 0.56789\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.596977,\n\t\t\t\t\"y\": 0.563258\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.58844,\n\t\t\t\t\"y\": 0.557438\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.580774,\n\t\t\t\t\"y\": 0.550506\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.574192,\n\t\t\t\t\"y\": 0.542537\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.56896,\n\t\t\t\t\"y\": 0.533622\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.565798,\n\t\t\t\t\"y\": 0.526687\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5661,\n\t\t\t\t\"y\": 0.537036\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.566807,\n\t\t\t\t\"y\": 0.547365\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.567931,\n\t\t\t\t\"y\": 0.557658\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.569484,\n\t\t\t\t\"y\": 0.567893\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.571486,\n\t\t\t\t\"y\": 0.578051\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.573966,\n\t\t\t\t\"y\": 0.588101\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.576959,\n\t\t\t\t\"y\": 0.59801\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.580512,\n\t\t\t\t\"y\": 0.607732\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.584686,\n\t\t\t\t\"y\": 0.617202\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.589557,\n\t\t\t\t\"y\": 0.62633\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.595225,\n\t\t\t\t\"y\": 0.634983\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.601808,\n\t\t\t\t\"y\": 0.642956\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.609433,\n\t\t\t\t\"y\": 0.649929\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.618179,\n\t\t\t\t\"y\": 0.65541\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.627936,\n\t\t\t\t\"y\": 0.658735\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.63822,\n\t\t\t\t\"y\": 0.659288\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.648255,\n\t\t\t\t\"y\": 0.656954\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.657424,\n\t\t\t\t\"y\": 0.652224\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.6655,\n\t\t\t\t\"y\": 0.645785\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.672514,\n\t\t\t\t\"y\": 0.638191\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.678581,\n\t\t\t\t\"y\": 0.629815\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.683822,\n\t\t\t\t\"y\": 0.620895\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.68834,\n\t\t\t\t\"y\": 0.611585\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.692218,\n\t\t\t\t\"y\": 0.60199\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.695521,\n\t\t\t\t\"y\": 0.59218\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.698299,\n\t\t\t\t\"y\": 0.582208\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.700591,\n\t\t\t\t\"y\": 0.572112\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.702426,\n\t\t\t\t\"y\": 0.561923\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.703826,\n\t\t\t\t\"y\": 0.551665\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.704807,\n\t\t\t\t\"y\": 0.541358\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.705381,\n\t\t\t\t\"y\": 0.531021\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.289567,\n\t\t\t\t\"y\": 0.52607\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.293003,\n\t\t\t\t\"y\": 0.534177\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.298324,\n\t\t\t\t\"y\": 0.543039\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.304977,\n\t\t\t\t\"y\": 0.550949\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.3127,\n\t\t\t\t\"y\": 0.557816\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.321284,\n\t\t\t\t\"y\": 0.563568\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.330554,\n\t\t\t\t\"y\": 0.568126\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.340351,\n\t\t\t\t\"y\": 0.571396\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.350508,\n\t\t\t\t\"y\": 0.573252\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.360827,\n\t\t\t\t\"y\": 0.573535\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.371058,\n\t\t\t\t\"y\": 0.572159\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.380985,\n\t\t\t\t\"y\": 0.569311\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.390453,\n\t\t\t\t\"y\": 0.565179\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.399335,\n\t\t\t\t\"y\": 0.559899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.407506,\n\t\t\t\t\"y\": 0.553571\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.414825,\n\t\t\t\t\"y\": 0.546271\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.421115,\n\t\t\t\t\"y\": 0.538066\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.42614,\n\t\t\t\t\"y\": 0.52903\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.429327,\n\t\t\t\t\"y\": 0.521285\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.429133,\n\t\t\t\t\"y\": 0.531637\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.428535,\n\t\t\t\t\"y\": 0.541973\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.427529,\n\t\t\t\t\"y\": 0.552278\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.426104,\n\t\t\t\t\"y\": 0.562532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.424242,\n\t\t\t\t\"y\": 0.572716\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.421923,\n\t\t\t\t\"y\": 0.582805\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.419115,\n\t\t\t\t\"y\": 0.592769\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.415779,\n\t\t\t\t\"y\": 0.602568\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.411864,\n\t\t\t\t\"y\": 0.612149\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.407306,\n\t\t\t\t\"y\": 0.621438\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.402019,\n\t\t\t\t\"y\": 0.630331\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.395899,\n\t\t\t\t\"y\": 0.638668\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.388825,\n\t\t\t\t\"y\": 0.646205\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.380683,\n\t\t\t\t\"y\": 0.65256\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.371453,\n\t\t\t\t\"y\": 0.657167\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.361381,\n\t\t\t\t\"y\": 0.659338\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.351108,\n\t\t\t\t\"y\": 0.65861\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.341402,\n\t\t\t\t\"y\": 0.655137\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.332723,\n\t\t\t\t\"y\": 0.64955\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.325163,\n\t\t\t\t\"y\": 0.642506\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.318638,\n\t\t\t\t\"y\": 0.634485\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.313021,\n\t\t\t\t\"y\": 0.625799\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.308194,\n\t\t\t\t\"y\": 0.616647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.304059,\n\t\t\t\t\"y\": 0.607159\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.300541,\n\t\t\t\t\"y\": 0.597425\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.29758,\n\t\t\t\t\"y\": 0.587506\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.295129,\n\t\t\t\t\"y\": 0.577448\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.293154,\n\t\t\t\t\"y\": 0.567286\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.291627,\n\t\t\t\t\"y\": 0.557046\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.290529,\n\t\t\t\t\"y\": 0.546751\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.289845,\n\t\t\t\t\"y\": 0.53642\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.437209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 3.4834e-10\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.437209\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.193171,\n\t\t\t\t\"y\": 0.418165\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.18001,\n\t\t\t\t\"y\": 0.39105\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.17743,\n\t\t\t\t\"y\": 0.360891\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.178092,\n\t\t\t\t\"y\": 0.330544\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.187423,\n\t\t\t\t\"y\": 0.301846\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.208072,\n\t\t\t\t\"y\": 0.280065\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.23718,\n\t\t\t\t\"y\": 0.273499\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.267494,\n\t\t\t\t\"y\": 0.273499\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.297809,\n\t\t\t\t\"y\": 0.273499\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.328124,\n\t\t\t\t\"y\": 0.273499\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.358438,\n\t\t\t\t\"y\": 0.273499\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.388753,\n\t\t\t\t\"y\": 0.273499\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.419068,\n\t\t\t\t\"y\": 0.273499\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.449382,\n\t\t\t\t\"y\": 0.273499\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.479697,\n\t\t\t\t\"y\": 0.273499\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.510012,\n\t\t\t\t\"y\": 0.273499\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.540326,\n\t\t\t\t\"y\": 0.273499\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.570641,\n\t\t\t\t\"y\": 0.273499\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.600956,\n\t\t\t\t\"y\": 0.273499\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.631271,\n\t\t\t\t\"y\": 0.273499\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.661585,\n\t\t\t\t\"y\": 0.273499\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.6919,\n\t\t\t\t\"y\": 0.273499\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.722215,\n\t\t\t\t\"y\": 0.273499\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.752529,\n\t\t\t\t\"y\": 0.273499\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.7826,\n\t\t\t\t\"y\": 0.275757\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.806829,\n\t\t\t\t\"y\": 0.293305\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.81999,\n\t\t\t\t\"y\": 0.32042\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.82257,\n\t\t\t\t\"y\": 0.350579\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.821908,\n\t\t\t\t\"y\": 0.380926\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.812577,\n\t\t\t\t\"y\": 0.409624\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.791928,\n\t\t\t\t\"y\": 0.431405\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.76282,\n\t\t\t\t\"y\": 0.437971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.732506,\n\t\t\t\t\"y\": 0.437971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.702191,\n\t\t\t\t\"y\": 0.437971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.671876,\n\t\t\t\t\"y\": 0.437971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.641562,\n\t\t\t\t\"y\": 0.437971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.611247,\n\t\t\t\t\"y\": 0.437971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.580932,\n\t\t\t\t\"y\": 0.437971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.550618,\n\t\t\t\t\"y\": 0.437971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.520303,\n\t\t\t\t\"y\": 0.437971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.489988,\n\t\t\t\t\"y\": 0.437971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.459674,\n\t\t\t\t\"y\": 0.437971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.429359,\n\t\t\t\t\"y\": 0.437971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.399044,\n\t\t\t\t\"y\": 0.437971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.368729,\n\t\t\t\t\"y\": 0.437971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.338415,\n\t\t\t\t\"y\": 0.437971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.3081,\n\t\t\t\t\"y\": 0.437971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.277785,\n\t\t\t\t\"y\": 0.437971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.247471,\n\t\t\t\t\"y\": 0.437971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.2174,\n\t\t\t\t\"y\": 0.435713\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t]\n\t},\n\t\"smiley\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.708191,\n\t\t\t\t\"y\": 0.646677\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.707976,\n\t\t\t\t\"y\": 0.634637\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.707326,\n\t\t\t\t\"y\": 0.622613\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.706228,\n\t\t\t\t\"y\": 0.610621\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.704658,\n\t\t\t\t\"y\": 0.598682\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.702577,\n\t\t\t\t\"y\": 0.586822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.699932,\n\t\t\t\t\"y\": 0.575076\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.696641,\n\t\t\t\t\"y\": 0.563495\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.692582,\n\t\t\t\t\"y\": 0.552163\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.687568,\n\t\t\t\t\"y\": 0.541223\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.681296,\n\t\t\t\t\"y\": 0.530962\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.673274,\n\t\t\t\t\"y\": 0.522031\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.66292,\n\t\t\t\t\"y\": 0.516092\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.651073,\n\t\t\t\t\"y\": 0.516092\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.640719,\n\t\t\t\t\"y\": 0.522031\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.632697,\n\t\t\t\t\"y\": 0.530962\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.626425,\n\t\t\t\t\"y\": 0.541223\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.621411,\n\t\t\t\t\"y\": 0.552163\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.617352,\n\t\t\t\t\"y\": 0.563495\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.614061,\n\t\t\t\t\"y\": 0.575076\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.611416,\n\t\t\t\t\"y\": 0.586822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.609336,\n\t\t\t\t\"y\": 0.598682\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.607765,\n\t\t\t\t\"y\": 0.610621\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606667,\n\t\t\t\t\"y\": 0.622613\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606017,\n\t\t\t\t\"y\": 0.634637\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.605802,\n\t\t\t\t\"y\": 0.646677\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606017,\n\t\t\t\t\"y\": 0.658718\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606667,\n\t\t\t\t\"y\": 0.670742\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.607765,\n\t\t\t\t\"y\": 0.682734\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.609336,\n\t\t\t\t\"y\": 0.694673\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.611416,\n\t\t\t\t\"y\": 0.706533\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.614061,\n\t\t\t\t\"y\": 0.718279\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.617352,\n\t\t\t\t\"y\": 0.72986\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.621411,\n\t\t\t\t\"y\": 0.741192\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.626425,\n\t\t\t\t\"y\": 0.752132\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.632697,\n\t\t\t\t\"y\": 0.762393\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.640719,\n\t\t\t\t\"y\": 0.771324\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.651073,\n\t\t\t\t\"y\": 0.777263\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.66292,\n\t\t\t\t\"y\": 0.777263\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.673274,\n\t\t\t\t\"y\": 0.771324\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.681296,\n\t\t\t\t\"y\": 0.762393\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.687568,\n\t\t\t\t\"y\": 0.752132\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.692582,\n\t\t\t\t\"y\": 0.741192\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.696641,\n\t\t\t\t\"y\": 0.72986\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.699932,\n\t\t\t\t\"y\": 0.718279\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.702577,\n\t\t\t\t\"y\": 0.706533\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.704658,\n\t\t\t\t\"y\": 0.694673\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.706228,\n\t\t\t\t\"y\": 0.682734\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.707326,\n\t\t\t\t\"y\": 0.670742\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.707976,\n\t\t\t\t\"y\": 0.658718\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.291809,\n\t\t\t\t\"y\": 0.646677\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.292024,\n\t\t\t\t\"y\": 0.634637\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.292674,\n\t\t\t\t\"y\": 0.622613\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.293772,\n\t\t\t\t\"y\": 0.610621\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.295342,\n\t\t\t\t\"y\": 0.598682\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.297423,\n\t\t\t\t\"y\": 0.586822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.300068,\n\t\t\t\t\"y\": 0.575076\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.303359,\n\t\t\t\t\"y\": 0.563495\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.307418,\n\t\t\t\t\"y\": 0.552163\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.312432,\n\t\t\t\t\"y\": 0.541223\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.318704,\n\t\t\t\t\"y\": 0.530962\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.326726,\n\t\t\t\t\"y\": 0.522031\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.33708,\n\t\t\t\t\"y\": 0.516092\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.348927,\n\t\t\t\t\"y\": 0.516092\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.359281,\n\t\t\t\t\"y\": 0.522031\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.367303,\n\t\t\t\t\"y\": 0.530962\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.373575,\n\t\t\t\t\"y\": 0.541223\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.378589,\n\t\t\t\t\"y\": 0.552163\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.382648,\n\t\t\t\t\"y\": 0.563495\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.385939,\n\t\t\t\t\"y\": 0.575076\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.388584,\n\t\t\t\t\"y\": 0.586822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.390664,\n\t\t\t\t\"y\": 0.598682\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.392235,\n\t\t\t\t\"y\": 0.610621\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.393333,\n\t\t\t\t\"y\": 0.622613\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.393983,\n\t\t\t\t\"y\": 0.634637\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.394198,\n\t\t\t\t\"y\": 0.646677\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.393983,\n\t\t\t\t\"y\": 0.658718\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.393333,\n\t\t\t\t\"y\": 0.670742\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.392235,\n\t\t\t\t\"y\": 0.682734\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.390664,\n\t\t\t\t\"y\": 0.694673\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.388584,\n\t\t\t\t\"y\": 0.706533\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.385939,\n\t\t\t\t\"y\": 0.718279\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.382648,\n\t\t\t\t\"y\": 0.72986\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.378589,\n\t\t\t\t\"y\": 0.741192\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.373575,\n\t\t\t\t\"y\": 0.752132\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.367303,\n\t\t\t\t\"y\": 0.762393\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.359281,\n\t\t\t\t\"y\": 0.771324\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.348927,\n\t\t\t\t\"y\": 0.777263\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.33708,\n\t\t\t\t\"y\": 0.777263\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.326726,\n\t\t\t\t\"y\": 0.771324\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.318704,\n\t\t\t\t\"y\": 0.762393\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.312432,\n\t\t\t\t\"y\": 0.752132\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.307418,\n\t\t\t\t\"y\": 0.741192\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.303359,\n\t\t\t\t\"y\": 0.72986\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.300068,\n\t\t\t\t\"y\": 0.718279\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.297423,\n\t\t\t\t\"y\": 0.706533\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.295342,\n\t\t\t\t\"y\": 0.694673\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.293772,\n\t\t\t\t\"y\": 0.682734\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.292674,\n\t\t\t\t\"y\": 0.670742\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.292024,\n\t\t\t\t\"y\": 0.658718\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.437209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 3.4834e-10\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.437209\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.168942,\n\t\t\t\t\"y\": 0.440155\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.170863,\n\t\t\t\t\"y\": 0.4065\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.176591,\n\t\t\t\t\"y\": 0.373281\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.18603,\n\t\t\t\t\"y\": 0.340924\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.199024,\n\t\t\t\t\"y\": 0.309829\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.215366,\n\t\t\t\t\"y\": 0.280361\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.234809,\n\t\t\t\t\"y\": 0.252847\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.257076,\n\t\t\t\t\"y\": 0.227573\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.281866,\n\t\t\t\t\"y\": 0.204778\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.30887,\n\t\t\t\t\"y\": 0.184665\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.337769,\n\t\t\t\t\"y\": 0.167396\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.368243,\n\t\t\t\t\"y\": 0.1531\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.399972,\n\t\t\t\t\"y\": 0.141876\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.43264,\n\t\t\t\t\"y\": 0.133796\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.465935,\n\t\t\t\t\"y\": 0.128912\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.499543,\n\t\t\t\t\"y\": 0.127251\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.533156,\n\t\t\t\t\"y\": 0.128824\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.566462,\n\t\t\t\t\"y\": 0.133621\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.599152,\n\t\t\t\t\"y\": 0.141614\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.630911,\n\t\t\t\t\"y\": 0.152754\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.661423,\n\t\t\t\t\"y\": 0.166968\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.690368,\n\t\t\t\t\"y\": 0.184158\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.717428,\n\t\t\t\t\"y\": 0.204196\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.742283,\n\t\t\t\t\"y\": 0.22692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.764622,\n\t\t\t\t\"y\": 0.25213\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.784146,\n\t\t\t\t\"y\": 0.279586\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.800575,\n\t\t\t\t\"y\": 0.309005\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.813663,\n\t\t\t\t\"y\": 0.340062\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.823201,\n\t\t\t\t\"y\": 0.372389\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.829032,\n\t\t\t\t\"y\": 0.40559\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.831057,\n\t\t\t\t\"y\": 0.439239\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.80007,\n\t\t\t\t\"y\": 0.429581\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767515,\n\t\t\t\t\"y\": 0.421019\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.734605,\n\t\t\t\t\"y\": 0.413936\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.701476,\n\t\t\t\t\"y\": 0.407967\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.668192,\n\t\t\t\t\"y\": 0.402934\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.634791,\n\t\t\t\t\"y\": 0.398746\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.601298,\n\t\t\t\t\"y\": 0.395373\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.567733,\n\t\t\t\t\"y\": 0.392829\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.534112,\n\t\t\t\t\"y\": 0.391181\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.500457,\n\t\t\t\t\"y\": 0.390569\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.466802,\n\t\t\t\t\"y\": 0.391149\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.433179,\n\t\t\t\t\"y\": 0.392772\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.399612,\n\t\t\t\t\"y\": 0.395293\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.366118,\n\t\t\t\t\"y\": 0.398644\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.332714,\n\t\t\t\t\"y\": 0.402809\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.299426,\n\t\t\t\t\"y\": 0.407819\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.266292,\n\t\t\t\t\"y\": 0.41376\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.233375,\n\t\t\t\t\"y\": 0.42081\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.200807,\n\t\t\t\t\"y\": 0.429324\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t]\n\t},\n\t\"smile\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.705552,\n\t\t\t\t\"y\": 0.521446\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.702432,\n\t\t\t\t\"y\": 0.528884\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.697429,\n\t\t\t\t\"y\": 0.537932\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.691157,\n\t\t\t\t\"y\": 0.546151\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.683852,\n\t\t\t\t\"y\": 0.553465\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.675692,\n\t\t\t\t\"y\": 0.559808\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.666821,\n\t\t\t\t\"y\": 0.565105\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.657361,\n\t\t\t\t\"y\": 0.569256\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.64744,\n\t\t\t\t\"y\": 0.572125\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.637212,\n\t\t\t\t\"y\": 0.573526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.626892,\n\t\t\t\t\"y\": 0.573269\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.616731,\n\t\t\t\t\"y\": 0.571436\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606927,\n\t\t\t\t\"y\": 0.568187\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.597648,\n\t\t\t\t\"y\": 0.563648\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.589053,\n\t\t\t\t\"y\": 0.557914\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.581315,\n\t\t\t\t\"y\": 0.551064\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.574643,\n\t\t\t\t\"y\": 0.54317\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.569299,\n\t\t\t\t\"y\": 0.534321\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.565791,\n\t\t\t\t\"y\": 0.525909\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.566063,\n\t\t\t\t\"y\": 0.53626\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.56674,\n\t\t\t\t\"y\": 0.546591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.567832,\n\t\t\t\t\"y\": 0.556887\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.569352,\n\t\t\t\t\"y\": 0.567128\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.57132,\n\t\t\t\t\"y\": 0.577291\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.573763,\n\t\t\t\t\"y\": 0.587351\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.576716,\n\t\t\t\t\"y\": 0.597272\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.580225,\n\t\t\t\t\"y\": 0.60701\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.584349,\n\t\t\t\t\"y\": 0.616502\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.589165,\n\t\t\t\t\"y\": 0.62566\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.594769,\n\t\t\t\t\"y\": 0.634354\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.601279,\n\t\t\t\t\"y\": 0.642388\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.608822,\n\t\t\t\t\"y\": 0.64945\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.617484,\n\t\t\t\t\"y\": 0.655065\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.627176,\n\t\t\t\t\"y\": 0.658576\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.637446,\n\t\t\t\t\"y\": 0.659349\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.647527,\n\t\t\t\t\"y\": 0.657221\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.656773,\n\t\t\t\t\"y\": 0.652647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.664932,\n\t\t\t\t\"y\": 0.646314\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.672022,\n\t\t\t\t\"y\": 0.638792\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.678156,\n\t\t\t\t\"y\": 0.630465\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.683455,\n\t\t\t\t\"y\": 0.62158\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.688024,\n\t\t\t\t\"y\": 0.612295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.691948,\n\t\t\t\t\"y\": 0.602718\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.695292,\n\t\t\t\t\"y\": 0.592922\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.698108,\n\t\t\t\t\"y\": 0.582961\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.700435,\n\t\t\t\t\"y\": 0.572874\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.702303,\n\t\t\t\t\"y\": 0.562691\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.703736,\n\t\t\t\t\"y\": 0.552437\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.704748,\n\t\t\t\t\"y\": 0.542133\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.705352,\n\t\t\t\t\"y\": 0.531797\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.289567,\n\t\t\t\t\"y\": 0.52607\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.293003,\n\t\t\t\t\"y\": 0.534177\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.298324,\n\t\t\t\t\"y\": 0.543039\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.304977,\n\t\t\t\t\"y\": 0.550949\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.3127,\n\t\t\t\t\"y\": 0.557816\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.321284,\n\t\t\t\t\"y\": 0.563568\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.330554,\n\t\t\t\t\"y\": 0.568126\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.340351,\n\t\t\t\t\"y\": 0.571396\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.350508,\n\t\t\t\t\"y\": 0.573252\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.360827,\n\t\t\t\t\"y\": 0.573535\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.371058,\n\t\t\t\t\"y\": 0.572159\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.380985,\n\t\t\t\t\"y\": 0.569311\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.390453,\n\t\t\t\t\"y\": 0.565179\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.399335,\n\t\t\t\t\"y\": 0.559899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.407506,\n\t\t\t\t\"y\": 0.553571\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.414825,\n\t\t\t\t\"y\": 0.546271\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.421115,\n\t\t\t\t\"y\": 0.538066\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.42614,\n\t\t\t\t\"y\": 0.52903\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.429327,\n\t\t\t\t\"y\": 0.521285\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.429133,\n\t\t\t\t\"y\": 0.531637\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.428535,\n\t\t\t\t\"y\": 0.541973\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.427529,\n\t\t\t\t\"y\": 0.552278\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.426104,\n\t\t\t\t\"y\": 0.562532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.424242,\n\t\t\t\t\"y\": 0.572716\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.421923,\n\t\t\t\t\"y\": 0.582805\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.419115,\n\t\t\t\t\"y\": 0.592769\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.415779,\n\t\t\t\t\"y\": 0.602568\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.411864,\n\t\t\t\t\"y\": 0.612149\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.407306,\n\t\t\t\t\"y\": 0.621438\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.402019,\n\t\t\t\t\"y\": 0.630331\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.395899,\n\t\t\t\t\"y\": 0.638668\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.388825,\n\t\t\t\t\"y\": 0.646205\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.380683,\n\t\t\t\t\"y\": 0.65256\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.371453,\n\t\t\t\t\"y\": 0.657167\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.361381,\n\t\t\t\t\"y\": 0.659338\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.351108,\n\t\t\t\t\"y\": 0.65861\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.341402,\n\t\t\t\t\"y\": 0.655137\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.332723,\n\t\t\t\t\"y\": 0.64955\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.325163,\n\t\t\t\t\"y\": 0.642506\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.318638,\n\t\t\t\t\"y\": 0.634485\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.313021,\n\t\t\t\t\"y\": 0.625799\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.308194,\n\t\t\t\t\"y\": 0.616647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.304059,\n\t\t\t\t\"y\": 0.607159\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.300541,\n\t\t\t\t\"y\": 0.597425\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.29758,\n\t\t\t\t\"y\": 0.587506\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.295129,\n\t\t\t\t\"y\": 0.577448\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.293154,\n\t\t\t\t\"y\": 0.567286\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.291627,\n\t\t\t\t\"y\": 0.557046\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.290529,\n\t\t\t\t\"y\": 0.546751\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.289845,\n\t\t\t\t\"y\": 0.53642\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.437209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 3.4834e-10\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.437209\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.168942,\n\t\t\t\t\"y\": 0.440155\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.170863,\n\t\t\t\t\"y\": 0.4065\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.176591,\n\t\t\t\t\"y\": 0.373281\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.18603,\n\t\t\t\t\"y\": 0.340924\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.199024,\n\t\t\t\t\"y\": 0.309829\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.215366,\n\t\t\t\t\"y\": 0.280361\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.234809,\n\t\t\t\t\"y\": 0.252847\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.257076,\n\t\t\t\t\"y\": 0.227573\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.281866,\n\t\t\t\t\"y\": 0.204778\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.30887,\n\t\t\t\t\"y\": 0.184665\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.337769,\n\t\t\t\t\"y\": 0.167396\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.368243,\n\t\t\t\t\"y\": 0.1531\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.399972,\n\t\t\t\t\"y\": 0.141876\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.43264,\n\t\t\t\t\"y\": 0.133796\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.465935,\n\t\t\t\t\"y\": 0.128912\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.499543,\n\t\t\t\t\"y\": 0.127251\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.533156,\n\t\t\t\t\"y\": 0.128824\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.566462,\n\t\t\t\t\"y\": 0.133621\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.599152,\n\t\t\t\t\"y\": 0.141614\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.630911,\n\t\t\t\t\"y\": 0.152754\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.661423,\n\t\t\t\t\"y\": 0.166968\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.690368,\n\t\t\t\t\"y\": 0.184158\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.717428,\n\t\t\t\t\"y\": 0.204196\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.742283,\n\t\t\t\t\"y\": 0.22692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.764622,\n\t\t\t\t\"y\": 0.25213\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.784146,\n\t\t\t\t\"y\": 0.279586\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.800575,\n\t\t\t\t\"y\": 0.309005\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.813663,\n\t\t\t\t\"y\": 0.340062\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.823201,\n\t\t\t\t\"y\": 0.372389\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.829032,\n\t\t\t\t\"y\": 0.40559\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.831057,\n\t\t\t\t\"y\": 0.439239\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.80007,\n\t\t\t\t\"y\": 0.429581\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767515,\n\t\t\t\t\"y\": 0.421019\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.734605,\n\t\t\t\t\"y\": 0.413936\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.701476,\n\t\t\t\t\"y\": 0.407967\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.668192,\n\t\t\t\t\"y\": 0.402934\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.634791,\n\t\t\t\t\"y\": 0.398746\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.601298,\n\t\t\t\t\"y\": 0.395373\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.567733,\n\t\t\t\t\"y\": 0.392829\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.534112,\n\t\t\t\t\"y\": 0.391181\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.500457,\n\t\t\t\t\"y\": 0.390569\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.466802,\n\t\t\t\t\"y\": 0.391149\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.433179,\n\t\t\t\t\"y\": 0.392772\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.399612,\n\t\t\t\t\"y\": 0.395293\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.366118,\n\t\t\t\t\"y\": 0.398644\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.332714,\n\t\t\t\t\"y\": 0.402809\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.299426,\n\t\t\t\t\"y\": 0.407819\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.266292,\n\t\t\t\t\"y\": 0.41376\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.233375,\n\t\t\t\t\"y\": 0.42081\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.200807,\n\t\t\t\t\"y\": 0.429324\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t]\n\t},\n\t\"laughing\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.742417,\n\t\t\t\t\"y\": 0.511001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.733497,\n\t\t\t\t\"y\": 0.50166\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.719736,\n\t\t\t\t\"y\": 0.500487\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.706177,\n\t\t\t\t\"y\": 0.503326\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.69355,\n\t\t\t\t\"y\": 0.509075\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.681831,\n\t\t\t\t\"y\": 0.516531\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.670695,\n\t\t\t\t\"y\": 0.524844\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.65983,\n\t\t\t\t\"y\": 0.53351\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.648979,\n\t\t\t\t\"y\": 0.542195\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.63794,\n\t\t\t\t\"y\": 0.550638\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.626692,\n\t\t\t\t\"y\": 0.5588\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.615372,\n\t\t\t\t\"y\": 0.566862\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.604137,\n\t\t\t\t\"y\": 0.575041\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593264,\n\t\t\t\t\"y\": 0.583694\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.583686,\n\t\t\t\t\"y\": 0.593723\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.581571,\n\t\t\t\t\"y\": 0.606831\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.590403,\n\t\t\t\t\"y\": 0.617413\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.601399,\n\t\t\t\t\"y\": 0.625907\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.612668,\n\t\t\t\t\"y\": 0.634041\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.624097,\n\t\t\t\t\"y\": 0.641945\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.635698,\n\t\t\t\t\"y\": 0.649595\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.647473,\n\t\t\t\t\"y\": 0.656973\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.65942,\n\t\t\t\t\"y\": 0.664067\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.671537,\n\t\t\t\t\"y\": 0.670866\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.68383,\n\t\t\t\t\"y\": 0.677341\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.696321,\n\t\t\t\t\"y\": 0.683422\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.70906,\n\t\t\t\t\"y\": 0.688959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.722142,\n\t\t\t\t\"y\": 0.693617\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.735726,\n\t\t\t\t\"y\": 0.69637\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.748157,\n\t\t\t\t\"y\": 0.6919\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.746338,\n\t\t\t\t\"y\": 0.678733\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.737537,\n\t\t\t\t\"y\": 0.668026\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.726788,\n\t\t\t\t\"y\": 0.659232\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71525,\n\t\t\t\t\"y\": 0.651491\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.703358,\n\t\t\t\t\"y\": 0.644306\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.691282,\n\t\t\t\t\"y\": 0.637434\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.67912,\n\t\t\t\t\"y\": 0.630715\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.666956,\n\t\t\t\t\"y\": 0.623999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654915,\n\t\t\t\t\"y\": 0.617067\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.643401,\n\t\t\t\t\"y\": 0.609305\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.636968,\n\t\t\t\t\"y\": 0.597799\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.645452,\n\t\t\t\t\"y\": 0.587074\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.656667,\n\t\t\t\t\"y\": 0.578874\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.668288,\n\t\t\t\t\"y\": 0.571255\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.680005,\n\t\t\t\t\"y\": 0.563785\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.691711,\n\t\t\t\t\"y\": 0.556298\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.703332,\n\t\t\t\t\"y\": 0.548679\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.714775,\n\t\t\t\t\"y\": 0.540793\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.72587,\n\t\t\t\t\"y\": 0.532427\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.736135,\n\t\t\t\t\"y\": 0.523073\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.250774,\n\t\t\t\t\"y\": 0.51683\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.259885,\n\t\t\t\t\"y\": 0.508232\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.273621,\n\t\t\t\t\"y\": 0.509722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.286842,\n\t\t\t\t\"y\": 0.513958\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.299677,\n\t\t\t\t\"y\": 0.519268\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.31224,\n\t\t\t\t\"y\": 0.525198\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.324591,\n\t\t\t\t\"y\": 0.531559\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.336763,\n\t\t\t\t\"y\": 0.53826\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.348764,\n\t\t\t\t\"y\": 0.545262\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.360594,\n\t\t\t\t\"y\": 0.552551\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.37225,\n\t\t\t\t\"y\": 0.560117\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.383733,\n\t\t\t\t\"y\": 0.567943\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.39505,\n\t\t\t\t\"y\": 0.576008\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406189,\n\t\t\t\t\"y\": 0.584318\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.416221,\n\t\t\t\t\"y\": 0.593884\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.418425,\n\t\t\t\t\"y\": 0.606936\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.410002,\n\t\t\t\t\"y\": 0.61787\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.399364,\n\t\t\t\t\"y\": 0.626807\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.388203,\n\t\t\t\t\"y\": 0.635086\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.37689,\n\t\t\t\t\"y\": 0.643158\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.365604,\n\t\t\t\t\"y\": 0.651268\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.354488,\n\t\t\t\t\"y\": 0.659608\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.343596,\n\t\t\t\t\"y\": 0.668241\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.33276,\n\t\t\t\t\"y\": 0.676945\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.321741,\n\t\t\t\t\"y\": 0.685414\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.310243,\n\t\t\t\t\"y\": 0.693212\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.297932,\n\t\t\t\t\"y\": 0.699623\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.284627,\n\t\t\t\t\"y\": 0.703495\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.270794,\n\t\t\t\t\"y\": 0.703791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.258766,\n\t\t\t\t\"y\": 0.697692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.261055,\n\t\t\t\t\"y\": 0.684823\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.270747,\n\t\t\t\t\"y\": 0.674897\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.281664,\n\t\t\t\t\"y\": 0.6663\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.293021,\n\t\t\t\t\"y\": 0.658293\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.304597,\n\t\t\t\t\"y\": 0.650605\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.316285,\n\t\t\t\t\"y\": 0.643089\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.328008,\n\t\t\t\t\"y\": 0.635627\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.339676,\n\t\t\t\t\"y\": 0.628081\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.351086,\n\t\t\t\t\"y\": 0.620152\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.361187,\n\t\t\t\t\"y\": 0.61068\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.35984,\n\t\t\t\t\"y\": 0.598178\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.348829,\n\t\t\t\t\"y\": 0.589754\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.336877,\n\t\t\t\t\"y\": 0.582669\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.324734,\n\t\t\t\t\"y\": 0.575916\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.312563,\n\t\t\t\t\"y\": 0.569215\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.30045,\n\t\t\t\t\"y\": 0.562407\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.288486,\n\t\t\t\t\"y\": 0.555341\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.276808,\n\t\t\t\t\"y\": 0.547812\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.265728,\n\t\t\t\t\"y\": 0.539434\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.256107,\n\t\t\t\t\"y\": 0.529436\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.437209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 3.4834e-10\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.437209\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.168942,\n\t\t\t\t\"y\": 0.440155\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.170863,\n\t\t\t\t\"y\": 0.4065\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.176591,\n\t\t\t\t\"y\": 0.373281\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.18603,\n\t\t\t\t\"y\": 0.340924\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.199024,\n\t\t\t\t\"y\": 0.309829\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.215366,\n\t\t\t\t\"y\": 0.280361\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.234809,\n\t\t\t\t\"y\": 0.252847\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.257076,\n\t\t\t\t\"y\": 0.227573\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.281866,\n\t\t\t\t\"y\": 0.204778\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.30887,\n\t\t\t\t\"y\": 0.184665\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.337769,\n\t\t\t\t\"y\": 0.167396\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.368243,\n\t\t\t\t\"y\": 0.1531\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.399972,\n\t\t\t\t\"y\": 0.141876\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.43264,\n\t\t\t\t\"y\": 0.133796\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.465935,\n\t\t\t\t\"y\": 0.128912\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.499543,\n\t\t\t\t\"y\": 0.127251\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.533156,\n\t\t\t\t\"y\": 0.128824\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.566462,\n\t\t\t\t\"y\": 0.133621\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.599152,\n\t\t\t\t\"y\": 0.141614\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.630911,\n\t\t\t\t\"y\": 0.152754\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.661423,\n\t\t\t\t\"y\": 0.166968\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.690368,\n\t\t\t\t\"y\": 0.184158\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.717428,\n\t\t\t\t\"y\": 0.204196\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.742283,\n\t\t\t\t\"y\": 0.22692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.764622,\n\t\t\t\t\"y\": 0.25213\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.784146,\n\t\t\t\t\"y\": 0.279586\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.800575,\n\t\t\t\t\"y\": 0.309005\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.813663,\n\t\t\t\t\"y\": 0.340062\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.823201,\n\t\t\t\t\"y\": 0.372389\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.829032,\n\t\t\t\t\"y\": 0.40559\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.831057,\n\t\t\t\t\"y\": 0.439239\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.80007,\n\t\t\t\t\"y\": 0.429581\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767515,\n\t\t\t\t\"y\": 0.421019\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.734605,\n\t\t\t\t\"y\": 0.413936\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.701476,\n\t\t\t\t\"y\": 0.407967\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.668192,\n\t\t\t\t\"y\": 0.402934\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.634791,\n\t\t\t\t\"y\": 0.398746\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.601298,\n\t\t\t\t\"y\": 0.395373\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.567733,\n\t\t\t\t\"y\": 0.392829\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.534112,\n\t\t\t\t\"y\": 0.391181\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.500457,\n\t\t\t\t\"y\": 0.390569\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.466802,\n\t\t\t\t\"y\": 0.391149\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.433179,\n\t\t\t\t\"y\": 0.392772\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.399612,\n\t\t\t\t\"y\": 0.395293\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.366118,\n\t\t\t\t\"y\": 0.398644\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.332714,\n\t\t\t\t\"y\": 0.402809\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.299426,\n\t\t\t\t\"y\": 0.407819\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.266292,\n\t\t\t\t\"y\": 0.41376\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.233375,\n\t\t\t\t\"y\": 0.42081\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.200807,\n\t\t\t\t\"y\": 0.429324\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t]\n\t},\n\t\"wink\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.815428,\n\t\t\t\t\"y\": 0.526703\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.810466,\n\t\t\t\t\"y\": 0.529034\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.802606,\n\t\t\t\t\"y\": 0.535216\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.79449,\n\t\t\t\t\"y\": 0.541055\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.786132,\n\t\t\t\t\"y\": 0.546542\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.777549,\n\t\t\t\t\"y\": 0.551667\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.768754,\n\t\t\t\t\"y\": 0.556419\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.759766,\n\t\t\t\t\"y\": 0.560792\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.750599,\n\t\t\t\t\"y\": 0.564775\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.741271,\n\t\t\t\t\"y\": 0.568363\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.731798,\n\t\t\t\t\"y\": 0.571548\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.722198,\n\t\t\t\t\"y\": 0.574326\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.712489,\n\t\t\t\t\"y\": 0.57669\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.702688,\n\t\t\t\t\"y\": 0.578636\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.692813,\n\t\t\t\t\"y\": 0.580162\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.682881,\n\t\t\t\t\"y\": 0.581264\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.672912,\n\t\t\t\t\"y\": 0.58194\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.662923,\n\t\t\t\t\"y\": 0.582188\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.652933,\n\t\t\t\t\"y\": 0.58201\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.64296,\n\t\t\t\t\"y\": 0.581404\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.633021,\n\t\t\t\t\"y\": 0.580372\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.623135,\n\t\t\t\t\"y\": 0.578915\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.613321,\n\t\t\t\t\"y\": 0.577037\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.603595,\n\t\t\t\t\"y\": 0.574741\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606249,\n\t\t\t\t\"y\": 0.579559\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.613562,\n\t\t\t\t\"y\": 0.586379\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.621393,\n\t\t\t\t\"y\": 0.592594\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.629694,\n\t\t\t\t\"y\": 0.598163\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.63841,\n\t\t\t\t\"y\": 0.603053\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.647488,\n\t\t\t\t\"y\": 0.607232\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.65687,\n\t\t\t\t\"y\": 0.610673\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.666494,\n\t\t\t\t\"y\": 0.613354\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.676302,\n\t\t\t\t\"y\": 0.615259\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.68623,\n\t\t\t\t\"y\": 0.616375\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.696214,\n\t\t\t\t\"y\": 0.616695\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.706193,\n\t\t\t\t\"y\": 0.616218\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.716102,\n\t\t\t\t\"y\": 0.614946\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.725878,\n\t\t\t\t\"y\": 0.612887\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.73546,\n\t\t\t\t\"y\": 0.610054\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.744786,\n\t\t\t\t\"y\": 0.606466\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.753797,\n\t\t\t\t\"y\": 0.602145\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.762437,\n\t\t\t\t\"y\": 0.597119\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.770649,\n\t\t\t\t\"y\": 0.591419\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.778382,\n\t\t\t\t\"y\": 0.585082\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.785587,\n\t\t\t\t\"y\": 0.578148\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.792217,\n\t\t\t\t\"y\": 0.570661\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.798232,\n\t\t\t\t\"y\": 0.562669\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.803592,\n\t\t\t\t\"y\": 0.554222\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.808264,\n\t\t\t\t\"y\": 0.545374\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.812218,\n\t\t\t\t\"y\": 0.536182\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.189386,\n\t\t\t\t\"y\": 0.569298\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.192745,\n\t\t\t\t\"y\": 0.57277\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.197148,\n\t\t\t\t\"y\": 0.581758\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.20193,\n\t\t\t\t\"y\": 0.590548\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.207082,\n\t\t\t\t\"y\": 0.599126\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.212595,\n\t\t\t\t\"y\": 0.607476\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.218459,\n\t\t\t\t\"y\": 0.615582\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.224663,\n\t\t\t\t\"y\": 0.623431\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.231195,\n\t\t\t\t\"y\": 0.631006\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.238045,\n\t\t\t\t\"y\": 0.638295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.245198,\n\t\t\t\t\"y\": 0.645285\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.252644,\n\t\t\t\t\"y\": 0.651962\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.260366,\n\t\t\t\t\"y\": 0.658315\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.268353,\n\t\t\t\t\"y\": 0.664331\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.276588,\n\t\t\t\t\"y\": 0.67\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.285058,\n\t\t\t\t\"y\": 0.675312\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.293746,\n\t\t\t\t\"y\": 0.680257\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.302637,\n\t\t\t\t\"y\": 0.684825\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.311714,\n\t\t\t\t\"y\": 0.689009\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.320962,\n\t\t\t\t\"y\": 0.692801\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.330363,\n\t\t\t\t\"y\": 0.696194\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.339899,\n\t\t\t\t\"y\": 0.699181\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.349555,\n\t\t\t\t\"y\": 0.701758\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.359311,\n\t\t\t\t\"y\": 0.70392\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.355629,\n\t\t\t\t\"y\": 0.707055\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.346102,\n\t\t\t\t\"y\": 0.710066\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.336365,\n\t\t\t\t\"y\": 0.712308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.326482,\n\t\t\t\t\"y\": 0.713766\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.316514,\n\t\t\t\t\"y\": 0.71443\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.306525,\n\t\t\t\t\"y\": 0.714297\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.296578,\n\t\t\t\t\"y\": 0.713367\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.286737,\n\t\t\t\t\"y\": 0.711646\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.277063,\n\t\t\t\t\"y\": 0.709145\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.26762,\n\t\t\t\t\"y\": 0.70588\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.258466,\n\t\t\t\t\"y\": 0.701872\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.249659,\n\t\t\t\t\"y\": 0.697147\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.241256,\n\t\t\t\t\"y\": 0.691733\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.23331,\n\t\t\t\t\"y\": 0.685667\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.225871,\n\t\t\t\t\"y\": 0.678985\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.218988,\n\t\t\t\t\"y\": 0.671731\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.212702,\n\t\t\t\t\"y\": 0.663951\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.207055,\n\t\t\t\t\"y\": 0.655694\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.202082,\n\t\t\t\t\"y\": 0.647012\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.197815,\n\t\t\t\t\"y\": 0.637961\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.194282,\n\t\t\t\t\"y\": 0.628599\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.191503,\n\t\t\t\t\"y\": 0.618984\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.189498,\n\t\t\t\t\"y\": 0.609178\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.188278,\n\t\t\t\t\"y\": 0.599243\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.187852,\n\t\t\t\t\"y\": 0.589243\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.188222,\n\t\t\t\t\"y\": 0.57924\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.74231,\n\t\t\t\t\"y\": 0.436585\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.737558,\n\t\t\t\t\"y\": 0.437394\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.730472,\n\t\t\t\t\"y\": 0.440898\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.723214,\n\t\t\t\t\"y\": 0.444027\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.715812,\n\t\t\t\t\"y\": 0.446797\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.70829,\n\t\t\t\t\"y\": 0.449225\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.700671,\n\t\t\t\t\"y\": 0.451325\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.692973,\n\t\t\t\t\"y\": 0.453113\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.685212,\n\t\t\t\t\"y\": 0.454601\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.677402,\n\t\t\t\t\"y\": 0.455803\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.669554,\n\t\t\t\t\"y\": 0.45673\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.66168,\n\t\t\t\t\"y\": 0.457393\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.653788,\n\t\t\t\t\"y\": 0.457802\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.645887,\n\t\t\t\t\"y\": 0.457965\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.637986,\n\t\t\t\t\"y\": 0.457891\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.630089,\n\t\t\t\t\"y\": 0.457587\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.622204,\n\t\t\t\t\"y\": 0.457059\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.614337,\n\t\t\t\t\"y\": 0.456314\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606493,\n\t\t\t\t\"y\": 0.455357\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.598676,\n\t\t\t\t\"y\": 0.454193\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.590893,\n\t\t\t\t\"y\": 0.452826\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.583147,\n\t\t\t\t\"y\": 0.451259\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.575443,\n\t\t\t\t\"y\": 0.449496\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.567786,\n\t\t\t\t\"y\": 0.44754\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.569002,\n\t\t\t\t\"y\": 0.452677\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.573562,\n\t\t\t\t\"y\": 0.459134\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.579027,\n\t\t\t\t\"y\": 0.464844\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.585192,\n\t\t\t\t\"y\": 0.469791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.591878,\n\t\t\t\t\"y\": 0.474004\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.598949,\n\t\t\t\t\"y\": 0.477533\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.6063,\n\t\t\t\t\"y\": 0.480433\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.613852,\n\t\t\t\t\"y\": 0.482759\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.621547,\n\t\t\t\t\"y\": 0.484559\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.629338,\n\t\t\t\t\"y\": 0.485875\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.637192,\n\t\t\t\t\"y\": 0.486743\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.645081,\n\t\t\t\t\"y\": 0.487192\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.652982,\n\t\t\t\t\"y\": 0.487221\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.660875,\n\t\t\t\t\"y\": 0.486853\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.668746,\n\t\t\t\t\"y\": 0.486146\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.676574,\n\t\t\t\t\"y\": 0.48507\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.684337,\n\t\t\t\t\"y\": 0.483592\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.692001,\n\t\t\t\t\"y\": 0.48167\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.699526,\n\t\t\t\t\"y\": 0.479256\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.706853,\n\t\t\t\t\"y\": 0.476295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.713904,\n\t\t\t\t\"y\": 0.472725\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.720573,\n\t\t\t\t\"y\": 0.468484\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.726719,\n\t\t\t\t\"y\": 0.463514\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.732162,\n\t\t\t\t\"y\": 0.457783\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.736698,\n\t\t\t\t\"y\": 0.451309\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.740127,\n\t\t\t\t\"y\": 0.444186\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.311439,\n\t\t\t\t\"y\": 0.480442\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.311765,\n\t\t\t\t\"y\": 0.473121\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.312745,\n\t\t\t\t\"y\": 0.465859\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.314385,\n\t\t\t\t\"y\": 0.458717\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.316695,\n\t\t\t\t\"y\": 0.451765\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.319686,\n\t\t\t\t\"y\": 0.445078\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.323369,\n\t\t\t\t\"y\": 0.438748\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.327752,\n\t\t\t\t\"y\": 0.432884\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.332829,\n\t\t\t\t\"y\": 0.427613\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.338577,\n\t\t\t\t\"y\": 0.423087\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.344934,\n\t\t\t\t\"y\": 0.419474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.351791,\n\t\t\t\t\"y\": 0.416941\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.35898,\n\t\t\t\t\"y\": 0.415633\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.366286,\n\t\t\t\t\"y\": 0.415633\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.373475,\n\t\t\t\t\"y\": 0.416941\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.380332,\n\t\t\t\t\"y\": 0.419474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.386689,\n\t\t\t\t\"y\": 0.423087\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.392437,\n\t\t\t\t\"y\": 0.427613\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.397515,\n\t\t\t\t\"y\": 0.432884\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.401897,\n\t\t\t\t\"y\": 0.438748\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.405581,\n\t\t\t\t\"y\": 0.445078\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.408571,\n\t\t\t\t\"y\": 0.451765\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.410881,\n\t\t\t\t\"y\": 0.458717\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.412522,\n\t\t\t\t\"y\": 0.465859\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.413502,\n\t\t\t\t\"y\": 0.473121\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.413828,\n\t\t\t\t\"y\": 0.480442\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.413502,\n\t\t\t\t\"y\": 0.487763\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.412522,\n\t\t\t\t\"y\": 0.495025\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.410881,\n\t\t\t\t\"y\": 0.502167\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.408571,\n\t\t\t\t\"y\": 0.50912\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.405581,\n\t\t\t\t\"y\": 0.515806\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.401897,\n\t\t\t\t\"y\": 0.522136\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.397515,\n\t\t\t\t\"y\": 0.528001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.392437,\n\t\t\t\t\"y\": 0.533271\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.386689,\n\t\t\t\t\"y\": 0.537797\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.380332,\n\t\t\t\t\"y\": 0.54141\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.373475,\n\t\t\t\t\"y\": 0.543943\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.366286,\n\t\t\t\t\"y\": 0.545251\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.35898,\n\t\t\t\t\"y\": 0.545251\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.351791,\n\t\t\t\t\"y\": 0.543943\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.344934,\n\t\t\t\t\"y\": 0.54141\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.338577,\n\t\t\t\t\"y\": 0.537797\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.332829,\n\t\t\t\t\"y\": 0.533271\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.327752,\n\t\t\t\t\"y\": 0.528001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.323369,\n\t\t\t\t\"y\": 0.522136\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.319686,\n\t\t\t\t\"y\": 0.515806\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.316695,\n\t\t\t\t\"y\": 0.50912\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.314385,\n\t\t\t\t\"y\": 0.502167\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.312745,\n\t\t\t\t\"y\": 0.495025\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.311765,\n\t\t\t\t\"y\": 0.487763\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.437209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 3.4834e-10\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.437209\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.389789,\n\t\t\t\t\"y\": 0.263318\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.392696,\n\t\t\t\t\"y\": 0.2535\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.39717,\n\t\t\t\t\"y\": 0.244289\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.402912,\n\t\t\t\t\"y\": 0.23581\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.409665,\n\t\t\t\t\"y\": 0.228113\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.417222,\n\t\t\t\t\"y\": 0.221206\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.425422,\n\t\t\t\t\"y\": 0.215077\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.434138,\n\t\t\t\t\"y\": 0.209709\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.44327,\n\t\t\t\t\"y\": 0.205087\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.452736,\n\t\t\t\t\"y\": 0.201197\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.462468,\n\t\t\t\t\"y\": 0.198033\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.472407,\n\t\t\t\t\"y\": 0.195597\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.482497,\n\t\t\t\t\"y\": 0.193897\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.492684,\n\t\t\t\t\"y\": 0.192949\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.502914,\n\t\t\t\t\"y\": 0.192779\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.513127,\n\t\t\t\t\"y\": 0.193396\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.523265,\n\t\t\t\t\"y\": 0.194775\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.533276,\n\t\t\t\t\"y\": 0.196895\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.543104,\n\t\t\t\t\"y\": 0.199746\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.552692,\n\t\t\t\t\"y\": 0.203323\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.561977,\n\t\t\t\t\"y\": 0.207629\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.570883,\n\t\t\t\t\"y\": 0.212674\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.579319,\n\t\t\t\t\"y\": 0.218473\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.58717,\n\t\t\t\t\"y\": 0.225044\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.594292,\n\t\t\t\t\"y\": 0.2324\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.600498,\n\t\t\t\t\"y\": 0.240545\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.605552,\n\t\t\t\t\"y\": 0.249451\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.609172,\n\t\t\t\t\"y\": 0.25903\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.605349,\n\t\t\t\t\"y\": 0.2601\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.596354,\n\t\t\t\t\"y\": 0.255216\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.587004,\n\t\t\t\t\"y\": 0.251052\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.577426,\n\t\t\t\t\"y\": 0.247444\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.567685,\n\t\t\t\t\"y\": 0.244303\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.55782,\n\t\t\t\t\"y\": 0.241577\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.547856,\n\t\t\t\t\"y\": 0.239242\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.53781,\n\t\t\t\t\"y\": 0.23729\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.527696,\n\t\t\t\t\"y\": 0.235727\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.517527,\n\t\t\t\t\"y\": 0.234581\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.507317,\n\t\t\t\t\"y\": 0.2339\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.497086,\n\t\t\t\t\"y\": 0.23377\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.486863,\n\t\t\t\t\"y\": 0.234227\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.476675,\n\t\t\t\t\"y\": 0.235181\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.466536,\n\t\t\t\t\"y\": 0.236568\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.456459,\n\t\t\t\t\"y\": 0.238355\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.446458,\n\t\t\t\t\"y\": 0.240525\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.436547,\n\t\t\t\t\"y\": 0.24308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.426749,\n\t\t\t\t\"y\": 0.246038\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.417095,\n\t\t\t\t\"y\": 0.249437\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.407636,\n\t\t\t\t\"y\": 0.253347\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.398466,\n\t\t\t\t\"y\": 0.257894\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t]\n\t},\n\t\"slightly_smiling_face\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.708191,\n\t\t\t\t\"y\": 0.6214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.707865,\n\t\t\t\t\"y\": 0.614079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.706885,\n\t\t\t\t\"y\": 0.606817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.705245,\n\t\t\t\t\"y\": 0.599675\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.702935,\n\t\t\t\t\"y\": 0.592722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.699944,\n\t\t\t\t\"y\": 0.586036\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.696261,\n\t\t\t\t\"y\": 0.579706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.691878,\n\t\t\t\t\"y\": 0.573841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.6868,\n\t\t\t\t\"y\": 0.568571\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.681053,\n\t\t\t\t\"y\": 0.564045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.674695,\n\t\t\t\t\"y\": 0.560432\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.667839,\n\t\t\t\t\"y\": 0.557899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.66065,\n\t\t\t\t\"y\": 0.556591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.653343,\n\t\t\t\t\"y\": 0.556591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.646154,\n\t\t\t\t\"y\": 0.557899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.639298,\n\t\t\t\t\"y\": 0.560432\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.632941,\n\t\t\t\t\"y\": 0.564045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.627193,\n\t\t\t\t\"y\": 0.568571\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.622115,\n\t\t\t\t\"y\": 0.573841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.617732,\n\t\t\t\t\"y\": 0.579706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.614049,\n\t\t\t\t\"y\": 0.586036\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.611058,\n\t\t\t\t\"y\": 0.592722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.608748,\n\t\t\t\t\"y\": 0.599675\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.607108,\n\t\t\t\t\"y\": 0.606817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606128,\n\t\t\t\t\"y\": 0.614079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.605802,\n\t\t\t\t\"y\": 0.6214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606128,\n\t\t\t\t\"y\": 0.628721\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.607108,\n\t\t\t\t\"y\": 0.635983\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.608748,\n\t\t\t\t\"y\": 0.643125\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.611058,\n\t\t\t\t\"y\": 0.650077\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.614049,\n\t\t\t\t\"y\": 0.656764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.617732,\n\t\t\t\t\"y\": 0.663094\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.622115,\n\t\t\t\t\"y\": 0.668959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.627193,\n\t\t\t\t\"y\": 0.674229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.632941,\n\t\t\t\t\"y\": 0.678755\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.639298,\n\t\t\t\t\"y\": 0.682368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.646154,\n\t\t\t\t\"y\": 0.684901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.653343,\n\t\t\t\t\"y\": 0.686209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.66065,\n\t\t\t\t\"y\": 0.686209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.667839,\n\t\t\t\t\"y\": 0.684901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.674695,\n\t\t\t\t\"y\": 0.682368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.681053,\n\t\t\t\t\"y\": 0.678755\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.6868,\n\t\t\t\t\"y\": 0.674229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.691878,\n\t\t\t\t\"y\": 0.668959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.696261,\n\t\t\t\t\"y\": 0.663094\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.699944,\n\t\t\t\t\"y\": 0.656764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.702935,\n\t\t\t\t\"y\": 0.650077\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.705245,\n\t\t\t\t\"y\": 0.643125\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.706885,\n\t\t\t\t\"y\": 0.635983\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.707865,\n\t\t\t\t\"y\": 0.628721\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.291809,\n\t\t\t\t\"y\": 0.6214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.292135,\n\t\t\t\t\"y\": 0.614079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.293115,\n\t\t\t\t\"y\": 0.606817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.294755,\n\t\t\t\t\"y\": 0.599675\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.297065,\n\t\t\t\t\"y\": 0.592722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.300056,\n\t\t\t\t\"y\": 0.586036\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.303739,\n\t\t\t\t\"y\": 0.579706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.308122,\n\t\t\t\t\"y\": 0.573841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.3132,\n\t\t\t\t\"y\": 0.568571\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.318947,\n\t\t\t\t\"y\": 0.564045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.325305,\n\t\t\t\t\"y\": 0.560432\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.332161,\n\t\t\t\t\"y\": 0.557899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.33935,\n\t\t\t\t\"y\": 0.556591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.346657,\n\t\t\t\t\"y\": 0.556591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.353846,\n\t\t\t\t\"y\": 0.557899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.360702,\n\t\t\t\t\"y\": 0.560432\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.367059,\n\t\t\t\t\"y\": 0.564045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.372807,\n\t\t\t\t\"y\": 0.568571\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.377885,\n\t\t\t\t\"y\": 0.573841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.382268,\n\t\t\t\t\"y\": 0.579706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.385951,\n\t\t\t\t\"y\": 0.586036\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.388942,\n\t\t\t\t\"y\": 0.592722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.391252,\n\t\t\t\t\"y\": 0.599675\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.392892,\n\t\t\t\t\"y\": 0.606817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.393872,\n\t\t\t\t\"y\": 0.614079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.394198,\n\t\t\t\t\"y\": 0.6214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.393872,\n\t\t\t\t\"y\": 0.628721\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.392892,\n\t\t\t\t\"y\": 0.635983\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.391252,\n\t\t\t\t\"y\": 0.643125\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.388942,\n\t\t\t\t\"y\": 0.650077\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.385951,\n\t\t\t\t\"y\": 0.656764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.382268,\n\t\t\t\t\"y\": 0.663094\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.377885,\n\t\t\t\t\"y\": 0.668959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.372807,\n\t\t\t\t\"y\": 0.674229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.367059,\n\t\t\t\t\"y\": 0.678755\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.360702,\n\t\t\t\t\"y\": 0.682368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.353846,\n\t\t\t\t\"y\": 0.684901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.346657,\n\t\t\t\t\"y\": 0.686209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.33935,\n\t\t\t\t\"y\": 0.686209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.332161,\n\t\t\t\t\"y\": 0.684901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.325305,\n\t\t\t\t\"y\": 0.682368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.318947,\n\t\t\t\t\"y\": 0.678755\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.3132,\n\t\t\t\t\"y\": 0.674229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.308122,\n\t\t\t\t\"y\": 0.668959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.303739,\n\t\t\t\t\"y\": 0.663094\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.300056,\n\t\t\t\t\"y\": 0.656764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.297065,\n\t\t\t\t\"y\": 0.650077\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.294755,\n\t\t\t\t\"y\": 0.643125\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.293115,\n\t\t\t\t\"y\": 0.635983\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.292135,\n\t\t\t\t\"y\": 0.628721\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.437209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 3.4834e-10\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.437209\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.312763,\n\t\t\t\t\"y\": 0.337119\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.316114,\n\t\t\t\t\"y\": 0.320601\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.324841,\n\t\t\t\t\"y\": 0.306135\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.336783,\n\t\t\t\t\"y\": 0.29415\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.350547,\n\t\t\t\t\"y\": 0.284296\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.365396,\n\t\t\t\t\"y\": 0.276165\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.380935,\n\t\t\t\t\"y\": 0.269444\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.396935,\n\t\t\t\t\"y\": 0.26391\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.413255,\n\t\t\t\t\"y\": 0.259408\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.429801,\n\t\t\t\t\"y\": 0.255826\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.446506,\n\t\t\t\t\"y\": 0.253085\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.463322,\n\t\t\t\t\"y\": 0.251129\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.480207,\n\t\t\t\t\"y\": 0.249922\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.497129,\n\t\t\t\t\"y\": 0.24944\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.514056,\n\t\t\t\t\"y\": 0.249678\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.530957,\n\t\t\t\t\"y\": 0.250637\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5478,\n\t\t\t\t\"y\": 0.252336\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.564548,\n\t\t\t\t\"y\": 0.254806\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.581154,\n\t\t\t\t\"y\": 0.258095\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.59756,\n\t\t\t\t\"y\": 0.262274\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.613682,\n\t\t\t\t\"y\": 0.267443\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.629397,\n\t\t\t\t\"y\": 0.27374\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.644514,\n\t\t\t\t\"y\": 0.281363\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.658706,\n\t\t\t\t\"y\": 0.290591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.671382,\n\t\t\t\t\"y\": 0.301804\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.68141,\n\t\t\t\t\"y\": 0.315413\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.686836,\n\t\t\t\t\"y\": 0.331384\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.678513,\n\t\t\t\t\"y\": 0.330108\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.664398,\n\t\t\t\t\"y\": 0.320752\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.649564,\n\t\t\t\t\"y\": 0.312585\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.634235,\n\t\t\t\t\"y\": 0.305389\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.61854,\n\t\t\t\t\"y\": 0.299035\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.602557,\n\t\t\t\t\"y\": 0.293448\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.586338,\n\t\t\t\t\"y\": 0.28859\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.569922,\n\t\t\t\t\"y\": 0.284448\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.553339,\n\t\t\t\t\"y\": 0.28104\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.536615,\n\t\t\t\t\"y\": 0.27841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.51978,\n\t\t\t\t\"y\": 0.276639\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.502871,\n\t\t\t\t\"y\": 0.275864\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.485949,\n\t\t\t\t\"y\": 0.276255\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.469084,\n\t\t\t\t\"y\": 0.277707\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.452319,\n\t\t\t\t\"y\": 0.280058\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.435686,\n\t\t\t\t\"y\": 0.283209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.41921,\n\t\t\t\t\"y\": 0.287104\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.40292,\n\t\t\t\t\"y\": 0.29172\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.386852,\n\t\t\t\t\"y\": 0.297057\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.371052,\n\t\t\t\t\"y\": 0.303144\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.355588,\n\t\t\t\t\"y\": 0.310044\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.340567,\n\t\t\t\t\"y\": 0.317862\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.326173,\n\t\t\t\t\"y\": 0.326782\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t]\n\t},\n\t\"upside_down_face\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.826179,\n\t\t\t\t\"y\": 0.632958\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818519,\n\t\t\t\t\"y\": 0.639386\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.810591,\n\t\t\t\t\"y\": 0.645481\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.802412,\n\t\t\t\t\"y\": 0.651231\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.793995,\n\t\t\t\t\"y\": 0.656626\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.785355,\n\t\t\t\t\"y\": 0.661655\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.776509,\n\t\t\t\t\"y\": 0.666311\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767473,\n\t\t\t\t\"y\": 0.670584\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.758263,\n\t\t\t\t\"y\": 0.674466\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.748896,\n\t\t\t\t\"y\": 0.677951\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.739389,\n\t\t\t\t\"y\": 0.681032\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.72976,\n\t\t\t\t\"y\": 0.683704\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.720025,\n\t\t\t\t\"y\": 0.685961\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.710203,\n\t\t\t\t\"y\": 0.6878\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.700312,\n\t\t\t\t\"y\": 0.689217\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.690369,\n\t\t\t\t\"y\": 0.690209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.680393,\n\t\t\t\t\"y\": 0.690775\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.670402,\n\t\t\t\t\"y\": 0.690914\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.660415,\n\t\t\t\t\"y\": 0.690625\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.650448,\n\t\t\t\t\"y\": 0.68991\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.640522,\n\t\t\t\t\"y\": 0.688768\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.630653,\n\t\t\t\t\"y\": 0.687204\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.620859,\n\t\t\t\t\"y\": 0.685218\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.611228,\n\t\t\t\t\"y\": 0.682857\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.618124,\n\t\t\t\t\"y\": 0.690099\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.625575,\n\t\t\t\t\"y\": 0.696767\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.633532,\n\t\t\t\t\"y\": 0.702819\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.641945,\n\t\t\t\t\"y\": 0.708218\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.65076,\n\t\t\t\t\"y\": 0.712927\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.659921,\n\t\t\t\t\"y\": 0.716919\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.669371,\n\t\t\t\t\"y\": 0.720166\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.679049,\n\t\t\t\t\"y\": 0.722649\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.688893,\n\t\t\t\t\"y\": 0.724352\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.698841,\n\t\t\t\t\"y\": 0.725264\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.708831,\n\t\t\t\t\"y\": 0.72538\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.718797,\n\t\t\t\t\"y\": 0.724697\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.728678,\n\t\t\t\t\"y\": 0.723222\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.73841,\n\t\t\t\t\"y\": 0.720963\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.747932,\n\t\t\t\t\"y\": 0.717934\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.757183,\n\t\t\t\t\"y\": 0.714155\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.766104,\n\t\t\t\t\"y\": 0.70965\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.774638,\n\t\t\t\t\"y\": 0.704447\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.782732,\n\t\t\t\t\"y\": 0.69858\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.790334,\n\t\t\t\t\"y\": 0.692086\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.797396,\n\t\t\t\t\"y\": 0.685005\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.803872,\n\t\t\t\t\"y\": 0.677384\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.809722,\n\t\t\t\t\"y\": 0.66927\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.814908,\n\t\t\t\t\"y\": 0.660714\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.819398,\n\t\t\t\t\"y\": 0.651773\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.823163,\n\t\t\t\t\"y\": 0.642501\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.173821,\n\t\t\t\t\"y\": 0.632958\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181481,\n\t\t\t\t\"y\": 0.639386\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.189409,\n\t\t\t\t\"y\": 0.645481\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.197588,\n\t\t\t\t\"y\": 0.651231\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.206005,\n\t\t\t\t\"y\": 0.656626\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.214645,\n\t\t\t\t\"y\": 0.661655\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.223491,\n\t\t\t\t\"y\": 0.666311\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232527,\n\t\t\t\t\"y\": 0.670584\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.241737,\n\t\t\t\t\"y\": 0.674466\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.251104,\n\t\t\t\t\"y\": 0.677951\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.260611,\n\t\t\t\t\"y\": 0.681032\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.27024,\n\t\t\t\t\"y\": 0.683704\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.279975,\n\t\t\t\t\"y\": 0.685961\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.289797,\n\t\t\t\t\"y\": 0.6878\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.299688,\n\t\t\t\t\"y\": 0.689217\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.309631,\n\t\t\t\t\"y\": 0.690209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.319607,\n\t\t\t\t\"y\": 0.690775\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.329598,\n\t\t\t\t\"y\": 0.690914\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.339585,\n\t\t\t\t\"y\": 0.690625\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.349552,\n\t\t\t\t\"y\": 0.68991\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.359478,\n\t\t\t\t\"y\": 0.688768\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.369347,\n\t\t\t\t\"y\": 0.687204\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.379141,\n\t\t\t\t\"y\": 0.685218\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.388772,\n\t\t\t\t\"y\": 0.682857\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.381876,\n\t\t\t\t\"y\": 0.690099\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.374425,\n\t\t\t\t\"y\": 0.696767\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.366468,\n\t\t\t\t\"y\": 0.702819\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.358055,\n\t\t\t\t\"y\": 0.708218\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.34924,\n\t\t\t\t\"y\": 0.712927\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.340079,\n\t\t\t\t\"y\": 0.716919\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.330629,\n\t\t\t\t\"y\": 0.720166\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.320951,\n\t\t\t\t\"y\": 0.722649\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.311107,\n\t\t\t\t\"y\": 0.724352\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.301159,\n\t\t\t\t\"y\": 0.725264\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.291169,\n\t\t\t\t\"y\": 0.72538\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.281203,\n\t\t\t\t\"y\": 0.724697\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.271322,\n\t\t\t\t\"y\": 0.723222\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.26159,\n\t\t\t\t\"y\": 0.720963\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.252068,\n\t\t\t\t\"y\": 0.717934\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.242817,\n\t\t\t\t\"y\": 0.714155\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.233896,\n\t\t\t\t\"y\": 0.70965\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.225362,\n\t\t\t\t\"y\": 0.704447\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.217268,\n\t\t\t\t\"y\": 0.69858\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.209666,\n\t\t\t\t\"y\": 0.692086\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.202604,\n\t\t\t\t\"y\": 0.685005\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.196128,\n\t\t\t\t\"y\": 0.677384\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.190278,\n\t\t\t\t\"y\": 0.66927\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.185092,\n\t\t\t\t\"y\": 0.660714\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.180602,\n\t\t\t\t\"y\": 0.651773\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.176837,\n\t\t\t\t\"y\": 0.642501\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.762083,\n\t\t\t\t\"y\": 0.481681\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.754616,\n\t\t\t\t\"y\": 0.486573\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.746893,\n\t\t\t\t\"y\": 0.491049\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.738951,\n\t\t\t\t\"y\": 0.495122\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.730823,\n\t\t\t\t\"y\": 0.498809\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.722538,\n\t\t\t\t\"y\": 0.502124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.714119,\n\t\t\t\t\"y\": 0.505085\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.705589,\n\t\t\t\t\"y\": 0.507703\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.696964,\n\t\t\t\t\"y\": 0.509995\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.688263,\n\t\t\t\t\"y\": 0.511972\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.679499,\n\t\t\t\t\"y\": 0.513645\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.670683,\n\t\t\t\t\"y\": 0.515027\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.661829,\n\t\t\t\t\"y\": 0.516126\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.652945,\n\t\t\t\t\"y\": 0.516952\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.64404,\n\t\t\t\t\"y\": 0.517514\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.635123,\n\t\t\t\t\"y\": 0.517817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.626201,\n\t\t\t\t\"y\": 0.517871\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.61728,\n\t\t\t\t\"y\": 0.517679\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.608368,\n\t\t\t\t\"y\": 0.517248\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.599471,\n\t\t\t\t\"y\": 0.516582\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.590593,\n\t\t\t\t\"y\": 0.515686\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.581741,\n\t\t\t\t\"y\": 0.514562\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.572921,\n\t\t\t\t\"y\": 0.513215\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.564787,\n\t\t\t\t\"y\": 0.512129\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.569635,\n\t\t\t\t\"y\": 0.519622\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.57562,\n\t\t\t\t\"y\": 0.526241\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.582493,\n\t\t\t\t\"y\": 0.531931\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.590028,\n\t\t\t\t\"y\": 0.53671\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.598042,\n\t\t\t\t\"y\": 0.540631\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606395,\n\t\t\t\t\"y\": 0.543767\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.614981,\n\t\t\t\t\"y\": 0.546189\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.623725,\n\t\t\t\t\"y\": 0.547962\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.632568,\n\t\t\t\t\"y\": 0.549145\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.641466,\n\t\t\t\t\"y\": 0.549786\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.650386,\n\t\t\t\t\"y\": 0.549927\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.659302,\n\t\t\t\t\"y\": 0.549603\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.668187,\n\t\t\t\t\"y\": 0.548792\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.677025,\n\t\t\t\t\"y\": 0.547569\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.685801,\n\t\t\t\t\"y\": 0.545959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.69449,\n\t\t\t\t\"y\": 0.54393\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.703059,\n\t\t\t\t\"y\": 0.541442\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.711466,\n\t\t\t\t\"y\": 0.538451\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.719654,\n\t\t\t\t\"y\": 0.534905\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.72755,\n\t\t\t\t\"y\": 0.530745\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.735051,\n\t\t\t\t\"y\": 0.52591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.742022,\n\t\t\t\t\"y\": 0.520337\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.74829,\n\t\t\t\t\"y\": 0.513982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.75364,\n\t\t\t\t\"y\": 0.506837\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.757843,\n\t\t\t\t\"y\": 0.498962\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.760695,\n\t\t\t\t\"y\": 0.490501\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.237917,\n\t\t\t\t\"y\": 0.481681\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.245384,\n\t\t\t\t\"y\": 0.486573\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.253107,\n\t\t\t\t\"y\": 0.491049\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.261049,\n\t\t\t\t\"y\": 0.495122\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.269177,\n\t\t\t\t\"y\": 0.498809\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.277462,\n\t\t\t\t\"y\": 0.502124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.285881,\n\t\t\t\t\"y\": 0.505085\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.294411,\n\t\t\t\t\"y\": 0.507703\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.303036,\n\t\t\t\t\"y\": 0.509995\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.311737,\n\t\t\t\t\"y\": 0.511972\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.320501,\n\t\t\t\t\"y\": 0.513645\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.329317,\n\t\t\t\t\"y\": 0.515027\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.338171,\n\t\t\t\t\"y\": 0.516126\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.347055,\n\t\t\t\t\"y\": 0.516952\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.35596,\n\t\t\t\t\"y\": 0.517514\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.364877,\n\t\t\t\t\"y\": 0.517817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.373799,\n\t\t\t\t\"y\": 0.517871\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.38272,\n\t\t\t\t\"y\": 0.517679\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.391632,\n\t\t\t\t\"y\": 0.517248\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.400529,\n\t\t\t\t\"y\": 0.516582\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.409407,\n\t\t\t\t\"y\": 0.515686\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.418259,\n\t\t\t\t\"y\": 0.514562\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.427079,\n\t\t\t\t\"y\": 0.513215\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.435213,\n\t\t\t\t\"y\": 0.512129\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.430365,\n\t\t\t\t\"y\": 0.519622\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.42438,\n\t\t\t\t\"y\": 0.526241\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.417507,\n\t\t\t\t\"y\": 0.531931\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.409972,\n\t\t\t\t\"y\": 0.53671\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.401958,\n\t\t\t\t\"y\": 0.540631\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.393605,\n\t\t\t\t\"y\": 0.543767\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.385019,\n\t\t\t\t\"y\": 0.546189\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.376275,\n\t\t\t\t\"y\": 0.547962\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.367432,\n\t\t\t\t\"y\": 0.549145\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.358534,\n\t\t\t\t\"y\": 0.549786\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.349614,\n\t\t\t\t\"y\": 0.549927\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.340698,\n\t\t\t\t\"y\": 0.549603\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.331813,\n\t\t\t\t\"y\": 0.548792\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.322975,\n\t\t\t\t\"y\": 0.547569\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.314199,\n\t\t\t\t\"y\": 0.545959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.30551,\n\t\t\t\t\"y\": 0.54393\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.296941,\n\t\t\t\t\"y\": 0.541442\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.288534,\n\t\t\t\t\"y\": 0.538451\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.280346,\n\t\t\t\t\"y\": 0.534905\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.27245,\n\t\t\t\t\"y\": 0.530745\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.264949,\n\t\t\t\t\"y\": 0.52591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.257978,\n\t\t\t\t\"y\": 0.520337\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.25171,\n\t\t\t\t\"y\": 0.513982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.24636,\n\t\t\t\t\"y\": 0.506837\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.242157,\n\t\t\t\t\"y\": 0.498962\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.239305,\n\t\t\t\t\"y\": 0.490501\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.437209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 3.4834e-10\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.437209\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.389789,\n\t\t\t\t\"y\": 0.263318\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.392696,\n\t\t\t\t\"y\": 0.2535\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.39717,\n\t\t\t\t\"y\": 0.244289\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.402912,\n\t\t\t\t\"y\": 0.23581\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.409665,\n\t\t\t\t\"y\": 0.228113\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.417222,\n\t\t\t\t\"y\": 0.221206\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.425422,\n\t\t\t\t\"y\": 0.215077\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.434138,\n\t\t\t\t\"y\": 0.209709\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.44327,\n\t\t\t\t\"y\": 0.205087\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.452736,\n\t\t\t\t\"y\": 0.201197\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.462468,\n\t\t\t\t\"y\": 0.198033\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.472407,\n\t\t\t\t\"y\": 0.195597\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.482497,\n\t\t\t\t\"y\": 0.193897\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.492684,\n\t\t\t\t\"y\": 0.192949\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.502914,\n\t\t\t\t\"y\": 0.192779\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.513127,\n\t\t\t\t\"y\": 0.193396\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.523265,\n\t\t\t\t\"y\": 0.194775\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.533276,\n\t\t\t\t\"y\": 0.196895\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.543104,\n\t\t\t\t\"y\": 0.199746\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.552692,\n\t\t\t\t\"y\": 0.203323\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.561977,\n\t\t\t\t\"y\": 0.207629\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.570883,\n\t\t\t\t\"y\": 0.212674\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.579319,\n\t\t\t\t\"y\": 0.218473\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.58717,\n\t\t\t\t\"y\": 0.225044\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.594292,\n\t\t\t\t\"y\": 0.2324\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.600498,\n\t\t\t\t\"y\": 0.240545\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.605552,\n\t\t\t\t\"y\": 0.249451\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.609172,\n\t\t\t\t\"y\": 0.25903\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.605349,\n\t\t\t\t\"y\": 0.2601\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.596354,\n\t\t\t\t\"y\": 0.255216\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.587004,\n\t\t\t\t\"y\": 0.251052\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.577426,\n\t\t\t\t\"y\": 0.247444\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.567685,\n\t\t\t\t\"y\": 0.244303\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.55782,\n\t\t\t\t\"y\": 0.241577\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.547856,\n\t\t\t\t\"y\": 0.239242\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.53781,\n\t\t\t\t\"y\": 0.23729\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.527696,\n\t\t\t\t\"y\": 0.235727\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.517527,\n\t\t\t\t\"y\": 0.234581\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.507317,\n\t\t\t\t\"y\": 0.2339\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.497086,\n\t\t\t\t\"y\": 0.23377\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.486863,\n\t\t\t\t\"y\": 0.234227\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.476675,\n\t\t\t\t\"y\": 0.235181\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.466536,\n\t\t\t\t\"y\": 0.236568\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.456459,\n\t\t\t\t\"y\": 0.238355\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.446458,\n\t\t\t\t\"y\": 0.240525\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.436547,\n\t\t\t\t\"y\": 0.24308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.426749,\n\t\t\t\t\"y\": 0.246038\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.417095,\n\t\t\t\t\"y\": 0.249437\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.407636,\n\t\t\t\t\"y\": 0.253347\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.398466,\n\t\t\t\t\"y\": 0.257894\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t]\n\t},\n\t\"relaxed\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.826179,\n\t\t\t\t\"y\": 0.632958\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818519,\n\t\t\t\t\"y\": 0.639386\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.810591,\n\t\t\t\t\"y\": 0.645481\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.802412,\n\t\t\t\t\"y\": 0.651231\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.793995,\n\t\t\t\t\"y\": 0.656626\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.785355,\n\t\t\t\t\"y\": 0.661655\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.776509,\n\t\t\t\t\"y\": 0.666311\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767473,\n\t\t\t\t\"y\": 0.670584\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.758263,\n\t\t\t\t\"y\": 0.674466\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.748896,\n\t\t\t\t\"y\": 0.677951\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.739389,\n\t\t\t\t\"y\": 0.681032\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.72976,\n\t\t\t\t\"y\": 0.683704\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.720025,\n\t\t\t\t\"y\": 0.685961\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.710203,\n\t\t\t\t\"y\": 0.6878\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.700312,\n\t\t\t\t\"y\": 0.689217\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.690369,\n\t\t\t\t\"y\": 0.690209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.680393,\n\t\t\t\t\"y\": 0.690775\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.670402,\n\t\t\t\t\"y\": 0.690914\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.660415,\n\t\t\t\t\"y\": 0.690625\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.650448,\n\t\t\t\t\"y\": 0.68991\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.640522,\n\t\t\t\t\"y\": 0.688768\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.630653,\n\t\t\t\t\"y\": 0.687204\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.620859,\n\t\t\t\t\"y\": 0.685218\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.611228,\n\t\t\t\t\"y\": 0.682857\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.618124,\n\t\t\t\t\"y\": 0.690099\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.625575,\n\t\t\t\t\"y\": 0.696767\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.633532,\n\t\t\t\t\"y\": 0.702819\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.641945,\n\t\t\t\t\"y\": 0.708218\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.65076,\n\t\t\t\t\"y\": 0.712927\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.659921,\n\t\t\t\t\"y\": 0.716919\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.669371,\n\t\t\t\t\"y\": 0.720166\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.679049,\n\t\t\t\t\"y\": 0.722649\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.688893,\n\t\t\t\t\"y\": 0.724352\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.698841,\n\t\t\t\t\"y\": 0.725264\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.708831,\n\t\t\t\t\"y\": 0.72538\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.718797,\n\t\t\t\t\"y\": 0.724697\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.728678,\n\t\t\t\t\"y\": 0.723222\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.73841,\n\t\t\t\t\"y\": 0.720963\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.747932,\n\t\t\t\t\"y\": 0.717934\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.757183,\n\t\t\t\t\"y\": 0.714155\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.766104,\n\t\t\t\t\"y\": 0.70965\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.774638,\n\t\t\t\t\"y\": 0.704447\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.782732,\n\t\t\t\t\"y\": 0.69858\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.790334,\n\t\t\t\t\"y\": 0.692086\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.797396,\n\t\t\t\t\"y\": 0.685005\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.803872,\n\t\t\t\t\"y\": 0.677384\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.809722,\n\t\t\t\t\"y\": 0.66927\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.814908,\n\t\t\t\t\"y\": 0.660714\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.819398,\n\t\t\t\t\"y\": 0.651773\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.823163,\n\t\t\t\t\"y\": 0.642501\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.173821,\n\t\t\t\t\"y\": 0.632958\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181481,\n\t\t\t\t\"y\": 0.639386\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.189409,\n\t\t\t\t\"y\": 0.645481\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.197588,\n\t\t\t\t\"y\": 0.651231\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.206005,\n\t\t\t\t\"y\": 0.656626\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.214645,\n\t\t\t\t\"y\": 0.661655\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.223491,\n\t\t\t\t\"y\": 0.666311\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232527,\n\t\t\t\t\"y\": 0.670584\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.241737,\n\t\t\t\t\"y\": 0.674466\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.251104,\n\t\t\t\t\"y\": 0.677951\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.260611,\n\t\t\t\t\"y\": 0.681032\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.27024,\n\t\t\t\t\"y\": 0.683704\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.279975,\n\t\t\t\t\"y\": 0.685961\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.289797,\n\t\t\t\t\"y\": 0.6878\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.299688,\n\t\t\t\t\"y\": 0.689217\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.309631,\n\t\t\t\t\"y\": 0.690209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.319607,\n\t\t\t\t\"y\": 0.690775\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.329598,\n\t\t\t\t\"y\": 0.690914\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.339585,\n\t\t\t\t\"y\": 0.690625\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.349552,\n\t\t\t\t\"y\": 0.68991\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.359478,\n\t\t\t\t\"y\": 0.688768\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.369347,\n\t\t\t\t\"y\": 0.687204\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.379141,\n\t\t\t\t\"y\": 0.685218\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.388772,\n\t\t\t\t\"y\": 0.682857\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.381876,\n\t\t\t\t\"y\": 0.690099\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.374425,\n\t\t\t\t\"y\": 0.696767\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.366468,\n\t\t\t\t\"y\": 0.702819\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.358055,\n\t\t\t\t\"y\": 0.708218\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.34924,\n\t\t\t\t\"y\": 0.712927\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.340079,\n\t\t\t\t\"y\": 0.716919\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.330629,\n\t\t\t\t\"y\": 0.720166\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.320951,\n\t\t\t\t\"y\": 0.722649\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.311107,\n\t\t\t\t\"y\": 0.724352\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.301159,\n\t\t\t\t\"y\": 0.725264\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.291169,\n\t\t\t\t\"y\": 0.72538\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.281203,\n\t\t\t\t\"y\": 0.724697\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.271322,\n\t\t\t\t\"y\": 0.723222\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.26159,\n\t\t\t\t\"y\": 0.720963\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.252068,\n\t\t\t\t\"y\": 0.717934\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.242817,\n\t\t\t\t\"y\": 0.714155\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.233896,\n\t\t\t\t\"y\": 0.70965\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.225362,\n\t\t\t\t\"y\": 0.704447\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.217268,\n\t\t\t\t\"y\": 0.69858\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.209666,\n\t\t\t\t\"y\": 0.692086\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.202604,\n\t\t\t\t\"y\": 0.685005\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.196128,\n\t\t\t\t\"y\": 0.677384\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.190278,\n\t\t\t\t\"y\": 0.66927\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.185092,\n\t\t\t\t\"y\": 0.660714\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.180602,\n\t\t\t\t\"y\": 0.651773\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.176837,\n\t\t\t\t\"y\": 0.642501\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.762083,\n\t\t\t\t\"y\": 0.481681\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.754616,\n\t\t\t\t\"y\": 0.486573\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.746893,\n\t\t\t\t\"y\": 0.491049\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.738951,\n\t\t\t\t\"y\": 0.495122\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.730823,\n\t\t\t\t\"y\": 0.498809\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.722538,\n\t\t\t\t\"y\": 0.502124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.714119,\n\t\t\t\t\"y\": 0.505085\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.705589,\n\t\t\t\t\"y\": 0.507703\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.696964,\n\t\t\t\t\"y\": 0.509995\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.688263,\n\t\t\t\t\"y\": 0.511972\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.679499,\n\t\t\t\t\"y\": 0.513645\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.670683,\n\t\t\t\t\"y\": 0.515027\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.661829,\n\t\t\t\t\"y\": 0.516126\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.652945,\n\t\t\t\t\"y\": 0.516952\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.64404,\n\t\t\t\t\"y\": 0.517514\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.635123,\n\t\t\t\t\"y\": 0.517817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.626201,\n\t\t\t\t\"y\": 0.517871\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.61728,\n\t\t\t\t\"y\": 0.517679\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.608368,\n\t\t\t\t\"y\": 0.517248\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.599471,\n\t\t\t\t\"y\": 0.516582\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.590593,\n\t\t\t\t\"y\": 0.515686\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.581741,\n\t\t\t\t\"y\": 0.514562\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.572921,\n\t\t\t\t\"y\": 0.513215\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.564787,\n\t\t\t\t\"y\": 0.512129\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.569635,\n\t\t\t\t\"y\": 0.519622\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.57562,\n\t\t\t\t\"y\": 0.526241\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.582493,\n\t\t\t\t\"y\": 0.531931\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.590028,\n\t\t\t\t\"y\": 0.53671\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.598042,\n\t\t\t\t\"y\": 0.540631\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606395,\n\t\t\t\t\"y\": 0.543767\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.614981,\n\t\t\t\t\"y\": 0.546189\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.623725,\n\t\t\t\t\"y\": 0.547962\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.632568,\n\t\t\t\t\"y\": 0.549145\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.641466,\n\t\t\t\t\"y\": 0.549786\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.650386,\n\t\t\t\t\"y\": 0.549927\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.659302,\n\t\t\t\t\"y\": 0.549603\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.668187,\n\t\t\t\t\"y\": 0.548792\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.677025,\n\t\t\t\t\"y\": 0.547569\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.685801,\n\t\t\t\t\"y\": 0.545959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.69449,\n\t\t\t\t\"y\": 0.54393\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.703059,\n\t\t\t\t\"y\": 0.541442\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.711466,\n\t\t\t\t\"y\": 0.538451\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.719654,\n\t\t\t\t\"y\": 0.534905\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.72755,\n\t\t\t\t\"y\": 0.530745\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.735051,\n\t\t\t\t\"y\": 0.52591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.742022,\n\t\t\t\t\"y\": 0.520337\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.74829,\n\t\t\t\t\"y\": 0.513982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.75364,\n\t\t\t\t\"y\": 0.506837\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.757843,\n\t\t\t\t\"y\": 0.498962\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.760695,\n\t\t\t\t\"y\": 0.490501\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.237917,\n\t\t\t\t\"y\": 0.481681\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.245384,\n\t\t\t\t\"y\": 0.486573\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.253107,\n\t\t\t\t\"y\": 0.491049\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.261049,\n\t\t\t\t\"y\": 0.495122\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.269177,\n\t\t\t\t\"y\": 0.498809\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.277462,\n\t\t\t\t\"y\": 0.502124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.285881,\n\t\t\t\t\"y\": 0.505085\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.294411,\n\t\t\t\t\"y\": 0.507703\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.303036,\n\t\t\t\t\"y\": 0.509995\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.311737,\n\t\t\t\t\"y\": 0.511972\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.320501,\n\t\t\t\t\"y\": 0.513645\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.329317,\n\t\t\t\t\"y\": 0.515027\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.338171,\n\t\t\t\t\"y\": 0.516126\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.347055,\n\t\t\t\t\"y\": 0.516952\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.35596,\n\t\t\t\t\"y\": 0.517514\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.364877,\n\t\t\t\t\"y\": 0.517817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.373799,\n\t\t\t\t\"y\": 0.517871\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.38272,\n\t\t\t\t\"y\": 0.517679\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.391632,\n\t\t\t\t\"y\": 0.517248\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.400529,\n\t\t\t\t\"y\": 0.516582\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.409407,\n\t\t\t\t\"y\": 0.515686\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.418259,\n\t\t\t\t\"y\": 0.514562\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.427079,\n\t\t\t\t\"y\": 0.513215\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.435213,\n\t\t\t\t\"y\": 0.512129\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.430365,\n\t\t\t\t\"y\": 0.519622\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.42438,\n\t\t\t\t\"y\": 0.526241\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.417507,\n\t\t\t\t\"y\": 0.531931\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.409972,\n\t\t\t\t\"y\": 0.53671\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.401958,\n\t\t\t\t\"y\": 0.540631\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.393605,\n\t\t\t\t\"y\": 0.543767\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.385019,\n\t\t\t\t\"y\": 0.546189\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.376275,\n\t\t\t\t\"y\": 0.547962\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.367432,\n\t\t\t\t\"y\": 0.549145\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.358534,\n\t\t\t\t\"y\": 0.549786\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.349614,\n\t\t\t\t\"y\": 0.549927\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.340698,\n\t\t\t\t\"y\": 0.549603\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.331813,\n\t\t\t\t\"y\": 0.548792\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.322975,\n\t\t\t\t\"y\": 0.547569\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.314199,\n\t\t\t\t\"y\": 0.545959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.30551,\n\t\t\t\t\"y\": 0.54393\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.296941,\n\t\t\t\t\"y\": 0.541442\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.288534,\n\t\t\t\t\"y\": 0.538451\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.280346,\n\t\t\t\t\"y\": 0.534905\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.27245,\n\t\t\t\t\"y\": 0.530745\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.264949,\n\t\t\t\t\"y\": 0.52591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.257978,\n\t\t\t\t\"y\": 0.520337\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.25171,\n\t\t\t\t\"y\": 0.513982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.24636,\n\t\t\t\t\"y\": 0.506837\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.242157,\n\t\t\t\t\"y\": 0.498962\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.239305,\n\t\t\t\t\"y\": 0.490501\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.437209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 3.4834e-10\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.437209\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.389789,\n\t\t\t\t\"y\": 0.263318\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.392696,\n\t\t\t\t\"y\": 0.2535\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.39717,\n\t\t\t\t\"y\": 0.244289\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.402912,\n\t\t\t\t\"y\": 0.23581\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.409665,\n\t\t\t\t\"y\": 0.228113\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.417222,\n\t\t\t\t\"y\": 0.221206\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.425422,\n\t\t\t\t\"y\": 0.215077\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.434138,\n\t\t\t\t\"y\": 0.209709\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.44327,\n\t\t\t\t\"y\": 0.205087\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.452736,\n\t\t\t\t\"y\": 0.201197\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.462468,\n\t\t\t\t\"y\": 0.198033\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.472407,\n\t\t\t\t\"y\": 0.195597\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.482497,\n\t\t\t\t\"y\": 0.193897\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.492684,\n\t\t\t\t\"y\": 0.192949\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.502914,\n\t\t\t\t\"y\": 0.192779\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.513127,\n\t\t\t\t\"y\": 0.193396\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.523265,\n\t\t\t\t\"y\": 0.194775\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.533276,\n\t\t\t\t\"y\": 0.196895\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.543104,\n\t\t\t\t\"y\": 0.199746\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.552692,\n\t\t\t\t\"y\": 0.203323\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.561977,\n\t\t\t\t\"y\": 0.207629\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.570883,\n\t\t\t\t\"y\": 0.212674\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.579319,\n\t\t\t\t\"y\": 0.218473\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.58717,\n\t\t\t\t\"y\": 0.225044\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.594292,\n\t\t\t\t\"y\": 0.2324\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.600498,\n\t\t\t\t\"y\": 0.240545\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.605552,\n\t\t\t\t\"y\": 0.249451\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.609172,\n\t\t\t\t\"y\": 0.25903\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.605349,\n\t\t\t\t\"y\": 0.2601\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.596354,\n\t\t\t\t\"y\": 0.255216\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.587004,\n\t\t\t\t\"y\": 0.251052\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.577426,\n\t\t\t\t\"y\": 0.247444\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.567685,\n\t\t\t\t\"y\": 0.244303\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.55782,\n\t\t\t\t\"y\": 0.241577\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.547856,\n\t\t\t\t\"y\": 0.239242\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.53781,\n\t\t\t\t\"y\": 0.23729\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.527696,\n\t\t\t\t\"y\": 0.235727\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.517527,\n\t\t\t\t\"y\": 0.234581\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.507317,\n\t\t\t\t\"y\": 0.2339\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.497086,\n\t\t\t\t\"y\": 0.23377\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.486863,\n\t\t\t\t\"y\": 0.234227\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.476675,\n\t\t\t\t\"y\": 0.235181\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.466536,\n\t\t\t\t\"y\": 0.236568\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.456459,\n\t\t\t\t\"y\": 0.238355\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.446458,\n\t\t\t\t\"y\": 0.240525\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.436547,\n\t\t\t\t\"y\": 0.24308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.426749,\n\t\t\t\t\"y\": 0.246038\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.417095,\n\t\t\t\t\"y\": 0.249437\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.407636,\n\t\t\t\t\"y\": 0.253347\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.398466,\n\t\t\t\t\"y\": 0.257894\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t]\n\t},\n\t\"blush\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.70555,\n\t\t\t\t\"y\": 0.520267\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.701936,\n\t\t\t\t\"y\": 0.529953\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.696774,\n\t\t\t\t\"y\": 0.538911\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.690373,\n\t\t\t\t\"y\": 0.54703\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.682963,\n\t\t\t\t\"y\": 0.554237\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.674716,\n\t\t\t\t\"y\": 0.560466\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.665771,\n\t\t\t\t\"y\": 0.565638\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.656253,\n\t\t\t\t\"y\": 0.569651\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.646288,\n\t\t\t\t\"y\": 0.572363\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.636037,\n\t\t\t\t\"y\": 0.573582\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.625723,\n\t\t\t\t\"y\": 0.573137\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.615594,\n\t\t\t\t\"y\": 0.571135\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.605842,\n\t\t\t\t\"y\": 0.567734\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.596632,\n\t\t\t\t\"y\": 0.563054\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.588125,\n\t\t\t\t\"y\": 0.557189\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.580497,\n\t\t\t\t\"y\": 0.550216\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.573962,\n\t\t\t\t\"y\": 0.542208\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.568789,\n\t\t\t\t\"y\": 0.533259\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.565802,\n\t\t\t\t\"y\": 0.527088\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.566119,\n\t\t\t\t\"y\": 0.537437\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.566843,\n\t\t\t\t\"y\": 0.547765\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.567983,\n\t\t\t\t\"y\": 0.558055\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.569553,\n\t\t\t\t\"y\": 0.568289\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.571573,\n\t\t\t\t\"y\": 0.578442\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.574073,\n\t\t\t\t\"y\": 0.588488\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.577086,\n\t\t\t\t\"y\": 0.598391\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.580662,\n\t\t\t\t\"y\": 0.608104\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.584861,\n\t\t\t\t\"y\": 0.617563\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.589761,\n\t\t\t\t\"y\": 0.626676\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.595462,\n\t\t\t\t\"y\": 0.635307\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.602083,\n\t\t\t\t\"y\": 0.643248\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.609751,\n\t\t\t\t\"y\": 0.650173\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.61854,\n\t\t\t\t\"y\": 0.655584\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.628329,\n\t\t\t\t\"y\": 0.658811\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.638618,\n\t\t\t\t\"y\": 0.65925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.648629,\n\t\t\t\t\"y\": 0.656811\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.657758,\n\t\t\t\t\"y\": 0.652002\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.665791,\n\t\t\t\t\"y\": 0.645509\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.672766,\n\t\t\t\t\"y\": 0.637879\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.678799,\n\t\t\t\t\"y\": 0.629478\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.68401,\n\t\t\t\t\"y\": 0.620541\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.688502,\n\t\t\t\t\"y\": 0.611218\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.692357,\n\t\t\t\t\"y\": 0.601613\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.695638,\n\t\t\t\t\"y\": 0.591796\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.698397,\n\t\t\t\t\"y\": 0.581819\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.70067,\n\t\t\t\t\"y\": 0.571719\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.702488,\n\t\t\t\t\"y\": 0.561527\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.703872,\n\t\t\t\t\"y\": 0.551267\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.704837,\n\t\t\t\t\"y\": 0.540958\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.705395,\n\t\t\t\t\"y\": 0.53062\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.296293,\n\t\t\t\t\"y\": 0.52607\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.299728,\n\t\t\t\t\"y\": 0.534177\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.305049,\n\t\t\t\t\"y\": 0.543039\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.311702,\n\t\t\t\t\"y\": 0.550949\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.319426,\n\t\t\t\t\"y\": 0.557816\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.328009,\n\t\t\t\t\"y\": 0.563568\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.337279,\n\t\t\t\t\"y\": 0.568126\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.347076,\n\t\t\t\t\"y\": 0.571396\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.357233,\n\t\t\t\t\"y\": 0.573252\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.367552,\n\t\t\t\t\"y\": 0.573535\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.377784,\n\t\t\t\t\"y\": 0.572159\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.387711,\n\t\t\t\t\"y\": 0.569311\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.397178,\n\t\t\t\t\"y\": 0.565179\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.40606,\n\t\t\t\t\"y\": 0.559899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.414231,\n\t\t\t\t\"y\": 0.553571\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.421551,\n\t\t\t\t\"y\": 0.546271\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.427841,\n\t\t\t\t\"y\": 0.538066\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.432865,\n\t\t\t\t\"y\": 0.52903\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.436052,\n\t\t\t\t\"y\": 0.521285\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.435858,\n\t\t\t\t\"y\": 0.531637\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.435261,\n\t\t\t\t\"y\": 0.541973\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.434255,\n\t\t\t\t\"y\": 0.552278\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.432829,\n\t\t\t\t\"y\": 0.562532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.430968,\n\t\t\t\t\"y\": 0.572716\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.428648,\n\t\t\t\t\"y\": 0.582805\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.42584,\n\t\t\t\t\"y\": 0.592769\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.422504,\n\t\t\t\t\"y\": 0.602568\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.41859,\n\t\t\t\t\"y\": 0.612149\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.414031,\n\t\t\t\t\"y\": 0.621438\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.408744,\n\t\t\t\t\"y\": 0.630331\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.402624,\n\t\t\t\t\"y\": 0.638668\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.39555,\n\t\t\t\t\"y\": 0.646205\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.387408,\n\t\t\t\t\"y\": 0.65256\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.378178,\n\t\t\t\t\"y\": 0.657167\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.368106,\n\t\t\t\t\"y\": 0.659338\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.357833,\n\t\t\t\t\"y\": 0.65861\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.348127,\n\t\t\t\t\"y\": 0.655137\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.339448,\n\t\t\t\t\"y\": 0.64955\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.331888,\n\t\t\t\t\"y\": 0.642506\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.325363,\n\t\t\t\t\"y\": 0.634485\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.319746,\n\t\t\t\t\"y\": 0.625799\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.314919,\n\t\t\t\t\"y\": 0.616647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.310784,\n\t\t\t\t\"y\": 0.607159\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.307266,\n\t\t\t\t\"y\": 0.597425\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.304305,\n\t\t\t\t\"y\": 0.587506\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.301854,\n\t\t\t\t\"y\": 0.577448\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.299879,\n\t\t\t\t\"y\": 0.567286\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.298352,\n\t\t\t\t\"y\": 0.557046\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.297254,\n\t\t\t\t\"y\": 0.546751\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.29657,\n\t\t\t\t\"y\": 0.53642\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.437209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 3.4834e-10\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.437209\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.312763,\n\t\t\t\t\"y\": 0.337119\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.316114,\n\t\t\t\t\"y\": 0.320601\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.324841,\n\t\t\t\t\"y\": 0.306135\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.336783,\n\t\t\t\t\"y\": 0.29415\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.350547,\n\t\t\t\t\"y\": 0.284296\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.365396,\n\t\t\t\t\"y\": 0.276165\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.380935,\n\t\t\t\t\"y\": 0.269444\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.396935,\n\t\t\t\t\"y\": 0.26391\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.413255,\n\t\t\t\t\"y\": 0.259408\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.429801,\n\t\t\t\t\"y\": 0.255826\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.446506,\n\t\t\t\t\"y\": 0.253085\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.463322,\n\t\t\t\t\"y\": 0.251129\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.480207,\n\t\t\t\t\"y\": 0.249922\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.497129,\n\t\t\t\t\"y\": 0.24944\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.514056,\n\t\t\t\t\"y\": 0.249678\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.530957,\n\t\t\t\t\"y\": 0.250637\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5478,\n\t\t\t\t\"y\": 0.252336\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.564548,\n\t\t\t\t\"y\": 0.254806\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.581154,\n\t\t\t\t\"y\": 0.258095\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.59756,\n\t\t\t\t\"y\": 0.262274\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.613682,\n\t\t\t\t\"y\": 0.267443\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.629397,\n\t\t\t\t\"y\": 0.27374\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.644514,\n\t\t\t\t\"y\": 0.281363\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.658706,\n\t\t\t\t\"y\": 0.290591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.671382,\n\t\t\t\t\"y\": 0.301804\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.68141,\n\t\t\t\t\"y\": 0.315413\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.686836,\n\t\t\t\t\"y\": 0.331384\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.678513,\n\t\t\t\t\"y\": 0.330108\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.664398,\n\t\t\t\t\"y\": 0.320752\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.649564,\n\t\t\t\t\"y\": 0.312585\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.634235,\n\t\t\t\t\"y\": 0.305389\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.61854,\n\t\t\t\t\"y\": 0.299035\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.602557,\n\t\t\t\t\"y\": 0.293448\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.586338,\n\t\t\t\t\"y\": 0.28859\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.569922,\n\t\t\t\t\"y\": 0.284448\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.553339,\n\t\t\t\t\"y\": 0.28104\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.536615,\n\t\t\t\t\"y\": 0.27841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.51978,\n\t\t\t\t\"y\": 0.276639\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.502871,\n\t\t\t\t\"y\": 0.275864\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.485949,\n\t\t\t\t\"y\": 0.276255\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.469084,\n\t\t\t\t\"y\": 0.277707\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.452319,\n\t\t\t\t\"y\": 0.280058\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.435686,\n\t\t\t\t\"y\": 0.283209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.41921,\n\t\t\t\t\"y\": 0.287104\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.40292,\n\t\t\t\t\"y\": 0.29172\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.386852,\n\t\t\t\t\"y\": 0.297057\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.371052,\n\t\t\t\t\"y\": 0.303144\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.355588,\n\t\t\t\t\"y\": 0.310044\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.340567,\n\t\t\t\t\"y\": 0.317862\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.326173,\n\t\t\t\t\"y\": 0.326782\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t]\n\t},\n\t\"yum\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.76752,\n\t\t\t\t\"y\": 0.514546\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.762982,\n\t\t\t\t\"y\": 0.526706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.756502,\n\t\t\t\t\"y\": 0.537953\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.748466,\n\t\t\t\t\"y\": 0.548146\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.739163,\n\t\t\t\t\"y\": 0.557194\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.728809,\n\t\t\t\t\"y\": 0.565014\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.717579,\n\t\t\t\t\"y\": 0.571508\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.705629,\n\t\t\t\t\"y\": 0.576546\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.693118,\n\t\t\t\t\"y\": 0.579951\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.680248,\n\t\t\t\t\"y\": 0.581482\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.6673,\n\t\t\t\t\"y\": 0.580923\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654582,\n\t\t\t\t\"y\": 0.578409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.642339,\n\t\t\t\t\"y\": 0.574139\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.630776,\n\t\t\t\t\"y\": 0.568263\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.620095,\n\t\t\t\t\"y\": 0.560901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.610519,\n\t\t\t\t\"y\": 0.552146\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.602314,\n\t\t\t\t\"y\": 0.542093\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.595819,\n\t\t\t\t\"y\": 0.530857\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.592069,\n\t\t\t\t\"y\": 0.523109\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.592468,\n\t\t\t\t\"y\": 0.536102\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593377,\n\t\t\t\t\"y\": 0.549069\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.594807,\n\t\t\t\t\"y\": 0.561988\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.596778,\n\t\t\t\t\"y\": 0.574836\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.599315,\n\t\t\t\t\"y\": 0.587584\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.602453,\n\t\t\t\t\"y\": 0.600196\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606237,\n\t\t\t\t\"y\": 0.612629\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.610726,\n\t\t\t\t\"y\": 0.624823\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.615998,\n\t\t\t\t\"y\": 0.636699\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.62215,\n\t\t\t\t\"y\": 0.64814\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.629307,\n\t\t\t\t\"y\": 0.658976\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.63762,\n\t\t\t\t\"y\": 0.668946\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.647246,\n\t\t\t\t\"y\": 0.67764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.658281,\n\t\t\t\t\"y\": 0.684433\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.670571,\n\t\t\t\t\"y\": 0.688484\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.683489,\n\t\t\t\t\"y\": 0.689036\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.696057,\n\t\t\t\t\"y\": 0.685974\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.707518,\n\t\t\t\t\"y\": 0.679937\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.717604,\n\t\t\t\t\"y\": 0.671785\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.726361,\n\t\t\t\t\"y\": 0.662206\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.733934,\n\t\t\t\t\"y\": 0.651658\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.740477,\n\t\t\t\t\"y\": 0.640437\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.746116,\n\t\t\t\t\"y\": 0.628733\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.750956,\n\t\t\t\t\"y\": 0.616674\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.755076,\n\t\t\t\t\"y\": 0.604349\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.758539,\n\t\t\t\t\"y\": 0.591822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.761394,\n\t\t\t\t\"y\": 0.579142\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.763676,\n\t\t\t\t\"y\": 0.566347\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.765413,\n\t\t\t\t\"y\": 0.553465\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.766625,\n\t\t\t\t\"y\": 0.540523\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767325,\n\t\t\t\t\"y\": 0.527543\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.22635,\n\t\t\t\t\"y\": 0.521831\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.230663,\n\t\t\t\t\"y\": 0.532009\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.237343,\n\t\t\t\t\"y\": 0.543136\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.245697,\n\t\t\t\t\"y\": 0.553066\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.255393,\n\t\t\t\t\"y\": 0.561688\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.266169,\n\t\t\t\t\"y\": 0.568909\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.277808,\n\t\t\t\t\"y\": 0.574632\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.290107,\n\t\t\t\t\"y\": 0.578737\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.302859,\n\t\t\t\t\"y\": 0.581068\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.315814,\n\t\t\t\t\"y\": 0.581422\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.32866,\n\t\t\t\t\"y\": 0.579695\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.341123,\n\t\t\t\t\"y\": 0.57612\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.35301,\n\t\t\t\t\"y\": 0.570932\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.364161,\n\t\t\t\t\"y\": 0.564302\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.37442,\n\t\t\t\t\"y\": 0.556358\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.383609,\n\t\t\t\t\"y\": 0.547193\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.391506,\n\t\t\t\t\"y\": 0.536892\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.397814,\n\t\t\t\t\"y\": 0.525548\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.401815,\n\t\t\t\t\"y\": 0.515824\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.401571,\n\t\t\t\t\"y\": 0.52882\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.400821,\n\t\t\t\t\"y\": 0.541797\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.399558,\n\t\t\t\t\"y\": 0.554734\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.397768,\n\t\t\t\t\"y\": 0.567609\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.395431,\n\t\t\t\t\"y\": 0.580395\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.392519,\n\t\t\t\t\"y\": 0.593061\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.388994,\n\t\t\t\t\"y\": 0.60557\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.384806,\n\t\t\t\t\"y\": 0.617872\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.379891,\n\t\t\t\t\"y\": 0.629901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.374168,\n\t\t\t\t\"y\": 0.641564\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.36753,\n\t\t\t\t\"y\": 0.652729\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.359847,\n\t\t\t\t\"y\": 0.663196\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.350966,\n\t\t\t\t\"y\": 0.672659\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.340744,\n\t\t\t\t\"y\": 0.680637\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.329155,\n\t\t\t\t\"y\": 0.686421\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.316511,\n\t\t\t\t\"y\": 0.689147\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.303613,\n\t\t\t\t\"y\": 0.688232\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.291427,\n\t\t\t\t\"y\": 0.683872\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.280531,\n\t\t\t\t\"y\": 0.676858\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.271039,\n\t\t\t\t\"y\": 0.668014\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.262847,\n\t\t\t\t\"y\": 0.657944\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.255795,\n\t\t\t\t\"y\": 0.647038\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.249735,\n\t\t\t\t\"y\": 0.635548\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.244544,\n\t\t\t\t\"y\": 0.623637\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.240127,\n\t\t\t\t\"y\": 0.611416\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.236409,\n\t\t\t\t\"y\": 0.598963\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.233332,\n\t\t\t\t\"y\": 0.586336\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.230852,\n\t\t\t\t\"y\": 0.573577\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.228936,\n\t\t\t\t\"y\": 0.560721\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.227557,\n\t\t\t\t\"y\": 0.547796\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.226699,\n\t\t\t\t\"y\": 0.534825\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.437209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 3.4834e-10\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.437209\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.183352,\n\t\t\t\t\"y\": 0.429053\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.186006,\n\t\t\t\t\"y\": 0.393968\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.193861,\n\t\t\t\t\"y\": 0.359673\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.206616,\n\t\t\t\t\"y\": 0.326887\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.223826,\n\t\t\t\t\"y\": 0.29621\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.244963,\n\t\t\t\t\"y\": 0.268102\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.269472,\n\t\t\t\t\"y\": 0.242887\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.296808,\n\t\t\t\t\"y\": 0.22078\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.326464,\n\t\t\t\t\"y\": 0.201908\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.357976,\n\t\t\t\t\"y\": 0.186343\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.390924,\n\t\t\t\t\"y\": 0.174116\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.424924,\n\t\t\t\t\"y\": 0.165239\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.459624,\n\t\t\t\t\"y\": 0.159713\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.494693,\n\t\t\t\t\"y\": 0.157534\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.529809,\n\t\t\t\t\"y\": 0.158702\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.564655,\n\t\t\t\t\"y\": 0.163217\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.598903,\n\t\t\t\t\"y\": 0.171082\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.632207,\n\t\t\t\t\"y\": 0.182298\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.664194,\n\t\t\t\t\"y\": 0.196857\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.694458,\n\t\t\t\t\"y\": 0.214736\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.722547,\n\t\t\t\t\"y\": 0.235876\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.747965,\n\t\t\t\t\"y\": 0.26017\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.770179,\n\t\t\t\t\"y\": 0.287434\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.788633,\n\t\t\t\t\"y\": 0.317377\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.802785,\n\t\t\t\t\"y\": 0.349582\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.81216,\n\t\t\t\t\"y\": 0.383493\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.816405,\n\t\t\t\t\"y\": 0.41842\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.808187,\n\t\t\t\t\"y\": 0.405986\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.792774,\n\t\t\t\t\"y\": 0.374356\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.773935,\n\t\t\t\t\"y\": 0.344643\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.752091,\n\t\t\t\t\"y\": 0.31707\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.727595,\n\t\t\t\t\"y\": 0.291834\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.700744,\n\t\t\t\t\"y\": 0.269127\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.671806,\n\t\t\t\t\"y\": 0.249162\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.641028,\n\t\t\t\t\"y\": 0.232183\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.608666,\n\t\t\t\t\"y\": 0.218481\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.575004,\n\t\t\t\t\"y\": 0.208408\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.540395,\n\t\t\t\t\"y\": 0.202388\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.505303,\n\t\t\t\t\"y\": 0.200917\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.470178,\n\t\t\t\t\"y\": 0.20144\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.435367,\n\t\t\t\t\"y\": 0.206142\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.401378,\n\t\t\t\t\"y\": 0.215039\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.368591,\n\t\t\t\t\"y\": 0.227684\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.337307,\n\t\t\t\t\"y\": 0.243707\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.307786,\n\t\t\t\t\"y\": 0.262798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.280279,\n\t\t\t\t\"y\": 0.2847\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.255042,\n\t\t\t\t\"y\": 0.309194\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232362,\n\t\t\t\t\"y\": 0.336081\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.212575,\n\t\t\t\t\"y\": 0.365169\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.196078,\n\t\t\t\t\"y\": 0.396247\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.687874,\n\t\t\t\t\"y\": 0.236452\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.699666,\n\t\t\t\t\"y\": 0.225437\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.711679,\n\t\t\t\t\"y\": 0.214665\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.723942,\n\t\t\t\t\"y\": 0.204179\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.736487,\n\t\t\t\t\"y\": 0.194034\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.749351,\n\t\t\t\t\"y\": 0.184299\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.762578,\n\t\t\t\t\"y\": 0.175065\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.776214,\n\t\t\t\t\"y\": 0.166452\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.790307,\n\t\t\t\t\"y\": 0.158613\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.804894,\n\t\t\t\t\"y\": 0.151742\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.819981,\n\t\t\t\t\"y\": 0.146063\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.835521,\n\t\t\t\t\"y\": 0.141787\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.851396,\n\t\t\t\t\"y\": 0.139005\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.867463,\n\t\t\t\t\"y\": 0.13777\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.883559,\n\t\t\t\t\"y\": 0.138441\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.899375,\n\t\t\t\t\"y\": 0.141481\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.914379,\n\t\t\t\t\"y\": 0.147318\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.927855,\n\t\t\t\t\"y\": 0.156126\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.939123,\n\t\t\t\t\"y\": 0.167635\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.94768,\n\t\t\t\t\"y\": 0.18129\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.953382,\n\t\t\t\t\"y\": 0.196375\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.956473,\n\t\t\t\t\"y\": 0.212213\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.957372,\n\t\t\t\t\"y\": 0.228331\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.956502,\n\t\t\t\t\"y\": 0.244455\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.954066,\n\t\t\t\t\"y\": 0.260415\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.949719,\n\t\t\t\t\"y\": 0.275958\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.943372,\n\t\t\t\t\"y\": 0.290795\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.935258,\n\t\t\t\t\"y\": 0.304743\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.92572,\n\t\t\t\t\"y\": 0.317759\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.915083,\n\t\t\t\t\"y\": 0.329892\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.903606,\n\t\t\t\t\"y\": 0.341232\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.891484,\n\t\t\t\t\"y\": 0.351878\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.878858,\n\t\t\t\t\"y\": 0.361921\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.865834,\n\t\t\t\t\"y\": 0.371439\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.852488,\n\t\t\t\t\"y\": 0.380501\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.83888,\n\t\t\t\t\"y\": 0.389161\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.825054,\n\t\t\t\t\"y\": 0.397468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.812899,\n\t\t\t\t\"y\": 0.400722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.807386,\n\t\t\t\t\"y\": 0.385544\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.801029,\n\t\t\t\t\"y\": 0.370702\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.793881,\n\t\t\t\t\"y\": 0.356225\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.785991,\n\t\t\t\t\"y\": 0.34214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.777404,\n\t\t\t\t\"y\": 0.328471\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.768159,\n\t\t\t\t\"y\": 0.315239\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.758296,\n\t\t\t\t\"y\": 0.302463\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.747847,\n\t\t\t\t\"y\": 0.290164\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.736845,\n\t\t\t\t\"y\": 0.278358\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.72532,\n\t\t\t\t\"y\": 0.267065\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.713299,\n\t\t\t\t\"y\": 0.256303\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.700809,\n\t\t\t\t\"y\": 0.246091\n\t\t\t}\n\t\t]\n\t},\n\t\"relieved\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.816256,\n\t\t\t\t\"y\": 0.581522\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.810211,\n\t\t\t\t\"y\": 0.589101\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.80391,\n\t\t\t\t\"y\": 0.596467\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.797364,\n\t\t\t\t\"y\": 0.603616\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.790584,\n\t\t\t\t\"y\": 0.610542\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.78358,\n\t\t\t\t\"y\": 0.617241\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.776363,\n\t\t\t\t\"y\": 0.623708\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.768941,\n\t\t\t\t\"y\": 0.629939\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.761324,\n\t\t\t\t\"y\": 0.635928\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.75352,\n\t\t\t\t\"y\": 0.641671\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.745538,\n\t\t\t\t\"y\": 0.647163\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.737386,\n\t\t\t\t\"y\": 0.652398\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.729072,\n\t\t\t\t\"y\": 0.657371\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.720604,\n\t\t\t\t\"y\": 0.662074\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.711989,\n\t\t\t\t\"y\": 0.666503\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.703236,\n\t\t\t\t\"y\": 0.67065\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.694352,\n\t\t\t\t\"y\": 0.674508\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.685345,\n\t\t\t\t\"y\": 0.678069\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.676224,\n\t\t\t\t\"y\": 0.681326\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.666998,\n\t\t\t\t\"y\": 0.684268\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.657675,\n\t\t\t\t\"y\": 0.686887\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.648265,\n\t\t\t\t\"y\": 0.689173\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.638779,\n\t\t\t\t\"y\": 0.691116\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.629227,\n\t\t\t\t\"y\": 0.692704\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.631408,\n\t\t\t\t\"y\": 0.695876\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.640428,\n\t\t\t\t\"y\": 0.699397\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.649722,\n\t\t\t\t\"y\": 0.702106\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.659213,\n\t\t\t\t\"y\": 0.704016\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.668827,\n\t\t\t\t\"y\": 0.705146\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.678501,\n\t\t\t\t\"y\": 0.705518\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.688175,\n\t\t\t\t\"y\": 0.705156\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.697796,\n\t\t\t\t\"y\": 0.704087\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.707318,\n\t\t\t\t\"y\": 0.702336\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.716696,\n\t\t\t\t\"y\": 0.699927\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.725889,\n\t\t\t\t\"y\": 0.696886\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.734859,\n\t\t\t\t\"y\": 0.693236\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.743568,\n\t\t\t\t\"y\": 0.688999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.75198,\n\t\t\t\t\"y\": 0.684197\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.760059,\n\t\t\t\t\"y\": 0.678853\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767769,\n\t\t\t\t\"y\": 0.672986\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.775072,\n\t\t\t\t\"y\": 0.666618\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.781929,\n\t\t\t\t\"y\": 0.659771\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.788301,\n\t\t\t\t\"y\": 0.652468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.794144,\n\t\t\t\t\"y\": 0.644734\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.799414,\n\t\t\t\t\"y\": 0.636597\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.804064,\n\t\t\t\t\"y\": 0.62809\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.808044,\n\t\t\t\t\"y\": 0.619248\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.811305,\n\t\t\t\t\"y\": 0.610115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.813793,\n\t\t\t\t\"y\": 0.600742\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.815459,\n\t\t\t\t\"y\": 0.591188\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.183744,\n\t\t\t\t\"y\": 0.581522\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.189789,\n\t\t\t\t\"y\": 0.589101\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.19609,\n\t\t\t\t\"y\": 0.596467\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.202636,\n\t\t\t\t\"y\": 0.603616\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.209416,\n\t\t\t\t\"y\": 0.610542\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.21642,\n\t\t\t\t\"y\": 0.617241\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.223637,\n\t\t\t\t\"y\": 0.623708\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.231059,\n\t\t\t\t\"y\": 0.629939\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.238676,\n\t\t\t\t\"y\": 0.635928\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.24648,\n\t\t\t\t\"y\": 0.641671\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.254462,\n\t\t\t\t\"y\": 0.647163\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.262614,\n\t\t\t\t\"y\": 0.652398\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.270928,\n\t\t\t\t\"y\": 0.657371\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.279396,\n\t\t\t\t\"y\": 0.662074\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.288011,\n\t\t\t\t\"y\": 0.666503\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.296764,\n\t\t\t\t\"y\": 0.67065\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.305648,\n\t\t\t\t\"y\": 0.674508\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.314655,\n\t\t\t\t\"y\": 0.678069\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.323776,\n\t\t\t\t\"y\": 0.681326\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.333002,\n\t\t\t\t\"y\": 0.684268\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.342325,\n\t\t\t\t\"y\": 0.686887\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.351735,\n\t\t\t\t\"y\": 0.689173\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.361221,\n\t\t\t\t\"y\": 0.691116\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.370773,\n\t\t\t\t\"y\": 0.692704\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.368592,\n\t\t\t\t\"y\": 0.695876\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.359572,\n\t\t\t\t\"y\": 0.699397\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.350278,\n\t\t\t\t\"y\": 0.702106\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.340787,\n\t\t\t\t\"y\": 0.704016\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.331173,\n\t\t\t\t\"y\": 0.705146\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.321499,\n\t\t\t\t\"y\": 0.705518\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.311825,\n\t\t\t\t\"y\": 0.705156\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.302204,\n\t\t\t\t\"y\": 0.704087\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.292682,\n\t\t\t\t\"y\": 0.702336\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.283304,\n\t\t\t\t\"y\": 0.699927\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.274111,\n\t\t\t\t\"y\": 0.696886\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.265141,\n\t\t\t\t\"y\": 0.693236\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.256432,\n\t\t\t\t\"y\": 0.688999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.24802,\n\t\t\t\t\"y\": 0.684197\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.239941,\n\t\t\t\t\"y\": 0.678853\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232231,\n\t\t\t\t\"y\": 0.672986\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.224928,\n\t\t\t\t\"y\": 0.666618\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.218071,\n\t\t\t\t\"y\": 0.659771\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.211699,\n\t\t\t\t\"y\": 0.652468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.205856,\n\t\t\t\t\"y\": 0.644734\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.200586,\n\t\t\t\t\"y\": 0.636597\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.195936,\n\t\t\t\t\"y\": 0.62809\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.191956,\n\t\t\t\t\"y\": 0.619248\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.188695,\n\t\t\t\t\"y\": 0.610115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.186207,\n\t\t\t\t\"y\": 0.600742\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.184541,\n\t\t\t\t\"y\": 0.591188\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.820635,\n\t\t\t\t\"y\": 0.529788\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.819225,\n\t\t\t\t\"y\": 0.517397\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.815436,\n\t\t\t\t\"y\": 0.505515\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.809586,\n\t\t\t\t\"y\": 0.4945\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.802064,\n\t\t\t\t\"y\": 0.484552\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.793237,\n\t\t\t\t\"y\": 0.475741\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.783411,\n\t\t\t\t\"y\": 0.468062\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.772826,\n\t\t\t\t\"y\": 0.461471\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.761664,\n\t\t\t\t\"y\": 0.455914\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.750067,\n\t\t\t\t\"y\": 0.451335\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.738146,\n\t\t\t\t\"y\": 0.447686\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.725989,\n\t\t\t\t\"y\": 0.444928\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.713668,\n\t\t\t\t\"y\": 0.443029\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.701248,\n\t\t\t\t\"y\": 0.441967\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.688784,\n\t\t\t\t\"y\": 0.44173\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.676332,\n\t\t\t\t\"y\": 0.442312\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.663946,\n\t\t\t\t\"y\": 0.443717\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.651682,\n\t\t\t\t\"y\": 0.445957\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.639606,\n\t\t\t\t\"y\": 0.449053\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.627791,\n\t\t\t\t\"y\": 0.453034\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.616328,\n\t\t\t\t\"y\": 0.457939\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.605329,\n\t\t\t\t\"y\": 0.463812\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.594938,\n\t\t\t\t\"y\": 0.470706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.585341,\n\t\t\t\t\"y\": 0.478671\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.576782,\n\t\t\t\t\"y\": 0.487743\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.569568,\n\t\t\t\t\"y\": 0.497917\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.564067,\n\t\t\t\t\"y\": 0.509111\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.560661,\n\t\t\t\t\"y\": 0.521109\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.559935,\n\t\t\t\t\"y\": 0.532712\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.569394,\n\t\t\t\t\"y\": 0.524652\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.58036,\n\t\t\t\t\"y\": 0.518729\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.591912,\n\t\t\t\t\"y\": 0.514038\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.603774,\n\t\t\t\t\"y\": 0.510197\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.615829,\n\t\t\t\t\"y\": 0.507015\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.628016,\n\t\t\t\t\"y\": 0.504382\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.640298,\n\t\t\t\t\"y\": 0.502236\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.65265,\n\t\t\t\t\"y\": 0.500541\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.665053,\n\t\t\t\t\"y\": 0.499279\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.677493,\n\t\t\t\t\"y\": 0.498449\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.689954,\n\t\t\t\t\"y\": 0.498068\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.702421,\n\t\t\t\t\"y\": 0.498152\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.714877,\n\t\t\t\t\"y\": 0.498685\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.727307,\n\t\t\t\t\"y\": 0.49965\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.739696,\n\t\t\t\t\"y\": 0.50105\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.752025,\n\t\t\t\t\"y\": 0.502903\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.764271,\n\t\t\t\t\"y\": 0.505247\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.776397,\n\t\t\t\t\"y\": 0.508147\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.788343,\n\t\t\t\t\"y\": 0.511716\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.799994,\n\t\t\t\t\"y\": 0.516152\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.811075,\n\t\t\t\t\"y\": 0.521855\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.179365,\n\t\t\t\t\"y\": 0.529788\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.180775,\n\t\t\t\t\"y\": 0.517397\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.184564,\n\t\t\t\t\"y\": 0.505515\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.190414,\n\t\t\t\t\"y\": 0.4945\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.197936,\n\t\t\t\t\"y\": 0.484552\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.206763,\n\t\t\t\t\"y\": 0.475741\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.216589,\n\t\t\t\t\"y\": 0.468062\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.227174,\n\t\t\t\t\"y\": 0.461471\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.238336,\n\t\t\t\t\"y\": 0.455914\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.249933,\n\t\t\t\t\"y\": 0.451335\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.261854,\n\t\t\t\t\"y\": 0.447686\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.274011,\n\t\t\t\t\"y\": 0.444928\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.286332,\n\t\t\t\t\"y\": 0.443029\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.298752,\n\t\t\t\t\"y\": 0.441967\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.311216,\n\t\t\t\t\"y\": 0.44173\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.323668,\n\t\t\t\t\"y\": 0.442312\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.336054,\n\t\t\t\t\"y\": 0.443717\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.348318,\n\t\t\t\t\"y\": 0.445957\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.360394,\n\t\t\t\t\"y\": 0.449053\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.372209,\n\t\t\t\t\"y\": 0.453034\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.383672,\n\t\t\t\t\"y\": 0.457939\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.394671,\n\t\t\t\t\"y\": 0.463812\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.405062,\n\t\t\t\t\"y\": 0.470706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.414659,\n\t\t\t\t\"y\": 0.478671\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.423218,\n\t\t\t\t\"y\": 0.487743\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.430432,\n\t\t\t\t\"y\": 0.497917\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.435933,\n\t\t\t\t\"y\": 0.509111\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.439339,\n\t\t\t\t\"y\": 0.521109\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.440065,\n\t\t\t\t\"y\": 0.532712\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.430606,\n\t\t\t\t\"y\": 0.524652\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.41964,\n\t\t\t\t\"y\": 0.518729\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.408088,\n\t\t\t\t\"y\": 0.514038\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.396226,\n\t\t\t\t\"y\": 0.510197\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.384171,\n\t\t\t\t\"y\": 0.507015\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.371984,\n\t\t\t\t\"y\": 0.504382\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.359702,\n\t\t\t\t\"y\": 0.502236\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.34735,\n\t\t\t\t\"y\": 0.500541\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.334947,\n\t\t\t\t\"y\": 0.499279\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.322507,\n\t\t\t\t\"y\": 0.498449\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.310046,\n\t\t\t\t\"y\": 0.498068\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.297579,\n\t\t\t\t\"y\": 0.498152\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.285123,\n\t\t\t\t\"y\": 0.498685\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.272693,\n\t\t\t\t\"y\": 0.49965\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.260304,\n\t\t\t\t\"y\": 0.50105\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.247975,\n\t\t\t\t\"y\": 0.502903\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.235729,\n\t\t\t\t\"y\": 0.505247\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.223603,\n\t\t\t\t\"y\": 0.508147\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.211657,\n\t\t\t\t\"y\": 0.511716\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.200006,\n\t\t\t\t\"y\": 0.516152\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.188925,\n\t\t\t\t\"y\": 0.521855\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.437209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 3.4834e-10\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.437209\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.389789,\n\t\t\t\t\"y\": 0.263318\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.392696,\n\t\t\t\t\"y\": 0.2535\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.39717,\n\t\t\t\t\"y\": 0.244289\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.402912,\n\t\t\t\t\"y\": 0.23581\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.409665,\n\t\t\t\t\"y\": 0.228113\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.417222,\n\t\t\t\t\"y\": 0.221206\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.425422,\n\t\t\t\t\"y\": 0.215077\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.434138,\n\t\t\t\t\"y\": 0.209709\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.44327,\n\t\t\t\t\"y\": 0.205087\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.452736,\n\t\t\t\t\"y\": 0.201197\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.462468,\n\t\t\t\t\"y\": 0.198033\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.472407,\n\t\t\t\t\"y\": 0.195597\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.482497,\n\t\t\t\t\"y\": 0.193897\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.492684,\n\t\t\t\t\"y\": 0.192949\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.502914,\n\t\t\t\t\"y\": 0.192779\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.513127,\n\t\t\t\t\"y\": 0.193396\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.523265,\n\t\t\t\t\"y\": 0.194775\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.533276,\n\t\t\t\t\"y\": 0.196895\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.543104,\n\t\t\t\t\"y\": 0.199746\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.552692,\n\t\t\t\t\"y\": 0.203323\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.561977,\n\t\t\t\t\"y\": 0.207629\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.570883,\n\t\t\t\t\"y\": 0.212674\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.579319,\n\t\t\t\t\"y\": 0.218473\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.58717,\n\t\t\t\t\"y\": 0.225044\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.594292,\n\t\t\t\t\"y\": 0.2324\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.600498,\n\t\t\t\t\"y\": 0.240545\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.605552,\n\t\t\t\t\"y\": 0.249451\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.609172,\n\t\t\t\t\"y\": 0.25903\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.605349,\n\t\t\t\t\"y\": 0.2601\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.596354,\n\t\t\t\t\"y\": 0.255216\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.587004,\n\t\t\t\t\"y\": 0.251052\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.577426,\n\t\t\t\t\"y\": 0.247444\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.567685,\n\t\t\t\t\"y\": 0.244303\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.55782,\n\t\t\t\t\"y\": 0.241577\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.547856,\n\t\t\t\t\"y\": 0.239242\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.53781,\n\t\t\t\t\"y\": 0.23729\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.527696,\n\t\t\t\t\"y\": 0.235727\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.517527,\n\t\t\t\t\"y\": 0.234581\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.507317,\n\t\t\t\t\"y\": 0.2339\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.497086,\n\t\t\t\t\"y\": 0.23377\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.486863,\n\t\t\t\t\"y\": 0.234227\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.476675,\n\t\t\t\t\"y\": 0.235181\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.466536,\n\t\t\t\t\"y\": 0.236568\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.456459,\n\t\t\t\t\"y\": 0.238355\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.446458,\n\t\t\t\t\"y\": 0.240525\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.436547,\n\t\t\t\t\"y\": 0.24308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.426749,\n\t\t\t\t\"y\": 0.246038\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.417095,\n\t\t\t\t\"y\": 0.249437\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.407636,\n\t\t\t\t\"y\": 0.253347\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.398466,\n\t\t\t\t\"y\": 0.257894\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t]\n\t},\n\t\"heart_eyes\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.672226,\n\t\t\t\t\"y\": 0.438536\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.664207,\n\t\t\t\t\"y\": 0.455345\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.656188,\n\t\t\t\t\"y\": 0.472153\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.648169,\n\t\t\t\t\"y\": 0.488962\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.64015,\n\t\t\t\t\"y\": 0.50577\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.632131,\n\t\t\t\t\"y\": 0.522579\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.624112,\n\t\t\t\t\"y\": 0.539387\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.616094,\n\t\t\t\t\"y\": 0.556196\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.608075,\n\t\t\t\t\"y\": 0.573004\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.600056,\n\t\t\t\t\"y\": 0.589813\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.591966,\n\t\t\t\t\"y\": 0.606583\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.586944,\n\t\t\t\t\"y\": 0.624468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.58662,\n\t\t\t\t\"y\": 0.643044\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.591016,\n\t\t\t\t\"y\": 0.661093\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.599843,\n\t\t\t\t\"y\": 0.677432\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.612522,\n\t\t\t\t\"y\": 0.690989\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.628222,\n\t\t\t\t\"y\": 0.700875\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.645913,\n\t\t\t\t\"y\": 0.706441\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.664434,\n\t\t\t\t\"y\": 0.707322\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.682572,\n\t\t\t\t\"y\": 0.703461\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.699136,\n\t\t\t\t\"y\": 0.69511\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71304,\n\t\t\t\t\"y\": 0.682818\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.723372,\n\t\t\t\t\"y\": 0.667391\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.729455,\n\t\t\t\t\"y\": 0.64984\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.73089,\n\t\t\t\t\"y\": 0.631317\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.727582,\n\t\t\t\t\"y\": 0.613036\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.735415,\n\t\t\t\t\"y\": 0.629876\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.747261,\n\t\t\t\t\"y\": 0.64417\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.762341,\n\t\t\t\t\"y\": 0.65498\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.779667,\n\t\t\t\t\"y\": 0.661599\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.798102,\n\t\t\t\t\"y\": 0.663591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.816438,\n\t\t\t\t\"y\": 0.660827\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.833472,\n\t\t\t\t\"y\": 0.653486\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.848087,\n\t\t\t\t\"y\": 0.642052\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.859324,\n\t\t\t\t\"y\": 0.627273\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.866446,\n\t\t\t\t\"y\": 0.610119\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.868986,\n\t\t\t\t\"y\": 0.591715\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.866778,\n\t\t\t\t\"y\": 0.573268\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.859966,\n\t\t\t\t\"y\": 0.555988\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.848998,\n\t\t\t\t\"y\": 0.541008\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.834592,\n\t\t\t\t\"y\": 0.529311\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818323,\n\t\t\t\t\"y\": 0.520299\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.80209,\n\t\t\t\t\"y\": 0.511214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.785857,\n\t\t\t\t\"y\": 0.502129\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.769624,\n\t\t\t\t\"y\": 0.493044\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.753391,\n\t\t\t\t\"y\": 0.48396\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.737158,\n\t\t\t\t\"y\": 0.474875\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.720925,\n\t\t\t\t\"y\": 0.46579\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.704692,\n\t\t\t\t\"y\": 0.456705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.688459,\n\t\t\t\t\"y\": 0.447621\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.327774,\n\t\t\t\t\"y\": 0.438536\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.335793,\n\t\t\t\t\"y\": 0.455345\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.343812,\n\t\t\t\t\"y\": 0.472153\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.351831,\n\t\t\t\t\"y\": 0.488962\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.35985,\n\t\t\t\t\"y\": 0.50577\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.367869,\n\t\t\t\t\"y\": 0.522579\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.375888,\n\t\t\t\t\"y\": 0.539387\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.383906,\n\t\t\t\t\"y\": 0.556196\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.391925,\n\t\t\t\t\"y\": 0.573004\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.399944,\n\t\t\t\t\"y\": 0.589813\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.408034,\n\t\t\t\t\"y\": 0.606583\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.413056,\n\t\t\t\t\"y\": 0.624468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.41338,\n\t\t\t\t\"y\": 0.643044\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.408984,\n\t\t\t\t\"y\": 0.661093\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.400157,\n\t\t\t\t\"y\": 0.677432\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.387478,\n\t\t\t\t\"y\": 0.690989\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.371778,\n\t\t\t\t\"y\": 0.700875\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.354087,\n\t\t\t\t\"y\": 0.706441\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.335566,\n\t\t\t\t\"y\": 0.707322\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.317428,\n\t\t\t\t\"y\": 0.703461\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.300864,\n\t\t\t\t\"y\": 0.69511\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28696,\n\t\t\t\t\"y\": 0.682818\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.276628,\n\t\t\t\t\"y\": 0.667391\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.270545,\n\t\t\t\t\"y\": 0.64984\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.26911,\n\t\t\t\t\"y\": 0.631317\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.272418,\n\t\t\t\t\"y\": 0.613036\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.264585,\n\t\t\t\t\"y\": 0.629876\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.252739,\n\t\t\t\t\"y\": 0.64417\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.237659,\n\t\t\t\t\"y\": 0.65498\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.220333,\n\t\t\t\t\"y\": 0.661599\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.201898,\n\t\t\t\t\"y\": 0.663591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.183562,\n\t\t\t\t\"y\": 0.660827\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.166528,\n\t\t\t\t\"y\": 0.653486\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.151913,\n\t\t\t\t\"y\": 0.642052\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.140676,\n\t\t\t\t\"y\": 0.627273\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.133554,\n\t\t\t\t\"y\": 0.610119\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.131014,\n\t\t\t\t\"y\": 0.591715\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.133222,\n\t\t\t\t\"y\": 0.573268\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.140034,\n\t\t\t\t\"y\": 0.555988\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.151002,\n\t\t\t\t\"y\": 0.541008\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.165408,\n\t\t\t\t\"y\": 0.529311\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181677,\n\t\t\t\t\"y\": 0.520299\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.19791,\n\t\t\t\t\"y\": 0.511214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.214143,\n\t\t\t\t\"y\": 0.502129\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.230376,\n\t\t\t\t\"y\": 0.493044\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.246609,\n\t\t\t\t\"y\": 0.48396\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.262842,\n\t\t\t\t\"y\": 0.474875\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.279075,\n\t\t\t\t\"y\": 0.46579\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.295308,\n\t\t\t\t\"y\": 0.456705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.311541,\n\t\t\t\t\"y\": 0.447621\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.437209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 3.4834e-10\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.437209\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.265699,\n\t\t\t\t\"y\": 0.30606\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.267619,\n\t\t\t\t\"y\": 0.283761\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.273253,\n\t\t\t\t\"y\": 0.262101\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.282259,\n\t\t\t\t\"y\": 0.241614\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.294174,\n\t\t\t\t\"y\": 0.222672\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.308511,\n\t\t\t\t\"y\": 0.205492\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.324814,\n\t\t\t\t\"y\": 0.19017\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.342691,\n\t\t\t\t\"y\": 0.176722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.361816,\n\t\t\t\t\"y\": 0.165121\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.38192,\n\t\t\t\t\"y\": 0.155321\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.402785,\n\t\t\t\t\"y\": 0.147269\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.424226,\n\t\t\t\t\"y\": 0.140916\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.446089,\n\t\t\t\t\"y\": 0.13622\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468237,\n\t\t\t\t\"y\": 0.133149\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.490549,\n\t\t\t\t\"y\": 0.13168\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.512909,\n\t\t\t\t\"y\": 0.131803\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.535203,\n\t\t\t\t\"y\": 0.133519\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.557316,\n\t\t\t\t\"y\": 0.13684\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.579123,\n\t\t\t\t\"y\": 0.14179\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.600486,\n\t\t\t\t\"y\": 0.148403\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.621245,\n\t\t\t\t\"y\": 0.156722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.641214,\n\t\t\t\t\"y\": 0.166797\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.660164,\n\t\t\t\t\"y\": 0.178681\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.677821,\n\t\t\t\t\"y\": 0.192418\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.693847,\n\t\t\t\t\"y\": 0.20803\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.70784,\n\t\t\t\t\"y\": 0.225491\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.719337,\n\t\t\t\t\"y\": 0.24469\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.72785,\n\t\t\t\t\"y\": 0.265388\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.732927,\n\t\t\t\t\"y\": 0.287185\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.730994,\n\t\t\t\t\"y\": 0.30504\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.709336,\n\t\t\t\t\"y\": 0.299469\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.687415,\n\t\t\t\t\"y\": 0.295033\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.665359,\n\t\t\t\t\"y\": 0.291331\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.643215,\n\t\t\t\t\"y\": 0.288188\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.621011,\n\t\t\t\t\"y\": 0.285516\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.598759,\n\t\t\t\t\"y\": 0.283268\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.57647,\n\t\t\t\t\"y\": 0.281425\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.554152,\n\t\t\t\t\"y\": 0.279988\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.53181,\n\t\t\t\t\"y\": 0.278982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.509452,\n\t\t\t\t\"y\": 0.278458\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.487088,\n\t\t\t\t\"y\": 0.278504\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.464732,\n\t\t\t\t\"y\": 0.279108\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.442393,\n\t\t\t\t\"y\": 0.280183\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.420079,\n\t\t\t\t\"y\": 0.281684\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.397795,\n\t\t\t\t\"y\": 0.283589\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.37555,\n\t\t\t\t\"y\": 0.285901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.353354,\n\t\t\t\t\"y\": 0.288642\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.331222,\n\t\t\t\t\"y\": 0.291864\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.309182,\n\t\t\t\t\"y\": 0.295665\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.287291,\n\t\t\t\t\"y\": 0.300241\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t]\n\t},\n\t\"kissing_heart\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.792978,\n\t\t\t\t\"y\": 0.575503\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.785437,\n\t\t\t\t\"y\": 0.581931\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.777634,\n\t\t\t\t\"y\": 0.588026\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.769582,\n\t\t\t\t\"y\": 0.593776\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.761296,\n\t\t\t\t\"y\": 0.599171\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.752791,\n\t\t\t\t\"y\": 0.6042\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.744084,\n\t\t\t\t\"y\": 0.608856\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.735188,\n\t\t\t\t\"y\": 0.613129\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.726122,\n\t\t\t\t\"y\": 0.617011\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.716901,\n\t\t\t\t\"y\": 0.620496\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.707543,\n\t\t\t\t\"y\": 0.623577\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.698063,\n\t\t\t\t\"y\": 0.626249\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.68848,\n\t\t\t\t\"y\": 0.628506\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.678812,\n\t\t\t\t\"y\": 0.630345\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.669075,\n\t\t\t\t\"y\": 0.631762\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.659287,\n\t\t\t\t\"y\": 0.632754\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.649467,\n\t\t\t\t\"y\": 0.63332\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.639632,\n\t\t\t\t\"y\": 0.633459\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.6298,\n\t\t\t\t\"y\": 0.633171\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.619989,\n\t\t\t\t\"y\": 0.632455\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.610217,\n\t\t\t\t\"y\": 0.631314\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.600502,\n\t\t\t\t\"y\": 0.629749\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.590861,\n\t\t\t\t\"y\": 0.627763\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.58138,\n\t\t\t\t\"y\": 0.625403\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.588169,\n\t\t\t\t\"y\": 0.632644\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.595503,\n\t\t\t\t\"y\": 0.639312\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.603336,\n\t\t\t\t\"y\": 0.645365\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.611618,\n\t\t\t\t\"y\": 0.650763\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.620295,\n\t\t\t\t\"y\": 0.655472\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.629314,\n\t\t\t\t\"y\": 0.659464\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.638616,\n\t\t\t\t\"y\": 0.662711\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.648143,\n\t\t\t\t\"y\": 0.665195\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.657834,\n\t\t\t\t\"y\": 0.666898\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.667627,\n\t\t\t\t\"y\": 0.66781\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.67746,\n\t\t\t\t\"y\": 0.667925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.687272,\n\t\t\t\t\"y\": 0.667243\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.696999,\n\t\t\t\t\"y\": 0.665767\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.706579,\n\t\t\t\t\"y\": 0.663508\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.715952,\n\t\t\t\t\"y\": 0.660479\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.725059,\n\t\t\t\t\"y\": 0.6567\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.73384,\n\t\t\t\t\"y\": 0.652195\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.742242,\n\t\t\t\t\"y\": 0.646992\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.750209,\n\t\t\t\t\"y\": 0.641125\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.757693,\n\t\t\t\t\"y\": 0.634631\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.764644,\n\t\t\t\t\"y\": 0.62755\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.771019,\n\t\t\t\t\"y\": 0.619929\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.776778,\n\t\t\t\t\"y\": 0.611815\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.781883,\n\t\t\t\t\"y\": 0.603259\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.786303,\n\t\t\t\t\"y\": 0.594318\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.790009,\n\t\t\t\t\"y\": 0.585046\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.169696,\n\t\t\t\t\"y\": 0.621506\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.173778,\n\t\t\t\t\"y\": 0.630615\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.178238,\n\t\t\t\t\"y\": 0.639538\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.183068,\n\t\t\t\t\"y\": 0.648259\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.18826,\n\t\t\t\t\"y\": 0.656762\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.193804,\n\t\t\t\t\"y\": 0.665032\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.19969,\n\t\t\t\t\"y\": 0.673054\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.205906,\n\t\t\t\t\"y\": 0.680812\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.212443,\n\t\t\t\t\"y\": 0.688293\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.219287,\n\t\t\t\t\"y\": 0.695484\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.226427,\n\t\t\t\t\"y\": 0.70237\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.233849,\n\t\t\t\t\"y\": 0.70894\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.24154,\n\t\t\t\t\"y\": 0.715181\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.249486,\n\t\t\t\t\"y\": 0.721082\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.257671,\n\t\t\t\t\"y\": 0.726633\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.266083,\n\t\t\t\t\"y\": 0.731823\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.274704,\n\t\t\t\t\"y\": 0.736642\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28352,\n\t\t\t\t\"y\": 0.741083\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.292513,\n\t\t\t\t\"y\": 0.745136\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.301669,\n\t\t\t\t\"y\": 0.748795\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.31097,\n\t\t\t\t\"y\": 0.752053\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.320399,\n\t\t\t\t\"y\": 0.754903\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.329939,\n\t\t\t\t\"y\": 0.757341\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.338803,\n\t\t\t\t\"y\": 0.759448\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.329595,\n\t\t\t\t\"y\": 0.762961\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.32014,\n\t\t\t\t\"y\": 0.765716\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.310501,\n\t\t\t\t\"y\": 0.767697\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.300736,\n\t\t\t\t\"y\": 0.768889\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.29091,\n\t\t\t\t\"y\": 0.769286\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.281084,\n\t\t\t\t\"y\": 0.768886\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.27132,\n\t\t\t\t\"y\": 0.76769\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.261681,\n\t\t\t\t\"y\": 0.765706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.252228,\n\t\t\t\t\"y\": 0.762948\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.24302,\n\t\t\t\t\"y\": 0.759431\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.234117,\n\t\t\t\t\"y\": 0.75518\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.225575,\n\t\t\t\t\"y\": 0.75022\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.217448,\n\t\t\t\t\"y\": 0.744584\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.209788,\n\t\t\t\t\"y\": 0.738307\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.202643,\n\t\t\t\t\"y\": 0.731428\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.19606,\n\t\t\t\t\"y\": 0.723993\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.190079,\n\t\t\t\t\"y\": 0.716047\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.184738,\n\t\t\t\t\"y\": 0.707642\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.180073,\n\t\t\t\t\"y\": 0.69883\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.176112,\n\t\t\t\t\"y\": 0.689668\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.17288,\n\t\t\t\t\"y\": 0.680215\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.170398,\n\t\t\t\t\"y\": 0.670529\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.168682,\n\t\t\t\t\"y\": 0.660673\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.167742,\n\t\t\t\t\"y\": 0.650709\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.167585,\n\t\t\t\t\"y\": 0.6407\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.168212,\n\t\t\t\t\"y\": 0.630711\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.72066,\n\t\t\t\t\"y\": 0.485829\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.713831,\n\t\t\t\t\"y\": 0.48962\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.706809,\n\t\t\t\t\"y\": 0.493025\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.699624,\n\t\t\t\t\"y\": 0.496059\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.692305,\n\t\t\t\t\"y\": 0.498738\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.684874,\n\t\t\t\t\"y\": 0.501079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.677352,\n\t\t\t\t\"y\": 0.503097\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.669756,\n\t\t\t\t\"y\": 0.504805\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.662102,\n\t\t\t\t\"y\": 0.506217\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654403,\n\t\t\t\t\"y\": 0.507347\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.64667,\n\t\t\t\t\"y\": 0.508204\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.638913,\n\t\t\t\t\"y\": 0.5088\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.631142,\n\t\t\t\t\"y\": 0.509143\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.623363,\n\t\t\t\t\"y\": 0.509244\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.615585,\n\t\t\t\t\"y\": 0.509109\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.607815,\n\t\t\t\t\"y\": 0.508746\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.600057,\n\t\t\t\t\"y\": 0.508162\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.592318,\n\t\t\t\t\"y\": 0.507361\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.584602,\n\t\t\t\t\"y\": 0.50635\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.576916,\n\t\t\t\t\"y\": 0.505132\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.569263,\n\t\t\t\t\"y\": 0.503713\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.561648,\n\t\t\t\t\"y\": 0.502095\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.554076,\n\t\t\t\t\"y\": 0.500281\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.547082,\n\t\t\t\t\"y\": 0.498746\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.550776,\n\t\t\t\t\"y\": 0.505704\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.555517,\n\t\t\t\t\"y\": 0.511971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.561096,\n\t\t\t\t\"y\": 0.517482\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.567313,\n\t\t\t\t\"y\": 0.522233\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.574005,\n\t\t\t\t\"y\": 0.526263\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.581047,\n\t\t\t\t\"y\": 0.529623\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.588341,\n\t\t\t\t\"y\": 0.532368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.595817,\n\t\t\t\t\"y\": 0.534553\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.60342,\n\t\t\t\t\"y\": 0.536223\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.611109,\n\t\t\t\t\"y\": 0.537419\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.618851,\n\t\t\t\t\"y\": 0.538175\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.626622,\n\t\t\t\t\"y\": 0.53852\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.6344,\n\t\t\t\t\"y\": 0.538433\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.642166,\n\t\t\t\t\"y\": 0.537978\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.649905,\n\t\t\t\t\"y\": 0.537178\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.657597,\n\t\t\t\t\"y\": 0.536001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.665216,\n\t\t\t\t\"y\": 0.534412\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.67273,\n\t\t\t\t\"y\": 0.532366\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.680093,\n\t\t\t\t\"y\": 0.529815\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.687243,\n\t\t\t\t\"y\": 0.526702\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.694098,\n\t\t\t\t\"y\": 0.522964\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.700543,\n\t\t\t\t\"y\": 0.518537\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.706431,\n\t\t\t\t\"y\": 0.513371\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.711577,\n\t\t\t\t\"y\": 0.507441\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.715776,\n\t\t\t\t\"y\": 0.500786\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.718842,\n\t\t\t\t\"y\": 0.493519\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.297895,\n\t\t\t\t\"y\": 0.540559\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.298216,\n\t\t\t\t\"y\": 0.533238\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.299181,\n\t\t\t\t\"y\": 0.525976\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.300796,\n\t\t\t\t\"y\": 0.518834\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.303069,\n\t\t\t\t\"y\": 0.511881\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.306014,\n\t\t\t\t\"y\": 0.505195\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.30964,\n\t\t\t\t\"y\": 0.498865\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.313954,\n\t\t\t\t\"y\": 0.493\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.318952,\n\t\t\t\t\"y\": 0.48773\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.32461,\n\t\t\t\t\"y\": 0.483204\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.330868,\n\t\t\t\t\"y\": 0.479591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.337618,\n\t\t\t\t\"y\": 0.477058\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.344695,\n\t\t\t\t\"y\": 0.47575\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.351887,\n\t\t\t\t\"y\": 0.47575\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.358964,\n\t\t\t\t\"y\": 0.477058\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.365714,\n\t\t\t\t\"y\": 0.479591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.371972,\n\t\t\t\t\"y\": 0.483204\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.37763,\n\t\t\t\t\"y\": 0.48773\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.382629,\n\t\t\t\t\"y\": 0.493\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.386943,\n\t\t\t\t\"y\": 0.498865\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.390569,\n\t\t\t\t\"y\": 0.505195\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.393513,\n\t\t\t\t\"y\": 0.511881\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.395787,\n\t\t\t\t\"y\": 0.518834\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.397401,\n\t\t\t\t\"y\": 0.525976\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.398366,\n\t\t\t\t\"y\": 0.533238\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.398687,\n\t\t\t\t\"y\": 0.540559\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.398366,\n\t\t\t\t\"y\": 0.54788\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.397401,\n\t\t\t\t\"y\": 0.555142\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.395787,\n\t\t\t\t\"y\": 0.562283\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.393513,\n\t\t\t\t\"y\": 0.569236\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.390569,\n\t\t\t\t\"y\": 0.575923\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.386943,\n\t\t\t\t\"y\": 0.582253\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.382629,\n\t\t\t\t\"y\": 0.588117\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.37763,\n\t\t\t\t\"y\": 0.593388\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.371972,\n\t\t\t\t\"y\": 0.597913\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.365714,\n\t\t\t\t\"y\": 0.601527\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.358964,\n\t\t\t\t\"y\": 0.60406\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.351887,\n\t\t\t\t\"y\": 0.605368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.344695,\n\t\t\t\t\"y\": 0.605368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.337618,\n\t\t\t\t\"y\": 0.60406\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.330868,\n\t\t\t\t\"y\": 0.601527\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.32461,\n\t\t\t\t\"y\": 0.597913\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.318952,\n\t\t\t\t\"y\": 0.593388\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.313954,\n\t\t\t\t\"y\": 0.588117\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.30964,\n\t\t\t\t\"y\": 0.582253\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.306014,\n\t\t\t\t\"y\": 0.575923\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.303069,\n\t\t\t\t\"y\": 0.569236\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.300796,\n\t\t\t\t\"y\": 0.562283\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.299181,\n\t\t\t\t\"y\": 0.555142\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.298216,\n\t\t\t\t\"y\": 0.54788\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.984402,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.980521,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.968939,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.949838,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.92352,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.8904,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.851,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.805942,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.755935,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.70177,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.644299,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.58443,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.523107,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.461295,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.399972,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.340103,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.282632,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.228467,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.17846,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.133402,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.094002,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.060882,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.034564,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015463,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003881,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003881,\n\t\t\t\t\"y\": 0.437209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015463,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.034564,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.060882,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.094002,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.133402,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.17846,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.228467,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.282632,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.340103,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.399972,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.461295,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.523107,\n\t\t\t\t\"y\": 3.4834e-10\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.58443,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.644299,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.70177,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.755936,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.805942,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.851,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.8904,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.92352,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.949838,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.968939,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.980521,\n\t\t\t\t\"y\": 0.437209\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.490188,\n\t\t\t\t\"y\": 0.161438\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.509546,\n\t\t\t\t\"y\": 0.160552\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.529335,\n\t\t\t\t\"y\": 0.163971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.548916,\n\t\t\t\t\"y\": 0.168475\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.568299,\n\t\t\t\t\"y\": 0.173794\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.587421,\n\t\t\t\t\"y\": 0.180009\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606089,\n\t\t\t\t\"y\": 0.187509\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.623495,\n\t\t\t\t\"y\": 0.1976\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.628147,\n\t\t\t\t\"y\": 0.214639\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.611223,\n\t\t\t\t\"y\": 0.225401\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.592625,\n\t\t\t\t\"y\": 0.233086\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.573792,\n\t\t\t\t\"y\": 0.240164\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.555109,\n\t\t\t\t\"y\": 0.247636\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.537394,\n\t\t\t\t\"y\": 0.257168\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.533871,\n\t\t\t\t\"y\": 0.274059\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.550055,\n\t\t\t\t\"y\": 0.286005\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.567937,\n\t\t\t\t\"y\": 0.295286\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.586118,\n\t\t\t\t\"y\": 0.303954\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.604141,\n\t\t\t\t\"y\": 0.312951\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.621035,\n\t\t\t\t\"y\": 0.323913\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.623359,\n\t\t\t\t\"y\": 0.341466\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606482,\n\t\t\t\t\"y\": 0.352281\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.587592,\n\t\t\t\t\"y\": 0.359166\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.568182,\n\t\t\t\t\"y\": 0.364369\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.548519,\n\t\t\t\t\"y\": 0.368486\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.528692,\n\t\t\t\t\"y\": 0.371683\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.508729,\n\t\t\t\t\"y\": 0.373819\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.490906,\n\t\t\t\t\"y\": 0.371809\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.510015,\n\t\t\t\t\"y\": 0.365757\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.529547,\n\t\t\t\t\"y\": 0.361033\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.549011,\n\t\t\t\t\"y\": 0.356026\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.568242,\n\t\t\t\t\"y\": 0.35017\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.586705,\n\t\t\t\t\"y\": 0.34222\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.594053,\n\t\t\t\t\"y\": 0.326525\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.577703,\n\t\t\t\t\"y\": 0.314882\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.559557,\n\t\t\t\t\"y\": 0.306147\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.541156,\n\t\t\t\t\"y\": 0.297975\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.52291,\n\t\t\t\t\"y\": 0.289456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.50559,\n\t\t\t\t\"y\": 0.279179\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.500789,\n\t\t\t\t\"y\": 0.262399\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.517529,\n\t\t\t\t\"y\": 0.251334\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.536007,\n\t\t\t\t\"y\": 0.243356\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.554739,\n\t\t\t\t\"y\": 0.236005\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.573264,\n\t\t\t\t\"y\": 0.228139\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.589864,\n\t\t\t\t\"y\": 0.216957\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.582107,\n\t\t\t\t\"y\": 0.200801\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.56426,\n\t\t\t\t\"y\": 0.191498\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.545543,\n\t\t\t\t\"y\": 0.184115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.526564,\n\t\t\t\t\"y\": 0.177455\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.507569,\n\t\t\t\t\"y\": 0.170839\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.860802,\n\t\t\t\t\"y\": 0.299823\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864058,\n\t\t\t\t\"y\": 0.318104\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.862646,\n\t\t\t\t\"y\": 0.336627\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.856658,\n\t\t\t\t\"y\": 0.354178\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.846486,\n\t\t\t\t\"y\": 0.369606\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.832799,\n\t\t\t\t\"y\": 0.381897\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.816494,\n\t\t\t\t\"y\": 0.390248\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.798639,\n\t\t\t\t\"y\": 0.394109\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.780406,\n\t\t\t\t\"y\": 0.393228\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.762991,\n\t\t\t\t\"y\": 0.387662\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.747536,\n\t\t\t\t\"y\": 0.377776\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.735055,\n\t\t\t\t\"y\": 0.36422\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.726366,\n\t\t\t\t\"y\": 0.347881\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.722039,\n\t\t\t\t\"y\": 0.329831\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.722357,\n\t\t\t\t\"y\": 0.311255\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.727301,\n\t\t\t\t\"y\": 0.29337\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.735264,\n\t\t\t\t\"y\": 0.2766\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.743158,\n\t\t\t\t\"y\": 0.259792\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.751052,\n\t\t\t\t\"y\": 0.242983\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.758946,\n\t\t\t\t\"y\": 0.226174\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.76684,\n\t\t\t\t\"y\": 0.209366\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.774734,\n\t\t\t\t\"y\": 0.192557\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.782628,\n\t\t\t\t\"y\": 0.175749\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.790521,\n\t\t\t\t\"y\": 0.15894\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.798415,\n\t\t\t\t\"y\": 0.142132\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.806309,\n\t\t\t\t\"y\": 0.125323\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.822289,\n\t\t\t\t\"y\": 0.134408\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.838269,\n\t\t\t\t\"y\": 0.143493\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.854248,\n\t\t\t\t\"y\": 0.152577\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.870228,\n\t\t\t\t\"y\": 0.161662\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.886208,\n\t\t\t\t\"y\": 0.170747\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.902188,\n\t\t\t\t\"y\": 0.179832\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.918168,\n\t\t\t\t\"y\": 0.188916\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.934147,\n\t\t\t\t\"y\": 0.198001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.950127,\n\t\t\t\t\"y\": 0.207086\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.966142,\n\t\t\t\t\"y\": 0.216098\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.980323,\n\t\t\t\t\"y\": 0.227795\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.991121,\n\t\t\t\t\"y\": 0.242775\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.997826,\n\t\t\t\t\"y\": 0.260055\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.278502\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.997499,\n\t\t\t\t\"y\": 0.296906\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.990488,\n\t\t\t\t\"y\": 0.31406\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.979427,\n\t\t\t\t\"y\": 0.328839\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.96504,\n\t\t\t\t\"y\": 0.340273\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.948272,\n\t\t\t\t\"y\": 0.347614\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.930222,\n\t\t\t\t\"y\": 0.350378\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.912074,\n\t\t\t\t\"y\": 0.348386\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.895018,\n\t\t\t\t\"y\": 0.341767\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.880173,\n\t\t\t\t\"y\": 0.330957\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.868513,\n\t\t\t\t\"y\": 0.316663\n\t\t\t}\n\t\t]\n\t},\n\t\"kissing\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.708191,\n\t\t\t\t\"y\": 0.6214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.707865,\n\t\t\t\t\"y\": 0.614079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.706885,\n\t\t\t\t\"y\": 0.606817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.705245,\n\t\t\t\t\"y\": 0.599675\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.702935,\n\t\t\t\t\"y\": 0.592722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.699944,\n\t\t\t\t\"y\": 0.586036\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.696261,\n\t\t\t\t\"y\": 0.579706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.691878,\n\t\t\t\t\"y\": 0.573841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.6868,\n\t\t\t\t\"y\": 0.568571\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.681053,\n\t\t\t\t\"y\": 0.564045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.674695,\n\t\t\t\t\"y\": 0.560432\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.667839,\n\t\t\t\t\"y\": 0.557899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.66065,\n\t\t\t\t\"y\": 0.556591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.653343,\n\t\t\t\t\"y\": 0.556591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.646154,\n\t\t\t\t\"y\": 0.557899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.639298,\n\t\t\t\t\"y\": 0.560432\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.632941,\n\t\t\t\t\"y\": 0.564045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.627193,\n\t\t\t\t\"y\": 0.568571\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.622115,\n\t\t\t\t\"y\": 0.573841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.617732,\n\t\t\t\t\"y\": 0.579706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.614049,\n\t\t\t\t\"y\": 0.586036\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.611058,\n\t\t\t\t\"y\": 0.592722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.608748,\n\t\t\t\t\"y\": 0.599675\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.607108,\n\t\t\t\t\"y\": 0.606817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606128,\n\t\t\t\t\"y\": 0.614079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.605802,\n\t\t\t\t\"y\": 0.6214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606128,\n\t\t\t\t\"y\": 0.628721\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.607108,\n\t\t\t\t\"y\": 0.635983\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.608748,\n\t\t\t\t\"y\": 0.643125\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.611058,\n\t\t\t\t\"y\": 0.650077\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.614049,\n\t\t\t\t\"y\": 0.656764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.617732,\n\t\t\t\t\"y\": 0.663094\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.622115,\n\t\t\t\t\"y\": 0.668959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.627193,\n\t\t\t\t\"y\": 0.674229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.632941,\n\t\t\t\t\"y\": 0.678755\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.639298,\n\t\t\t\t\"y\": 0.682368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.646154,\n\t\t\t\t\"y\": 0.684901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.653343,\n\t\t\t\t\"y\": 0.686209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.66065,\n\t\t\t\t\"y\": 0.686209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.667839,\n\t\t\t\t\"y\": 0.684901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.674695,\n\t\t\t\t\"y\": 0.682368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.681053,\n\t\t\t\t\"y\": 0.678755\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.6868,\n\t\t\t\t\"y\": 0.674229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.691878,\n\t\t\t\t\"y\": 0.668959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.696261,\n\t\t\t\t\"y\": 0.663094\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.699944,\n\t\t\t\t\"y\": 0.656764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.702935,\n\t\t\t\t\"y\": 0.650077\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.705245,\n\t\t\t\t\"y\": 0.643125\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.706885,\n\t\t\t\t\"y\": 0.635983\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.707865,\n\t\t\t\t\"y\": 0.628721\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.291809,\n\t\t\t\t\"y\": 0.6214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.292135,\n\t\t\t\t\"y\": 0.614079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.293115,\n\t\t\t\t\"y\": 0.606817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.294755,\n\t\t\t\t\"y\": 0.599675\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.297065,\n\t\t\t\t\"y\": 0.592722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.300056,\n\t\t\t\t\"y\": 0.586036\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.303739,\n\t\t\t\t\"y\": 0.579706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.308122,\n\t\t\t\t\"y\": 0.573841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.3132,\n\t\t\t\t\"y\": 0.568571\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.318947,\n\t\t\t\t\"y\": 0.564045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.325305,\n\t\t\t\t\"y\": 0.560432\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.332161,\n\t\t\t\t\"y\": 0.557899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.33935,\n\t\t\t\t\"y\": 0.556591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.346657,\n\t\t\t\t\"y\": 0.556591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.353846,\n\t\t\t\t\"y\": 0.557899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.360702,\n\t\t\t\t\"y\": 0.560432\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.367059,\n\t\t\t\t\"y\": 0.564045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.372807,\n\t\t\t\t\"y\": 0.568571\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.377885,\n\t\t\t\t\"y\": 0.573841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.382268,\n\t\t\t\t\"y\": 0.579706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.385951,\n\t\t\t\t\"y\": 0.586036\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.388942,\n\t\t\t\t\"y\": 0.592722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.391252,\n\t\t\t\t\"y\": 0.599675\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.392892,\n\t\t\t\t\"y\": 0.606817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.393872,\n\t\t\t\t\"y\": 0.614079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.394198,\n\t\t\t\t\"y\": 0.6214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.393872,\n\t\t\t\t\"y\": 0.628721\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.392892,\n\t\t\t\t\"y\": 0.635983\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.391252,\n\t\t\t\t\"y\": 0.643125\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.388942,\n\t\t\t\t\"y\": 0.650077\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.385951,\n\t\t\t\t\"y\": 0.656764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.382268,\n\t\t\t\t\"y\": 0.663094\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.377885,\n\t\t\t\t\"y\": 0.668959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.372807,\n\t\t\t\t\"y\": 0.674229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.367059,\n\t\t\t\t\"y\": 0.678755\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.360702,\n\t\t\t\t\"y\": 0.682368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.353846,\n\t\t\t\t\"y\": 0.684901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.346657,\n\t\t\t\t\"y\": 0.686209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.33935,\n\t\t\t\t\"y\": 0.686209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.332161,\n\t\t\t\t\"y\": 0.684901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.325305,\n\t\t\t\t\"y\": 0.682368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.318947,\n\t\t\t\t\"y\": 0.678755\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.3132,\n\t\t\t\t\"y\": 0.674229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.308122,\n\t\t\t\t\"y\": 0.668959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.303739,\n\t\t\t\t\"y\": 0.663094\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.300056,\n\t\t\t\t\"y\": 0.656764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.297065,\n\t\t\t\t\"y\": 0.650077\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.294755,\n\t\t\t\t\"y\": 0.643125\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.293115,\n\t\t\t\t\"y\": 0.635983\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.292135,\n\t\t\t\t\"y\": 0.628721\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.437209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 3.4834e-10\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.437209\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.497955,\n\t\t\t\t\"y\": 0.161438\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.51762,\n\t\t\t\t\"y\": 0.160552\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.537723,\n\t\t\t\t\"y\": 0.163971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.557614,\n\t\t\t\t\"y\": 0.168475\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.577303,\n\t\t\t\t\"y\": 0.173794\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.596729,\n\t\t\t\t\"y\": 0.180009\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.615693,\n\t\t\t\t\"y\": 0.187509\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.633375,\n\t\t\t\t\"y\": 0.1976\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.6381,\n\t\t\t\t\"y\": 0.214639\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.620908,\n\t\t\t\t\"y\": 0.225401\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.602016,\n\t\t\t\t\"y\": 0.233086\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.582884,\n\t\t\t\t\"y\": 0.240164\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.563904,\n\t\t\t\t\"y\": 0.247636\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.545909,\n\t\t\t\t\"y\": 0.257168\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.54233,\n\t\t\t\t\"y\": 0.274059\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.558771,\n\t\t\t\t\"y\": 0.286005\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.576936,\n\t\t\t\t\"y\": 0.295286\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.595405,\n\t\t\t\t\"y\": 0.303954\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.613714,\n\t\t\t\t\"y\": 0.312951\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.630876,\n\t\t\t\t\"y\": 0.323913\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.633236,\n\t\t\t\t\"y\": 0.341466\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.616092,\n\t\t\t\t\"y\": 0.352281\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.596903,\n\t\t\t\t\"y\": 0.359166\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.577184,\n\t\t\t\t\"y\": 0.364369\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.55721,\n\t\t\t\t\"y\": 0.368486\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.537069,\n\t\t\t\t\"y\": 0.371683\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.51679,\n\t\t\t\t\"y\": 0.373819\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.498684,\n\t\t\t\t\"y\": 0.371809\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.518096,\n\t\t\t\t\"y\": 0.365757\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.537938,\n\t\t\t\t\"y\": 0.361033\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.55771,\n\t\t\t\t\"y\": 0.356026\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.577246,\n\t\t\t\t\"y\": 0.35017\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.596002,\n\t\t\t\t\"y\": 0.34222\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.603466,\n\t\t\t\t\"y\": 0.326525\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.586857,\n\t\t\t\t\"y\": 0.314882\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.568423,\n\t\t\t\t\"y\": 0.306147\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.549731,\n\t\t\t\t\"y\": 0.297975\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531196,\n\t\t\t\t\"y\": 0.289456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.513601,\n\t\t\t\t\"y\": 0.279179\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.508724,\n\t\t\t\t\"y\": 0.262399\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.525729,\n\t\t\t\t\"y\": 0.251334\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5445,\n\t\t\t\t\"y\": 0.243356\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.563529,\n\t\t\t\t\"y\": 0.236005\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.582348,\n\t\t\t\t\"y\": 0.228139\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.59921,\n\t\t\t\t\"y\": 0.216957\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.591331,\n\t\t\t\t\"y\": 0.200801\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.573201,\n\t\t\t\t\"y\": 0.191498\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.554188,\n\t\t\t\t\"y\": 0.184115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.534907,\n\t\t\t\t\"y\": 0.177455\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.515612,\n\t\t\t\t\"y\": 0.170839\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t]\n\t},\n\t\"kissing_smiling_eyes\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.70555,\n\t\t\t\t\"y\": 0.520267\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.701936,\n\t\t\t\t\"y\": 0.529953\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.696774,\n\t\t\t\t\"y\": 0.538911\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.690373,\n\t\t\t\t\"y\": 0.54703\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.682963,\n\t\t\t\t\"y\": 0.554237\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.674716,\n\t\t\t\t\"y\": 0.560466\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.665771,\n\t\t\t\t\"y\": 0.565638\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.656253,\n\t\t\t\t\"y\": 0.569651\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.646288,\n\t\t\t\t\"y\": 0.572363\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.636037,\n\t\t\t\t\"y\": 0.573582\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.625723,\n\t\t\t\t\"y\": 0.573137\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.615594,\n\t\t\t\t\"y\": 0.571135\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.605842,\n\t\t\t\t\"y\": 0.567734\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.596632,\n\t\t\t\t\"y\": 0.563054\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.588125,\n\t\t\t\t\"y\": 0.557189\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.580497,\n\t\t\t\t\"y\": 0.550216\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.573962,\n\t\t\t\t\"y\": 0.542208\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.568789,\n\t\t\t\t\"y\": 0.533259\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.565802,\n\t\t\t\t\"y\": 0.527088\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.566119,\n\t\t\t\t\"y\": 0.537437\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.566843,\n\t\t\t\t\"y\": 0.547765\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.567983,\n\t\t\t\t\"y\": 0.558055\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.569553,\n\t\t\t\t\"y\": 0.568289\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.571573,\n\t\t\t\t\"y\": 0.578442\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.574073,\n\t\t\t\t\"y\": 0.588488\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.577086,\n\t\t\t\t\"y\": 0.598391\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.580662,\n\t\t\t\t\"y\": 0.608104\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.584861,\n\t\t\t\t\"y\": 0.617563\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.589761,\n\t\t\t\t\"y\": 0.626676\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.595462,\n\t\t\t\t\"y\": 0.635307\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.602083,\n\t\t\t\t\"y\": 0.643248\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.609751,\n\t\t\t\t\"y\": 0.650173\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.61854,\n\t\t\t\t\"y\": 0.655584\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.628329,\n\t\t\t\t\"y\": 0.658811\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.638618,\n\t\t\t\t\"y\": 0.65925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.648629,\n\t\t\t\t\"y\": 0.656811\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.657758,\n\t\t\t\t\"y\": 0.652002\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.665791,\n\t\t\t\t\"y\": 0.645509\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.672766,\n\t\t\t\t\"y\": 0.637879\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.678799,\n\t\t\t\t\"y\": 0.629478\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.68401,\n\t\t\t\t\"y\": 0.620541\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.688502,\n\t\t\t\t\"y\": 0.611218\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.692357,\n\t\t\t\t\"y\": 0.601613\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.695638,\n\t\t\t\t\"y\": 0.591796\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.698397,\n\t\t\t\t\"y\": 0.581819\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.70067,\n\t\t\t\t\"y\": 0.571719\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.702488,\n\t\t\t\t\"y\": 0.561527\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.703872,\n\t\t\t\t\"y\": 0.551267\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.704837,\n\t\t\t\t\"y\": 0.540958\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.705395,\n\t\t\t\t\"y\": 0.53062\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.296293,\n\t\t\t\t\"y\": 0.52607\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.299728,\n\t\t\t\t\"y\": 0.534177\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.305049,\n\t\t\t\t\"y\": 0.543039\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.311702,\n\t\t\t\t\"y\": 0.550949\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.319426,\n\t\t\t\t\"y\": 0.557816\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.328009,\n\t\t\t\t\"y\": 0.563568\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.337279,\n\t\t\t\t\"y\": 0.568126\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.347076,\n\t\t\t\t\"y\": 0.571396\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.357233,\n\t\t\t\t\"y\": 0.573252\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.367552,\n\t\t\t\t\"y\": 0.573535\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.377784,\n\t\t\t\t\"y\": 0.572159\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.387711,\n\t\t\t\t\"y\": 0.569311\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.397178,\n\t\t\t\t\"y\": 0.565179\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.40606,\n\t\t\t\t\"y\": 0.559899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.414231,\n\t\t\t\t\"y\": 0.553571\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.421551,\n\t\t\t\t\"y\": 0.546271\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.427841,\n\t\t\t\t\"y\": 0.538066\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.432865,\n\t\t\t\t\"y\": 0.52903\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.436052,\n\t\t\t\t\"y\": 0.521285\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.435858,\n\t\t\t\t\"y\": 0.531637\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.435261,\n\t\t\t\t\"y\": 0.541973\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.434255,\n\t\t\t\t\"y\": 0.552278\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.432829,\n\t\t\t\t\"y\": 0.562532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.430968,\n\t\t\t\t\"y\": 0.572716\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.428648,\n\t\t\t\t\"y\": 0.582805\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.42584,\n\t\t\t\t\"y\": 0.592769\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.422504,\n\t\t\t\t\"y\": 0.602568\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.41859,\n\t\t\t\t\"y\": 0.612149\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.414031,\n\t\t\t\t\"y\": 0.621438\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.408744,\n\t\t\t\t\"y\": 0.630331\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.402624,\n\t\t\t\t\"y\": 0.638668\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.39555,\n\t\t\t\t\"y\": 0.646205\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.387408,\n\t\t\t\t\"y\": 0.65256\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.378178,\n\t\t\t\t\"y\": 0.657167\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.368106,\n\t\t\t\t\"y\": 0.659338\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.357833,\n\t\t\t\t\"y\": 0.65861\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.348127,\n\t\t\t\t\"y\": 0.655137\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.339448,\n\t\t\t\t\"y\": 0.64955\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.331888,\n\t\t\t\t\"y\": 0.642506\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.325363,\n\t\t\t\t\"y\": 0.634485\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.319746,\n\t\t\t\t\"y\": 0.625799\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.314919,\n\t\t\t\t\"y\": 0.616647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.310784,\n\t\t\t\t\"y\": 0.607159\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.307266,\n\t\t\t\t\"y\": 0.597425\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.304305,\n\t\t\t\t\"y\": 0.587506\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.301854,\n\t\t\t\t\"y\": 0.577448\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.299879,\n\t\t\t\t\"y\": 0.567286\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.298352,\n\t\t\t\t\"y\": 0.557046\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.297254,\n\t\t\t\t\"y\": 0.546751\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.29657,\n\t\t\t\t\"y\": 0.53642\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.437209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 3.4834e-10\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.437209\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.497955,\n\t\t\t\t\"y\": 0.161438\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.51762,\n\t\t\t\t\"y\": 0.160552\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.537723,\n\t\t\t\t\"y\": 0.163971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.557614,\n\t\t\t\t\"y\": 0.168475\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.577303,\n\t\t\t\t\"y\": 0.173794\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.596729,\n\t\t\t\t\"y\": 0.180009\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.615693,\n\t\t\t\t\"y\": 0.187509\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.633375,\n\t\t\t\t\"y\": 0.1976\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.6381,\n\t\t\t\t\"y\": 0.214639\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.620908,\n\t\t\t\t\"y\": 0.225401\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.602016,\n\t\t\t\t\"y\": 0.233086\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.582884,\n\t\t\t\t\"y\": 0.240164\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.563904,\n\t\t\t\t\"y\": 0.247636\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.545909,\n\t\t\t\t\"y\": 0.257168\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.54233,\n\t\t\t\t\"y\": 0.274059\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.558771,\n\t\t\t\t\"y\": 0.286005\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.576936,\n\t\t\t\t\"y\": 0.295286\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.595405,\n\t\t\t\t\"y\": 0.303954\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.613714,\n\t\t\t\t\"y\": 0.312951\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.630876,\n\t\t\t\t\"y\": 0.323913\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.633236,\n\t\t\t\t\"y\": 0.341466\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.616092,\n\t\t\t\t\"y\": 0.352281\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.596903,\n\t\t\t\t\"y\": 0.359166\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.577184,\n\t\t\t\t\"y\": 0.364369\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.55721,\n\t\t\t\t\"y\": 0.368486\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.537069,\n\t\t\t\t\"y\": 0.371683\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.51679,\n\t\t\t\t\"y\": 0.373819\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.498684,\n\t\t\t\t\"y\": 0.371809\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.518096,\n\t\t\t\t\"y\": 0.365757\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.537938,\n\t\t\t\t\"y\": 0.361033\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.55771,\n\t\t\t\t\"y\": 0.356026\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.577246,\n\t\t\t\t\"y\": 0.35017\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.596002,\n\t\t\t\t\"y\": 0.34222\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.603466,\n\t\t\t\t\"y\": 0.326525\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.586857,\n\t\t\t\t\"y\": 0.314882\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.568423,\n\t\t\t\t\"y\": 0.306147\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.549731,\n\t\t\t\t\"y\": 0.297975\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531196,\n\t\t\t\t\"y\": 0.289456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.513601,\n\t\t\t\t\"y\": 0.279179\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.508724,\n\t\t\t\t\"y\": 0.262399\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.525729,\n\t\t\t\t\"y\": 0.251334\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5445,\n\t\t\t\t\"y\": 0.243356\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.563529,\n\t\t\t\t\"y\": 0.236005\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.582348,\n\t\t\t\t\"y\": 0.228139\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.59921,\n\t\t\t\t\"y\": 0.216957\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.591331,\n\t\t\t\t\"y\": 0.200801\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.573201,\n\t\t\t\t\"y\": 0.191498\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.554188,\n\t\t\t\t\"y\": 0.184115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.534907,\n\t\t\t\t\"y\": 0.177455\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.515612,\n\t\t\t\t\"y\": 0.170839\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t]\n\t},\n\t\"kissing_closed_eyes\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.826179,\n\t\t\t\t\"y\": 0.632958\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.823163,\n\t\t\t\t\"y\": 0.642501\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.819398,\n\t\t\t\t\"y\": 0.651773\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.814908,\n\t\t\t\t\"y\": 0.660714\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.809722,\n\t\t\t\t\"y\": 0.66927\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.803872,\n\t\t\t\t\"y\": 0.677384\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.797396,\n\t\t\t\t\"y\": 0.685005\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.790334,\n\t\t\t\t\"y\": 0.692086\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.782732,\n\t\t\t\t\"y\": 0.69858\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.774638,\n\t\t\t\t\"y\": 0.704447\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.766104,\n\t\t\t\t\"y\": 0.70965\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.757183,\n\t\t\t\t\"y\": 0.714155\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.747932,\n\t\t\t\t\"y\": 0.717934\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.73841,\n\t\t\t\t\"y\": 0.720963\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.728678,\n\t\t\t\t\"y\": 0.723222\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.718797,\n\t\t\t\t\"y\": 0.724697\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.708831,\n\t\t\t\t\"y\": 0.72538\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.698841,\n\t\t\t\t\"y\": 0.725264\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.688893,\n\t\t\t\t\"y\": 0.724352\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.679049,\n\t\t\t\t\"y\": 0.722649\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.669371,\n\t\t\t\t\"y\": 0.720166\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.659921,\n\t\t\t\t\"y\": 0.716919\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.65076,\n\t\t\t\t\"y\": 0.712927\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.641945,\n\t\t\t\t\"y\": 0.708218\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.633532,\n\t\t\t\t\"y\": 0.702819\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.625575,\n\t\t\t\t\"y\": 0.696767\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.618124,\n\t\t\t\t\"y\": 0.690099\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.611228,\n\t\t\t\t\"y\": 0.682857\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.620859,\n\t\t\t\t\"y\": 0.685218\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.630653,\n\t\t\t\t\"y\": 0.687204\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.640522,\n\t\t\t\t\"y\": 0.688768\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.650448,\n\t\t\t\t\"y\": 0.68991\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.660415,\n\t\t\t\t\"y\": 0.690625\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.670402,\n\t\t\t\t\"y\": 0.690914\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.680393,\n\t\t\t\t\"y\": 0.690775\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.690369,\n\t\t\t\t\"y\": 0.690209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.700312,\n\t\t\t\t\"y\": 0.689217\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.710203,\n\t\t\t\t\"y\": 0.6878\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.720025,\n\t\t\t\t\"y\": 0.685961\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.72976,\n\t\t\t\t\"y\": 0.683704\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.739389,\n\t\t\t\t\"y\": 0.681032\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.748896,\n\t\t\t\t\"y\": 0.677951\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.758263,\n\t\t\t\t\"y\": 0.674466\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767473,\n\t\t\t\t\"y\": 0.670584\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.776509,\n\t\t\t\t\"y\": 0.666311\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.785355,\n\t\t\t\t\"y\": 0.661655\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.793995,\n\t\t\t\t\"y\": 0.656626\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.802412,\n\t\t\t\t\"y\": 0.651231\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.810591,\n\t\t\t\t\"y\": 0.645481\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818519,\n\t\t\t\t\"y\": 0.639386\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.173821,\n\t\t\t\t\"y\": 0.632958\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.176837,\n\t\t\t\t\"y\": 0.642501\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.180602,\n\t\t\t\t\"y\": 0.651773\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.185092,\n\t\t\t\t\"y\": 0.660714\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.190278,\n\t\t\t\t\"y\": 0.66927\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.196128,\n\t\t\t\t\"y\": 0.677384\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.202604,\n\t\t\t\t\"y\": 0.685005\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.209666,\n\t\t\t\t\"y\": 0.692086\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.217268,\n\t\t\t\t\"y\": 0.69858\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.225362,\n\t\t\t\t\"y\": 0.704447\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.233896,\n\t\t\t\t\"y\": 0.70965\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.242817,\n\t\t\t\t\"y\": 0.714155\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.252068,\n\t\t\t\t\"y\": 0.717934\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.26159,\n\t\t\t\t\"y\": 0.720963\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.271322,\n\t\t\t\t\"y\": 0.723222\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.281203,\n\t\t\t\t\"y\": 0.724697\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.291169,\n\t\t\t\t\"y\": 0.72538\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.301159,\n\t\t\t\t\"y\": 0.725264\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.311107,\n\t\t\t\t\"y\": 0.724352\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.320951,\n\t\t\t\t\"y\": 0.722649\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.330629,\n\t\t\t\t\"y\": 0.720166\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.340079,\n\t\t\t\t\"y\": 0.716919\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.34924,\n\t\t\t\t\"y\": 0.712927\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.358055,\n\t\t\t\t\"y\": 0.708218\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.366468,\n\t\t\t\t\"y\": 0.702819\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.374425,\n\t\t\t\t\"y\": 0.696767\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.381876,\n\t\t\t\t\"y\": 0.690099\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.388772,\n\t\t\t\t\"y\": 0.682857\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.379141,\n\t\t\t\t\"y\": 0.685218\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.369347,\n\t\t\t\t\"y\": 0.687204\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.359478,\n\t\t\t\t\"y\": 0.688768\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.349552,\n\t\t\t\t\"y\": 0.68991\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.339585,\n\t\t\t\t\"y\": 0.690625\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.329598,\n\t\t\t\t\"y\": 0.690914\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.319607,\n\t\t\t\t\"y\": 0.690775\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.309631,\n\t\t\t\t\"y\": 0.690209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.299688,\n\t\t\t\t\"y\": 0.689217\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.289797,\n\t\t\t\t\"y\": 0.6878\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.279975,\n\t\t\t\t\"y\": 0.685961\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.27024,\n\t\t\t\t\"y\": 0.683704\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.260611,\n\t\t\t\t\"y\": 0.681032\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.251104,\n\t\t\t\t\"y\": 0.677951\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.241737,\n\t\t\t\t\"y\": 0.674466\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232527,\n\t\t\t\t\"y\": 0.670584\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.223491,\n\t\t\t\t\"y\": 0.666311\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.214645,\n\t\t\t\t\"y\": 0.661655\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.206005,\n\t\t\t\t\"y\": 0.656626\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.197588,\n\t\t\t\t\"y\": 0.651231\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.189409,\n\t\t\t\t\"y\": 0.645481\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181481,\n\t\t\t\t\"y\": 0.639386\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.762083,\n\t\t\t\t\"y\": 0.481681\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.754616,\n\t\t\t\t\"y\": 0.486573\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.746893,\n\t\t\t\t\"y\": 0.491049\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.738951,\n\t\t\t\t\"y\": 0.495122\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.730823,\n\t\t\t\t\"y\": 0.498809\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.722538,\n\t\t\t\t\"y\": 0.502124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.714119,\n\t\t\t\t\"y\": 0.505085\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.705589,\n\t\t\t\t\"y\": 0.507703\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.696964,\n\t\t\t\t\"y\": 0.509995\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.688263,\n\t\t\t\t\"y\": 0.511972\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.679499,\n\t\t\t\t\"y\": 0.513645\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.670683,\n\t\t\t\t\"y\": 0.515027\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.661829,\n\t\t\t\t\"y\": 0.516126\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.652945,\n\t\t\t\t\"y\": 0.516952\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.64404,\n\t\t\t\t\"y\": 0.517514\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.635123,\n\t\t\t\t\"y\": 0.517817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.626201,\n\t\t\t\t\"y\": 0.517871\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.61728,\n\t\t\t\t\"y\": 0.517679\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.608368,\n\t\t\t\t\"y\": 0.517248\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.599471,\n\t\t\t\t\"y\": 0.516582\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.590593,\n\t\t\t\t\"y\": 0.515686\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.581741,\n\t\t\t\t\"y\": 0.514562\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.572921,\n\t\t\t\t\"y\": 0.513215\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.564787,\n\t\t\t\t\"y\": 0.512129\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.569635,\n\t\t\t\t\"y\": 0.519622\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.57562,\n\t\t\t\t\"y\": 0.526241\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.582493,\n\t\t\t\t\"y\": 0.531931\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.590028,\n\t\t\t\t\"y\": 0.53671\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.598042,\n\t\t\t\t\"y\": 0.540631\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606395,\n\t\t\t\t\"y\": 0.543767\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.614981,\n\t\t\t\t\"y\": 0.546189\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.623725,\n\t\t\t\t\"y\": 0.547962\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.632568,\n\t\t\t\t\"y\": 0.549145\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.641466,\n\t\t\t\t\"y\": 0.549786\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.650386,\n\t\t\t\t\"y\": 0.549927\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.659302,\n\t\t\t\t\"y\": 0.549603\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.668187,\n\t\t\t\t\"y\": 0.548792\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.677025,\n\t\t\t\t\"y\": 0.547569\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.685801,\n\t\t\t\t\"y\": 0.545959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.69449,\n\t\t\t\t\"y\": 0.54393\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.703059,\n\t\t\t\t\"y\": 0.541442\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.711466,\n\t\t\t\t\"y\": 0.538451\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.719654,\n\t\t\t\t\"y\": 0.534905\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.72755,\n\t\t\t\t\"y\": 0.530745\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.735051,\n\t\t\t\t\"y\": 0.52591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.742022,\n\t\t\t\t\"y\": 0.520337\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.74829,\n\t\t\t\t\"y\": 0.513982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.75364,\n\t\t\t\t\"y\": 0.506837\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.757843,\n\t\t\t\t\"y\": 0.498962\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.760695,\n\t\t\t\t\"y\": 0.490501\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.237917,\n\t\t\t\t\"y\": 0.481681\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.245384,\n\t\t\t\t\"y\": 0.486573\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.253107,\n\t\t\t\t\"y\": 0.491049\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.261049,\n\t\t\t\t\"y\": 0.495122\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.269177,\n\t\t\t\t\"y\": 0.498809\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.277462,\n\t\t\t\t\"y\": 0.502124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.285881,\n\t\t\t\t\"y\": 0.505085\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.294411,\n\t\t\t\t\"y\": 0.507703\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.303036,\n\t\t\t\t\"y\": 0.509995\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.311737,\n\t\t\t\t\"y\": 0.511972\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.320501,\n\t\t\t\t\"y\": 0.513645\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.329317,\n\t\t\t\t\"y\": 0.515027\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.338171,\n\t\t\t\t\"y\": 0.516126\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.347055,\n\t\t\t\t\"y\": 0.516952\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.35596,\n\t\t\t\t\"y\": 0.517514\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.364877,\n\t\t\t\t\"y\": 0.517817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.373799,\n\t\t\t\t\"y\": 0.517871\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.38272,\n\t\t\t\t\"y\": 0.517679\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.391632,\n\t\t\t\t\"y\": 0.517248\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.400529,\n\t\t\t\t\"y\": 0.516582\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.409407,\n\t\t\t\t\"y\": 0.515686\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.418259,\n\t\t\t\t\"y\": 0.514562\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.427079,\n\t\t\t\t\"y\": 0.513215\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.435213,\n\t\t\t\t\"y\": 0.512129\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.430365,\n\t\t\t\t\"y\": 0.519622\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.42438,\n\t\t\t\t\"y\": 0.526241\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.417507,\n\t\t\t\t\"y\": 0.531931\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.409972,\n\t\t\t\t\"y\": 0.53671\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.401958,\n\t\t\t\t\"y\": 0.540631\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.393605,\n\t\t\t\t\"y\": 0.543767\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.385019,\n\t\t\t\t\"y\": 0.546189\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.376275,\n\t\t\t\t\"y\": 0.547962\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.367432,\n\t\t\t\t\"y\": 0.549145\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.358534,\n\t\t\t\t\"y\": 0.549786\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.349614,\n\t\t\t\t\"y\": 0.549927\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.340698,\n\t\t\t\t\"y\": 0.549603\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.331813,\n\t\t\t\t\"y\": 0.548792\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.322975,\n\t\t\t\t\"y\": 0.547569\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.314199,\n\t\t\t\t\"y\": 0.545959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.30551,\n\t\t\t\t\"y\": 0.54393\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.296941,\n\t\t\t\t\"y\": 0.541442\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.288534,\n\t\t\t\t\"y\": 0.538451\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.280346,\n\t\t\t\t\"y\": 0.534905\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.27245,\n\t\t\t\t\"y\": 0.530745\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.264949,\n\t\t\t\t\"y\": 0.52591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.257978,\n\t\t\t\t\"y\": 0.520337\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.25171,\n\t\t\t\t\"y\": 0.513982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.24636,\n\t\t\t\t\"y\": 0.506837\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.242157,\n\t\t\t\t\"y\": 0.498962\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.239305,\n\t\t\t\t\"y\": 0.490501\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.437209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 3.4834e-10\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.437209\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.497955,\n\t\t\t\t\"y\": 0.161438\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.51762,\n\t\t\t\t\"y\": 0.160552\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.537723,\n\t\t\t\t\"y\": 0.163971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.557614,\n\t\t\t\t\"y\": 0.168475\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.577303,\n\t\t\t\t\"y\": 0.173794\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.596729,\n\t\t\t\t\"y\": 0.180009\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.615693,\n\t\t\t\t\"y\": 0.187509\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.633375,\n\t\t\t\t\"y\": 0.1976\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.6381,\n\t\t\t\t\"y\": 0.214639\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.620908,\n\t\t\t\t\"y\": 0.225401\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.602016,\n\t\t\t\t\"y\": 0.233086\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.582884,\n\t\t\t\t\"y\": 0.240164\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.563904,\n\t\t\t\t\"y\": 0.247636\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.545909,\n\t\t\t\t\"y\": 0.257168\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.54233,\n\t\t\t\t\"y\": 0.274059\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.558771,\n\t\t\t\t\"y\": 0.286005\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.576936,\n\t\t\t\t\"y\": 0.295286\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.595405,\n\t\t\t\t\"y\": 0.303954\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.613714,\n\t\t\t\t\"y\": 0.312951\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.630876,\n\t\t\t\t\"y\": 0.323913\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.633236,\n\t\t\t\t\"y\": 0.341466\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.616092,\n\t\t\t\t\"y\": 0.352281\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.596903,\n\t\t\t\t\"y\": 0.359166\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.577184,\n\t\t\t\t\"y\": 0.364369\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.55721,\n\t\t\t\t\"y\": 0.368486\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.537069,\n\t\t\t\t\"y\": 0.371683\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.51679,\n\t\t\t\t\"y\": 0.373819\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.498684,\n\t\t\t\t\"y\": 0.371809\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.518096,\n\t\t\t\t\"y\": 0.365757\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.537938,\n\t\t\t\t\"y\": 0.361033\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.55771,\n\t\t\t\t\"y\": 0.356026\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.577246,\n\t\t\t\t\"y\": 0.35017\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.596002,\n\t\t\t\t\"y\": 0.34222\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.603466,\n\t\t\t\t\"y\": 0.326525\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.586857,\n\t\t\t\t\"y\": 0.314882\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.568423,\n\t\t\t\t\"y\": 0.306147\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.549731,\n\t\t\t\t\"y\": 0.297975\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531196,\n\t\t\t\t\"y\": 0.289456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.513601,\n\t\t\t\t\"y\": 0.279179\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.508724,\n\t\t\t\t\"y\": 0.262399\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.525729,\n\t\t\t\t\"y\": 0.251334\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5445,\n\t\t\t\t\"y\": 0.243356\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.563529,\n\t\t\t\t\"y\": 0.236005\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.582348,\n\t\t\t\t\"y\": 0.228139\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.59921,\n\t\t\t\t\"y\": 0.216957\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.591331,\n\t\t\t\t\"y\": 0.200801\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.573201,\n\t\t\t\t\"y\": 0.191498\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.554188,\n\t\t\t\t\"y\": 0.184115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.534907,\n\t\t\t\t\"y\": 0.177455\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.515612,\n\t\t\t\t\"y\": 0.170839\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t]\n\t},\n\t\"stuck_out_tongue_winking_eye\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.895004,\n\t\t\t\t\"y\": 0.591011\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.893739,\n\t\t\t\t\"y\": 0.573044\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.889972,\n\t\t\t\t\"y\": 0.555389\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.88378,\n\t\t\t\t\"y\": 0.538352\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.875287,\n\t\t\t\t\"y\": 0.522218\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.86466,\n\t\t\t\t\"y\": 0.507246\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.852097,\n\t\t\t\t\"y\": 0.493669\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.837822,\n\t\t\t\t\"y\": 0.481683\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.822079,\n\t\t\t\t\"y\": 0.471456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.805125,\n\t\t\t\t\"y\": 0.463121\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.787222,\n\t\t\t\t\"y\": 0.456782\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.76864,\n\t\t\t\t\"y\": 0.452515\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.749649,\n\t\t\t\t\"y\": 0.45037\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.730522,\n\t\t\t\t\"y\": 0.45037\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.711531,\n\t\t\t\t\"y\": 0.452515\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.692948,\n\t\t\t\t\"y\": 0.456782\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.675046,\n\t\t\t\t\"y\": 0.463121\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.658091,\n\t\t\t\t\"y\": 0.471456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.642348,\n\t\t\t\t\"y\": 0.481683\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.628074,\n\t\t\t\t\"y\": 0.493669\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.61551,\n\t\t\t\t\"y\": 0.507246\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.604883,\n\t\t\t\t\"y\": 0.522218\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.59639,\n\t\t\t\t\"y\": 0.538352\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.590198,\n\t\t\t\t\"y\": 0.555389\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.586431,\n\t\t\t\t\"y\": 0.573044\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.585166,\n\t\t\t\t\"y\": 0.591011\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.586431,\n\t\t\t\t\"y\": 0.608978\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.590198,\n\t\t\t\t\"y\": 0.626632\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.59639,\n\t\t\t\t\"y\": 0.643669\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.604883,\n\t\t\t\t\"y\": 0.659804\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.61551,\n\t\t\t\t\"y\": 0.674775\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.628074,\n\t\t\t\t\"y\": 0.688353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.642348,\n\t\t\t\t\"y\": 0.700339\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.658091,\n\t\t\t\t\"y\": 0.710566\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.675046,\n\t\t\t\t\"y\": 0.718901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.692948,\n\t\t\t\t\"y\": 0.72524\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.711531,\n\t\t\t\t\"y\": 0.729507\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.730522,\n\t\t\t\t\"y\": 0.731652\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.749649,\n\t\t\t\t\"y\": 0.731652\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.76864,\n\t\t\t\t\"y\": 0.729507\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.787222,\n\t\t\t\t\"y\": 0.72524\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.805125,\n\t\t\t\t\"y\": 0.718901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.822079,\n\t\t\t\t\"y\": 0.710566\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.837822,\n\t\t\t\t\"y\": 0.700339\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.852097,\n\t\t\t\t\"y\": 0.688353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.86466,\n\t\t\t\t\"y\": 0.674775\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.875287,\n\t\t\t\t\"y\": 0.659804\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.88378,\n\t\t\t\t\"y\": 0.643669\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.889972,\n\t\t\t\t\"y\": 0.626632\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.893739,\n\t\t\t\t\"y\": 0.608978\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.203508,\n\t\t\t\t\"y\": 0.521005\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.214016,\n\t\t\t\t\"y\": 0.525503\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.224769,\n\t\t\t\t\"y\": 0.529453\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.235724,\n\t\t\t\t\"y\": 0.53288\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.246841,\n\t\t\t\t\"y\": 0.535807\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.258087,\n\t\t\t\t\"y\": 0.53826\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.269433,\n\t\t\t\t\"y\": 0.54026\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.280856,\n\t\t\t\t\"y\": 0.54183\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.292334,\n\t\t\t\t\"y\": 0.542988\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.303849,\n\t\t\t\t\"y\": 0.543754\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.315386,\n\t\t\t\t\"y\": 0.544145\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.32693,\n\t\t\t\t\"y\": 0.544175\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.338469,\n\t\t\t\t\"y\": 0.543859\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.349992,\n\t\t\t\t\"y\": 0.543209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.36149,\n\t\t\t\t\"y\": 0.542236\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.372953,\n\t\t\t\t\"y\": 0.540952\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.384374,\n\t\t\t\t\"y\": 0.539366\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.395744,\n\t\t\t\t\"y\": 0.537486\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.407057,\n\t\t\t\t\"y\": 0.53532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.418305,\n\t\t\t\t\"y\": 0.532875\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.429482,\n\t\t\t\t\"y\": 0.530156\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.440582,\n\t\t\t\t\"y\": 0.527169\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.451598,\n\t\t\t\t\"y\": 0.523919\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.461787,\n\t\t\t\t\"y\": 0.521109\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.457056,\n\t\t\t\t\"y\": 0.53101\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.4507,\n\t\t\t\t\"y\": 0.540071\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.443026,\n\t\t\t\t\"y\": 0.548181\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.434326,\n\t\t\t\t\"y\": 0.555316\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.424846,\n\t\t\t\t\"y\": 0.561511\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.414779,\n\t\t\t\t\"y\": 0.566824\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.404272,\n\t\t\t\t\"y\": 0.571322\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.393439,\n\t\t\t\t\"y\": 0.575071\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.382362,\n\t\t\t\t\"y\": 0.578127\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.371108,\n\t\t\t\t\"y\": 0.580543\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.359728,\n\t\t\t\t\"y\": 0.582362\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.348262,\n\t\t\t\t\"y\": 0.583622\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.336741,\n\t\t\t\t\"y\": 0.58429\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.325199,\n\t\t\t\t\"y\": 0.584455\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.31366,\n\t\t\t\t\"y\": 0.584143\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.302151,\n\t\t\t\t\"y\": 0.583311\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.290705,\n\t\t\t\t\"y\": 0.581906\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.279367,\n\t\t\t\t\"y\": 0.579866\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.2682,\n\t\t\t\t\"y\": 0.577119\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.257288,\n\t\t\t\t\"y\": 0.573581\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.246747,\n\t\t\t\t\"y\": 0.569157\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.236739,\n\t\t\t\t\"y\": 0.563749\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.227478,\n\t\t\t\t\"y\": 0.557272\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.219236,\n\t\t\t\t\"y\": 0.549675\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.212318,\n\t\t\t\t\"y\": 0.540988\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.207012,\n\t\t\t\t\"y\": 0.531348\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.530151\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.589155\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.647229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.703456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.75695\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.806867\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.852421\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.892892\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.927642\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.956124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.977887\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.99259\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.99259\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.977887\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.956124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.927642\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.892892\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.852421\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.806867\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.75695\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.703456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.647229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.589155\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.530151\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.471147\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.413073\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.356846\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.303352\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.253434\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.207881\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.16741\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.13266\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.104178\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.082414\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.067711\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 0.060302\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 0.060302\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.067711\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.082414\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.104178\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.13266\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.16741\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.207881\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.253434\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.303352\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.356846\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.413073\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.471147\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.247984,\n\t\t\t\t\"y\": 0.378448\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.250099,\n\t\t\t\t\"y\": 0.353733\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.256326,\n\t\t\t\t\"y\": 0.32964\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.266348,\n\t\t\t\t\"y\": 0.306707\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.279719,\n\t\t\t\t\"y\": 0.285338\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.295946,\n\t\t\t\t\"y\": 0.265798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.314551,\n\t\t\t\t\"y\": 0.248232\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.335099,\n\t\t\t\t\"y\": 0.232702\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.357218,\n\t\t\t\t\"y\": 0.219216\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.380589,\n\t\t\t\t\"y\": 0.207752\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.404945,\n\t\t\t\t\"y\": 0.198274\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.430056,\n\t\t\t\t\"y\": 0.190743\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.455727,\n\t\t\t\t\"y\": 0.185124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.481782,\n\t\t\t\t\"y\": 0.181386\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.508062,\n\t\t\t\t\"y\": 0.179511\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.534417,\n\t\t\t\t\"y\": 0.179486\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.560702,\n\t\t\t\t\"y\": 0.181313\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.586764,\n\t\t\t\t\"y\": 0.185001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.612447,\n\t\t\t\t\"y\": 0.190571\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.637575,\n\t\t\t\t\"y\": 0.198051\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.661954,\n\t\t\t\t\"y\": 0.207478\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.685354,\n\t\t\t\t\"y\": 0.218889\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.70751,\n\t\t\t\t\"y\": 0.232321\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.728104,\n\t\t\t\t\"y\": 0.247797\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.746765,\n\t\t\t\t\"y\": 0.26531\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.763061,\n\t\t\t\t\"y\": 0.2848\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.776513,\n\t\t\t\t\"y\": 0.306124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.786629,\n\t\t\t\t\"y\": 0.32902\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.792961,\n\t\t\t\t\"y\": 0.353089\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.795186,\n\t\t\t\t\"y\": 0.377795\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.770479,\n\t\t\t\t\"y\": 0.371922\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.744723,\n\t\t\t\t\"y\": 0.366642\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.718776,\n\t\t\t\t\"y\": 0.362262\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.692711,\n\t\t\t\t\"y\": 0.358554\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.666563,\n\t\t\t\t\"y\": 0.355402\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.640352,\n\t\t\t\t\"y\": 0.352749\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.614093,\n\t\t\t\t\"y\": 0.350567\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.587794,\n\t\t\t\t\"y\": 0.348856\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.561465,\n\t\t\t\t\"y\": 0.34764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.535113,\n\t\t\t\t\"y\": 0.346977\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.508752,\n\t\t\t\t\"y\": 0.346968\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.4824,\n\t\t\t\t\"y\": 0.347615\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.456069,\n\t\t\t\t\"y\": 0.348817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.42977,\n\t\t\t\t\"y\": 0.350516\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.403509,\n\t\t\t\t\"y\": 0.352685\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.377298,\n\t\t\t\t\"y\": 0.355326\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.351148,\n\t\t\t\t\"y\": 0.358464\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.32508,\n\t\t\t\t\"y\": 0.362157\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.299129,\n\t\t\t\t\"y\": 0.366517\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.273366,\n\t\t\t\t\"y\": 0.371769\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.64019,\n\t\t\t\t\"y\": 0.325741\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.64019,\n\t\t\t\t\"y\": 0.305201\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.64019,\n\t\t\t\t\"y\": 0.284662\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.64019,\n\t\t\t\t\"y\": 0.264123\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.64019,\n\t\t\t\t\"y\": 0.243584\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.64019,\n\t\t\t\t\"y\": 0.223044\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.64019,\n\t\t\t\t\"y\": 0.202505\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.64019,\n\t\t\t\t\"y\": 0.181966\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.64019,\n\t\t\t\t\"y\": 0.161427\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.64019,\n\t\t\t\t\"y\": 0.140887\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.640185,\n\t\t\t\t\"y\": 0.120348\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.637929,\n\t\t\t\t\"y\": 0.09995\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.631589,\n\t\t\t\t\"y\": 0.08033\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.621508,\n\t\t\t\t\"y\": 0.062147\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.608294,\n\t\t\t\t\"y\": 0.045832\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.592585,\n\t\t\t\t\"y\": 0.031608\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.574912,\n\t\t\t\t\"y\": 0.019595\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.555667,\n\t\t\t\t\"y\": 0.009958\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.535136,\n\t\t\t\t\"y\": 0.003084\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.513619,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.492011,\n\t\t\t\t\"y\": 0.002384\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.471319,\n\t\t\t\t\"y\": 0.008813\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.451879,\n\t\t\t\t\"y\": 0.018095\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.433965,\n\t\t\t\t\"y\": 0.029787\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.417951,\n\t\t\t\t\"y\": 0.043708\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.40435,\n\t\t\t\t\"y\": 0.059738\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.393791,\n\t\t\t\t\"y\": 0.07768\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.386896,\n\t\t\t\t\"y\": 0.097134\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.384062,\n\t\t\t\t\"y\": 0.117468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.383988,\n\t\t\t\t\"y\": 0.138006\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.383988,\n\t\t\t\t\"y\": 0.158545\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.383988,\n\t\t\t\t\"y\": 0.179084\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.383988,\n\t\t\t\t\"y\": 0.199624\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.383988,\n\t\t\t\t\"y\": 0.220163\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.383988,\n\t\t\t\t\"y\": 0.240702\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.383988,\n\t\t\t\t\"y\": 0.261242\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.383988,\n\t\t\t\t\"y\": 0.281781\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.383988,\n\t\t\t\t\"y\": 0.30232\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.383988,\n\t\t\t\t\"y\": 0.322859\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.400661,\n\t\t\t\t\"y\": 0.325956\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.422384,\n\t\t\t\t\"y\": 0.324085\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.444136,\n\t\t\t\t\"y\": 0.322535\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.465911,\n\t\t\t\t\"y\": 0.321314\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.487705,\n\t\t\t\t\"y\": 0.320445\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.509513,\n\t\t\t\t\"y\": 0.319965\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531327,\n\t\t\t\t\"y\": 0.31994\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.553136,\n\t\t\t\t\"y\": 0.320374\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.574932,\n\t\t\t\t\"y\": 0.321204\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.596709,\n\t\t\t\t\"y\": 0.322389\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.618464,\n\t\t\t\t\"y\": 0.323904\n\t\t\t}\n\t\t]\n\t},\n\t\"stuck_out_tongue_closed_eyes\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.781904,\n\t\t\t\t\"y\": 0.467951\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.769261,\n\t\t\t\t\"y\": 0.456739\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.750201,\n\t\t\t\t\"y\": 0.458683\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.731854,\n\t\t\t\t\"y\": 0.464206\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.714044,\n\t\t\t\t\"y\": 0.47113\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.696612,\n\t\t\t\t\"y\": 0.478862\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.679473,\n\t\t\t\t\"y\": 0.487157\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.662584,\n\t\t\t\t\"y\": 0.495895\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.64593,\n\t\t\t\t\"y\": 0.505024\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.629515,\n\t\t\t\t\"y\": 0.514529\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.613341,\n\t\t\t\t\"y\": 0.524394\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.597407,\n\t\t\t\t\"y\": 0.534599\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.581703,\n\t\t\t\t\"y\": 0.545115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.566246,\n\t\t\t\t\"y\": 0.555951\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.552326,\n\t\t\t\t\"y\": 0.568425\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.549267,\n\t\t\t\t\"y\": 0.585444\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.560955,\n\t\t\t\t\"y\": 0.599702\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.575716,\n\t\t\t\t\"y\": 0.611355\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.591204,\n\t\t\t\t\"y\": 0.622151\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606902,\n\t\t\t\t\"y\": 0.632676\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.622562,\n\t\t\t\t\"y\": 0.643251\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.637988,\n\t\t\t\t\"y\": 0.654125\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.653102,\n\t\t\t\t\"y\": 0.665383\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.668138,\n\t\t\t\t\"y\": 0.676732\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.683428,\n\t\t\t\t\"y\": 0.687775\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.699383,\n\t\t\t\t\"y\": 0.697943\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.716466,\n\t\t\t\t\"y\": 0.706303\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.734929,\n\t\t\t\t\"y\": 0.711352\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.754124,\n\t\t\t\t\"y\": 0.711738\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.770814,\n\t\t\t\t\"y\": 0.703785\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767638,\n\t\t\t\t\"y\": 0.687005\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.754188,\n\t\t\t\t\"y\": 0.674062\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.73904,\n\t\t\t\t\"y\": 0.662851\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.72328,\n\t\t\t\t\"y\": 0.652411\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.707217,\n\t\t\t\t\"y\": 0.642387\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.690999,\n\t\t\t\t\"y\": 0.632586\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.674733,\n\t\t\t\t\"y\": 0.622856\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.658541,\n\t\t\t\t\"y\": 0.613016\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.642708,\n\t\t\t\t\"y\": 0.602677\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.628692,\n\t\t\t\t\"y\": 0.590326\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.630561,\n\t\t\t\t\"y\": 0.574024\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.645841,\n\t\t\t\t\"y\": 0.56304\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.662425,\n\t\t\t\t\"y\": 0.553801\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.679275,\n\t\t\t\t\"y\": 0.544995\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.696164,\n\t\t\t\t\"y\": 0.536257\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.712971,\n\t\t\t\t\"y\": 0.52738\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.729573,\n\t\t\t\t\"y\": 0.518167\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.745778,\n\t\t\t\t\"y\": 0.50835\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.761153,\n\t\t\t\t\"y\": 0.497425\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.774504,\n\t\t\t\t\"y\": 0.484389\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.218096,\n\t\t\t\t\"y\": 0.467951\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.230739,\n\t\t\t\t\"y\": 0.456739\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.249799,\n\t\t\t\t\"y\": 0.458683\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.268146,\n\t\t\t\t\"y\": 0.464206\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.285956,\n\t\t\t\t\"y\": 0.47113\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.303388,\n\t\t\t\t\"y\": 0.478862\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.320527,\n\t\t\t\t\"y\": 0.487157\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.337416,\n\t\t\t\t\"y\": 0.495895\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.35407,\n\t\t\t\t\"y\": 0.505024\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.370485,\n\t\t\t\t\"y\": 0.514529\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.386659,\n\t\t\t\t\"y\": 0.524394\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.402593,\n\t\t\t\t\"y\": 0.534599\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.418297,\n\t\t\t\t\"y\": 0.545115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.433754,\n\t\t\t\t\"y\": 0.555951\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.447674,\n\t\t\t\t\"y\": 0.568425\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.450733,\n\t\t\t\t\"y\": 0.585444\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.439045,\n\t\t\t\t\"y\": 0.599702\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.424284,\n\t\t\t\t\"y\": 0.611355\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.408796,\n\t\t\t\t\"y\": 0.622151\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.393098,\n\t\t\t\t\"y\": 0.632676\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.377438,\n\t\t\t\t\"y\": 0.643251\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.362012,\n\t\t\t\t\"y\": 0.654125\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.346898,\n\t\t\t\t\"y\": 0.665383\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.331862,\n\t\t\t\t\"y\": 0.676732\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.316572,\n\t\t\t\t\"y\": 0.687775\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.300617,\n\t\t\t\t\"y\": 0.697943\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.283534,\n\t\t\t\t\"y\": 0.706303\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.265071,\n\t\t\t\t\"y\": 0.711352\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.245876,\n\t\t\t\t\"y\": 0.711738\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.229186,\n\t\t\t\t\"y\": 0.703785\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232362,\n\t\t\t\t\"y\": 0.687005\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.245812,\n\t\t\t\t\"y\": 0.674062\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.26096,\n\t\t\t\t\"y\": 0.662851\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.27672,\n\t\t\t\t\"y\": 0.652411\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.292783,\n\t\t\t\t\"y\": 0.642387\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.309001,\n\t\t\t\t\"y\": 0.632586\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.325267,\n\t\t\t\t\"y\": 0.622856\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.341459,\n\t\t\t\t\"y\": 0.613016\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.357292,\n\t\t\t\t\"y\": 0.602677\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.371308,\n\t\t\t\t\"y\": 0.590326\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.369439,\n\t\t\t\t\"y\": 0.574024\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.354159,\n\t\t\t\t\"y\": 0.56304\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.337575,\n\t\t\t\t\"y\": 0.553801\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.320725,\n\t\t\t\t\"y\": 0.544995\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.303836,\n\t\t\t\t\"y\": 0.536257\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.287029,\n\t\t\t\t\"y\": 0.52738\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.270427,\n\t\t\t\t\"y\": 0.518167\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.254222,\n\t\t\t\t\"y\": 0.50835\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.238847,\n\t\t\t\t\"y\": 0.497425\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.225496,\n\t\t\t\t\"y\": 0.484389\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.530151\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.589155\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.647229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.703456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.75695\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.806867\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.852421\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.892892\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.927642\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.956124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.977887\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.99259\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.99259\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.977887\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.956124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.927642\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.892892\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.852421\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.806867\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.75695\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.703456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.647229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.589155\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.530151\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.471147\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.413073\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.356846\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.303352\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.253434\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.207881\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.16741\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.13266\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.104178\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.082414\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.067711\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 0.060302\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 0.060302\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.067711\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.082414\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.104178\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.13266\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.16741\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.207881\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.253434\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.303352\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.356846\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.413073\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.471147\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.247984,\n\t\t\t\t\"y\": 0.378448\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.250099,\n\t\t\t\t\"y\": 0.353733\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.256326,\n\t\t\t\t\"y\": 0.32964\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.266348,\n\t\t\t\t\"y\": 0.306707\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.279719,\n\t\t\t\t\"y\": 0.285338\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.295946,\n\t\t\t\t\"y\": 0.265798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.314551,\n\t\t\t\t\"y\": 0.248232\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.335099,\n\t\t\t\t\"y\": 0.232702\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.357218,\n\t\t\t\t\"y\": 0.219216\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.380589,\n\t\t\t\t\"y\": 0.207752\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.404945,\n\t\t\t\t\"y\": 0.198274\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.430056,\n\t\t\t\t\"y\": 0.190743\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.455727,\n\t\t\t\t\"y\": 0.185124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.481782,\n\t\t\t\t\"y\": 0.181386\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.508062,\n\t\t\t\t\"y\": 0.179511\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.534417,\n\t\t\t\t\"y\": 0.179486\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.560702,\n\t\t\t\t\"y\": 0.181313\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.586764,\n\t\t\t\t\"y\": 0.185001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.612447,\n\t\t\t\t\"y\": 0.190571\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.637575,\n\t\t\t\t\"y\": 0.198051\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.661954,\n\t\t\t\t\"y\": 0.207478\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.685354,\n\t\t\t\t\"y\": 0.218889\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.70751,\n\t\t\t\t\"y\": 0.232321\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.728104,\n\t\t\t\t\"y\": 0.247797\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.746765,\n\t\t\t\t\"y\": 0.26531\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.763061,\n\t\t\t\t\"y\": 0.2848\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.776513,\n\t\t\t\t\"y\": 0.306124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.786629,\n\t\t\t\t\"y\": 0.32902\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.792961,\n\t\t\t\t\"y\": 0.353089\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.795186,\n\t\t\t\t\"y\": 0.377795\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.770479,\n\t\t\t\t\"y\": 0.371922\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.744723,\n\t\t\t\t\"y\": 0.366642\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.718776,\n\t\t\t\t\"y\": 0.362262\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.692711,\n\t\t\t\t\"y\": 0.358554\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.666563,\n\t\t\t\t\"y\": 0.355402\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.640352,\n\t\t\t\t\"y\": 0.352749\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.614093,\n\t\t\t\t\"y\": 0.350567\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.587794,\n\t\t\t\t\"y\": 0.348856\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.561465,\n\t\t\t\t\"y\": 0.34764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.535113,\n\t\t\t\t\"y\": 0.346977\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.508752,\n\t\t\t\t\"y\": 0.346968\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.4824,\n\t\t\t\t\"y\": 0.347615\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.456069,\n\t\t\t\t\"y\": 0.348817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.42977,\n\t\t\t\t\"y\": 0.350516\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.403509,\n\t\t\t\t\"y\": 0.352685\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.377298,\n\t\t\t\t\"y\": 0.355326\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.351148,\n\t\t\t\t\"y\": 0.358464\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.32508,\n\t\t\t\t\"y\": 0.362157\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.299129,\n\t\t\t\t\"y\": 0.366517\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.273366,\n\t\t\t\t\"y\": 0.371769\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.64019,\n\t\t\t\t\"y\": 0.325741\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.64019,\n\t\t\t\t\"y\": 0.305201\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.64019,\n\t\t\t\t\"y\": 0.284662\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.64019,\n\t\t\t\t\"y\": 0.264123\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.64019,\n\t\t\t\t\"y\": 0.243584\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.64019,\n\t\t\t\t\"y\": 0.223044\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.64019,\n\t\t\t\t\"y\": 0.202505\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.64019,\n\t\t\t\t\"y\": 0.181966\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.64019,\n\t\t\t\t\"y\": 0.161427\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.64019,\n\t\t\t\t\"y\": 0.140887\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.640185,\n\t\t\t\t\"y\": 0.120348\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.637929,\n\t\t\t\t\"y\": 0.09995\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.631589,\n\t\t\t\t\"y\": 0.08033\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.621508,\n\t\t\t\t\"y\": 0.062147\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.608294,\n\t\t\t\t\"y\": 0.045832\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.592585,\n\t\t\t\t\"y\": 0.031608\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.574912,\n\t\t\t\t\"y\": 0.019595\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.555667,\n\t\t\t\t\"y\": 0.009958\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.535136,\n\t\t\t\t\"y\": 0.003084\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.513619,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.492011,\n\t\t\t\t\"y\": 0.002384\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.471319,\n\t\t\t\t\"y\": 0.008813\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.451879,\n\t\t\t\t\"y\": 0.018095\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.433965,\n\t\t\t\t\"y\": 0.029787\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.417951,\n\t\t\t\t\"y\": 0.043708\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.40435,\n\t\t\t\t\"y\": 0.059738\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.393791,\n\t\t\t\t\"y\": 0.07768\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.386896,\n\t\t\t\t\"y\": 0.097134\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.384062,\n\t\t\t\t\"y\": 0.117468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.383988,\n\t\t\t\t\"y\": 0.138006\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.383988,\n\t\t\t\t\"y\": 0.158545\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.383988,\n\t\t\t\t\"y\": 0.179084\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.383988,\n\t\t\t\t\"y\": 0.199624\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.383988,\n\t\t\t\t\"y\": 0.220163\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.383988,\n\t\t\t\t\"y\": 0.240702\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.383988,\n\t\t\t\t\"y\": 0.261242\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.383988,\n\t\t\t\t\"y\": 0.281781\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.383988,\n\t\t\t\t\"y\": 0.30232\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.383988,\n\t\t\t\t\"y\": 0.322859\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.400661,\n\t\t\t\t\"y\": 0.325956\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.422384,\n\t\t\t\t\"y\": 0.324085\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.444136,\n\t\t\t\t\"y\": 0.322535\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.465911,\n\t\t\t\t\"y\": 0.321314\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.487705,\n\t\t\t\t\"y\": 0.320445\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.509513,\n\t\t\t\t\"y\": 0.319965\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531327,\n\t\t\t\t\"y\": 0.31994\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.553136,\n\t\t\t\t\"y\": 0.320374\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.574932,\n\t\t\t\t\"y\": 0.321204\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.596709,\n\t\t\t\t\"y\": 0.322389\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.618464,\n\t\t\t\t\"y\": 0.323904\n\t\t\t}\n\t\t]\n\t},\n\t\"stuck_out_tongue\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.500456\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.742431,\n\t\t\t\t\"y\": 0.547515\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.742105,\n\t\t\t\t\"y\": 0.540635\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.741124,\n\t\t\t\t\"y\": 0.533811\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.739484,\n\t\t\t\t\"y\": 0.5271\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.737174,\n\t\t\t\t\"y\": 0.520567\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.734183,\n\t\t\t\t\"y\": 0.514283\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.7305,\n\t\t\t\t\"y\": 0.508335\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.726118,\n\t\t\t\t\"y\": 0.502824\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.72104,\n\t\t\t\t\"y\": 0.497872\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.715292,\n\t\t\t\t\"y\": 0.493619\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.708935,\n\t\t\t\t\"y\": 0.490223\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.702078,\n\t\t\t\t\"y\": 0.487844\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.694889,\n\t\t\t\t\"y\": 0.486614\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.687583,\n\t\t\t\t\"y\": 0.486614\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.680394,\n\t\t\t\t\"y\": 0.487844\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.673537,\n\t\t\t\t\"y\": 0.490223\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.66718,\n\t\t\t\t\"y\": 0.493619\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.661432,\n\t\t\t\t\"y\": 0.497872\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.656355,\n\t\t\t\t\"y\": 0.502824\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.651972,\n\t\t\t\t\"y\": 0.508335\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.648289,\n\t\t\t\t\"y\": 0.514283\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.645298,\n\t\t\t\t\"y\": 0.520567\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.642988,\n\t\t\t\t\"y\": 0.5271\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.641348,\n\t\t\t\t\"y\": 0.533811\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.640368,\n\t\t\t\t\"y\": 0.540635\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.640041,\n\t\t\t\t\"y\": 0.547515\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.640368,\n\t\t\t\t\"y\": 0.554395\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.641348,\n\t\t\t\t\"y\": 0.561219\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.642988,\n\t\t\t\t\"y\": 0.56793\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.645298,\n\t\t\t\t\"y\": 0.574463\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.648289,\n\t\t\t\t\"y\": 0.580747\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.651972,\n\t\t\t\t\"y\": 0.586695\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.656355,\n\t\t\t\t\"y\": 0.592206\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.661432,\n\t\t\t\t\"y\": 0.597158\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.66718,\n\t\t\t\t\"y\": 0.601411\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.673537,\n\t\t\t\t\"y\": 0.604807\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.680394,\n\t\t\t\t\"y\": 0.607187\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.687583,\n\t\t\t\t\"y\": 0.608416\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.694889,\n\t\t\t\t\"y\": 0.608416\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.702078,\n\t\t\t\t\"y\": 0.607187\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.708935,\n\t\t\t\t\"y\": 0.604807\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.715292,\n\t\t\t\t\"y\": 0.601411\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.72104,\n\t\t\t\t\"y\": 0.597158\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.726118,\n\t\t\t\t\"y\": 0.592206\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.7305,\n\t\t\t\t\"y\": 0.586695\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.734183,\n\t\t\t\t\"y\": 0.580747\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.737174,\n\t\t\t\t\"y\": 0.574463\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.739484,\n\t\t\t\t\"y\": 0.56793\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.741124,\n\t\t\t\t\"y\": 0.561219\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.742105,\n\t\t\t\t\"y\": 0.554395\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.257569,\n\t\t\t\t\"y\": 0.547515\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.257895,\n\t\t\t\t\"y\": 0.540635\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.258876,\n\t\t\t\t\"y\": 0.533811\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.260516,\n\t\t\t\t\"y\": 0.5271\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.262826,\n\t\t\t\t\"y\": 0.520567\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.265817,\n\t\t\t\t\"y\": 0.514283\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.2695,\n\t\t\t\t\"y\": 0.508335\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.273882,\n\t\t\t\t\"y\": 0.502824\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.27896,\n\t\t\t\t\"y\": 0.497872\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.284708,\n\t\t\t\t\"y\": 0.493619\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.291065,\n\t\t\t\t\"y\": 0.490223\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.297922,\n\t\t\t\t\"y\": 0.487844\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.305111,\n\t\t\t\t\"y\": 0.486614\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.312417,\n\t\t\t\t\"y\": 0.486614\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.319606,\n\t\t\t\t\"y\": 0.487844\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.326463,\n\t\t\t\t\"y\": 0.490223\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.33282,\n\t\t\t\t\"y\": 0.493619\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.338568,\n\t\t\t\t\"y\": 0.497872\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.343645,\n\t\t\t\t\"y\": 0.502824\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.348028,\n\t\t\t\t\"y\": 0.508335\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.351711,\n\t\t\t\t\"y\": 0.514283\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.354702,\n\t\t\t\t\"y\": 0.520567\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.357012,\n\t\t\t\t\"y\": 0.5271\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.358652,\n\t\t\t\t\"y\": 0.533811\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.359632,\n\t\t\t\t\"y\": 0.540635\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.359959,\n\t\t\t\t\"y\": 0.547515\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.359632,\n\t\t\t\t\"y\": 0.554395\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.358652,\n\t\t\t\t\"y\": 0.561219\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.357012,\n\t\t\t\t\"y\": 0.56793\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.354702,\n\t\t\t\t\"y\": 0.574463\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.351711,\n\t\t\t\t\"y\": 0.580747\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.348028,\n\t\t\t\t\"y\": 0.586695\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.343645,\n\t\t\t\t\"y\": 0.592206\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.338568,\n\t\t\t\t\"y\": 0.597158\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.33282,\n\t\t\t\t\"y\": 0.601411\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.326463,\n\t\t\t\t\"y\": 0.604807\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.319606,\n\t\t\t\t\"y\": 0.607187\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.312417,\n\t\t\t\t\"y\": 0.608416\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.305111,\n\t\t\t\t\"y\": 0.608416\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.297922,\n\t\t\t\t\"y\": 0.607187\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.291065,\n\t\t\t\t\"y\": 0.604807\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.284708,\n\t\t\t\t\"y\": 0.601411\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.27896,\n\t\t\t\t\"y\": 0.597158\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.273882,\n\t\t\t\t\"y\": 0.592206\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.2695,\n\t\t\t\t\"y\": 0.586695\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.265817,\n\t\t\t\t\"y\": 0.580747\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.262826,\n\t\t\t\t\"y\": 0.574463\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.260516,\n\t\t\t\t\"y\": 0.56793\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.258876,\n\t\t\t\t\"y\": 0.561219\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.257895,\n\t\t\t\t\"y\": 0.554395\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.530151\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.589155\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.647229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.703456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.75695\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.806867\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.852421\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.892892\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.927642\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.956124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.977887\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.99259\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.99259\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.977887\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.956124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.927642\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.892892\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.852421\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.806867\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.75695\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.703456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.647229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.589155\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.530151\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.471147\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.413073\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.356846\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.303352\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.253434\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.207881\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.16741\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.13266\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.104178\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.082414\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.067711\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 0.060302\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 0.060302\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.067711\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.082414\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.104178\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.13266\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.16741\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.207881\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.253434\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.303352\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.356846\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.413073\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.471147\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.247984,\n\t\t\t\t\"y\": 0.378448\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.250099,\n\t\t\t\t\"y\": 0.353733\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.256326,\n\t\t\t\t\"y\": 0.32964\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.266348,\n\t\t\t\t\"y\": 0.306707\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.279719,\n\t\t\t\t\"y\": 0.285338\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.295946,\n\t\t\t\t\"y\": 0.265798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.314551,\n\t\t\t\t\"y\": 0.248232\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.335099,\n\t\t\t\t\"y\": 0.232702\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.357218,\n\t\t\t\t\"y\": 0.219216\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.380589,\n\t\t\t\t\"y\": 0.207752\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.404945,\n\t\t\t\t\"y\": 0.198274\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.430056,\n\t\t\t\t\"y\": 0.190743\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.455727,\n\t\t\t\t\"y\": 0.185124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.481782,\n\t\t\t\t\"y\": 0.181386\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.508062,\n\t\t\t\t\"y\": 0.179511\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.534417,\n\t\t\t\t\"y\": 0.179486\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.560702,\n\t\t\t\t\"y\": 0.181313\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.586764,\n\t\t\t\t\"y\": 0.185001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.612447,\n\t\t\t\t\"y\": 0.190571\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.637575,\n\t\t\t\t\"y\": 0.198051\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.661954,\n\t\t\t\t\"y\": 0.207478\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.685354,\n\t\t\t\t\"y\": 0.218889\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.70751,\n\t\t\t\t\"y\": 0.232321\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.728104,\n\t\t\t\t\"y\": 0.247797\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.746765,\n\t\t\t\t\"y\": 0.26531\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.763061,\n\t\t\t\t\"y\": 0.2848\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.776513,\n\t\t\t\t\"y\": 0.306124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.786629,\n\t\t\t\t\"y\": 0.32902\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.792961,\n\t\t\t\t\"y\": 0.353089\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.795186,\n\t\t\t\t\"y\": 0.377795\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.770479,\n\t\t\t\t\"y\": 0.371922\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.744723,\n\t\t\t\t\"y\": 0.366642\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.718776,\n\t\t\t\t\"y\": 0.362262\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.692711,\n\t\t\t\t\"y\": 0.358554\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.666563,\n\t\t\t\t\"y\": 0.355402\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.640352,\n\t\t\t\t\"y\": 0.352749\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.614093,\n\t\t\t\t\"y\": 0.350567\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.587794,\n\t\t\t\t\"y\": 0.348856\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.561465,\n\t\t\t\t\"y\": 0.34764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.535113,\n\t\t\t\t\"y\": 0.346977\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.508752,\n\t\t\t\t\"y\": 0.346968\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.4824,\n\t\t\t\t\"y\": 0.347615\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.456069,\n\t\t\t\t\"y\": 0.348817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.42977,\n\t\t\t\t\"y\": 0.350516\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.403509,\n\t\t\t\t\"y\": 0.352685\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.377298,\n\t\t\t\t\"y\": 0.355326\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.351148,\n\t\t\t\t\"y\": 0.358464\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.32508,\n\t\t\t\t\"y\": 0.362157\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.299129,\n\t\t\t\t\"y\": 0.366517\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.273366,\n\t\t\t\t\"y\": 0.371769\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.64019,\n\t\t\t\t\"y\": 0.325741\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.64019,\n\t\t\t\t\"y\": 0.305201\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.64019,\n\t\t\t\t\"y\": 0.284662\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.64019,\n\t\t\t\t\"y\": 0.264123\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.64019,\n\t\t\t\t\"y\": 0.243584\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.64019,\n\t\t\t\t\"y\": 0.223044\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.64019,\n\t\t\t\t\"y\": 0.202505\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.64019,\n\t\t\t\t\"y\": 0.181966\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.64019,\n\t\t\t\t\"y\": 0.161427\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.64019,\n\t\t\t\t\"y\": 0.140887\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.640185,\n\t\t\t\t\"y\": 0.120348\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.637929,\n\t\t\t\t\"y\": 0.09995\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.631589,\n\t\t\t\t\"y\": 0.08033\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.621508,\n\t\t\t\t\"y\": 0.062147\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.608294,\n\t\t\t\t\"y\": 0.045832\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.592585,\n\t\t\t\t\"y\": 0.031608\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.574912,\n\t\t\t\t\"y\": 0.019595\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.555667,\n\t\t\t\t\"y\": 0.009958\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.535136,\n\t\t\t\t\"y\": 0.003084\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.513619,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.492011,\n\t\t\t\t\"y\": 0.002384\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.471319,\n\t\t\t\t\"y\": 0.008813\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.451879,\n\t\t\t\t\"y\": 0.018095\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.433965,\n\t\t\t\t\"y\": 0.029787\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.417951,\n\t\t\t\t\"y\": 0.043708\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.40435,\n\t\t\t\t\"y\": 0.059738\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.393791,\n\t\t\t\t\"y\": 0.07768\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.386896,\n\t\t\t\t\"y\": 0.097134\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.384062,\n\t\t\t\t\"y\": 0.117468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.383988,\n\t\t\t\t\"y\": 0.138006\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.383988,\n\t\t\t\t\"y\": 0.158545\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.383988,\n\t\t\t\t\"y\": 0.179084\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.383988,\n\t\t\t\t\"y\": 0.199624\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.383988,\n\t\t\t\t\"y\": 0.220163\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.383988,\n\t\t\t\t\"y\": 0.240702\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.383988,\n\t\t\t\t\"y\": 0.261242\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.383988,\n\t\t\t\t\"y\": 0.281781\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.383988,\n\t\t\t\t\"y\": 0.30232\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.383988,\n\t\t\t\t\"y\": 0.322859\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.400661,\n\t\t\t\t\"y\": 0.325956\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.422384,\n\t\t\t\t\"y\": 0.324085\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.444136,\n\t\t\t\t\"y\": 0.322535\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.465911,\n\t\t\t\t\"y\": 0.321314\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.487705,\n\t\t\t\t\"y\": 0.320445\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.509513,\n\t\t\t\t\"y\": 0.319965\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531327,\n\t\t\t\t\"y\": 0.31994\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.553136,\n\t\t\t\t\"y\": 0.320374\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.574932,\n\t\t\t\t\"y\": 0.321204\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.596709,\n\t\t\t\t\"y\": 0.322389\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.618464,\n\t\t\t\t\"y\": 0.323904\n\t\t\t}\n\t\t]\n\t},\n\t\"sunglasses\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.961654,\n\t\t\t\t\"y\": 0.693722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.95403,\n\t\t\t\t\"y\": 0.670663\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.946032,\n\t\t\t\t\"y\": 0.647731\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.937605,\n\t\t\t\t\"y\": 0.624955\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.928677,\n\t\t\t\t\"y\": 0.60237\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.919161,\n\t\t\t\t\"y\": 0.580029\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.908943,\n\t\t\t\t\"y\": 0.558001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.897877,\n\t\t\t\t\"y\": 0.53639\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.88577,\n\t\t\t\t\"y\": 0.515348\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.872374,\n\t\t\t\t\"y\": 0.495107\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.857379,\n\t\t\t\t\"y\": 0.476031\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.840446,\n\t\t\t\t\"y\": 0.458666\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.821337,\n\t\t\t\t\"y\": 0.443753\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.800159,\n\t\t\t\t\"y\": 0.431982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.777336,\n\t\t\t\t\"y\": 0.423877\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.75346,\n\t\t\t\t\"y\": 0.419836\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.72924,\n\t\t\t\t\"y\": 0.419728\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.705218,\n\t\t\t\t\"y\": 0.422903\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.681602,\n\t\t\t\t\"y\": 0.428373\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.658391,\n\t\t\t\t\"y\": 0.435369\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.635893,\n\t\t\t\t\"y\": 0.444387\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.614839,\n\t\t\t\t\"y\": 0.456375\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.596527,\n\t\t\t\t\"y\": 0.472218\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.582042,\n\t\t\t\t\"y\": 0.49165\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.570585,\n\t\t\t\t\"y\": 0.513045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.560685,\n\t\t\t\t\"y\": 0.535218\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.550616,\n\t\t\t\t\"y\": 0.557311\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.53822,\n\t\t\t\t\"y\": 0.578154\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.520866,\n\t\t\t\t\"y\": 0.594899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.603101\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.627393\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.503883,\n\t\t\t\t\"y\": 0.64784\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.528042,\n\t\t\t\t\"y\": 0.649749\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.552035,\n\t\t\t\t\"y\": 0.653225\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.575946,\n\t\t\t\t\"y\": 0.657236\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.599846,\n\t\t\t\t\"y\": 0.661311\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.62377,\n\t\t\t\t\"y\": 0.665245\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.647729,\n\t\t\t\t\"y\": 0.668952\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.671727,\n\t\t\t\t\"y\": 0.672402\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.69576,\n\t\t\t\t\"y\": 0.675602\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.719823,\n\t\t\t\t\"y\": 0.678557\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.743916,\n\t\t\t\t\"y\": 0.68127\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.768034,\n\t\t\t\t\"y\": 0.683739\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.792176,\n\t\t\t\t\"y\": 0.68596\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.81634,\n\t\t\t\t\"y\": 0.687925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.840524,\n\t\t\t\t\"y\": 0.689626\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864726,\n\t\t\t\t\"y\": 0.691053\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.888943,\n\t\t\t\t\"y\": 0.692192\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.913173,\n\t\t\t\t\"y\": 0.693028\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.937411,\n\t\t\t\t\"y\": 0.693545\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.038346,\n\t\t\t\t\"y\": 0.693722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.04597,\n\t\t\t\t\"y\": 0.670663\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.053968,\n\t\t\t\t\"y\": 0.647731\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.062395,\n\t\t\t\t\"y\": 0.624955\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.071323,\n\t\t\t\t\"y\": 0.60237\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.080839,\n\t\t\t\t\"y\": 0.580029\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.091057,\n\t\t\t\t\"y\": 0.558001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.102123,\n\t\t\t\t\"y\": 0.53639\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.11423,\n\t\t\t\t\"y\": 0.515348\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.127626,\n\t\t\t\t\"y\": 0.495107\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.142621,\n\t\t\t\t\"y\": 0.476031\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.159554,\n\t\t\t\t\"y\": 0.458666\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.178663,\n\t\t\t\t\"y\": 0.443753\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.199841,\n\t\t\t\t\"y\": 0.431982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.222664,\n\t\t\t\t\"y\": 0.423877\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.24654,\n\t\t\t\t\"y\": 0.419836\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.27076,\n\t\t\t\t\"y\": 0.419728\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.294782,\n\t\t\t\t\"y\": 0.422903\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.318398,\n\t\t\t\t\"y\": 0.428373\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.341609,\n\t\t\t\t\"y\": 0.435369\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.364107,\n\t\t\t\t\"y\": 0.444387\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.385161,\n\t\t\t\t\"y\": 0.456375\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.403473,\n\t\t\t\t\"y\": 0.472218\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.417958,\n\t\t\t\t\"y\": 0.49165\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.429415,\n\t\t\t\t\"y\": 0.513045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.439315,\n\t\t\t\t\"y\": 0.535218\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.449384,\n\t\t\t\t\"y\": 0.557311\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.46178,\n\t\t\t\t\"y\": 0.578154\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.479134,\n\t\t\t\t\"y\": 0.594899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.603101\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.627393\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.496117,\n\t\t\t\t\"y\": 0.64784\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.471958,\n\t\t\t\t\"y\": 0.649749\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.447965,\n\t\t\t\t\"y\": 0.653225\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.424054,\n\t\t\t\t\"y\": 0.657236\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.400154,\n\t\t\t\t\"y\": 0.661311\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.37623,\n\t\t\t\t\"y\": 0.665245\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.352271,\n\t\t\t\t\"y\": 0.668952\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.328273,\n\t\t\t\t\"y\": 0.672402\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.30424,\n\t\t\t\t\"y\": 0.675602\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.280177,\n\t\t\t\t\"y\": 0.678557\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.256084,\n\t\t\t\t\"y\": 0.68127\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.231966,\n\t\t\t\t\"y\": 0.683739\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.207824,\n\t\t\t\t\"y\": 0.68596\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.18366,\n\t\t\t\t\"y\": 0.687925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.159476,\n\t\t\t\t\"y\": 0.689626\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135274,\n\t\t\t\t\"y\": 0.691053\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.111057,\n\t\t\t\t\"y\": 0.692192\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.086827,\n\t\t\t\t\"y\": 0.693028\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.062589,\n\t\t\t\t\"y\": 0.693545\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.437209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 3.4834e-10\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.437209\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.312763,\n\t\t\t\t\"y\": 0.337119\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.316114,\n\t\t\t\t\"y\": 0.320601\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.324841,\n\t\t\t\t\"y\": 0.306135\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.336783,\n\t\t\t\t\"y\": 0.29415\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.350547,\n\t\t\t\t\"y\": 0.284296\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.365396,\n\t\t\t\t\"y\": 0.276165\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.380935,\n\t\t\t\t\"y\": 0.269444\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.396935,\n\t\t\t\t\"y\": 0.26391\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.413255,\n\t\t\t\t\"y\": 0.259408\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.429801,\n\t\t\t\t\"y\": 0.255826\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.446506,\n\t\t\t\t\"y\": 0.253085\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.463322,\n\t\t\t\t\"y\": 0.251129\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.480207,\n\t\t\t\t\"y\": 0.249922\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.497129,\n\t\t\t\t\"y\": 0.24944\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.514056,\n\t\t\t\t\"y\": 0.249678\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.530957,\n\t\t\t\t\"y\": 0.250637\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5478,\n\t\t\t\t\"y\": 0.252336\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.564548,\n\t\t\t\t\"y\": 0.254806\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.581154,\n\t\t\t\t\"y\": 0.258095\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.59756,\n\t\t\t\t\"y\": 0.262274\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.613682,\n\t\t\t\t\"y\": 0.267443\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.629397,\n\t\t\t\t\"y\": 0.27374\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.644514,\n\t\t\t\t\"y\": 0.281363\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.658706,\n\t\t\t\t\"y\": 0.290591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.671382,\n\t\t\t\t\"y\": 0.301804\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.68141,\n\t\t\t\t\"y\": 0.315413\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.686836,\n\t\t\t\t\"y\": 0.331384\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.678513,\n\t\t\t\t\"y\": 0.330108\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.664398,\n\t\t\t\t\"y\": 0.320752\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.649564,\n\t\t\t\t\"y\": 0.312585\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.634235,\n\t\t\t\t\"y\": 0.305389\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.61854,\n\t\t\t\t\"y\": 0.299035\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.602557,\n\t\t\t\t\"y\": 0.293448\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.586338,\n\t\t\t\t\"y\": 0.28859\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.569922,\n\t\t\t\t\"y\": 0.284448\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.553339,\n\t\t\t\t\"y\": 0.28104\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.536615,\n\t\t\t\t\"y\": 0.27841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.51978,\n\t\t\t\t\"y\": 0.276639\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.502871,\n\t\t\t\t\"y\": 0.275864\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.485949,\n\t\t\t\t\"y\": 0.276255\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.469084,\n\t\t\t\t\"y\": 0.277707\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.452319,\n\t\t\t\t\"y\": 0.280058\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.435686,\n\t\t\t\t\"y\": 0.283209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.41921,\n\t\t\t\t\"y\": 0.287104\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.40292,\n\t\t\t\t\"y\": 0.29172\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.386852,\n\t\t\t\t\"y\": 0.297057\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.371052,\n\t\t\t\t\"y\": 0.303144\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.355588,\n\t\t\t\t\"y\": 0.310044\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.340567,\n\t\t\t\t\"y\": 0.317862\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.326173,\n\t\t\t\t\"y\": 0.326782\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t]\n\t},\n\t\"smirk\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.886607,\n\t\t\t\t\"y\": 0.552274\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.880549,\n\t\t\t\t\"y\": 0.561022\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.874565,\n\t\t\t\t\"y\": 0.569822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.868457,\n\t\t\t\t\"y\": 0.578536\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.862137,\n\t\t\t\t\"y\": 0.587096\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.855539,\n\t\t\t\t\"y\": 0.595443\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.848603,\n\t\t\t\t\"y\": 0.603509\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.841267,\n\t\t\t\t\"y\": 0.611211\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.833463,\n\t\t\t\t\"y\": 0.618437\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.825122,\n\t\t\t\t\"y\": 0.625029\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.816178,\n\t\t\t\t\"y\": 0.630771\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.806619,\n\t\t\t\t\"y\": 0.635409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.796584,\n\t\t\t\t\"y\": 0.638897\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.786241,\n\t\t\t\t\"y\": 0.641327\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.775723,\n\t\t\t\t\"y\": 0.642826\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.765121,\n\t\t\t\t\"y\": 0.643535\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.754495,\n\t\t\t\t\"y\": 0.643592\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.743878,\n\t\t\t\t\"y\": 0.643134\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.733284,\n\t\t\t\t\"y\": 0.642305\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.722705,\n\t\t\t\t\"y\": 0.641286\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.712116,\n\t\t\t\t\"y\": 0.640391\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.701516,\n\t\t\t\t\"y\": 0.640641\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.696024,\n\t\t\t\t\"y\": 0.647955\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.701869,\n\t\t\t\t\"y\": 0.656729\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.709974,\n\t\t\t\t\"y\": 0.663595\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.718966,\n\t\t\t\t\"y\": 0.669259\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.728519,\n\t\t\t\t\"y\": 0.673915\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.738487,\n\t\t\t\t\"y\": 0.677594\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.74877,\n\t\t\t\t\"y\": 0.680265\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.759264,\n\t\t\t\t\"y\": 0.68192\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.769867,\n\t\t\t\t\"y\": 0.682573\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.780485,\n\t\t\t\t\"y\": 0.682219\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.791019,\n\t\t\t\t\"y\": 0.680848\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.801369,\n\t\t\t\t\"y\": 0.678448\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.811424,\n\t\t\t\t\"y\": 0.675016\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.821073,\n\t\t\t\t\"y\": 0.670565\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.830206,\n\t\t\t\t\"y\": 0.665129\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.838724,\n\t\t\t\t\"y\": 0.65877\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.84655,\n\t\t\t\t\"y\": 0.651572\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.853633,\n\t\t\t\t\"y\": 0.643639\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.860009,\n\t\t\t\t\"y\": 0.635124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.865785,\n\t\t\t\t\"y\": 0.626188\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.871045,\n\t\t\t\t\"y\": 0.616936\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.875847,\n\t\t\t\t\"y\": 0.607438\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.880229,\n\t\t\t\t\"y\": 0.597738\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.884208,\n\t\t\t\t\"y\": 0.587865\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.887774,\n\t\t\t\t\"y\": 0.577835\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.890873,\n\t\t\t\t\"y\": 0.567651\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.893323,\n\t\t\t\t\"y\": 0.557292\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.893924,\n\t\t\t\t\"y\": 0.546742\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.114958,\n\t\t\t\t\"y\": 0.55447\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.120963,\n\t\t\t\t\"y\": 0.563255\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.126967,\n\t\t\t\t\"y\": 0.572041\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.133121,\n\t\t\t\t\"y\": 0.580722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.139506,\n\t\t\t\t\"y\": 0.589234\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.146184,\n\t\t\t\t\"y\": 0.597516\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.153216,\n\t\t\t\t\"y\": 0.605499\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.160664,\n\t\t\t\t\"y\": 0.613093\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.168597,\n\t\t\t\t\"y\": 0.620174\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.177086,\n\t\t\t\t\"y\": 0.626575\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.186189,\n\t\t\t\t\"y\": 0.632058\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.195886,\n\t\t\t\t\"y\": 0.636399\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.206014,\n\t\t\t\t\"y\": 0.639608\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.216412,\n\t\t\t\t\"y\": 0.641789\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.226959,\n\t\t\t\t\"y\": 0.643075\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.237571,\n\t\t\t\t\"y\": 0.643605\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.248197,\n\t\t\t\t\"y\": 0.643519\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.258808,\n\t\t\t\t\"y\": 0.642953\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.269398,\n\t\t\t\t\"y\": 0.642056\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.279975,\n\t\t\t\t\"y\": 0.641028\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.290574,\n\t\t\t\t\"y\": 0.640263\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.301057,\n\t\t\t\t\"y\": 0.641417\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.302948,\n\t\t\t\t\"y\": 0.650443\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.296197,\n\t\t\t\t\"y\": 0.658605\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.287813,\n\t\t\t\t\"y\": 0.665132\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.278659,\n\t\t\t\t\"y\": 0.670531\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.268991,\n\t\t\t\t\"y\": 0.67494\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.258934,\n\t\t\t\t\"y\": 0.678368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.248587,\n\t\t\t\t\"y\": 0.680779\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.238056,\n\t\t\t\t\"y\": 0.68218\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.22744,\n\t\t\t\t\"y\": 0.682579\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.216834,\n\t\t\t\t\"y\": 0.681969\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.206336,\n\t\t\t\t\"y\": 0.680338\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.196051,\n\t\t\t\t\"y\": 0.677676\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.186088,\n\t\t\t\t\"y\": 0.673984\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.17656,\n\t\t\t\t\"y\": 0.669279\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.167574,\n\t\t\t\t\"y\": 0.663602\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.159225,\n\t\t\t\t\"y\": 0.657022\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.151584,\n\t\t\t\t\"y\": 0.649627\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.144689,\n\t\t\t\t\"y\": 0.641529\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.138474,\n\t\t\t\t\"y\": 0.632894\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.132836,\n\t\t\t\t\"y\": 0.62387\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.127697,\n\t\t\t\t\"y\": 0.614551\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.123004,\n\t\t\t\t\"y\": 0.604998\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.118725,\n\t\t\t\t\"y\": 0.595252\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.114848,\n\t\t\t\t\"y\": 0.585338\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.111392,\n\t\t\t\t\"y\": 0.575269\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.108432,\n\t\t\t\t\"y\": 0.565044\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.106222,\n\t\t\t\t\"y\": 0.554633\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.10821,\n\t\t\t\t\"y\": 0.546289\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.839714,\n\t\t\t\t\"y\": 0.457489\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.838428,\n\t\t\t\t\"y\": 0.446948\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.834509,\n\t\t\t\t\"y\": 0.43708\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.828409,\n\t\t\t\t\"y\": 0.428386\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.820668,\n\t\t\t\t\"y\": 0.421116\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.811708,\n\t\t\t\t\"y\": 0.415417\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.801864,\n\t\t\t\t\"y\": 0.411446\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.791455,\n\t\t\t\t\"y\": 0.409381\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.780846,\n\t\t\t\t\"y\": 0.409361\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.770487,\n\t\t\t\t\"y\": 0.411624\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.76107,\n\t\t\t\t\"y\": 0.41648\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.753604,\n\t\t\t\t\"y\": 0.423989\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.748536,\n\t\t\t\t\"y\": 0.433326\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.744822,\n\t\t\t\t\"y\": 0.443299\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.741361,\n\t\t\t\t\"y\": 0.453366\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.736919,\n\t\t\t\t\"y\": 0.463022\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.729486,\n\t\t\t\t\"y\": 0.470445\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.719266,\n\t\t\t\t\"y\": 0.47305\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.708662,\n\t\t\t\t\"y\": 0.472623\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.698168,\n\t\t\t\t\"y\": 0.470955\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.687753,\n\t\t\t\t\"y\": 0.468838\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.677348,\n\t\t\t\t\"y\": 0.466674\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.66691,\n\t\t\t\t\"y\": 0.464674\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.656429,\n\t\t\t\t\"y\": 0.462917\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.645891,\n\t\t\t\t\"y\": 0.461548\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.635285,\n\t\t\t\t\"y\": 0.460995\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.627605,\n\t\t\t\t\"y\": 0.465407\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.634864,\n\t\t\t\t\"y\": 0.47307\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.643514,\n\t\t\t\t\"y\": 0.47925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.652542,\n\t\t\t\t\"y\": 0.484866\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.661798,\n\t\t\t\t\"y\": 0.490096\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.671246,\n\t\t\t\t\"y\": 0.494968\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.680904,\n\t\t\t\t\"y\": 0.499409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.690797,\n\t\t\t\t\"y\": 0.503293\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.700925,\n\t\t\t\t\"y\": 0.50651\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.711248,\n\t\t\t\t\"y\": 0.509031\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.721698,\n\t\t\t\t\"y\": 0.51096\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.732221,\n\t\t\t\t\"y\": 0.512441\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.742797,\n\t\t\t\t\"y\": 0.513481\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.753408,\n\t\t\t\t\"y\": 0.514048\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.764034,\n\t\t\t\t\"y\": 0.514104\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.774648,\n\t\t\t\t\"y\": 0.513599\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.785209,\n\t\t\t\t\"y\": 0.512436\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.795631,\n\t\t\t\t\"y\": 0.510376\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.805736,\n\t\t\t\t\"y\": 0.507109\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.815204,\n\t\t\t\t\"y\": 0.502304\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.823542,\n\t\t\t\t\"y\": 0.495734\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.830297,\n\t\t\t\t\"y\": 0.487538\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.835344,\n\t\t\t\t\"y\": 0.478186\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.838564,\n\t\t\t\t\"y\": 0.468055\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.176752,\n\t\t\t\t\"y\": 0.463582\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.186543,\n\t\t\t\t\"y\": 0.460986\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.197139,\n\t\t\t\t\"y\": 0.46175\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.207665,\n\t\t\t\t\"y\": 0.463204\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.218138,\n\t\t\t\t\"y\": 0.465011\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.228569,\n\t\t\t\t\"y\": 0.467047\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.238972,\n\t\t\t\t\"y\": 0.469223\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.249395,\n\t\t\t\t\"y\": 0.471297\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.259909,\n\t\t\t\t\"y\": 0.472821\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.270517,\n\t\t\t\t\"y\": 0.472885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.280473,\n\t\t\t\t\"y\": 0.469473\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.287236,\n\t\t\t\t\"y\": 0.461394\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.291386,\n\t\t\t\t\"y\": 0.451603\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.294814,\n\t\t\t\t\"y\": 0.441524\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.298683,\n\t\t\t\t\"y\": 0.431611\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.304117,\n\t\t\t\t\"y\": 0.422492\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.312004,\n\t\t\t\t\"y\": 0.415426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.321653,\n\t\t\t\t\"y\": 0.411046\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.332097,\n\t\t\t\t\"y\": 0.409207\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.3427,\n\t\t\t\t\"y\": 0.409601\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.353035,\n\t\t\t\t\"y\": 0.412012\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.362746,\n\t\t\t\t\"y\": 0.4163\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.371516,\n\t\t\t\t\"y\": 0.422287\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.379003,\n\t\t\t\t\"y\": 0.42982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.38476,\n\t\t\t\t\"y\": 0.438743\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.388235,\n\t\t\t\t\"y\": 0.448775\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.389062,\n\t\t\t\t\"y\": 0.459365\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.387524,\n\t\t\t\t\"y\": 0.469882\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.383968,\n\t\t\t\t\"y\": 0.479899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.378614,\n\t\t\t\t\"y\": 0.489079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.371565,\n\t\t\t\t\"y\": 0.497022\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.362988,\n\t\t\t\t\"y\": 0.503275\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.353376,\n\t\t\t\t\"y\": 0.507787\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.343196,\n\t\t\t\t\"y\": 0.510817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.33274,\n\t\t\t\t\"y\": 0.512698\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.322165,\n\t\t\t\t\"y\": 0.513731\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.311547,\n\t\t\t\t\"y\": 0.514133\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.300922,\n\t\t\t\t\"y\": 0.513984\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.290316,\n\t\t\t\t\"y\": 0.513331\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.279749,\n\t\t\t\t\"y\": 0.512212\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.269237,\n\t\t\t\t\"y\": 0.510655\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.258804,\n\t\t\t\t\"y\": 0.508634\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.248511,\n\t\t\t\t\"y\": 0.505994\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.238422,\n\t\t\t\t\"y\": 0.502654\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.228571,\n\t\t\t\t\"y\": 0.498663\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.218953,\n\t\t\t\t\"y\": 0.494138\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.209538,\n\t\t\t\t\"y\": 0.4892\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.200318,\n\t\t\t\t\"y\": 0.483906\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.191341,\n\t\t\t\t\"y\": 0.478211\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.182797,\n\t\t\t\t\"y\": 0.471886\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.437209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 3.4834e-10\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.437209\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.36429,\n\t\t\t\t\"y\": 0.203893\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.380089,\n\t\t\t\t\"y\": 0.201137\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.396436,\n\t\t\t\t\"y\": 0.200651\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.412791,\n\t\t\t\t\"y\": 0.200601\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.429145,\n\t\t\t\t\"y\": 0.200772\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.445498,\n\t\t\t\t\"y\": 0.201088\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.461847,\n\t\t\t\t\"y\": 0.201516\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.478194,\n\t\t\t\t\"y\": 0.202041\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.494538,\n\t\t\t\t\"y\": 0.202658\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.510878,\n\t\t\t\t\"y\": 0.203364\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.527213,\n\t\t\t\t\"y\": 0.204166\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.543543,\n\t\t\t\t\"y\": 0.205073\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.559866,\n\t\t\t\t\"y\": 0.206106\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.576178,\n\t\t\t\t\"y\": 0.207299\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.592471,\n\t\t\t\t\"y\": 0.208722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.608729,\n\t\t\t\t\"y\": 0.210501\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.624916,\n\t\t\t\t\"y\": 0.212837\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.640948,\n\t\t\t\t\"y\": 0.216062\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.65661,\n\t\t\t\t\"y\": 0.220749\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.671327,\n\t\t\t\t\"y\": 0.227832\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.683835,\n\t\t\t\t\"y\": 0.238305\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.692881,\n\t\t\t\t\"y\": 0.251894\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.698217,\n\t\t\t\t\"y\": 0.267347\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.700394,\n\t\t\t\t\"y\": 0.283568\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.700093,\n\t\t\t\t\"y\": 0.299941\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.697742,\n\t\t\t\t\"y\": 0.316148\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.693387,\n\t\t\t\t\"y\": 0.331931\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.685342,\n\t\t\t\t\"y\": 0.345945\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.673186,\n\t\t\t\t\"y\": 0.337484\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.665264,\n\t\t\t\t\"y\": 0.323152\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.657711,\n\t\t\t\t\"y\": 0.308617\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.649762,\n\t\t\t\t\"y\": 0.294297\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.640916,\n\t\t\t\t\"y\": 0.280519\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.630538,\n\t\t\t\t\"y\": 0.267873\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.618219,\n\t\t\t\t\"y\": 0.257127\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.604246,\n\t\t\t\t\"y\": 0.248643\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.589235,\n\t\t\t\t\"y\": 0.242159\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.573685,\n\t\t\t\t\"y\": 0.237091\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.557867,\n\t\t\t\t\"y\": 0.232932\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.541898,\n\t\t\t\t\"y\": 0.229398\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.525832,\n\t\t\t\t\"y\": 0.22633\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.509701,\n\t\t\t\t\"y\": 0.223627\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.493523,\n\t\t\t\t\"y\": 0.221221\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.477311,\n\t\t\t\t\"y\": 0.219064\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.461071,\n\t\t\t\t\"y\": 0.217117\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.444814,\n\t\t\t\t\"y\": 0.215324\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.428548,\n\t\t\t\t\"y\": 0.213621\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.412279,\n\t\t\t\t\"y\": 0.21194\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.396018,\n\t\t\t\t\"y\": 0.21018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.379794,\n\t\t\t\t\"y\": 0.208116\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t]\n\t},\n\t\"no_mouth\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.708191,\n\t\t\t\t\"y\": 0.6214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.707865,\n\t\t\t\t\"y\": 0.614079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.706885,\n\t\t\t\t\"y\": 0.606817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.705245,\n\t\t\t\t\"y\": 0.599675\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.702935,\n\t\t\t\t\"y\": 0.592722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.699944,\n\t\t\t\t\"y\": 0.586036\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.696261,\n\t\t\t\t\"y\": 0.579706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.691878,\n\t\t\t\t\"y\": 0.573841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.6868,\n\t\t\t\t\"y\": 0.568571\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.681053,\n\t\t\t\t\"y\": 0.564045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.674695,\n\t\t\t\t\"y\": 0.560432\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.667839,\n\t\t\t\t\"y\": 0.557899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.66065,\n\t\t\t\t\"y\": 0.556591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.653343,\n\t\t\t\t\"y\": 0.556591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.646154,\n\t\t\t\t\"y\": 0.557899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.639298,\n\t\t\t\t\"y\": 0.560432\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.632941,\n\t\t\t\t\"y\": 0.564045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.627193,\n\t\t\t\t\"y\": 0.568571\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.622115,\n\t\t\t\t\"y\": 0.573841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.617732,\n\t\t\t\t\"y\": 0.579706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.614049,\n\t\t\t\t\"y\": 0.586036\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.611058,\n\t\t\t\t\"y\": 0.592722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.608748,\n\t\t\t\t\"y\": 0.599675\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.607108,\n\t\t\t\t\"y\": 0.606817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606128,\n\t\t\t\t\"y\": 0.614079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.605802,\n\t\t\t\t\"y\": 0.6214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606128,\n\t\t\t\t\"y\": 0.628721\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.607108,\n\t\t\t\t\"y\": 0.635983\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.608748,\n\t\t\t\t\"y\": 0.643125\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.611058,\n\t\t\t\t\"y\": 0.650077\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.614049,\n\t\t\t\t\"y\": 0.656764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.617732,\n\t\t\t\t\"y\": 0.663094\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.622115,\n\t\t\t\t\"y\": 0.668959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.627193,\n\t\t\t\t\"y\": 0.674229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.632941,\n\t\t\t\t\"y\": 0.678755\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.639298,\n\t\t\t\t\"y\": 0.682368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.646154,\n\t\t\t\t\"y\": 0.684901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.653343,\n\t\t\t\t\"y\": 0.686209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.66065,\n\t\t\t\t\"y\": 0.686209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.667839,\n\t\t\t\t\"y\": 0.684901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.674695,\n\t\t\t\t\"y\": 0.682368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.681053,\n\t\t\t\t\"y\": 0.678755\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.6868,\n\t\t\t\t\"y\": 0.674229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.691878,\n\t\t\t\t\"y\": 0.668959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.696261,\n\t\t\t\t\"y\": 0.663094\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.699944,\n\t\t\t\t\"y\": 0.656764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.702935,\n\t\t\t\t\"y\": 0.650077\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.705245,\n\t\t\t\t\"y\": 0.643125\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.706885,\n\t\t\t\t\"y\": 0.635983\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.707865,\n\t\t\t\t\"y\": 0.628721\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.291809,\n\t\t\t\t\"y\": 0.6214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.292135,\n\t\t\t\t\"y\": 0.614079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.293115,\n\t\t\t\t\"y\": 0.606817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.294755,\n\t\t\t\t\"y\": 0.599675\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.297065,\n\t\t\t\t\"y\": 0.592722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.300056,\n\t\t\t\t\"y\": 0.586036\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.303739,\n\t\t\t\t\"y\": 0.579706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.308122,\n\t\t\t\t\"y\": 0.573841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.3132,\n\t\t\t\t\"y\": 0.568571\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.318947,\n\t\t\t\t\"y\": 0.564045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.325305,\n\t\t\t\t\"y\": 0.560432\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.332161,\n\t\t\t\t\"y\": 0.557899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.33935,\n\t\t\t\t\"y\": 0.556591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.346657,\n\t\t\t\t\"y\": 0.556591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.353846,\n\t\t\t\t\"y\": 0.557899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.360702,\n\t\t\t\t\"y\": 0.560432\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.367059,\n\t\t\t\t\"y\": 0.564045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.372807,\n\t\t\t\t\"y\": 0.568571\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.377885,\n\t\t\t\t\"y\": 0.573841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.382268,\n\t\t\t\t\"y\": 0.579706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.385951,\n\t\t\t\t\"y\": 0.586036\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.388942,\n\t\t\t\t\"y\": 0.592722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.391252,\n\t\t\t\t\"y\": 0.599675\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.392892,\n\t\t\t\t\"y\": 0.606817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.393872,\n\t\t\t\t\"y\": 0.614079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.394198,\n\t\t\t\t\"y\": 0.6214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.393872,\n\t\t\t\t\"y\": 0.628721\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.392892,\n\t\t\t\t\"y\": 0.635983\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.391252,\n\t\t\t\t\"y\": 0.643125\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.388942,\n\t\t\t\t\"y\": 0.650077\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.385951,\n\t\t\t\t\"y\": 0.656764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.382268,\n\t\t\t\t\"y\": 0.663094\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.377885,\n\t\t\t\t\"y\": 0.668959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.372807,\n\t\t\t\t\"y\": 0.674229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.367059,\n\t\t\t\t\"y\": 0.678755\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.360702,\n\t\t\t\t\"y\": 0.682368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.353846,\n\t\t\t\t\"y\": 0.684901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.346657,\n\t\t\t\t\"y\": 0.686209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.33935,\n\t\t\t\t\"y\": 0.686209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.332161,\n\t\t\t\t\"y\": 0.684901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.325305,\n\t\t\t\t\"y\": 0.682368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.318947,\n\t\t\t\t\"y\": 0.678755\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.3132,\n\t\t\t\t\"y\": 0.674229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.308122,\n\t\t\t\t\"y\": 0.668959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.303739,\n\t\t\t\t\"y\": 0.663094\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.300056,\n\t\t\t\t\"y\": 0.656764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.297065,\n\t\t\t\t\"y\": 0.650077\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.294755,\n\t\t\t\t\"y\": 0.643125\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.293115,\n\t\t\t\t\"y\": 0.635983\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.292135,\n\t\t\t\t\"y\": 0.628721\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.437209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 3.4834e-10\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.437209\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.306681\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.499851,\n\t\t\t\t\"y\": 0.306671\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.499704,\n\t\t\t\t\"y\": 0.306643\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.499562,\n\t\t\t\t\"y\": 0.306597\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.499427,\n\t\t\t\t\"y\": 0.306533\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.499301,\n\t\t\t\t\"y\": 0.306453\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.499186,\n\t\t\t\t\"y\": 0.306358\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.499083,\n\t\t\t\t\"y\": 0.306249\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.498996,\n\t\t\t\t\"y\": 0.306127\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.498924,\n\t\t\t\t\"y\": 0.305996\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.498869,\n\t\t\t\t\"y\": 0.305857\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.498831,\n\t\t\t\t\"y\": 0.305712\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.498813,\n\t\t\t\t\"y\": 0.305564\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.498813,\n\t\t\t\t\"y\": 0.305414\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.498831,\n\t\t\t\t\"y\": 0.305265\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.498869,\n\t\t\t\t\"y\": 0.30512\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.498924,\n\t\t\t\t\"y\": 0.304981\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.498996,\n\t\t\t\t\"y\": 0.30485\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.499083,\n\t\t\t\t\"y\": 0.304729\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.499186,\n\t\t\t\t\"y\": 0.30462\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.499301,\n\t\t\t\t\"y\": 0.304524\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.499427,\n\t\t\t\t\"y\": 0.304444\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.499562,\n\t\t\t\t\"y\": 0.30438\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.499704,\n\t\t\t\t\"y\": 0.304334\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.499851,\n\t\t\t\t\"y\": 0.304306\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.304297\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.500149,\n\t\t\t\t\"y\": 0.304306\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.500296,\n\t\t\t\t\"y\": 0.304334\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.500438,\n\t\t\t\t\"y\": 0.30438\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.500573,\n\t\t\t\t\"y\": 0.304444\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.500699,\n\t\t\t\t\"y\": 0.304524\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.500814,\n\t\t\t\t\"y\": 0.30462\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.500917,\n\t\t\t\t\"y\": 0.304729\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.501004,\n\t\t\t\t\"y\": 0.30485\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.501076,\n\t\t\t\t\"y\": 0.304981\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.501131,\n\t\t\t\t\"y\": 0.30512\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.501169,\n\t\t\t\t\"y\": 0.305265\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.501187,\n\t\t\t\t\"y\": 0.305414\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.501187,\n\t\t\t\t\"y\": 0.305564\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.501169,\n\t\t\t\t\"y\": 0.305712\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.501131,\n\t\t\t\t\"y\": 0.305857\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.501076,\n\t\t\t\t\"y\": 0.305996\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.501004,\n\t\t\t\t\"y\": 0.306127\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.500917,\n\t\t\t\t\"y\": 0.306249\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.500814,\n\t\t\t\t\"y\": 0.306358\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.500699,\n\t\t\t\t\"y\": 0.306453\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.500573,\n\t\t\t\t\"y\": 0.306533\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.500438,\n\t\t\t\t\"y\": 0.306597\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.500296,\n\t\t\t\t\"y\": 0.306643\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.500149,\n\t\t\t\t\"y\": 0.306671\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t]\n\t},\n\t\"neutral_face\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.708191,\n\t\t\t\t\"y\": 0.601682\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.707923,\n\t\t\t\t\"y\": 0.593\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.707113,\n\t\t\t\t\"y\": 0.584351\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.705749,\n\t\t\t\t\"y\": 0.575773\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.703807,\n\t\t\t\t\"y\": 0.567308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.701253,\n\t\t\t\t\"y\": 0.559008\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.69804,\n\t\t\t\t\"y\": 0.550942\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.694108,\n\t\t\t\t\"y\": 0.543203\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.689378,\n\t\t\t\t\"y\": 0.535928\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.683763,\n\t\t\t\t\"y\": 0.529317\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.677188,\n\t\t\t\t\"y\": 0.523671\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.669646,\n\t\t\t\t\"y\": 0.519421\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.661318,\n\t\t\t\t\"y\": 0.517092\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.652675,\n\t\t\t\t\"y\": 0.517092\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.644348,\n\t\t\t\t\"y\": 0.519421\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.636805,\n\t\t\t\t\"y\": 0.523671\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.63023,\n\t\t\t\t\"y\": 0.529317\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.624616,\n\t\t\t\t\"y\": 0.535928\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.619886,\n\t\t\t\t\"y\": 0.543203\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.615953,\n\t\t\t\t\"y\": 0.550942\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.61274,\n\t\t\t\t\"y\": 0.559008\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.610186,\n\t\t\t\t\"y\": 0.567308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.608244,\n\t\t\t\t\"y\": 0.575773\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.60688,\n\t\t\t\t\"y\": 0.584351\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.60607,\n\t\t\t\t\"y\": 0.593\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.605802,\n\t\t\t\t\"y\": 0.601682\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.60607,\n\t\t\t\t\"y\": 0.610364\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.60688,\n\t\t\t\t\"y\": 0.619012\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.608244,\n\t\t\t\t\"y\": 0.62759\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.610186,\n\t\t\t\t\"y\": 0.636055\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.61274,\n\t\t\t\t\"y\": 0.644355\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.615953,\n\t\t\t\t\"y\": 0.652422\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.619886,\n\t\t\t\t\"y\": 0.66016\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.624616,\n\t\t\t\t\"y\": 0.667436\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.63023,\n\t\t\t\t\"y\": 0.674047\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.636805,\n\t\t\t\t\"y\": 0.679693\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.644348,\n\t\t\t\t\"y\": 0.683943\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.652675,\n\t\t\t\t\"y\": 0.686272\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.661318,\n\t\t\t\t\"y\": 0.686272\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.669646,\n\t\t\t\t\"y\": 0.683943\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.677188,\n\t\t\t\t\"y\": 0.679693\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.683763,\n\t\t\t\t\"y\": 0.674047\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.689378,\n\t\t\t\t\"y\": 0.667436\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.694108,\n\t\t\t\t\"y\": 0.66016\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.69804,\n\t\t\t\t\"y\": 0.652422\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.701253,\n\t\t\t\t\"y\": 0.644355\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.703807,\n\t\t\t\t\"y\": 0.636055\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.705749,\n\t\t\t\t\"y\": 0.62759\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.707113,\n\t\t\t\t\"y\": 0.619012\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.707923,\n\t\t\t\t\"y\": 0.610364\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.291809,\n\t\t\t\t\"y\": 0.601682\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.292077,\n\t\t\t\t\"y\": 0.593\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.292887,\n\t\t\t\t\"y\": 0.584351\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.294251,\n\t\t\t\t\"y\": 0.575773\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.296193,\n\t\t\t\t\"y\": 0.567308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.298747,\n\t\t\t\t\"y\": 0.559008\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.30196,\n\t\t\t\t\"y\": 0.550942\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.305892,\n\t\t\t\t\"y\": 0.543203\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.310622,\n\t\t\t\t\"y\": 0.535928\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.316237,\n\t\t\t\t\"y\": 0.529317\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.322812,\n\t\t\t\t\"y\": 0.523671\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.330354,\n\t\t\t\t\"y\": 0.519421\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.338682,\n\t\t\t\t\"y\": 0.517092\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.347325,\n\t\t\t\t\"y\": 0.517092\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.355652,\n\t\t\t\t\"y\": 0.519421\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.363195,\n\t\t\t\t\"y\": 0.523671\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.36977,\n\t\t\t\t\"y\": 0.529317\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.375384,\n\t\t\t\t\"y\": 0.535928\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.380114,\n\t\t\t\t\"y\": 0.543203\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.384047,\n\t\t\t\t\"y\": 0.550942\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.38726,\n\t\t\t\t\"y\": 0.559008\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.389814,\n\t\t\t\t\"y\": 0.567308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.391756,\n\t\t\t\t\"y\": 0.575773\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.39312,\n\t\t\t\t\"y\": 0.584351\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.39393,\n\t\t\t\t\"y\": 0.593\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.394198,\n\t\t\t\t\"y\": 0.601682\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.39393,\n\t\t\t\t\"y\": 0.610364\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.39312,\n\t\t\t\t\"y\": 0.619012\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.391756,\n\t\t\t\t\"y\": 0.62759\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.389814,\n\t\t\t\t\"y\": 0.636055\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.38726,\n\t\t\t\t\"y\": 0.644355\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.384047,\n\t\t\t\t\"y\": 0.652422\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.380114,\n\t\t\t\t\"y\": 0.66016\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.375384,\n\t\t\t\t\"y\": 0.667436\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.36977,\n\t\t\t\t\"y\": 0.674047\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.363195,\n\t\t\t\t\"y\": 0.679693\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.355652,\n\t\t\t\t\"y\": 0.683943\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.347325,\n\t\t\t\t\"y\": 0.686272\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.338682,\n\t\t\t\t\"y\": 0.686272\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.330354,\n\t\t\t\t\"y\": 0.683943\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.322812,\n\t\t\t\t\"y\": 0.679693\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.316237,\n\t\t\t\t\"y\": 0.674047\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.310622,\n\t\t\t\t\"y\": 0.667436\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.305892,\n\t\t\t\t\"y\": 0.66016\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.30196,\n\t\t\t\t\"y\": 0.652422\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.298747,\n\t\t\t\t\"y\": 0.644355\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.296193,\n\t\t\t\t\"y\": 0.636055\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.294251,\n\t\t\t\t\"y\": 0.62759\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.292887,\n\t\t\t\t\"y\": 0.619012\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.292077,\n\t\t\t\t\"y\": 0.610364\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.437209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 3.4834e-10\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.437209\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.238534,\n\t\t\t\t\"y\": 0.335905\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.24958,\n\t\t\t\t\"y\": 0.317285\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.270261,\n\t\t\t\t\"y\": 0.308977\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.292659,\n\t\t\t\t\"y\": 0.307925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.31512,\n\t\t\t\t\"y\": 0.307925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.337581,\n\t\t\t\t\"y\": 0.307925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.360041,\n\t\t\t\t\"y\": 0.307925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.382502,\n\t\t\t\t\"y\": 0.307925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.404963,\n\t\t\t\t\"y\": 0.307925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.427423,\n\t\t\t\t\"y\": 0.307925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.449884,\n\t\t\t\t\"y\": 0.307925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.472345,\n\t\t\t\t\"y\": 0.307925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.494805,\n\t\t\t\t\"y\": 0.307925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.517266,\n\t\t\t\t\"y\": 0.307925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.539727,\n\t\t\t\t\"y\": 0.307925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.562187,\n\t\t\t\t\"y\": 0.307925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.584648,\n\t\t\t\t\"y\": 0.307925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.607109,\n\t\t\t\t\"y\": 0.307925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.629569,\n\t\t\t\t\"y\": 0.307925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.65203,\n\t\t\t\t\"y\": 0.307925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.674491,\n\t\t\t\t\"y\": 0.307925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.696951,\n\t\t\t\t\"y\": 0.307925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.719412,\n\t\t\t\t\"y\": 0.307942\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.74132,\n\t\t\t\t\"y\": 0.312311\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.758652,\n\t\t\t\t\"y\": 0.326013\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.761466,\n\t\t\t\t\"y\": 0.348\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.75042,\n\t\t\t\t\"y\": 0.366619\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.729739,\n\t\t\t\t\"y\": 0.374927\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.707341,\n\t\t\t\t\"y\": 0.37598\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.68488,\n\t\t\t\t\"y\": 0.37598\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.662419,\n\t\t\t\t\"y\": 0.37598\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.639959,\n\t\t\t\t\"y\": 0.37598\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.617498,\n\t\t\t\t\"y\": 0.37598\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.595037,\n\t\t\t\t\"y\": 0.37598\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.572577,\n\t\t\t\t\"y\": 0.37598\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.550116,\n\t\t\t\t\"y\": 0.37598\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.527655,\n\t\t\t\t\"y\": 0.37598\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.505195,\n\t\t\t\t\"y\": 0.37598\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.482734,\n\t\t\t\t\"y\": 0.37598\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.460273,\n\t\t\t\t\"y\": 0.37598\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.437813,\n\t\t\t\t\"y\": 0.37598\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.415352,\n\t\t\t\t\"y\": 0.37598\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.392891,\n\t\t\t\t\"y\": 0.37598\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.370431,\n\t\t\t\t\"y\": 0.37598\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.34797,\n\t\t\t\t\"y\": 0.37598\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.325509,\n\t\t\t\t\"y\": 0.37598\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.303049,\n\t\t\t\t\"y\": 0.37598\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.280588,\n\t\t\t\t\"y\": 0.375963\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.25868,\n\t\t\t\t\"y\": 0.371594\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.241348,\n\t\t\t\t\"y\": 0.357892\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t]\n\t},\n\t\"expressionless\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.755963,\n\t\t\t\t\"y\": 0.59831\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.754301,\n\t\t\t\t\"y\": 0.589148\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.747377,\n\t\t\t\t\"y\": 0.58292\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.73825,\n\t\t\t\t\"y\": 0.580823\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.728809,\n\t\t\t\t\"y\": 0.580822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.719368,\n\t\t\t\t\"y\": 0.580822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.709927,\n\t\t\t\t\"y\": 0.580822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.700485,\n\t\t\t\t\"y\": 0.580822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.691044,\n\t\t\t\t\"y\": 0.580822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.681603,\n\t\t\t\t\"y\": 0.580822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.672162,\n\t\t\t\t\"y\": 0.580822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.662721,\n\t\t\t\t\"y\": 0.580822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.65328,\n\t\t\t\t\"y\": 0.580822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.643839,\n\t\t\t\t\"y\": 0.580822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.634397,\n\t\t\t\t\"y\": 0.580822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.624956,\n\t\t\t\t\"y\": 0.580822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.615515,\n\t\t\t\t\"y\": 0.580822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606074,\n\t\t\t\t\"y\": 0.580822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.596633,\n\t\t\t\t\"y\": 0.580822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.587192,\n\t\t\t\t\"y\": 0.580822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.57775,\n\t\t\t\t\"y\": 0.580822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.568309,\n\t\t\t\t\"y\": 0.580822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.558868,\n\t\t\t\t\"y\": 0.580823\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.549741,\n\t\t\t\t\"y\": 0.58292\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.542818,\n\t\t\t\t\"y\": 0.589148\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.541155,\n\t\t\t\t\"y\": 0.59831\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.542818,\n\t\t\t\t\"y\": 0.607472\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.549741,\n\t\t\t\t\"y\": 0.6137\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.558868,\n\t\t\t\t\"y\": 0.615797\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.568309,\n\t\t\t\t\"y\": 0.615798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.57775,\n\t\t\t\t\"y\": 0.615798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.587192,\n\t\t\t\t\"y\": 0.615798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.596633,\n\t\t\t\t\"y\": 0.615798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606074,\n\t\t\t\t\"y\": 0.615798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.615515,\n\t\t\t\t\"y\": 0.615798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.624956,\n\t\t\t\t\"y\": 0.615798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.634397,\n\t\t\t\t\"y\": 0.615798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.643839,\n\t\t\t\t\"y\": 0.615798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.65328,\n\t\t\t\t\"y\": 0.615798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.662721,\n\t\t\t\t\"y\": 0.615798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.672162,\n\t\t\t\t\"y\": 0.615798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.681603,\n\t\t\t\t\"y\": 0.615798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.691044,\n\t\t\t\t\"y\": 0.615798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.700485,\n\t\t\t\t\"y\": 0.615798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.709927,\n\t\t\t\t\"y\": 0.615798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.719368,\n\t\t\t\t\"y\": 0.615798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.728809,\n\t\t\t\t\"y\": 0.615798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.73825,\n\t\t\t\t\"y\": 0.615797\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.747377,\n\t\t\t\t\"y\": 0.6137\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.754301,\n\t\t\t\t\"y\": 0.607472\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.244037,\n\t\t\t\t\"y\": 0.595202\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.24754,\n\t\t\t\t\"y\": 0.586655\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.255506,\n\t\t\t\t\"y\": 0.581781\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.264852,\n\t\t\t\t\"y\": 0.580822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.274293,\n\t\t\t\t\"y\": 0.580822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.283734,\n\t\t\t\t\"y\": 0.580822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.293175,\n\t\t\t\t\"y\": 0.580822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.302617,\n\t\t\t\t\"y\": 0.580822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.312058,\n\t\t\t\t\"y\": 0.580822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.321499,\n\t\t\t\t\"y\": 0.580822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.33094,\n\t\t\t\t\"y\": 0.580822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.340381,\n\t\t\t\t\"y\": 0.580822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.349822,\n\t\t\t\t\"y\": 0.580822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.359263,\n\t\t\t\t\"y\": 0.580822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.368705,\n\t\t\t\t\"y\": 0.580822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.378146,\n\t\t\t\t\"y\": 0.580822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.387587,\n\t\t\t\t\"y\": 0.580822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.397028,\n\t\t\t\t\"y\": 0.580822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406469,\n\t\t\t\t\"y\": 0.580822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.41591,\n\t\t\t\t\"y\": 0.580822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.425352,\n\t\t\t\t\"y\": 0.580822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.434793,\n\t\t\t\t\"y\": 0.580822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.444222,\n\t\t\t\t\"y\": 0.581064\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.452919,\n\t\t\t\t\"y\": 0.584511\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.458396,\n\t\t\t\t\"y\": 0.592\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.458845,\n\t\t\t\t\"y\": 0.601418\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.455341,\n\t\t\t\t\"y\": 0.609965\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.447376,\n\t\t\t\t\"y\": 0.614839\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.43803,\n\t\t\t\t\"y\": 0.615798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.428589,\n\t\t\t\t\"y\": 0.615798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.419148,\n\t\t\t\t\"y\": 0.615798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.409706,\n\t\t\t\t\"y\": 0.615798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.400265,\n\t\t\t\t\"y\": 0.615798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.390824,\n\t\t\t\t\"y\": 0.615798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.381383,\n\t\t\t\t\"y\": 0.615798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.371942,\n\t\t\t\t\"y\": 0.615798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.362501,\n\t\t\t\t\"y\": 0.615798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.353059,\n\t\t\t\t\"y\": 0.615798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.343618,\n\t\t\t\t\"y\": 0.615798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.334177,\n\t\t\t\t\"y\": 0.615798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.324736,\n\t\t\t\t\"y\": 0.615798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.315295,\n\t\t\t\t\"y\": 0.615798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.305854,\n\t\t\t\t\"y\": 0.615798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.296413,\n\t\t\t\t\"y\": 0.615798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.286971,\n\t\t\t\t\"y\": 0.615798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.27753,\n\t\t\t\t\"y\": 0.615798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.268089,\n\t\t\t\t\"y\": 0.615798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.25866,\n\t\t\t\t\"y\": 0.615556\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.249963,\n\t\t\t\t\"y\": 0.612109\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.244486,\n\t\t\t\t\"y\": 0.60462\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.437209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 3.4834e-10\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.437209\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.238534,\n\t\t\t\t\"y\": 0.335905\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.24958,\n\t\t\t\t\"y\": 0.317285\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.270261,\n\t\t\t\t\"y\": 0.308977\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.292659,\n\t\t\t\t\"y\": 0.307925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.31512,\n\t\t\t\t\"y\": 0.307925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.337581,\n\t\t\t\t\"y\": 0.307925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.360041,\n\t\t\t\t\"y\": 0.307925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.382502,\n\t\t\t\t\"y\": 0.307925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.404963,\n\t\t\t\t\"y\": 0.307925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.427423,\n\t\t\t\t\"y\": 0.307925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.449884,\n\t\t\t\t\"y\": 0.307925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.472345,\n\t\t\t\t\"y\": 0.307925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.494805,\n\t\t\t\t\"y\": 0.307925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.517266,\n\t\t\t\t\"y\": 0.307925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.539727,\n\t\t\t\t\"y\": 0.307925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.562187,\n\t\t\t\t\"y\": 0.307925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.584648,\n\t\t\t\t\"y\": 0.307925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.607109,\n\t\t\t\t\"y\": 0.307925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.629569,\n\t\t\t\t\"y\": 0.307925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.65203,\n\t\t\t\t\"y\": 0.307925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.674491,\n\t\t\t\t\"y\": 0.307925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.696951,\n\t\t\t\t\"y\": 0.307925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.719412,\n\t\t\t\t\"y\": 0.307942\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.74132,\n\t\t\t\t\"y\": 0.312311\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.758652,\n\t\t\t\t\"y\": 0.326013\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.761466,\n\t\t\t\t\"y\": 0.348\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.75042,\n\t\t\t\t\"y\": 0.366619\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.729739,\n\t\t\t\t\"y\": 0.374927\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.707341,\n\t\t\t\t\"y\": 0.37598\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.68488,\n\t\t\t\t\"y\": 0.37598\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.662419,\n\t\t\t\t\"y\": 0.37598\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.639959,\n\t\t\t\t\"y\": 0.37598\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.617498,\n\t\t\t\t\"y\": 0.37598\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.595037,\n\t\t\t\t\"y\": 0.37598\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.572577,\n\t\t\t\t\"y\": 0.37598\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.550116,\n\t\t\t\t\"y\": 0.37598\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.527655,\n\t\t\t\t\"y\": 0.37598\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.505195,\n\t\t\t\t\"y\": 0.37598\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.482734,\n\t\t\t\t\"y\": 0.37598\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.460273,\n\t\t\t\t\"y\": 0.37598\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.437813,\n\t\t\t\t\"y\": 0.37598\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.415352,\n\t\t\t\t\"y\": 0.37598\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.392891,\n\t\t\t\t\"y\": 0.37598\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.370431,\n\t\t\t\t\"y\": 0.37598\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.34797,\n\t\t\t\t\"y\": 0.37598\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.325509,\n\t\t\t\t\"y\": 0.37598\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.303049,\n\t\t\t\t\"y\": 0.37598\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.280588,\n\t\t\t\t\"y\": 0.375963\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.25868,\n\t\t\t\t\"y\": 0.371594\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.241348,\n\t\t\t\t\"y\": 0.357892\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t]\n\t},\n\t\"disappointed\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.818289,\n\t\t\t\t\"y\": 0.383207\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.810748,\n\t\t\t\t\"y\": 0.376125\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.800687,\n\t\t\t\t\"y\": 0.373975\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.791116,\n\t\t\t\t\"y\": 0.377728\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.783064,\n\t\t\t\t\"y\": 0.384368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.774738,\n\t\t\t\t\"y\": 0.39066\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.76616,\n\t\t\t\t\"y\": 0.396603\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.757353,\n\t\t\t\t\"y\": 0.402199\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.748337,\n\t\t\t\t\"y\": 0.407451\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.739134,\n\t\t\t\t\"y\": 0.412367\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.729764,\n\t\t\t\t\"y\": 0.416954\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.720244,\n\t\t\t\t\"y\": 0.421222\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.710592,\n\t\t\t\t\"y\": 0.42518\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.700824,\n\t\t\t\t\"y\": 0.428841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.690954,\n\t\t\t\t\"y\": 0.432215\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.680994,\n\t\t\t\t\"y\": 0.435315\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.670956,\n\t\t\t\t\"y\": 0.438151\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.660851,\n\t\t\t\t\"y\": 0.440736\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.650687,\n\t\t\t\t\"y\": 0.44308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.640474,\n\t\t\t\t\"y\": 0.445195\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.630218,\n\t\t\t\t\"y\": 0.447091\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.61999,\n\t\t\t\t\"y\": 0.449069\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.611718,\n\t\t\t\t\"y\": 0.455185\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.608103,\n\t\t\t\t\"y\": 0.46484\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.609116,\n\t\t\t\t\"y\": 0.475217\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.612557,\n\t\t\t\t\"y\": 0.484955\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.62061,\n\t\t\t\t\"y\": 0.491368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.630849,\n\t\t\t\t\"y\": 0.492254\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.641101,\n\t\t\t\t\"y\": 0.490336\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.651318,\n\t\t\t\t\"y\": 0.488241\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.661497,\n\t\t\t\t\"y\": 0.485962\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.67163,\n\t\t\t\t\"y\": 0.483492\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.681714,\n\t\t\t\t\"y\": 0.480822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.69174,\n\t\t\t\t\"y\": 0.477946\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.701702,\n\t\t\t\t\"y\": 0.474853\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.711592,\n\t\t\t\t\"y\": 0.471535\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.721401,\n\t\t\t\t\"y\": 0.467984\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.731119,\n\t\t\t\t\"y\": 0.464192\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.740735,\n\t\t\t\t\"y\": 0.460149\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.75024,\n\t\t\t\t\"y\": 0.455846\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.759619,\n\t\t\t\t\"y\": 0.451277\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.76886,\n\t\t\t\t\"y\": 0.446433\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.777948,\n\t\t\t\t\"y\": 0.441307\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.786868,\n\t\t\t\t\"y\": 0.435893\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.795605,\n\t\t\t\t\"y\": 0.430187\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.804142,\n\t\t\t\t\"y\": 0.424184\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.812461,\n\t\t\t\t\"y\": 0.417883\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.820491,\n\t\t\t\t\"y\": 0.411222\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.825195,\n\t\t\t\t\"y\": 0.402064\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.824133,\n\t\t\t\t\"y\": 0.391808\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.181669,\n\t\t\t\t\"y\": 0.383259\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.189193,\n\t\t\t\t\"y\": 0.376157\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.199246,\n\t\t\t\t\"y\": 0.37397\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.208831,\n\t\t\t\t\"y\": 0.377686\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.216883,\n\t\t\t\t\"y\": 0.384327\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.225208,\n\t\t\t\t\"y\": 0.390621\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.233784,\n\t\t\t\t\"y\": 0.396566\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.24259,\n\t\t\t\t\"y\": 0.402164\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.251604,\n\t\t\t\t\"y\": 0.407419\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.260806,\n\t\t\t\t\"y\": 0.412337\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.270175,\n\t\t\t\t\"y\": 0.416926\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.279694,\n\t\t\t\t\"y\": 0.421195\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.289345,\n\t\t\t\t\"y\": 0.425156\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.299113,\n\t\t\t\t\"y\": 0.428819\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.308983,\n\t\t\t\t\"y\": 0.432194\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.318942,\n\t\t\t\t\"y\": 0.435296\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.328979,\n\t\t\t\t\"y\": 0.438133\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.339084,\n\t\t\t\t\"y\": 0.44072\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.349247,\n\t\t\t\t\"y\": 0.443066\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.35946,\n\t\t\t\t\"y\": 0.445182\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.369716,\n\t\t\t\t\"y\": 0.44708\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.379947,\n\t\t\t\t\"y\": 0.449047\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.388242,\n\t\t\t\t\"y\": 0.455132\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.391892,\n\t\t\t\t\"y\": 0.464773\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.390894,\n\t\t\t\t\"y\": 0.475151\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.387481,\n\t\t\t\t\"y\": 0.4849\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.379453,\n\t\t\t\t\"y\": 0.491343\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.369217,\n\t\t\t\t\"y\": 0.492266\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.358965,\n\t\t\t\t\"y\": 0.490348\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.348747,\n\t\t\t\t\"y\": 0.488255\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.338569,\n\t\t\t\t\"y\": 0.485977\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.328434,\n\t\t\t\t\"y\": 0.483508\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.318351,\n\t\t\t\t\"y\": 0.48084\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.308324,\n\t\t\t\t\"y\": 0.477965\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.298362,\n\t\t\t\t\"y\": 0.474873\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.288471,\n\t\t\t\t\"y\": 0.471557\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.278662,\n\t\t\t\t\"y\": 0.468008\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.268943,\n\t\t\t\t\"y\": 0.464217\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.259326,\n\t\t\t\t\"y\": 0.460175\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.249821,\n\t\t\t\t\"y\": 0.455875\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.240441,\n\t\t\t\t\"y\": 0.451307\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.231199,\n\t\t\t\t\"y\": 0.446465\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.22211,\n\t\t\t\t\"y\": 0.441341\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.213188,\n\t\t\t\t\"y\": 0.435929\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.20445,\n\t\t\t\t\"y\": 0.430225\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.195913,\n\t\t\t\t\"y\": 0.424224\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.187592,\n\t\t\t\t\"y\": 0.417925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.179556,\n\t\t\t\t\"y\": 0.41127\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.174817,\n\t\t\t\t\"y\": 0.40213\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.175842,\n\t\t\t\t\"y\": 0.391871\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.437209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 3.4834e-10\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.437209\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.359368,\n\t\t\t\t\"y\": 0.167633\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.369543,\n\t\t\t\t\"y\": 0.177251\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.380707,\n\t\t\t\t\"y\": 0.185704\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.39254,\n\t\t\t\t\"y\": 0.19319\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.404868,\n\t\t\t\t\"y\": 0.199828\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.417584,\n\t\t\t\t\"y\": 0.205687\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.430616,\n\t\t\t\t\"y\": 0.2108\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.443915,\n\t\t\t\t\"y\": 0.215171\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.457441,\n\t\t\t\t\"y\": 0.218774\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.47116,\n\t\t\t\t\"y\": 0.22155\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.485033,\n\t\t\t\t\"y\": 0.223395\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.499007,\n\t\t\t\t\"y\": 0.224133\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.512989,\n\t\t\t\t\"y\": 0.223573\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.52688,\n\t\t\t\t\"y\": 0.221872\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.540623,\n\t\t\t\t\"y\": 0.21922\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.554179,\n\t\t\t\t\"y\": 0.21573\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.567512,\n\t\t\t\t\"y\": 0.211466\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.580585,\n\t\t\t\t\"y\": 0.206458\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593349,\n\t\t\t\t\"y\": 0.200706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.605738,\n\t\t\t\t\"y\": 0.194182\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.61765,\n\t\t\t\t\"y\": 0.186822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.628923,\n\t\t\t\t\"y\": 0.178516\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.639267,\n\t\t\t\t\"y\": 0.169079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.63974,\n\t\t\t\t\"y\": 0.179624\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.636513,\n\t\t\t\t\"y\": 0.193254\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.631122,\n\t\t\t\t\"y\": 0.206183\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.623851,\n\t\t\t\t\"y\": 0.218153\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.615006,\n\t\t\t\t\"y\": 0.229011\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.604879,\n\t\t\t\t\"y\": 0.238681\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593724,\n\t\t\t\t\"y\": 0.247143\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.581756,\n\t\t\t\t\"y\": 0.254406\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.569151,\n\t\t\t\t\"y\": 0.260495\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.556057,\n\t\t\t\t\"y\": 0.26544\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.542595,\n\t\t\t\t\"y\": 0.26927\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.52887,\n\t\t\t\t\"y\": 0.272008\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.514975,\n\t\t\t\t\"y\": 0.273673\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.500993,\n\t\t\t\t\"y\": 0.274276\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.487006,\n\t\t\t\t\"y\": 0.273823\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.473093,\n\t\t\t\t\"y\": 0.272309\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.459339,\n\t\t\t\t\"y\": 0.269724\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.445834,\n\t\t\t\t\"y\": 0.266051\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.43268,\n\t\t\t\t\"y\": 0.261266\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.419998,\n\t\t\t\t\"y\": 0.255341\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.407929,\n\t\t\t\t\"y\": 0.248246\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.396647,\n\t\t\t\t\"y\": 0.239956\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.386359,\n\t\t\t\t\"y\": 0.230456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.377315,\n\t\t\t\t\"y\": 0.219764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.369802,\n\t\t\t\t\"y\": 0.207944\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.364126,\n\t\t\t\t\"y\": 0.195139\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.360578,\n\t\t\t\t\"y\": 0.181588\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t]\n\t},\n\t\"worried\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.841084,\n\t\t\t\t\"y\": 0.665623\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.834425,\n\t\t\t\t\"y\": 0.672666\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.827528,\n\t\t\t\t\"y\": 0.679475\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.820405,\n\t\t\t\t\"y\": 0.686047\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.813068,\n\t\t\t\t\"y\": 0.692377\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.805527,\n\t\t\t\t\"y\": 0.698463\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.797793,\n\t\t\t\t\"y\": 0.704299\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.789875,\n\t\t\t\t\"y\": 0.709883\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.781782,\n\t\t\t\t\"y\": 0.715209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.773524,\n\t\t\t\t\"y\": 0.720275\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.76511,\n\t\t\t\t\"y\": 0.725075\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.756548,\n\t\t\t\t\"y\": 0.729605\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.747846,\n\t\t\t\t\"y\": 0.73386\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.739013,\n\t\t\t\t\"y\": 0.737834\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.730057,\n\t\t\t\t\"y\": 0.741522\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.720987,\n\t\t\t\t\"y\": 0.744917\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.711811,\n\t\t\t\t\"y\": 0.748013\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.702537,\n\t\t\t\t\"y\": 0.750803\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.693176,\n\t\t\t\t\"y\": 0.753279\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.683735,\n\t\t\t\t\"y\": 0.755434\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.674225,\n\t\t\t\t\"y\": 0.757259\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.664657,\n\t\t\t\t\"y\": 0.758745\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.655042,\n\t\t\t\t\"y\": 0.759882\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.64539,\n\t\t\t\t\"y\": 0.760659\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.647298,\n\t\t\t\t\"y\": 0.764004\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.65599,\n\t\t\t\t\"y\": 0.768272\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.665024,\n\t\t\t\t\"y\": 0.771754\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.674321,\n\t\t\t\t\"y\": 0.774457\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.683806,\n\t\t\t\t\"y\": 0.776392\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.693414,\n\t\t\t\t\"y\": 0.777578\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.703085,\n\t\t\t\t\"y\": 0.778032\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.712762,\n\t\t\t\t\"y\": 0.777777\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.722397,\n\t\t\t\t\"y\": 0.776834\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.731944,\n\t\t\t\t\"y\": 0.775223\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.741359,\n\t\t\t\t\"y\": 0.772967\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.750603,\n\t\t\t\t\"y\": 0.770085\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.759637,\n\t\t\t\t\"y\": 0.766597\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.768422,\n\t\t\t\t\"y\": 0.762521\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.776921,\n\t\t\t\t\"y\": 0.757876\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.785096,\n\t\t\t\t\"y\": 0.752679\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.792907,\n\t\t\t\t\"y\": 0.746948\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.800315,\n\t\t\t\t\"y\": 0.740703\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.807276,\n\t\t\t\t\"y\": 0.733963\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.813748,\n\t\t\t\t\"y\": 0.726748\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.819682,\n\t\t\t\t\"y\": 0.719084\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.825029,\n\t\t\t\t\"y\": 0.710998\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.829737,\n\t\t\t\t\"y\": 0.702523\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.833752,\n\t\t\t\t\"y\": 0.693697\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.837018,\n\t\t\t\t\"y\": 0.684567\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.839479,\n\t\t\t\t\"y\": 0.675187\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.158916,\n\t\t\t\t\"y\": 0.665623\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.165575,\n\t\t\t\t\"y\": 0.672666\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.172472,\n\t\t\t\t\"y\": 0.679475\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.179595,\n\t\t\t\t\"y\": 0.686047\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.186932,\n\t\t\t\t\"y\": 0.692377\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.194473,\n\t\t\t\t\"y\": 0.698463\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.202207,\n\t\t\t\t\"y\": 0.704299\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.210125,\n\t\t\t\t\"y\": 0.709883\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.218218,\n\t\t\t\t\"y\": 0.715209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.226476,\n\t\t\t\t\"y\": 0.720275\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.23489,\n\t\t\t\t\"y\": 0.725075\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.243452,\n\t\t\t\t\"y\": 0.729605\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.252154,\n\t\t\t\t\"y\": 0.73386\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.260987,\n\t\t\t\t\"y\": 0.737834\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.269943,\n\t\t\t\t\"y\": 0.741522\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.279013,\n\t\t\t\t\"y\": 0.744917\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.288189,\n\t\t\t\t\"y\": 0.748013\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.297463,\n\t\t\t\t\"y\": 0.750803\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.306824,\n\t\t\t\t\"y\": 0.753279\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.316265,\n\t\t\t\t\"y\": 0.755434\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.325775,\n\t\t\t\t\"y\": 0.757259\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.335343,\n\t\t\t\t\"y\": 0.758745\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.344958,\n\t\t\t\t\"y\": 0.759882\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.35461,\n\t\t\t\t\"y\": 0.760659\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.352702,\n\t\t\t\t\"y\": 0.764004\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.34401,\n\t\t\t\t\"y\": 0.768272\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.334976,\n\t\t\t\t\"y\": 0.771754\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.325679,\n\t\t\t\t\"y\": 0.774457\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.316194,\n\t\t\t\t\"y\": 0.776392\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.306586,\n\t\t\t\t\"y\": 0.777578\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.296915,\n\t\t\t\t\"y\": 0.778032\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.287238,\n\t\t\t\t\"y\": 0.777777\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.277603,\n\t\t\t\t\"y\": 0.776834\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.268056,\n\t\t\t\t\"y\": 0.775223\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.258641,\n\t\t\t\t\"y\": 0.772967\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.249397,\n\t\t\t\t\"y\": 0.770085\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.240363,\n\t\t\t\t\"y\": 0.766597\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.231578,\n\t\t\t\t\"y\": 0.762521\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.223079,\n\t\t\t\t\"y\": 0.757876\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.214904,\n\t\t\t\t\"y\": 0.752679\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.207093,\n\t\t\t\t\"y\": 0.746948\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.199685,\n\t\t\t\t\"y\": 0.740703\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.192724,\n\t\t\t\t\"y\": 0.733963\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.186252,\n\t\t\t\t\"y\": 0.726748\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.180318,\n\t\t\t\t\"y\": 0.719084\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.174971,\n\t\t\t\t\"y\": 0.710998\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.170263,\n\t\t\t\t\"y\": 0.702523\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.166248,\n\t\t\t\t\"y\": 0.693697\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.162982,\n\t\t\t\t\"y\": 0.684567\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.160521,\n\t\t\t\t\"y\": 0.675187\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.742431,\n\t\t\t\t\"y\": 0.518479\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.742105,\n\t\t\t\t\"y\": 0.511157\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.741124,\n\t\t\t\t\"y\": 0.503895\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.739484,\n\t\t\t\t\"y\": 0.496754\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.737174,\n\t\t\t\t\"y\": 0.489801\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.734183,\n\t\t\t\t\"y\": 0.483114\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.7305,\n\t\t\t\t\"y\": 0.476785\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.726118,\n\t\t\t\t\"y\": 0.47092\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.72104,\n\t\t\t\t\"y\": 0.46565\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.715292,\n\t\t\t\t\"y\": 0.461124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.708935,\n\t\t\t\t\"y\": 0.45751\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.702078,\n\t\t\t\t\"y\": 0.454978\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.694889,\n\t\t\t\t\"y\": 0.45367\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.687583,\n\t\t\t\t\"y\": 0.45367\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.680394,\n\t\t\t\t\"y\": 0.454978\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.673537,\n\t\t\t\t\"y\": 0.45751\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.66718,\n\t\t\t\t\"y\": 0.461124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.661432,\n\t\t\t\t\"y\": 0.46565\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.656355,\n\t\t\t\t\"y\": 0.47092\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.651972,\n\t\t\t\t\"y\": 0.476785\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.648289,\n\t\t\t\t\"y\": 0.483114\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.645298,\n\t\t\t\t\"y\": 0.489801\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.642988,\n\t\t\t\t\"y\": 0.496754\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.641348,\n\t\t\t\t\"y\": 0.503895\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.640368,\n\t\t\t\t\"y\": 0.511157\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.640041,\n\t\t\t\t\"y\": 0.518479\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.640368,\n\t\t\t\t\"y\": 0.5258\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.641348,\n\t\t\t\t\"y\": 0.533062\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.642988,\n\t\t\t\t\"y\": 0.540203\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.645298,\n\t\t\t\t\"y\": 0.547156\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.648289,\n\t\t\t\t\"y\": 0.553843\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.651972,\n\t\t\t\t\"y\": 0.560172\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.656355,\n\t\t\t\t\"y\": 0.566037\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.661432,\n\t\t\t\t\"y\": 0.571307\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.66718,\n\t\t\t\t\"y\": 0.575833\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.673537,\n\t\t\t\t\"y\": 0.579447\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.680394,\n\t\t\t\t\"y\": 0.581979\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.687583,\n\t\t\t\t\"y\": 0.583288\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.694889,\n\t\t\t\t\"y\": 0.583288\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.702078,\n\t\t\t\t\"y\": 0.581979\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.708935,\n\t\t\t\t\"y\": 0.579447\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.715292,\n\t\t\t\t\"y\": 0.575833\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.72104,\n\t\t\t\t\"y\": 0.571307\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.726118,\n\t\t\t\t\"y\": 0.566037\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.7305,\n\t\t\t\t\"y\": 0.560172\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.734183,\n\t\t\t\t\"y\": 0.553843\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.737174,\n\t\t\t\t\"y\": 0.547156\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.739484,\n\t\t\t\t\"y\": 0.540203\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.741124,\n\t\t\t\t\"y\": 0.533062\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.742105,\n\t\t\t\t\"y\": 0.5258\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.257569,\n\t\t\t\t\"y\": 0.518479\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.257895,\n\t\t\t\t\"y\": 0.511157\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.258876,\n\t\t\t\t\"y\": 0.503895\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.260516,\n\t\t\t\t\"y\": 0.496754\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.262826,\n\t\t\t\t\"y\": 0.489801\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.265817,\n\t\t\t\t\"y\": 0.483114\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.2695,\n\t\t\t\t\"y\": 0.476785\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.273882,\n\t\t\t\t\"y\": 0.47092\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.27896,\n\t\t\t\t\"y\": 0.46565\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.284708,\n\t\t\t\t\"y\": 0.461124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.291065,\n\t\t\t\t\"y\": 0.45751\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.297922,\n\t\t\t\t\"y\": 0.454978\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.305111,\n\t\t\t\t\"y\": 0.45367\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.312417,\n\t\t\t\t\"y\": 0.45367\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.319606,\n\t\t\t\t\"y\": 0.454978\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.326463,\n\t\t\t\t\"y\": 0.45751\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.33282,\n\t\t\t\t\"y\": 0.461124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.338568,\n\t\t\t\t\"y\": 0.46565\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.343645,\n\t\t\t\t\"y\": 0.47092\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.348028,\n\t\t\t\t\"y\": 0.476785\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.351711,\n\t\t\t\t\"y\": 0.483114\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.354702,\n\t\t\t\t\"y\": 0.489801\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.357012,\n\t\t\t\t\"y\": 0.496754\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.358652,\n\t\t\t\t\"y\": 0.503895\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.359632,\n\t\t\t\t\"y\": 0.511157\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.359959,\n\t\t\t\t\"y\": 0.518479\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.359632,\n\t\t\t\t\"y\": 0.5258\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.358652,\n\t\t\t\t\"y\": 0.533062\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.357012,\n\t\t\t\t\"y\": 0.540203\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.354702,\n\t\t\t\t\"y\": 0.547156\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.351711,\n\t\t\t\t\"y\": 0.553843\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.348028,\n\t\t\t\t\"y\": 0.560172\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.343645,\n\t\t\t\t\"y\": 0.566037\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.338568,\n\t\t\t\t\"y\": 0.571307\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.33282,\n\t\t\t\t\"y\": 0.575833\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.326463,\n\t\t\t\t\"y\": 0.579447\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.319606,\n\t\t\t\t\"y\": 0.581979\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.312417,\n\t\t\t\t\"y\": 0.583288\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.305111,\n\t\t\t\t\"y\": 0.583288\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.297922,\n\t\t\t\t\"y\": 0.581979\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.291065,\n\t\t\t\t\"y\": 0.579447\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.284708,\n\t\t\t\t\"y\": 0.575833\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.27896,\n\t\t\t\t\"y\": 0.571307\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.273882,\n\t\t\t\t\"y\": 0.566037\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.2695,\n\t\t\t\t\"y\": 0.560172\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.265817,\n\t\t\t\t\"y\": 0.553843\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.262826,\n\t\t\t\t\"y\": 0.547156\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.260516,\n\t\t\t\t\"y\": 0.540203\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.258876,\n\t\t\t\t\"y\": 0.533062\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.257895,\n\t\t\t\t\"y\": 0.5258\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.437209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 3.4834e-10\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.437209\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.30693,\n\t\t\t\t\"y\": 0.211633\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.320899,\n\t\t\t\t\"y\": 0.224838\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.336224,\n\t\t\t\t\"y\": 0.236443\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.35247,\n\t\t\t\t\"y\": 0.246721\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.369395,\n\t\t\t\t\"y\": 0.255834\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.386852,\n\t\t\t\t\"y\": 0.263877\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.404744,\n\t\t\t\t\"y\": 0.270897\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.423002,\n\t\t\t\t\"y\": 0.276898\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.441572,\n\t\t\t\t\"y\": 0.281844\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.460406,\n\t\t\t\t\"y\": 0.285656\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.479452,\n\t\t\t\t\"y\": 0.288188\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.498636,\n\t\t\t\t\"y\": 0.289202\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.517832,\n\t\t\t\t\"y\": 0.288432\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.536903,\n\t\t\t\t\"y\": 0.286097\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.555771,\n\t\t\t\t\"y\": 0.282457\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.574381,\n\t\t\t\t\"y\": 0.277665\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.592686,\n\t\t\t\t\"y\": 0.271811\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.610633,\n\t\t\t\t\"y\": 0.264935\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.628157,\n\t\t\t\t\"y\": 0.257039\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.645165,\n\t\t\t\t\"y\": 0.248082\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.661519,\n\t\t\t\t\"y\": 0.237978\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.676996,\n\t\t\t\t\"y\": 0.226574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.691197,\n\t\t\t\t\"y\": 0.213618\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.691846,\n\t\t\t\t\"y\": 0.228095\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.687416,\n\t\t\t\t\"y\": 0.246809\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.680015,\n\t\t\t\t\"y\": 0.264557\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.670032,\n\t\t\t\t\"y\": 0.280991\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.657889,\n\t\t\t\t\"y\": 0.295898\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.643986,\n\t\t\t\t\"y\": 0.309174\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.628672,\n\t\t\t\t\"y\": 0.320791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.612241,\n\t\t\t\t\"y\": 0.330763\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.594937,\n\t\t\t\t\"y\": 0.339122\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.57696,\n\t\t\t\t\"y\": 0.345911\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.558478,\n\t\t\t\t\"y\": 0.351168\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.539635,\n\t\t\t\t\"y\": 0.354927\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.520559,\n\t\t\t\t\"y\": 0.357213\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.501363,\n\t\t\t\t\"y\": 0.358042\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.482161,\n\t\t\t\t\"y\": 0.357419\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.46306,\n\t\t\t\t\"y\": 0.355341\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.444177,\n\t\t\t\t\"y\": 0.351792\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.425636,\n\t\t\t\t\"y\": 0.34675\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.407578,\n\t\t\t\t\"y\": 0.34018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.390167,\n\t\t\t\t\"y\": 0.332046\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.373598,\n\t\t\t\t\"y\": 0.322306\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.358109,\n\t\t\t\t\"y\": 0.310923\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.343985,\n\t\t\t\t\"y\": 0.297882\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.331569,\n\t\t\t\t\"y\": 0.283203\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.321254,\n\t\t\t\t\"y\": 0.266976\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.313462,\n\t\t\t\t\"y\": 0.249396\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.30859,\n\t\t\t\t\"y\": 0.230792\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t]\n\t},\n\t\"pensive\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.874248,\n\t\t\t\t\"y\": 0.585271\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.866553,\n\t\t\t\t\"y\": 0.5808\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.857679,\n\t\t\t\t\"y\": 0.576925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.848501,\n\t\t\t\t\"y\": 0.573841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.839098,\n\t\t\t\t\"y\": 0.571536\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.82954,\n\t\t\t\t\"y\": 0.569997\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.819892,\n\t\t\t\t\"y\": 0.569203\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.810212,\n\t\t\t\t\"y\": 0.569135\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.800552,\n\t\t\t\t\"y\": 0.569769\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.79096,\n\t\t\t\t\"y\": 0.571083\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.781481,\n\t\t\t\t\"y\": 0.573057\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.772157,\n\t\t\t\t\"y\": 0.575667\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.763027,\n\t\t\t\t\"y\": 0.578893\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.75413,\n\t\t\t\t\"y\": 0.582716\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.745502,\n\t\t\t\t\"y\": 0.587117\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.737182,\n\t\t\t\t\"y\": 0.592076\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.729207,\n\t\t\t\t\"y\": 0.597576\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.721617,\n\t\t\t\t\"y\": 0.603597\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.714451,\n\t\t\t\t\"y\": 0.61012\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.707754,\n\t\t\t\t\"y\": 0.617124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.701568,\n\t\t\t\t\"y\": 0.624586\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.695943,\n\t\t\t\t\"y\": 0.63248\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.690927,\n\t\t\t\t\"y\": 0.640776\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.686574,\n\t\t\t\t\"y\": 0.64944\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.682936,\n\t\t\t\t\"y\": 0.658428\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.68007,\n\t\t\t\t\"y\": 0.667692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.678028,\n\t\t\t\t\"y\": 0.677173\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.679155,\n\t\t\t\t\"y\": 0.681505\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.685773,\n\t\t\t\t\"y\": 0.674423\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.692629,\n\t\t\t\t\"y\": 0.667573\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.699711,\n\t\t\t\t\"y\": 0.660958\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.707009,\n\t\t\t\t\"y\": 0.654581\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.714511,\n\t\t\t\t\"y\": 0.648448\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.722207,\n\t\t\t\t\"y\": 0.642561\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.730089,\n\t\t\t\t\"y\": 0.636925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.738146,\n\t\t\t\t\"y\": 0.631545\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.74637,\n\t\t\t\t\"y\": 0.626425\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.754752,\n\t\t\t\t\"y\": 0.621568\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.763284,\n\t\t\t\t\"y\": 0.616981\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.771957,\n\t\t\t\t\"y\": 0.612669\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.780764,\n\t\t\t\t\"y\": 0.608637\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.789696,\n\t\t\t\t\"y\": 0.604891\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.798744,\n\t\t\t\t\"y\": 0.601438\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.807901,\n\t\t\t\t\"y\": 0.598284\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.817157,\n\t\t\t\t\"y\": 0.595437\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.826504,\n\t\t\t\t\"y\": 0.592904\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.835932,\n\t\t\t\t\"y\": 0.590695\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.845431,\n\t\t\t\t\"y\": 0.588817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.854991,\n\t\t\t\t\"y\": 0.58728\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864601,\n\t\t\t\t\"y\": 0.586095\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.125752,\n\t\t\t\t\"y\": 0.585271\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.133447,\n\t\t\t\t\"y\": 0.5808\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.142321,\n\t\t\t\t\"y\": 0.576925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.151499,\n\t\t\t\t\"y\": 0.573841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.160902,\n\t\t\t\t\"y\": 0.571536\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.17046,\n\t\t\t\t\"y\": 0.569997\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.180108,\n\t\t\t\t\"y\": 0.569203\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.189788,\n\t\t\t\t\"y\": 0.569135\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.199448,\n\t\t\t\t\"y\": 0.569769\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.20904,\n\t\t\t\t\"y\": 0.571083\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.218519,\n\t\t\t\t\"y\": 0.573057\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.227843,\n\t\t\t\t\"y\": 0.575667\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.236973,\n\t\t\t\t\"y\": 0.578893\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.24587,\n\t\t\t\t\"y\": 0.582716\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.254498,\n\t\t\t\t\"y\": 0.587117\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.262818,\n\t\t\t\t\"y\": 0.592076\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.270793,\n\t\t\t\t\"y\": 0.597576\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.278383,\n\t\t\t\t\"y\": 0.603597\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.285549,\n\t\t\t\t\"y\": 0.61012\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.292246,\n\t\t\t\t\"y\": 0.617124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.298432,\n\t\t\t\t\"y\": 0.624586\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.304057,\n\t\t\t\t\"y\": 0.63248\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.309073,\n\t\t\t\t\"y\": 0.640776\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.313426,\n\t\t\t\t\"y\": 0.64944\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.317064,\n\t\t\t\t\"y\": 0.658428\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.31993,\n\t\t\t\t\"y\": 0.667692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.321972,\n\t\t\t\t\"y\": 0.677173\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.320845,\n\t\t\t\t\"y\": 0.681505\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.314227,\n\t\t\t\t\"y\": 0.674423\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.307371,\n\t\t\t\t\"y\": 0.667573\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.300289,\n\t\t\t\t\"y\": 0.660958\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.292991,\n\t\t\t\t\"y\": 0.654581\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.285489,\n\t\t\t\t\"y\": 0.648448\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.277793,\n\t\t\t\t\"y\": 0.642561\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.269911,\n\t\t\t\t\"y\": 0.636925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.261854,\n\t\t\t\t\"y\": 0.631545\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.25363,\n\t\t\t\t\"y\": 0.626425\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.245248,\n\t\t\t\t\"y\": 0.621568\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.236716,\n\t\t\t\t\"y\": 0.616981\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.228043,\n\t\t\t\t\"y\": 0.612669\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.219236,\n\t\t\t\t\"y\": 0.608637\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.210304,\n\t\t\t\t\"y\": 0.604891\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.201256,\n\t\t\t\t\"y\": 0.601438\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.192099,\n\t\t\t\t\"y\": 0.598284\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.182843,\n\t\t\t\t\"y\": 0.595437\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.173496,\n\t\t\t\t\"y\": 0.592904\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.164068,\n\t\t\t\t\"y\": 0.590695\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.154569,\n\t\t\t\t\"y\": 0.588817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.145009,\n\t\t\t\t\"y\": 0.58728\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135399,\n\t\t\t\t\"y\": 0.586095\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.828773,\n\t\t\t\t\"y\": 0.458518\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.82726,\n\t\t\t\t\"y\": 0.446139\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.823377,\n\t\t\t\t\"y\": 0.434287\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.817449,\n\t\t\t\t\"y\": 0.423313\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.809866,\n\t\t\t\t\"y\": 0.413412\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.800992,\n\t\t\t\t\"y\": 0.404649\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.79113,\n\t\t\t\t\"y\": 0.397016\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.780517,\n\t\t\t\t\"y\": 0.39047\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.769334,\n\t\t\t\t\"y\": 0.384955\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.757722,\n\t\t\t\t\"y\": 0.380416\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.745789,\n\t\t\t\t\"y\": 0.376805\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.733624,\n\t\t\t\t\"y\": 0.374083\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.721298,\n\t\t\t\t\"y\": 0.372219\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.708874,\n\t\t\t\t\"y\": 0.371192\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.69641,\n\t\t\t\t\"y\": 0.370989\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.68396,\n\t\t\t\t\"y\": 0.371605\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.671577,\n\t\t\t\t\"y\": 0.373045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.65932,\n\t\t\t\t\"y\": 0.37532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.647253,\n\t\t\t\t\"y\": 0.378453\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.635452,\n\t\t\t\t\"y\": 0.382472\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.624005,\n\t\t\t\t\"y\": 0.387416\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.613029,\n\t\t\t\t\"y\": 0.393331\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.602666,\n\t\t\t\t\"y\": 0.400269\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593108,\n\t\t\t\t\"y\": 0.408279\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.584598,\n\t\t\t\t\"y\": 0.417398\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.577448,\n\t\t\t\t\"y\": 0.427618\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.572027,\n\t\t\t\t\"y\": 0.43885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.568717,\n\t\t\t\t\"y\": 0.450875\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.568414,\n\t\t\t\t\"y\": 0.46156\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.577981,\n\t\t\t\t\"y\": 0.453622\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.588982,\n\t\t\t\t\"y\": 0.447764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.60055,\n\t\t\t\t\"y\": 0.443114\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.612421,\n\t\t\t\t\"y\": 0.439303\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.624483,\n\t\t\t\t\"y\": 0.436146\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.636675,\n\t\t\t\t\"y\": 0.433535\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.64896,\n\t\t\t\t\"y\": 0.431408\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.661315,\n\t\t\t\t\"y\": 0.429731\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.67372,\n\t\t\t\t\"y\": 0.428487\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.686161,\n\t\t\t\t\"y\": 0.427676\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.698623,\n\t\t\t\t\"y\": 0.427314\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71109,\n\t\t\t\t\"y\": 0.427417\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.723545,\n\t\t\t\t\"y\": 0.427968\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.735973,\n\t\t\t\t\"y\": 0.428951\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.74836,\n\t\t\t\t\"y\": 0.43037\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.760686,\n\t\t\t\t\"y\": 0.432243\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.772928,\n\t\t\t\t\"y\": 0.434608\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.785048,\n\t\t\t\t\"y\": 0.437534\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.796985,\n\t\t\t\t\"y\": 0.441133\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.808619,\n\t\t\t\t\"y\": 0.445613\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.819664,\n\t\t\t\t\"y\": 0.451384\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.171227,\n\t\t\t\t\"y\": 0.458518\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.17274,\n\t\t\t\t\"y\": 0.446139\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.176623,\n\t\t\t\t\"y\": 0.434287\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.182551,\n\t\t\t\t\"y\": 0.423313\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.190134,\n\t\t\t\t\"y\": 0.413412\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.199008,\n\t\t\t\t\"y\": 0.404649\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.20887,\n\t\t\t\t\"y\": 0.397016\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.219483,\n\t\t\t\t\"y\": 0.39047\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.230666,\n\t\t\t\t\"y\": 0.384955\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.242278,\n\t\t\t\t\"y\": 0.380416\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.254211,\n\t\t\t\t\"y\": 0.376805\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.266376,\n\t\t\t\t\"y\": 0.374083\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.278702,\n\t\t\t\t\"y\": 0.372219\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.291126,\n\t\t\t\t\"y\": 0.371192\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.30359,\n\t\t\t\t\"y\": 0.370989\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.31604,\n\t\t\t\t\"y\": 0.371605\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.328423,\n\t\t\t\t\"y\": 0.373045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.34068,\n\t\t\t\t\"y\": 0.37532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.352747,\n\t\t\t\t\"y\": 0.378453\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.364548,\n\t\t\t\t\"y\": 0.382472\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.375995,\n\t\t\t\t\"y\": 0.387416\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.386971,\n\t\t\t\t\"y\": 0.393331\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.397334,\n\t\t\t\t\"y\": 0.400269\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406892,\n\t\t\t\t\"y\": 0.408279\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.415402,\n\t\t\t\t\"y\": 0.417398\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.422552,\n\t\t\t\t\"y\": 0.427618\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.427973,\n\t\t\t\t\"y\": 0.43885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.431283,\n\t\t\t\t\"y\": 0.450875\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.431586,\n\t\t\t\t\"y\": 0.46156\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.422019,\n\t\t\t\t\"y\": 0.453622\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.411018,\n\t\t\t\t\"y\": 0.447764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.39945,\n\t\t\t\t\"y\": 0.443114\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.387579,\n\t\t\t\t\"y\": 0.439303\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.375517,\n\t\t\t\t\"y\": 0.436146\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.363325,\n\t\t\t\t\"y\": 0.433535\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.35104,\n\t\t\t\t\"y\": 0.431408\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.338685,\n\t\t\t\t\"y\": 0.429731\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.32628,\n\t\t\t\t\"y\": 0.428487\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.313839,\n\t\t\t\t\"y\": 0.427676\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.301377,\n\t\t\t\t\"y\": 0.427314\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28891,\n\t\t\t\t\"y\": 0.427417\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.276455,\n\t\t\t\t\"y\": 0.427968\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.264027,\n\t\t\t\t\"y\": 0.428951\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.25164,\n\t\t\t\t\"y\": 0.43037\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.239314,\n\t\t\t\t\"y\": 0.432243\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.227072,\n\t\t\t\t\"y\": 0.434608\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.214952,\n\t\t\t\t\"y\": 0.437534\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.203015,\n\t\t\t\t\"y\": 0.441133\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.191381,\n\t\t\t\t\"y\": 0.445613\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.180336,\n\t\t\t\t\"y\": 0.451384\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.437209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 3.4834e-10\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.437209\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.390762,\n\t\t\t\t\"y\": 0.196801\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.394858,\n\t\t\t\t\"y\": 0.19609\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.403863,\n\t\t\t\t\"y\": 0.200954\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.41322,\n\t\t\t\t\"y\": 0.205103\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.422802,\n\t\t\t\t\"y\": 0.208699\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.432546,\n\t\t\t\t\"y\": 0.211831\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.442414,\n\t\t\t\t\"y\": 0.214546\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.45238,\n\t\t\t\t\"y\": 0.216872\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.462428,\n\t\t\t\t\"y\": 0.218816\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.472543,\n\t\t\t\t\"y\": 0.220369\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.482713,\n\t\t\t\t\"y\": 0.221505\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.492924,\n\t\t\t\t\"y\": 0.222174\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.503156,\n\t\t\t\t\"y\": 0.22229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.513378,\n\t\t\t\t\"y\": 0.22182\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.523565,\n\t\t\t\t\"y\": 0.220856\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.533703,\n\t\t\t\t\"y\": 0.219458\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.543778,\n\t\t\t\t\"y\": 0.217662\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.553777,\n\t\t\t\t\"y\": 0.215483\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.563685,\n\t\t\t\t\"y\": 0.212918\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.57348,\n\t\t\t\t\"y\": 0.209951\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.583131,\n\t\t\t\t\"y\": 0.206541\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.592584,\n\t\t\t\t\"y\": 0.202617\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.601745,\n\t\t\t\t\"y\": 0.198054\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.610163,\n\t\t\t\t\"y\": 0.192984\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.607215,\n\t\t\t\t\"y\": 0.202789\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.602708,\n\t\t\t\t\"y\": 0.211984\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.596939,\n\t\t\t\t\"y\": 0.220445\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.590165,\n\t\t\t\t\"y\": 0.228123\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.582591,\n\t\t\t\t\"y\": 0.235012\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.574377,\n\t\t\t\t\"y\": 0.241123\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.565651,\n\t\t\t\t\"y\": 0.246472\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.55651,\n\t\t\t\t\"y\": 0.251078\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.547037,\n\t\t\t\t\"y\": 0.25495\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.537299,\n\t\t\t\t\"y\": 0.258097\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.527356,\n\t\t\t\t\"y\": 0.260515\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.517264,\n\t\t\t\t\"y\": 0.262198\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.507074,\n\t\t\t\t\"y\": 0.263128\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.496844,\n\t\t\t\t\"y\": 0.26328\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.486633,\n\t\t\t\t\"y\": 0.262645\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.476496,\n\t\t\t\t\"y\": 0.261248\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.46649,\n\t\t\t\t\"y\": 0.25911\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.456667,\n\t\t\t\t\"y\": 0.256242\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.447085,\n\t\t\t\t\"y\": 0.252648\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.437808,\n\t\t\t\t\"y\": 0.248324\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.428912,\n\t\t\t\t\"y\": 0.243262\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.420489,\n\t\t\t\t\"y\": 0.237444\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.412653,\n\t\t\t\t\"y\": 0.230856\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.40555,\n\t\t\t\t\"y\": 0.223481\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.399368,\n\t\t\t\t\"y\": 0.215317\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.394344,\n\t\t\t\t\"y\": 0.206394\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t]\n\t},\n\t\"confused\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.708191,\n\t\t\t\t\"y\": 0.6214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.707865,\n\t\t\t\t\"y\": 0.614079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.706885,\n\t\t\t\t\"y\": 0.606817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.705245,\n\t\t\t\t\"y\": 0.599675\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.702935,\n\t\t\t\t\"y\": 0.592722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.699944,\n\t\t\t\t\"y\": 0.586036\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.696261,\n\t\t\t\t\"y\": 0.579706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.691878,\n\t\t\t\t\"y\": 0.573841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.6868,\n\t\t\t\t\"y\": 0.568571\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.681053,\n\t\t\t\t\"y\": 0.564045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.674695,\n\t\t\t\t\"y\": 0.560432\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.667839,\n\t\t\t\t\"y\": 0.557899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.66065,\n\t\t\t\t\"y\": 0.556591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.653343,\n\t\t\t\t\"y\": 0.556591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.646154,\n\t\t\t\t\"y\": 0.557899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.639298,\n\t\t\t\t\"y\": 0.560432\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.632941,\n\t\t\t\t\"y\": 0.564045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.627193,\n\t\t\t\t\"y\": 0.568571\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.622115,\n\t\t\t\t\"y\": 0.573841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.617732,\n\t\t\t\t\"y\": 0.579706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.614049,\n\t\t\t\t\"y\": 0.586036\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.611058,\n\t\t\t\t\"y\": 0.592722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.608748,\n\t\t\t\t\"y\": 0.599675\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.607108,\n\t\t\t\t\"y\": 0.606817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606128,\n\t\t\t\t\"y\": 0.614079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.605802,\n\t\t\t\t\"y\": 0.6214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606128,\n\t\t\t\t\"y\": 0.628721\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.607108,\n\t\t\t\t\"y\": 0.635983\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.608748,\n\t\t\t\t\"y\": 0.643125\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.611058,\n\t\t\t\t\"y\": 0.650077\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.614049,\n\t\t\t\t\"y\": 0.656764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.617732,\n\t\t\t\t\"y\": 0.663094\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.622115,\n\t\t\t\t\"y\": 0.668959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.627193,\n\t\t\t\t\"y\": 0.674229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.632941,\n\t\t\t\t\"y\": 0.678755\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.639298,\n\t\t\t\t\"y\": 0.682368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.646154,\n\t\t\t\t\"y\": 0.684901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.653343,\n\t\t\t\t\"y\": 0.686209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.66065,\n\t\t\t\t\"y\": 0.686209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.667839,\n\t\t\t\t\"y\": 0.684901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.674695,\n\t\t\t\t\"y\": 0.682368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.681053,\n\t\t\t\t\"y\": 0.678755\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.6868,\n\t\t\t\t\"y\": 0.674229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.691878,\n\t\t\t\t\"y\": 0.668959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.696261,\n\t\t\t\t\"y\": 0.663094\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.699944,\n\t\t\t\t\"y\": 0.656764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.702935,\n\t\t\t\t\"y\": 0.650077\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.705245,\n\t\t\t\t\"y\": 0.643125\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.706885,\n\t\t\t\t\"y\": 0.635983\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.707865,\n\t\t\t\t\"y\": 0.628721\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.291809,\n\t\t\t\t\"y\": 0.6214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.292135,\n\t\t\t\t\"y\": 0.614079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.293115,\n\t\t\t\t\"y\": 0.606817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.294755,\n\t\t\t\t\"y\": 0.599675\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.297065,\n\t\t\t\t\"y\": 0.592722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.300056,\n\t\t\t\t\"y\": 0.586036\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.303739,\n\t\t\t\t\"y\": 0.579706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.308122,\n\t\t\t\t\"y\": 0.573841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.3132,\n\t\t\t\t\"y\": 0.568571\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.318947,\n\t\t\t\t\"y\": 0.564045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.325305,\n\t\t\t\t\"y\": 0.560432\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.332161,\n\t\t\t\t\"y\": 0.557899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.33935,\n\t\t\t\t\"y\": 0.556591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.346657,\n\t\t\t\t\"y\": 0.556591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.353846,\n\t\t\t\t\"y\": 0.557899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.360702,\n\t\t\t\t\"y\": 0.560432\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.367059,\n\t\t\t\t\"y\": 0.564045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.372807,\n\t\t\t\t\"y\": 0.568571\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.377885,\n\t\t\t\t\"y\": 0.573841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.382268,\n\t\t\t\t\"y\": 0.579706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.385951,\n\t\t\t\t\"y\": 0.586036\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.388942,\n\t\t\t\t\"y\": 0.592722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.391252,\n\t\t\t\t\"y\": 0.599675\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.392892,\n\t\t\t\t\"y\": 0.606817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.393872,\n\t\t\t\t\"y\": 0.614079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.394198,\n\t\t\t\t\"y\": 0.6214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.393872,\n\t\t\t\t\"y\": 0.628721\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.392892,\n\t\t\t\t\"y\": 0.635983\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.391252,\n\t\t\t\t\"y\": 0.643125\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.388942,\n\t\t\t\t\"y\": 0.650077\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.385951,\n\t\t\t\t\"y\": 0.656764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.382268,\n\t\t\t\t\"y\": 0.663094\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.377885,\n\t\t\t\t\"y\": 0.668959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.372807,\n\t\t\t\t\"y\": 0.674229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.367059,\n\t\t\t\t\"y\": 0.678755\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.360702,\n\t\t\t\t\"y\": 0.682368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.353846,\n\t\t\t\t\"y\": 0.684901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.346657,\n\t\t\t\t\"y\": 0.686209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.33935,\n\t\t\t\t\"y\": 0.686209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.332161,\n\t\t\t\t\"y\": 0.684901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.325305,\n\t\t\t\t\"y\": 0.682368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.318947,\n\t\t\t\t\"y\": 0.678755\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.3132,\n\t\t\t\t\"y\": 0.674229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.308122,\n\t\t\t\t\"y\": 0.668959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.303739,\n\t\t\t\t\"y\": 0.663094\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.300056,\n\t\t\t\t\"y\": 0.656764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.297065,\n\t\t\t\t\"y\": 0.650077\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.294755,\n\t\t\t\t\"y\": 0.643125\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.293115,\n\t\t\t\t\"y\": 0.635983\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.292135,\n\t\t\t\t\"y\": 0.628721\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.437209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 3.4834e-10\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.437209\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.302761,\n\t\t\t\t\"y\": 0.253558\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.315825,\n\t\t\t\t\"y\": 0.266717\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.33012,\n\t\t\t\t\"y\": 0.278532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.34521,\n\t\t\t\t\"y\": 0.289312\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.360876,\n\t\t\t\t\"y\": 0.299235\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.376995,\n\t\t\t\t\"y\": 0.308401\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.39349,\n\t\t\t\t\"y\": 0.316869\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.410311,\n\t\t\t\t\"y\": 0.324668\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.427425,\n\t\t\t\t\"y\": 0.331798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.44481,\n\t\t\t\t\"y\": 0.338238\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.46245,\n\t\t\t\t\"y\": 0.343934\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.480337,\n\t\t\t\t\"y\": 0.348798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.498461,\n\t\t\t\t\"y\": 0.352678\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.516787,\n\t\t\t\t\"y\": 0.355446\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.535234,\n\t\t\t\t\"y\": 0.357241\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.553744,\n\t\t\t\t\"y\": 0.358189\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.572278,\n\t\t\t\t\"y\": 0.358363\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.590804,\n\t\t\t\t\"y\": 0.357798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.609293,\n\t\t\t\t\"y\": 0.356504\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.627715,\n\t\t\t\t\"y\": 0.354462\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.646031,\n\t\t\t\t\"y\": 0.35162\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.664187,\n\t\t\t\t\"y\": 0.34789\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.682096,\n\t\t\t\t\"y\": 0.343115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.699601,\n\t\t\t\t\"y\": 0.337026\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.712596,\n\t\t\t\t\"y\": 0.334043\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.70364,\n\t\t\t\t\"y\": 0.350133\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.689567,\n\t\t\t\t\"y\": 0.362128\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.673171,\n\t\t\t\t\"y\": 0.370739\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.655695,\n\t\t\t\t\"y\": 0.376898\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.637677,\n\t\t\t\t\"y\": 0.381228\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.619372,\n\t\t\t\t\"y\": 0.384123\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.600918,\n\t\t\t\t\"y\": 0.385838\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.582397,\n\t\t\t\t\"y\": 0.386543\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.563864,\n\t\t\t\t\"y\": 0.386357\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.545357,\n\t\t\t\t\"y\": 0.385363\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.526904,\n\t\t\t\t\"y\": 0.383619\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.508532,\n\t\t\t\t\"y\": 0.381162\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.490266,\n\t\t\t\t\"y\": 0.378016\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.472129,\n\t\t\t\t\"y\": 0.37419\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.454148,\n\t\t\t\t\"y\": 0.369683\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.436356,\n\t\t\t\t\"y\": 0.364479\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.418792,\n\t\t\t\t\"y\": 0.358549\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.401508,\n\t\t\t\t\"y\": 0.351846\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.384572,\n\t\t\t\t\"y\": 0.344304\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.368084,\n\t\t\t\t\"y\": 0.335824\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.352194,\n\t\t\t\t\"y\": 0.326269\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.337146,\n\t\t\t\t\"y\": 0.315437\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.323364,\n\t\t\t\t\"y\": 0.303037\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.311671,\n\t\t\t\t\"y\": 0.288661\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.303782,\n\t\t\t\t\"y\": 0.271935\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t]\n\t},\n\t\"slightly_frowning_face\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.708191,\n\t\t\t\t\"y\": 0.6214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.707865,\n\t\t\t\t\"y\": 0.614079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.706885,\n\t\t\t\t\"y\": 0.606817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.705245,\n\t\t\t\t\"y\": 0.599675\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.702935,\n\t\t\t\t\"y\": 0.592722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.699944,\n\t\t\t\t\"y\": 0.586036\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.696261,\n\t\t\t\t\"y\": 0.579706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.691878,\n\t\t\t\t\"y\": 0.573841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.6868,\n\t\t\t\t\"y\": 0.568571\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.681053,\n\t\t\t\t\"y\": 0.564045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.674695,\n\t\t\t\t\"y\": 0.560432\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.667839,\n\t\t\t\t\"y\": 0.557899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.66065,\n\t\t\t\t\"y\": 0.556591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.653343,\n\t\t\t\t\"y\": 0.556591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.646154,\n\t\t\t\t\"y\": 0.557899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.639298,\n\t\t\t\t\"y\": 0.560432\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.632941,\n\t\t\t\t\"y\": 0.564045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.627193,\n\t\t\t\t\"y\": 0.568571\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.622115,\n\t\t\t\t\"y\": 0.573841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.617732,\n\t\t\t\t\"y\": 0.579706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.614049,\n\t\t\t\t\"y\": 0.586036\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.611058,\n\t\t\t\t\"y\": 0.592722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.608748,\n\t\t\t\t\"y\": 0.599675\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.607108,\n\t\t\t\t\"y\": 0.606817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606128,\n\t\t\t\t\"y\": 0.614079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.605802,\n\t\t\t\t\"y\": 0.6214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606128,\n\t\t\t\t\"y\": 0.628721\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.607108,\n\t\t\t\t\"y\": 0.635983\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.608748,\n\t\t\t\t\"y\": 0.643125\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.611058,\n\t\t\t\t\"y\": 0.650077\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.614049,\n\t\t\t\t\"y\": 0.656764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.617732,\n\t\t\t\t\"y\": 0.663094\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.622115,\n\t\t\t\t\"y\": 0.668959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.627193,\n\t\t\t\t\"y\": 0.674229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.632941,\n\t\t\t\t\"y\": 0.678755\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.639298,\n\t\t\t\t\"y\": 0.682368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.646154,\n\t\t\t\t\"y\": 0.684901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.653343,\n\t\t\t\t\"y\": 0.686209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.66065,\n\t\t\t\t\"y\": 0.686209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.667839,\n\t\t\t\t\"y\": 0.684901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.674695,\n\t\t\t\t\"y\": 0.682368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.681053,\n\t\t\t\t\"y\": 0.678755\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.6868,\n\t\t\t\t\"y\": 0.674229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.691878,\n\t\t\t\t\"y\": 0.668959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.696261,\n\t\t\t\t\"y\": 0.663094\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.699944,\n\t\t\t\t\"y\": 0.656764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.702935,\n\t\t\t\t\"y\": 0.650077\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.705245,\n\t\t\t\t\"y\": 0.643125\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.706885,\n\t\t\t\t\"y\": 0.635983\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.707865,\n\t\t\t\t\"y\": 0.628721\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.291809,\n\t\t\t\t\"y\": 0.6214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.292135,\n\t\t\t\t\"y\": 0.614079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.293115,\n\t\t\t\t\"y\": 0.606817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.294755,\n\t\t\t\t\"y\": 0.599675\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.297065,\n\t\t\t\t\"y\": 0.592722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.300056,\n\t\t\t\t\"y\": 0.586036\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.303739,\n\t\t\t\t\"y\": 0.579706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.308122,\n\t\t\t\t\"y\": 0.573841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.3132,\n\t\t\t\t\"y\": 0.568571\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.318947,\n\t\t\t\t\"y\": 0.564045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.325305,\n\t\t\t\t\"y\": 0.560432\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.332161,\n\t\t\t\t\"y\": 0.557899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.33935,\n\t\t\t\t\"y\": 0.556591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.346657,\n\t\t\t\t\"y\": 0.556591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.353846,\n\t\t\t\t\"y\": 0.557899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.360702,\n\t\t\t\t\"y\": 0.560432\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.367059,\n\t\t\t\t\"y\": 0.564045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.372807,\n\t\t\t\t\"y\": 0.568571\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.377885,\n\t\t\t\t\"y\": 0.573841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.382268,\n\t\t\t\t\"y\": 0.579706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.385951,\n\t\t\t\t\"y\": 0.586036\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.388942,\n\t\t\t\t\"y\": 0.592722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.391252,\n\t\t\t\t\"y\": 0.599675\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.392892,\n\t\t\t\t\"y\": 0.606817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.393872,\n\t\t\t\t\"y\": 0.614079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.394198,\n\t\t\t\t\"y\": 0.6214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.393872,\n\t\t\t\t\"y\": 0.628721\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.392892,\n\t\t\t\t\"y\": 0.635983\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.391252,\n\t\t\t\t\"y\": 0.643125\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.388942,\n\t\t\t\t\"y\": 0.650077\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.385951,\n\t\t\t\t\"y\": 0.656764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.382268,\n\t\t\t\t\"y\": 0.663094\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.377885,\n\t\t\t\t\"y\": 0.668959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.372807,\n\t\t\t\t\"y\": 0.674229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.367059,\n\t\t\t\t\"y\": 0.678755\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.360702,\n\t\t\t\t\"y\": 0.682368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.353846,\n\t\t\t\t\"y\": 0.684901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.346657,\n\t\t\t\t\"y\": 0.686209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.33935,\n\t\t\t\t\"y\": 0.686209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.332161,\n\t\t\t\t\"y\": 0.684901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.325305,\n\t\t\t\t\"y\": 0.682368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.318947,\n\t\t\t\t\"y\": 0.678755\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.3132,\n\t\t\t\t\"y\": 0.674229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.308122,\n\t\t\t\t\"y\": 0.668959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.303739,\n\t\t\t\t\"y\": 0.663094\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.300056,\n\t\t\t\t\"y\": 0.656764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.297065,\n\t\t\t\t\"y\": 0.650077\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.294755,\n\t\t\t\t\"y\": 0.643125\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.293115,\n\t\t\t\t\"y\": 0.635983\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.292135,\n\t\t\t\t\"y\": 0.628721\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.437209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 3.4834e-10\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.437209\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.312763,\n\t\t\t\t\"y\": 0.24943\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.326173,\n\t\t\t\t\"y\": 0.259767\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.340567,\n\t\t\t\t\"y\": 0.268686\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.355588,\n\t\t\t\t\"y\": 0.276505\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.371052,\n\t\t\t\t\"y\": 0.283405\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.386852,\n\t\t\t\t\"y\": 0.289492\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.40292,\n\t\t\t\t\"y\": 0.294829\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.41921,\n\t\t\t\t\"y\": 0.299445\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.435686,\n\t\t\t\t\"y\": 0.30334\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.452319,\n\t\t\t\t\"y\": 0.306491\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.469084,\n\t\t\t\t\"y\": 0.308841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.485949,\n\t\t\t\t\"y\": 0.310294\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.502871,\n\t\t\t\t\"y\": 0.310685\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.51978,\n\t\t\t\t\"y\": 0.30991\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.536615,\n\t\t\t\t\"y\": 0.308139\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.553339,\n\t\t\t\t\"y\": 0.305508\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.569922,\n\t\t\t\t\"y\": 0.3021\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.586338,\n\t\t\t\t\"y\": 0.297959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.602557,\n\t\t\t\t\"y\": 0.293101\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.61854,\n\t\t\t\t\"y\": 0.287514\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.634235,\n\t\t\t\t\"y\": 0.28116\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.649564,\n\t\t\t\t\"y\": 0.273963\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.664398,\n\t\t\t\t\"y\": 0.265797\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.678513,\n\t\t\t\t\"y\": 0.256441\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.686836,\n\t\t\t\t\"y\": 0.255165\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.68141,\n\t\t\t\t\"y\": 0.271136\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.671382,\n\t\t\t\t\"y\": 0.284745\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.658706,\n\t\t\t\t\"y\": 0.295958\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.644514,\n\t\t\t\t\"y\": 0.305186\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.629397,\n\t\t\t\t\"y\": 0.312809\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.613682,\n\t\t\t\t\"y\": 0.319106\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.59756,\n\t\t\t\t\"y\": 0.324275\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.581154,\n\t\t\t\t\"y\": 0.328454\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.564548,\n\t\t\t\t\"y\": 0.331743\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5478,\n\t\t\t\t\"y\": 0.334213\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.530957,\n\t\t\t\t\"y\": 0.335912\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.514056,\n\t\t\t\t\"y\": 0.336871\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.497129,\n\t\t\t\t\"y\": 0.337108\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.480207,\n\t\t\t\t\"y\": 0.336627\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.463322,\n\t\t\t\t\"y\": 0.33542\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.446506,\n\t\t\t\t\"y\": 0.333464\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.429801,\n\t\t\t\t\"y\": 0.330722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.413255,\n\t\t\t\t\"y\": 0.32714\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.396935,\n\t\t\t\t\"y\": 0.322638\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.380935,\n\t\t\t\t\"y\": 0.317105\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.365396,\n\t\t\t\t\"y\": 0.310384\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.350547,\n\t\t\t\t\"y\": 0.302253\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.336783,\n\t\t\t\t\"y\": 0.292399\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.324841,\n\t\t\t\t\"y\": 0.280414\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.316114,\n\t\t\t\t\"y\": 0.265947\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t]\n\t},\n\t\"white_frowning_face\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.708191,\n\t\t\t\t\"y\": 0.6214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.707865,\n\t\t\t\t\"y\": 0.614079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.706885,\n\t\t\t\t\"y\": 0.606817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.705245,\n\t\t\t\t\"y\": 0.599675\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.702935,\n\t\t\t\t\"y\": 0.592722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.699944,\n\t\t\t\t\"y\": 0.586036\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.696261,\n\t\t\t\t\"y\": 0.579706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.691878,\n\t\t\t\t\"y\": 0.573841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.6868,\n\t\t\t\t\"y\": 0.568571\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.681053,\n\t\t\t\t\"y\": 0.564045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.674695,\n\t\t\t\t\"y\": 0.560432\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.667839,\n\t\t\t\t\"y\": 0.557899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.66065,\n\t\t\t\t\"y\": 0.556591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.653343,\n\t\t\t\t\"y\": 0.556591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.646154,\n\t\t\t\t\"y\": 0.557899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.639298,\n\t\t\t\t\"y\": 0.560432\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.632941,\n\t\t\t\t\"y\": 0.564045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.627193,\n\t\t\t\t\"y\": 0.568571\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.622115,\n\t\t\t\t\"y\": 0.573841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.617732,\n\t\t\t\t\"y\": 0.579706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.614049,\n\t\t\t\t\"y\": 0.586036\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.611058,\n\t\t\t\t\"y\": 0.592722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.608748,\n\t\t\t\t\"y\": 0.599675\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.607108,\n\t\t\t\t\"y\": 0.606817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606128,\n\t\t\t\t\"y\": 0.614079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.605802,\n\t\t\t\t\"y\": 0.6214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606128,\n\t\t\t\t\"y\": 0.628721\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.607108,\n\t\t\t\t\"y\": 0.635983\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.608748,\n\t\t\t\t\"y\": 0.643125\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.611058,\n\t\t\t\t\"y\": 0.650077\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.614049,\n\t\t\t\t\"y\": 0.656764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.617732,\n\t\t\t\t\"y\": 0.663094\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.622115,\n\t\t\t\t\"y\": 0.668959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.627193,\n\t\t\t\t\"y\": 0.674229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.632941,\n\t\t\t\t\"y\": 0.678755\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.639298,\n\t\t\t\t\"y\": 0.682368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.646154,\n\t\t\t\t\"y\": 0.684901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.653343,\n\t\t\t\t\"y\": 0.686209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.66065,\n\t\t\t\t\"y\": 0.686209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.667839,\n\t\t\t\t\"y\": 0.684901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.674695,\n\t\t\t\t\"y\": 0.682368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.681053,\n\t\t\t\t\"y\": 0.678755\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.6868,\n\t\t\t\t\"y\": 0.674229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.691878,\n\t\t\t\t\"y\": 0.668959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.696261,\n\t\t\t\t\"y\": 0.663094\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.699944,\n\t\t\t\t\"y\": 0.656764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.702935,\n\t\t\t\t\"y\": 0.650077\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.705245,\n\t\t\t\t\"y\": 0.643125\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.706885,\n\t\t\t\t\"y\": 0.635983\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.707865,\n\t\t\t\t\"y\": 0.628721\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.291809,\n\t\t\t\t\"y\": 0.6214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.292135,\n\t\t\t\t\"y\": 0.614079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.293115,\n\t\t\t\t\"y\": 0.606817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.294755,\n\t\t\t\t\"y\": 0.599675\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.297065,\n\t\t\t\t\"y\": 0.592722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.300056,\n\t\t\t\t\"y\": 0.586036\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.303739,\n\t\t\t\t\"y\": 0.579706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.308122,\n\t\t\t\t\"y\": 0.573841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.3132,\n\t\t\t\t\"y\": 0.568571\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.318947,\n\t\t\t\t\"y\": 0.564045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.325305,\n\t\t\t\t\"y\": 0.560432\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.332161,\n\t\t\t\t\"y\": 0.557899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.33935,\n\t\t\t\t\"y\": 0.556591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.346657,\n\t\t\t\t\"y\": 0.556591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.353846,\n\t\t\t\t\"y\": 0.557899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.360702,\n\t\t\t\t\"y\": 0.560432\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.367059,\n\t\t\t\t\"y\": 0.564045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.372807,\n\t\t\t\t\"y\": 0.568571\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.377885,\n\t\t\t\t\"y\": 0.573841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.382268,\n\t\t\t\t\"y\": 0.579706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.385951,\n\t\t\t\t\"y\": 0.586036\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.388942,\n\t\t\t\t\"y\": 0.592722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.391252,\n\t\t\t\t\"y\": 0.599675\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.392892,\n\t\t\t\t\"y\": 0.606817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.393872,\n\t\t\t\t\"y\": 0.614079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.394198,\n\t\t\t\t\"y\": 0.6214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.393872,\n\t\t\t\t\"y\": 0.628721\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.392892,\n\t\t\t\t\"y\": 0.635983\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.391252,\n\t\t\t\t\"y\": 0.643125\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.388942,\n\t\t\t\t\"y\": 0.650077\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.385951,\n\t\t\t\t\"y\": 0.656764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.382268,\n\t\t\t\t\"y\": 0.663094\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.377885,\n\t\t\t\t\"y\": 0.668959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.372807,\n\t\t\t\t\"y\": 0.674229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.367059,\n\t\t\t\t\"y\": 0.678755\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.360702,\n\t\t\t\t\"y\": 0.682368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.353846,\n\t\t\t\t\"y\": 0.684901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.346657,\n\t\t\t\t\"y\": 0.686209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.33935,\n\t\t\t\t\"y\": 0.686209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.332161,\n\t\t\t\t\"y\": 0.684901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.325305,\n\t\t\t\t\"y\": 0.682368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.318947,\n\t\t\t\t\"y\": 0.678755\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.3132,\n\t\t\t\t\"y\": 0.674229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.308122,\n\t\t\t\t\"y\": 0.668959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.303739,\n\t\t\t\t\"y\": 0.663094\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.300056,\n\t\t\t\t\"y\": 0.656764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.297065,\n\t\t\t\t\"y\": 0.650077\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.294755,\n\t\t\t\t\"y\": 0.643125\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.293115,\n\t\t\t\t\"y\": 0.635983\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.292135,\n\t\t\t\t\"y\": 0.628721\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.437209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 3.4834e-10\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.437209\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.282142,\n\t\t\t\t\"y\": 0.257888\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.295756,\n\t\t\t\t\"y\": 0.275978\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.311093,\n\t\t\t\t\"y\": 0.29263\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.327783,\n\t\t\t\t\"y\": 0.307924\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345583,\n\t\t\t\t\"y\": 0.321906\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.364326,\n\t\t\t\t\"y\": 0.334591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.383893,\n\t\t\t\t\"y\": 0.345958\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.404196,\n\t\t\t\t\"y\": 0.355946\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.425163,\n\t\t\t\t\"y\": 0.364446\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.446725,\n\t\t\t\t\"y\": 0.371285\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468802,\n\t\t\t\t\"y\": 0.376195\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.491266,\n\t\t\t\t\"y\": 0.378764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.513868,\n\t\t\t\t\"y\": 0.378415\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.53626,\n\t\t\t\t\"y\": 0.375266\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.558228,\n\t\t\t\t\"y\": 0.369887\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.579661,\n\t\t\t\t\"y\": 0.362651\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.600482,\n\t\t\t\t\"y\": 0.3538\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.620625,\n\t\t\t\t\"y\": 0.343491\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.640014,\n\t\t\t\t\"y\": 0.33182\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.658554,\n\t\t\t\t\"y\": 0.318839\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.676118,\n\t\t\t\t\"y\": 0.304561\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.692525,\n\t\t\t\t\"y\": 0.288964\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.707509,\n\t\t\t\t\"y\": 0.271993\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.717761,\n\t\t\t\t\"y\": 0.263043\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.715071,\n\t\t\t\t\"y\": 0.285524\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.708823,\n\t\t\t\t\"y\": 0.307286\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.699329,\n\t\t\t\t\"y\": 0.327837\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.686996,\n\t\t\t\t\"y\": 0.346819\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.672261,\n\t\t\t\t\"y\": 0.363999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.655542,\n\t\t\t\t\"y\": 0.379249\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.637213,\n\t\t\t\t\"y\": 0.392517\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.6176,\n\t\t\t\t\"y\": 0.403794\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.596979,\n\t\t\t\t\"y\": 0.413095\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.575588,\n\t\t\t\t\"y\": 0.420449\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.553632,\n\t\t\t\t\"y\": 0.425881\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531293,\n\t\t\t\t\"y\": 0.429418\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.508737,\n\t\t\t\t\"y\": 0.431076\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.486122,\n\t\t\t\t\"y\": 0.430863\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.463601,\n\t\t\t\t\"y\": 0.428779\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.441334,\n\t\t\t\t\"y\": 0.424813\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.41949,\n\t\t\t\t\"y\": 0.418946\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.398255,\n\t\t\t\t\"y\": 0.411152\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.377841,\n\t\t\t\t\"y\": 0.401403\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.358494,\n\t\t\t\t\"y\": 0.389675\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.340501,\n\t\t\t\t\"y\": 0.375954\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.324198,\n\t\t\t\t\"y\": 0.360257\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.309972,\n\t\t\t\t\"y\": 0.342653\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.298247,\n\t\t\t\t\"y\": 0.32329\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.289457,\n\t\t\t\t\"y\": 0.302426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.283996,\n\t\t\t\t\"y\": 0.280454\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t]\n\t},\n\t\"persevere\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.87138,\n\t\t\t\t\"y\": 0.636056\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.86286,\n\t\t\t\t\"y\": 0.631454\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.853958,\n\t\t\t\t\"y\": 0.627643\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.84476,\n\t\t\t\t\"y\": 0.624622\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.835342,\n\t\t\t\t\"y\": 0.622379\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.825775,\n\t\t\t\t\"y\": 0.6209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.816122,\n\t\t\t\t\"y\": 0.620166\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.806441,\n\t\t\t\t\"y\": 0.620155\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.796785,\n\t\t\t\t\"y\": 0.620844\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.787201,\n\t\t\t\t\"y\": 0.622213\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.777733,\n\t\t\t\t\"y\": 0.624237\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.768423,\n\t\t\t\t\"y\": 0.626898\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.75931,\n\t\t\t\t\"y\": 0.630173\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.750433,\n\t\t\t\t\"y\": 0.634043\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.741829,\n\t\t\t\t\"y\": 0.638489\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.733535,\n\t\t\t\t\"y\": 0.643493\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.725589,\n\t\t\t\t\"y\": 0.649035\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.718031,\n\t\t\t\t\"y\": 0.655097\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.710902,\n\t\t\t\t\"y\": 0.661659\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.704244,\n\t\t\t\t\"y\": 0.668701\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.698102,\n\t\t\t\t\"y\": 0.676199\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.692524,\n\t\t\t\t\"y\": 0.684126\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.687559,\n\t\t\t\t\"y\": 0.692453\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.683261,\n\t\t\t\t\"y\": 0.701144\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.679683,\n\t\t\t\t\"y\": 0.710157\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.676881,\n\t\t\t\t\"y\": 0.719441\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.674908,\n\t\t\t\t\"y\": 0.728936\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.676683,\n\t\t\t\t\"y\": 0.731923\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.683321,\n\t\t\t\t\"y\": 0.72486\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.690195,\n\t\t\t\t\"y\": 0.718028\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.697295,\n\t\t\t\t\"y\": 0.711432\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.70461,\n\t\t\t\t\"y\": 0.705074\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.712128,\n\t\t\t\t\"y\": 0.698961\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.719839,\n\t\t\t\t\"y\": 0.693094\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.727735,\n\t\t\t\t\"y\": 0.687479\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.735806,\n\t\t\t\t\"y\": 0.682119\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.744043,\n\t\t\t\t\"y\": 0.67702\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.752438,\n\t\t\t\t\"y\": 0.672185\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.760981,\n\t\t\t\t\"y\": 0.66762\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.769666,\n\t\t\t\t\"y\": 0.66333\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.778483,\n\t\t\t\t\"y\": 0.65932\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.787424,\n\t\t\t\t\"y\": 0.655598\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.796481,\n\t\t\t\t\"y\": 0.652168\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.805646,\n\t\t\t\t\"y\": 0.649039\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.81491,\n\t\t\t\t\"y\": 0.646217\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.824264,\n\t\t\t\t\"y\": 0.64371\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.833698,\n\t\t\t\t\"y\": 0.641526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.843202,\n\t\t\t\t\"y\": 0.639675\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.852767,\n\t\t\t\t\"y\": 0.638166\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.86238,\n\t\t\t\t\"y\": 0.63701\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.12832,\n\t\t\t\t\"y\": 0.636238\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.136825,\n\t\t\t\t\"y\": 0.631607\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.145714,\n\t\t\t\t\"y\": 0.627767\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.154903,\n\t\t\t\t\"y\": 0.624717\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.164314,\n\t\t\t\t\"y\": 0.622447\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.173877,\n\t\t\t\t\"y\": 0.620941\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.183528,\n\t\t\t\t\"y\": 0.62018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.193208,\n\t\t\t\t\"y\": 0.620143\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.202866,\n\t\t\t\t\"y\": 0.620807\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.212454,\n\t\t\t\t\"y\": 0.622151\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.221927,\n\t\t\t\t\"y\": 0.624153\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.231243,\n\t\t\t\t\"y\": 0.626791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.240364,\n\t\t\t\t\"y\": 0.630044\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.24925,\n\t\t\t\t\"y\": 0.633893\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.257865,\n\t\t\t\t\"y\": 0.638318\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.266171,\n\t\t\t\t\"y\": 0.643302\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.27413,\n\t\t\t\t\"y\": 0.648825\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.281702,\n\t\t\t\t\"y\": 0.654869\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.288848,\n\t\t\t\t\"y\": 0.661413\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.295524,\n\t\t\t\t\"y\": 0.668438\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.301685,\n\t\t\t\t\"y\": 0.67592\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.307285,\n\t\t\t\t\"y\": 0.683832\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.312272,\n\t\t\t\t\"y\": 0.692145\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.316596,\n\t\t\t\t\"y\": 0.700824\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.3202,\n\t\t\t\t\"y\": 0.709826\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.323032,\n\t\t\t\t\"y\": 0.7191\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.325036,\n\t\t\t\t\"y\": 0.728589\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.323553,\n\t\t\t\t\"y\": 0.732183\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.316924,\n\t\t\t\t\"y\": 0.725111\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.310057,\n\t\t\t\t\"y\": 0.718271\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.302965,\n\t\t\t\t\"y\": 0.711666\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.295659,\n\t\t\t\t\"y\": 0.7053\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.288148,\n\t\t\t\t\"y\": 0.699178\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.280443,\n\t\t\t\t\"y\": 0.693302\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.272554,\n\t\t\t\t\"y\": 0.687678\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.264489,\n\t\t\t\t\"y\": 0.682309\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.256258,\n\t\t\t\t\"y\": 0.6772\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.247869,\n\t\t\t\t\"y\": 0.672355\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.239331,\n\t\t\t\t\"y\": 0.66778\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.230651,\n\t\t\t\t\"y\": 0.66348\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.221839,\n\t\t\t\t\"y\": 0.659461\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.212902,\n\t\t\t\t\"y\": 0.655728\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.203848,\n\t\t\t\t\"y\": 0.652287\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.194687,\n\t\t\t\t\"y\": 0.649147\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.185427,\n\t\t\t\t\"y\": 0.646313\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.176076,\n\t\t\t\t\"y\": 0.643795\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.166645,\n\t\t\t\t\"y\": 0.6416\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.157143,\n\t\t\t\t\"y\": 0.639737\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.14758,\n\t\t\t\t\"y\": 0.638215\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.137968,\n\t\t\t\t\"y\": 0.637045\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.742417,\n\t\t\t\t\"y\": 0.361638\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.733497,\n\t\t\t\t\"y\": 0.352297\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.719736,\n\t\t\t\t\"y\": 0.351124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.706177,\n\t\t\t\t\"y\": 0.353963\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.69355,\n\t\t\t\t\"y\": 0.359712\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.681831,\n\t\t\t\t\"y\": 0.367167\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.670695,\n\t\t\t\t\"y\": 0.375481\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.65983,\n\t\t\t\t\"y\": 0.384147\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.648979,\n\t\t\t\t\"y\": 0.392832\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.63794,\n\t\t\t\t\"y\": 0.401275\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.626692,\n\t\t\t\t\"y\": 0.409437\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.615372,\n\t\t\t\t\"y\": 0.417498\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.604137,\n\t\t\t\t\"y\": 0.425678\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593264,\n\t\t\t\t\"y\": 0.434331\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.583686,\n\t\t\t\t\"y\": 0.44436\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.581571,\n\t\t\t\t\"y\": 0.457468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.590403,\n\t\t\t\t\"y\": 0.46805\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.601399,\n\t\t\t\t\"y\": 0.476544\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.612668,\n\t\t\t\t\"y\": 0.484677\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.624097,\n\t\t\t\t\"y\": 0.492582\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.635698,\n\t\t\t\t\"y\": 0.500232\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.647473,\n\t\t\t\t\"y\": 0.50761\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.65942,\n\t\t\t\t\"y\": 0.514704\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.671537,\n\t\t\t\t\"y\": 0.521502\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.68383,\n\t\t\t\t\"y\": 0.527978\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.696321,\n\t\t\t\t\"y\": 0.534059\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.70906,\n\t\t\t\t\"y\": 0.539596\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.722142,\n\t\t\t\t\"y\": 0.544254\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.735726,\n\t\t\t\t\"y\": 0.547007\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.748157,\n\t\t\t\t\"y\": 0.542537\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.746338,\n\t\t\t\t\"y\": 0.52937\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.737537,\n\t\t\t\t\"y\": 0.518663\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.726788,\n\t\t\t\t\"y\": 0.509869\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71525,\n\t\t\t\t\"y\": 0.502128\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.703358,\n\t\t\t\t\"y\": 0.494943\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.691282,\n\t\t\t\t\"y\": 0.488071\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.67912,\n\t\t\t\t\"y\": 0.481351\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.666956,\n\t\t\t\t\"y\": 0.474636\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654915,\n\t\t\t\t\"y\": 0.467704\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.643401,\n\t\t\t\t\"y\": 0.459942\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.636968,\n\t\t\t\t\"y\": 0.448436\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.645452,\n\t\t\t\t\"y\": 0.437711\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.656667,\n\t\t\t\t\"y\": 0.429511\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.668288,\n\t\t\t\t\"y\": 0.421892\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.680005,\n\t\t\t\t\"y\": 0.414422\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.691711,\n\t\t\t\t\"y\": 0.406935\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.703332,\n\t\t\t\t\"y\": 0.399315\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.714775,\n\t\t\t\t\"y\": 0.39143\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.72587,\n\t\t\t\t\"y\": 0.383064\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.736135,\n\t\t\t\t\"y\": 0.37371\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.250774,\n\t\t\t\t\"y\": 0.367467\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.259885,\n\t\t\t\t\"y\": 0.358869\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.273621,\n\t\t\t\t\"y\": 0.360359\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.286842,\n\t\t\t\t\"y\": 0.364595\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.299677,\n\t\t\t\t\"y\": 0.369905\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.31224,\n\t\t\t\t\"y\": 0.375835\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.324591,\n\t\t\t\t\"y\": 0.382196\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.336763,\n\t\t\t\t\"y\": 0.388897\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.348764,\n\t\t\t\t\"y\": 0.395899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.360594,\n\t\t\t\t\"y\": 0.403188\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.37225,\n\t\t\t\t\"y\": 0.410753\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.383733,\n\t\t\t\t\"y\": 0.41858\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.39505,\n\t\t\t\t\"y\": 0.426645\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406189,\n\t\t\t\t\"y\": 0.434955\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.416221,\n\t\t\t\t\"y\": 0.444521\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.418425,\n\t\t\t\t\"y\": 0.457573\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.410002,\n\t\t\t\t\"y\": 0.468507\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.399364,\n\t\t\t\t\"y\": 0.477444\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.388203,\n\t\t\t\t\"y\": 0.485723\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.37689,\n\t\t\t\t\"y\": 0.493795\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.365604,\n\t\t\t\t\"y\": 0.501905\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.354488,\n\t\t\t\t\"y\": 0.510245\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.343596,\n\t\t\t\t\"y\": 0.518878\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.33276,\n\t\t\t\t\"y\": 0.527582\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.321741,\n\t\t\t\t\"y\": 0.536051\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.310243,\n\t\t\t\t\"y\": 0.543849\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.297932,\n\t\t\t\t\"y\": 0.55026\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.284627,\n\t\t\t\t\"y\": 0.554132\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.270794,\n\t\t\t\t\"y\": 0.554428\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.258766,\n\t\t\t\t\"y\": 0.548329\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.261055,\n\t\t\t\t\"y\": 0.53546\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.270747,\n\t\t\t\t\"y\": 0.525534\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.281664,\n\t\t\t\t\"y\": 0.516937\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.293021,\n\t\t\t\t\"y\": 0.50893\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.304597,\n\t\t\t\t\"y\": 0.501242\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.316285,\n\t\t\t\t\"y\": 0.493726\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.328008,\n\t\t\t\t\"y\": 0.486264\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.339676,\n\t\t\t\t\"y\": 0.478718\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.351086,\n\t\t\t\t\"y\": 0.470789\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.361187,\n\t\t\t\t\"y\": 0.461317\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.35984,\n\t\t\t\t\"y\": 0.448815\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.348829,\n\t\t\t\t\"y\": 0.440391\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.336877,\n\t\t\t\t\"y\": 0.433306\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.324734,\n\t\t\t\t\"y\": 0.426552\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.312563,\n\t\t\t\t\"y\": 0.419851\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.30045,\n\t\t\t\t\"y\": 0.413043\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.288486,\n\t\t\t\t\"y\": 0.405978\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.276808,\n\t\t\t\t\"y\": 0.398449\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.265728,\n\t\t\t\t\"y\": 0.39007\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.256107,\n\t\t\t\t\"y\": 0.380073\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.437209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 3.4834e-10\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.437209\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.390762,\n\t\t\t\t\"y\": 0.196801\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.394858,\n\t\t\t\t\"y\": 0.19609\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.403863,\n\t\t\t\t\"y\": 0.200954\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.41322,\n\t\t\t\t\"y\": 0.205103\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.422802,\n\t\t\t\t\"y\": 0.208699\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.432546,\n\t\t\t\t\"y\": 0.211831\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.442414,\n\t\t\t\t\"y\": 0.214546\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.45238,\n\t\t\t\t\"y\": 0.216872\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.462428,\n\t\t\t\t\"y\": 0.218816\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.472543,\n\t\t\t\t\"y\": 0.220369\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.482713,\n\t\t\t\t\"y\": 0.221505\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.492924,\n\t\t\t\t\"y\": 0.222174\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.503156,\n\t\t\t\t\"y\": 0.22229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.513378,\n\t\t\t\t\"y\": 0.22182\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.523565,\n\t\t\t\t\"y\": 0.220856\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.533703,\n\t\t\t\t\"y\": 0.219458\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.543778,\n\t\t\t\t\"y\": 0.217662\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.553777,\n\t\t\t\t\"y\": 0.215483\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.563685,\n\t\t\t\t\"y\": 0.212918\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.57348,\n\t\t\t\t\"y\": 0.209951\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.583131,\n\t\t\t\t\"y\": 0.206541\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.592584,\n\t\t\t\t\"y\": 0.202617\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.601745,\n\t\t\t\t\"y\": 0.198054\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.610163,\n\t\t\t\t\"y\": 0.192984\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.607215,\n\t\t\t\t\"y\": 0.202789\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.602708,\n\t\t\t\t\"y\": 0.211984\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.596939,\n\t\t\t\t\"y\": 0.220445\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.590165,\n\t\t\t\t\"y\": 0.228123\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.582591,\n\t\t\t\t\"y\": 0.235012\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.574377,\n\t\t\t\t\"y\": 0.241123\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.565651,\n\t\t\t\t\"y\": 0.246472\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.55651,\n\t\t\t\t\"y\": 0.251078\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.547037,\n\t\t\t\t\"y\": 0.25495\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.537299,\n\t\t\t\t\"y\": 0.258097\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.527356,\n\t\t\t\t\"y\": 0.260515\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.517264,\n\t\t\t\t\"y\": 0.262198\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.507074,\n\t\t\t\t\"y\": 0.263128\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.496844,\n\t\t\t\t\"y\": 0.26328\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.486633,\n\t\t\t\t\"y\": 0.262645\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.476496,\n\t\t\t\t\"y\": 0.261248\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.46649,\n\t\t\t\t\"y\": 0.25911\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.456667,\n\t\t\t\t\"y\": 0.256242\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.447085,\n\t\t\t\t\"y\": 0.252648\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.437808,\n\t\t\t\t\"y\": 0.248324\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.428912,\n\t\t\t\t\"y\": 0.243262\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.420489,\n\t\t\t\t\"y\": 0.237444\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.412653,\n\t\t\t\t\"y\": 0.230856\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.40555,\n\t\t\t\t\"y\": 0.223481\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.399368,\n\t\t\t\t\"y\": 0.215317\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.394344,\n\t\t\t\t\"y\": 0.206394\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t]\n\t},\n\t\"tired_face\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.797736,\n\t\t\t\t\"y\": 0.813282\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.79004,\n\t\t\t\t\"y\": 0.80881\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.781166,\n\t\t\t\t\"y\": 0.804936\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.771989,\n\t\t\t\t\"y\": 0.801852\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.762586,\n\t\t\t\t\"y\": 0.799547\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.753028,\n\t\t\t\t\"y\": 0.798008\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.74338,\n\t\t\t\t\"y\": 0.797214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.733699,\n\t\t\t\t\"y\": 0.797146\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.724039,\n\t\t\t\t\"y\": 0.79778\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.714447,\n\t\t\t\t\"y\": 0.799094\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.704969,\n\t\t\t\t\"y\": 0.801067\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.695645,\n\t\t\t\t\"y\": 0.803678\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.686515,\n\t\t\t\t\"y\": 0.806904\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.677617,\n\t\t\t\t\"y\": 0.810727\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.668989,\n\t\t\t\t\"y\": 0.815128\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.660669,\n\t\t\t\t\"y\": 0.820087\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.652694,\n\t\t\t\t\"y\": 0.825587\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.645104,\n\t\t\t\t\"y\": 0.831608\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.637939,\n\t\t\t\t\"y\": 0.838131\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.631241,\n\t\t\t\t\"y\": 0.845135\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.625056,\n\t\t\t\t\"y\": 0.852597\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.61943,\n\t\t\t\t\"y\": 0.860491\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.614415,\n\t\t\t\t\"y\": 0.868787\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.610061,\n\t\t\t\t\"y\": 0.877451\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606424,\n\t\t\t\t\"y\": 0.886439\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.603557,\n\t\t\t\t\"y\": 0.895703\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.601516,\n\t\t\t\t\"y\": 0.905184\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.602642,\n\t\t\t\t\"y\": 0.909516\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.60926,\n\t\t\t\t\"y\": 0.902434\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.616116,\n\t\t\t\t\"y\": 0.895584\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.623199,\n\t\t\t\t\"y\": 0.888969\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.630496,\n\t\t\t\t\"y\": 0.882592\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.637998,\n\t\t\t\t\"y\": 0.876459\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.645695,\n\t\t\t\t\"y\": 0.870572\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.653576,\n\t\t\t\t\"y\": 0.864936\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.661633,\n\t\t\t\t\"y\": 0.859556\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.669857,\n\t\t\t\t\"y\": 0.854435\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.678239,\n\t\t\t\t\"y\": 0.849579\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.686771,\n\t\t\t\t\"y\": 0.844992\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.695445,\n\t\t\t\t\"y\": 0.84068\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.704252,\n\t\t\t\t\"y\": 0.836648\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.713183,\n\t\t\t\t\"y\": 0.832902\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.722232,\n\t\t\t\t\"y\": 0.829449\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.731388,\n\t\t\t\t\"y\": 0.826295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.740644,\n\t\t\t\t\"y\": 0.823448\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.749991,\n\t\t\t\t\"y\": 0.820915\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.759419,\n\t\t\t\t\"y\": 0.818706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.768918,\n\t\t\t\t\"y\": 0.816828\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.778479,\n\t\t\t\t\"y\": 0.815291\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.788088,\n\t\t\t\t\"y\": 0.814105\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.202264,\n\t\t\t\t\"y\": 0.813282\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.20996,\n\t\t\t\t\"y\": 0.80881\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.218834,\n\t\t\t\t\"y\": 0.804936\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.228011,\n\t\t\t\t\"y\": 0.801852\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.237414,\n\t\t\t\t\"y\": 0.799547\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.246972,\n\t\t\t\t\"y\": 0.798008\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.25662,\n\t\t\t\t\"y\": 0.797214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.266301,\n\t\t\t\t\"y\": 0.797146\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.275961,\n\t\t\t\t\"y\": 0.79778\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.285553,\n\t\t\t\t\"y\": 0.799094\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.295031,\n\t\t\t\t\"y\": 0.801067\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.304355,\n\t\t\t\t\"y\": 0.803678\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.313485,\n\t\t\t\t\"y\": 0.806904\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.322383,\n\t\t\t\t\"y\": 0.810727\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.331011,\n\t\t\t\t\"y\": 0.815128\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.339331,\n\t\t\t\t\"y\": 0.820087\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.347306,\n\t\t\t\t\"y\": 0.825587\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.354896,\n\t\t\t\t\"y\": 0.831608\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.362061,\n\t\t\t\t\"y\": 0.838131\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.368759,\n\t\t\t\t\"y\": 0.845135\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.374944,\n\t\t\t\t\"y\": 0.852597\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.38057,\n\t\t\t\t\"y\": 0.860491\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.385585,\n\t\t\t\t\"y\": 0.868787\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.389939,\n\t\t\t\t\"y\": 0.877451\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.393576,\n\t\t\t\t\"y\": 0.886439\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.396443,\n\t\t\t\t\"y\": 0.895703\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.398484,\n\t\t\t\t\"y\": 0.905184\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.397358,\n\t\t\t\t\"y\": 0.909516\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.39074,\n\t\t\t\t\"y\": 0.902434\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.383884,\n\t\t\t\t\"y\": 0.895584\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.376801,\n\t\t\t\t\"y\": 0.888969\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.369504,\n\t\t\t\t\"y\": 0.882592\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.362002,\n\t\t\t\t\"y\": 0.876459\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.354305,\n\t\t\t\t\"y\": 0.870572\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.346424,\n\t\t\t\t\"y\": 0.864936\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.338367,\n\t\t\t\t\"y\": 0.859556\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.330143,\n\t\t\t\t\"y\": 0.854435\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.321761,\n\t\t\t\t\"y\": 0.849579\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.313229,\n\t\t\t\t\"y\": 0.844992\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.304555,\n\t\t\t\t\"y\": 0.84068\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.295748,\n\t\t\t\t\"y\": 0.836648\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.286817,\n\t\t\t\t\"y\": 0.832902\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.277768,\n\t\t\t\t\"y\": 0.829449\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.268612,\n\t\t\t\t\"y\": 0.826295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.259356,\n\t\t\t\t\"y\": 0.823448\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.250009,\n\t\t\t\t\"y\": 0.820915\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.240581,\n\t\t\t\t\"y\": 0.818706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.231082,\n\t\t\t\t\"y\": 0.816828\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.221521,\n\t\t\t\t\"y\": 0.815291\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.211912,\n\t\t\t\t\"y\": 0.814105\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.742417,\n\t\t\t\t\"y\": 0.543066\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.733497,\n\t\t\t\t\"y\": 0.533724\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.719736,\n\t\t\t\t\"y\": 0.532552\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.706177,\n\t\t\t\t\"y\": 0.53539\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.69355,\n\t\t\t\t\"y\": 0.54114\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.681831,\n\t\t\t\t\"y\": 0.548595\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.670695,\n\t\t\t\t\"y\": 0.556908\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.65983,\n\t\t\t\t\"y\": 0.565575\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.648979,\n\t\t\t\t\"y\": 0.57426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.63794,\n\t\t\t\t\"y\": 0.582703\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.626692,\n\t\t\t\t\"y\": 0.590865\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.615372,\n\t\t\t\t\"y\": 0.598926\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.604137,\n\t\t\t\t\"y\": 0.607106\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593264,\n\t\t\t\t\"y\": 0.615759\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.583686,\n\t\t\t\t\"y\": 0.625788\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.581571,\n\t\t\t\t\"y\": 0.638896\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.590403,\n\t\t\t\t\"y\": 0.649477\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.601399,\n\t\t\t\t\"y\": 0.657972\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.612668,\n\t\t\t\t\"y\": 0.666105\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.624097,\n\t\t\t\t\"y\": 0.67401\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.635698,\n\t\t\t\t\"y\": 0.68166\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.647473,\n\t\t\t\t\"y\": 0.689038\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.65942,\n\t\t\t\t\"y\": 0.696132\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.671537,\n\t\t\t\t\"y\": 0.70293\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.68383,\n\t\t\t\t\"y\": 0.709406\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.696321,\n\t\t\t\t\"y\": 0.715487\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.70906,\n\t\t\t\t\"y\": 0.721023\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.722142,\n\t\t\t\t\"y\": 0.725682\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.735726,\n\t\t\t\t\"y\": 0.728435\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.748157,\n\t\t\t\t\"y\": 0.723965\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.746338,\n\t\t\t\t\"y\": 0.710798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.737537,\n\t\t\t\t\"y\": 0.700091\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.726788,\n\t\t\t\t\"y\": 0.691296\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71525,\n\t\t\t\t\"y\": 0.683555\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.703358,\n\t\t\t\t\"y\": 0.676371\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.691282,\n\t\t\t\t\"y\": 0.669498\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.67912,\n\t\t\t\t\"y\": 0.662779\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.666956,\n\t\t\t\t\"y\": 0.656063\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654915,\n\t\t\t\t\"y\": 0.649132\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.643401,\n\t\t\t\t\"y\": 0.64137\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.636968,\n\t\t\t\t\"y\": 0.629864\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.645452,\n\t\t\t\t\"y\": 0.619139\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.656667,\n\t\t\t\t\"y\": 0.610939\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.668288,\n\t\t\t\t\"y\": 0.60332\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.680005,\n\t\t\t\t\"y\": 0.59585\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.691711,\n\t\t\t\t\"y\": 0.588363\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.703332,\n\t\t\t\t\"y\": 0.580743\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.714775,\n\t\t\t\t\"y\": 0.572858\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.72587,\n\t\t\t\t\"y\": 0.564492\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.736135,\n\t\t\t\t\"y\": 0.555137\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.250774,\n\t\t\t\t\"y\": 0.548895\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.259885,\n\t\t\t\t\"y\": 0.540296\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.273621,\n\t\t\t\t\"y\": 0.541787\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.286842,\n\t\t\t\t\"y\": 0.546023\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.299677,\n\t\t\t\t\"y\": 0.551333\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.31224,\n\t\t\t\t\"y\": 0.557263\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.324591,\n\t\t\t\t\"y\": 0.563624\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.336763,\n\t\t\t\t\"y\": 0.570325\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.348764,\n\t\t\t\t\"y\": 0.577327\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.360594,\n\t\t\t\t\"y\": 0.584616\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.37225,\n\t\t\t\t\"y\": 0.592181\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.383733,\n\t\t\t\t\"y\": 0.600007\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.39505,\n\t\t\t\t\"y\": 0.608073\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406189,\n\t\t\t\t\"y\": 0.616383\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.416221,\n\t\t\t\t\"y\": 0.625949\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.418425,\n\t\t\t\t\"y\": 0.639\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.410002,\n\t\t\t\t\"y\": 0.649935\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.399364,\n\t\t\t\t\"y\": 0.658872\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.388203,\n\t\t\t\t\"y\": 0.667151\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.37689,\n\t\t\t\t\"y\": 0.675223\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.365604,\n\t\t\t\t\"y\": 0.683333\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.354488,\n\t\t\t\t\"y\": 0.691673\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.343596,\n\t\t\t\t\"y\": 0.700306\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.33276,\n\t\t\t\t\"y\": 0.70901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.321741,\n\t\t\t\t\"y\": 0.717478\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.310243,\n\t\t\t\t\"y\": 0.725276\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.297932,\n\t\t\t\t\"y\": 0.731688\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.284627,\n\t\t\t\t\"y\": 0.73556\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.270794,\n\t\t\t\t\"y\": 0.735856\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.258766,\n\t\t\t\t\"y\": 0.729757\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.261055,\n\t\t\t\t\"y\": 0.716888\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.270747,\n\t\t\t\t\"y\": 0.706962\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.281664,\n\t\t\t\t\"y\": 0.698364\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.293021,\n\t\t\t\t\"y\": 0.690357\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.304597,\n\t\t\t\t\"y\": 0.68267\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.316285,\n\t\t\t\t\"y\": 0.675154\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.328008,\n\t\t\t\t\"y\": 0.667692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.339676,\n\t\t\t\t\"y\": 0.660146\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.351086,\n\t\t\t\t\"y\": 0.652217\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.361187,\n\t\t\t\t\"y\": 0.642744\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.35984,\n\t\t\t\t\"y\": 0.630242\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.348829,\n\t\t\t\t\"y\": 0.621819\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.336877,\n\t\t\t\t\"y\": 0.614733\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.324734,\n\t\t\t\t\"y\": 0.60798\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.312563,\n\t\t\t\t\"y\": 0.601279\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.30045,\n\t\t\t\t\"y\": 0.594471\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.288486,\n\t\t\t\t\"y\": 0.587406\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.276808,\n\t\t\t\t\"y\": 0.579877\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.265728,\n\t\t\t\t\"y\": 0.571498\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.256107,\n\t\t\t\t\"y\": 0.561501\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.437209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 3.4834e-10\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.437209\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.217437,\n\t\t\t\t\"y\": 0.209984\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.24475,\n\t\t\t\t\"y\": 0.219461\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.27269,\n\t\t\t\t\"y\": 0.226911\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.300941,\n\t\t\t\t\"y\": 0.233078\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.329388,\n\t\t\t\t\"y\": 0.238273\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.357971,\n\t\t\t\t\"y\": 0.242648\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.386658,\n\t\t\t\t\"y\": 0.24628\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.415427,\n\t\t\t\t\"y\": 0.249195\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.44426,\n\t\t\t\t\"y\": 0.251375\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.473142,\n\t\t\t\t\"y\": 0.252758\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.502053,\n\t\t\t\t\"y\": 0.253211\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.530961,\n\t\t\t\t\"y\": 0.252614\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.559838,\n\t\t\t\t\"y\": 0.251112\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.588663,\n\t\t\t\t\"y\": 0.248825\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.617421,\n\t\t\t\t\"y\": 0.245808\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.646095,\n\t\t\t\t\"y\": 0.242073\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.674661,\n\t\t\t\t\"y\": 0.237587\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.703084,\n\t\t\t\t\"y\": 0.232267\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.731301,\n\t\t\t\t\"y\": 0.225942\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.759179,\n\t\t\t\t\"y\": 0.218266\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.782531,\n\t\t\t\t\"y\": 0.214098\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.780488,\n\t\t\t\t\"y\": 0.242984\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.775292,\n\t\t\t\t\"y\": 0.271471\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767018,\n\t\t\t\t\"y\": 0.299218\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.755785,\n\t\t\t\t\"y\": 0.3259\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.741748,\n\t\t\t\t\"y\": 0.351214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.725095,\n\t\t\t\t\"y\": 0.374884\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.706043,\n\t\t\t\t\"y\": 0.396661\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.684827,\n\t\t\t\t\"y\": 0.416328\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.661699,\n\t\t\t\t\"y\": 0.433697\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.636924,\n\t\t\t\t\"y\": 0.448612\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.610771,\n\t\t\t\t\"y\": 0.460945\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.583518,\n\t\t\t\t\"y\": 0.470592\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.555443,\n\t\t\t\t\"y\": 0.477478\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.526825,\n\t\t\t\t\"y\": 0.481548\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.497947,\n\t\t\t\t\"y\": 0.482773\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.469089,\n\t\t\t\t\"y\": 0.481143\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.440531,\n\t\t\t\t\"y\": 0.47667\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.412555,\n\t\t\t\t\"y\": 0.469389\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.385442,\n\t\t\t\t\"y\": 0.459355\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.359468,\n\t\t\t\t\"y\": 0.446649\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.33491,\n\t\t\t\t\"y\": 0.431377\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.312038,\n\t\t\t\t\"y\": 0.413671\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.291114,\n\t\t\t\t\"y\": 0.393692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.272388,\n\t\t\t\t\"y\": 0.371633\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.256095,\n\t\t\t\t\"y\": 0.347714\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.242445,\n\t\t\t\t\"y\": 0.322187\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.231623,\n\t\t\t\t\"y\": 0.295335\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.223781,\n\t\t\t\t\"y\": 0.267463\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.219029,\n\t\t\t\t\"y\": 0.238898\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t]\n\t},\n\t\"weary\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.788689,\n\t\t\t\t\"y\": 0.742911\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.777843,\n\t\t\t\t\"y\": 0.747113\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767161,\n\t\t\t\t\"y\": 0.751718\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.756654,\n\t\t\t\t\"y\": 0.756712\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.746331,\n\t\t\t\t\"y\": 0.762079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.736203,\n\t\t\t\t\"y\": 0.767804\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.726276,\n\t\t\t\t\"y\": 0.773874\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.716559,\n\t\t\t\t\"y\": 0.780276\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.707061,\n\t\t\t\t\"y\": 0.786998\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.697787,\n\t\t\t\t\"y\": 0.794029\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.688746,\n\t\t\t\t\"y\": 0.801358\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.679945,\n\t\t\t\t\"y\": 0.808975\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.671392,\n\t\t\t\t\"y\": 0.81687\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.663095,\n\t\t\t\t\"y\": 0.825033\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.65506,\n\t\t\t\t\"y\": 0.833457\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.647296,\n\t\t\t\t\"y\": 0.842133\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.639812,\n\t\t\t\t\"y\": 0.851052\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.632617,\n\t\t\t\t\"y\": 0.860205\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.625718,\n\t\t\t\t\"y\": 0.869586\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.619127,\n\t\t\t\t\"y\": 0.879186\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.612854,\n\t\t\t\t\"y\": 0.888997\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606908,\n\t\t\t\t\"y\": 0.899012\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.601302,\n\t\t\t\t\"y\": 0.90922\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.596049,\n\t\t\t\t\"y\": 0.919616\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593295,\n\t\t\t\t\"y\": 0.915003\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.592467,\n\t\t\t\t\"y\": 0.903384\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.592662,\n\t\t\t\t\"y\": 0.891736\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593839,\n\t\t\t\t\"y\": 0.880147\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.595951,\n\t\t\t\t\"y\": 0.868691\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.598949,\n\t\t\t\t\"y\": 0.857435\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.602785,\n\t\t\t\t\"y\": 0.846438\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.607412,\n\t\t\t\t\"y\": 0.835749\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.612784,\n\t\t\t\t\"y\": 0.825417\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.618856,\n\t\t\t\t\"y\": 0.815481\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.625587,\n\t\t\t\t\"y\": 0.805981\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.632936,\n\t\t\t\t\"y\": 0.796953\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.640865,\n\t\t\t\t\"y\": 0.788431\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.649335,\n\t\t\t\t\"y\": 0.78045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.658311,\n\t\t\t\t\"y\": 0.773043\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.667755,\n\t\t\t\t\"y\": 0.766246\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.677629,\n\t\t\t\t\"y\": 0.760095\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.687896,\n\t\t\t\t\"y\": 0.754625\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.698514,\n\t\t\t\t\"y\": 0.749877\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.709439,\n\t\t\t\t\"y\": 0.74589\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.720624,\n\t\t\t\t\"y\": 0.742707\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.732014,\n\t\t\t\t\"y\": 0.74037\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.743551,\n\t\t\t\t\"y\": 0.738924\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.755166,\n\t\t\t\t\"y\": 0.738411\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.766783,\n\t\t\t\t\"y\": 0.738874\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.778315,\n\t\t\t\t\"y\": 0.74035\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.211311,\n\t\t\t\t\"y\": 0.742911\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.222157,\n\t\t\t\t\"y\": 0.747113\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232839,\n\t\t\t\t\"y\": 0.751718\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.243346,\n\t\t\t\t\"y\": 0.756712\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.253669,\n\t\t\t\t\"y\": 0.762079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.263797,\n\t\t\t\t\"y\": 0.767804\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.273724,\n\t\t\t\t\"y\": 0.773874\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.283441,\n\t\t\t\t\"y\": 0.780276\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.292939,\n\t\t\t\t\"y\": 0.786998\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.302213,\n\t\t\t\t\"y\": 0.794029\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.311254,\n\t\t\t\t\"y\": 0.801358\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.320055,\n\t\t\t\t\"y\": 0.808975\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.328608,\n\t\t\t\t\"y\": 0.81687\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.336905,\n\t\t\t\t\"y\": 0.825033\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.34494,\n\t\t\t\t\"y\": 0.833457\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.352704,\n\t\t\t\t\"y\": 0.842133\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.360188,\n\t\t\t\t\"y\": 0.851052\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.367383,\n\t\t\t\t\"y\": 0.860205\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.374282,\n\t\t\t\t\"y\": 0.869586\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.380873,\n\t\t\t\t\"y\": 0.879186\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.387146,\n\t\t\t\t\"y\": 0.888997\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.393092,\n\t\t\t\t\"y\": 0.899012\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.398698,\n\t\t\t\t\"y\": 0.90922\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.403951,\n\t\t\t\t\"y\": 0.919616\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406705,\n\t\t\t\t\"y\": 0.915003\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.407533,\n\t\t\t\t\"y\": 0.903384\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.407338,\n\t\t\t\t\"y\": 0.891736\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406161,\n\t\t\t\t\"y\": 0.880147\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.404049,\n\t\t\t\t\"y\": 0.868691\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.401051,\n\t\t\t\t\"y\": 0.857435\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.397215,\n\t\t\t\t\"y\": 0.846438\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.392588,\n\t\t\t\t\"y\": 0.835749\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.387216,\n\t\t\t\t\"y\": 0.825417\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.381144,\n\t\t\t\t\"y\": 0.815481\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.374413,\n\t\t\t\t\"y\": 0.805981\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.367064,\n\t\t\t\t\"y\": 0.796953\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.359135,\n\t\t\t\t\"y\": 0.788431\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.350665,\n\t\t\t\t\"y\": 0.78045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.341689,\n\t\t\t\t\"y\": 0.773043\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.332245,\n\t\t\t\t\"y\": 0.766246\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.322371,\n\t\t\t\t\"y\": 0.760095\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.312104,\n\t\t\t\t\"y\": 0.754625\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.301486,\n\t\t\t\t\"y\": 0.749877\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.290561,\n\t\t\t\t\"y\": 0.74589\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.279376,\n\t\t\t\t\"y\": 0.742707\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.267986,\n\t\t\t\t\"y\": 0.74037\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.256449,\n\t\t\t\t\"y\": 0.738924\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.244834,\n\t\t\t\t\"y\": 0.738411\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.233217,\n\t\t\t\t\"y\": 0.738874\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.221685,\n\t\t\t\t\"y\": 0.74035\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.801975,\n\t\t\t\t\"y\": 0.622889\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.795827,\n\t\t\t\t\"y\": 0.612045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.78769,\n\t\t\t\t\"y\": 0.602604\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.777996,\n\t\t\t\t\"y\": 0.594771\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767183,\n\t\t\t\t\"y\": 0.588577\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.755614,\n\t\t\t\t\"y\": 0.583941\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.743569,\n\t\t\t\t\"y\": 0.580739\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.731252,\n\t\t\t\t\"y\": 0.578837\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.718809,\n\t\t\t\t\"y\": 0.578112\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.70635,\n\t\t\t\t\"y\": 0.578458\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.693956,\n\t\t\t\t\"y\": 0.579788\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.681693,\n\t\t\t\t\"y\": 0.582028\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.669616,\n\t\t\t\t\"y\": 0.585124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.657775,\n\t\t\t\t\"y\": 0.589029\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.646218,\n\t\t\t\t\"y\": 0.593709\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.634991,\n\t\t\t\t\"y\": 0.599138\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.624147,\n\t\t\t\t\"y\": 0.605299\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.613744,\n\t\t\t\t\"y\": 0.612179\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.603848,\n\t\t\t\t\"y\": 0.619774\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.594538,\n\t\t\t\t\"y\": 0.628079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.585914,\n\t\t\t\t\"y\": 0.637096\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.578096,\n\t\t\t\t\"y\": 0.646822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.571236,\n\t\t\t\t\"y\": 0.657248\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.565527,\n\t\t\t\t\"y\": 0.668346\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.561205,\n\t\t\t\t\"y\": 0.680054\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.558552,\n\t\t\t\t\"y\": 0.692249\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.557874,\n\t\t\t\t\"y\": 0.704708\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.559439,\n\t\t\t\t\"y\": 0.717083\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.563313,\n\t\t\t\t\"y\": 0.728041\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.568858,\n\t\t\t\t\"y\": 0.716909\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.576627,\n\t\t\t\t\"y\": 0.707151\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.585416,\n\t\t\t\t\"y\": 0.698296\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.594824,\n\t\t\t\t\"y\": 0.690101\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.604667,\n\t\t\t\t\"y\": 0.682435\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.614847,\n\t\t\t\t\"y\": 0.675224\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.625304,\n\t\t\t\t\"y\": 0.668423\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.636003,\n\t\t\t\t\"y\": 0.662009\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.646918,\n\t\t\t\t\"y\": 0.655973\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.658036,\n\t\t\t\t\"y\": 0.650321\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.669349,\n\t\t\t\t\"y\": 0.645072\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.68085,\n\t\t\t\t\"y\": 0.64025\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.692516,\n\t\t\t\t\"y\": 0.635844\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.704328,\n\t\t\t\t\"y\": 0.631846\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.716272,\n\t\t\t\t\"y\": 0.628265\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.728339,\n\t\t\t\t\"y\": 0.625124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.74052,\n\t\t\t\t\"y\": 0.622467\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.75281,\n\t\t\t\t\"y\": 0.620369\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.765196,\n\t\t\t\t\"y\": 0.618956\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.77765,\n\t\t\t\t\"y\": 0.618458\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.790075,\n\t\t\t\t\"y\": 0.619349\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.198025,\n\t\t\t\t\"y\": 0.622889\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.204173,\n\t\t\t\t\"y\": 0.612045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.21231,\n\t\t\t\t\"y\": 0.602604\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.222004,\n\t\t\t\t\"y\": 0.594771\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232817,\n\t\t\t\t\"y\": 0.588577\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.244386,\n\t\t\t\t\"y\": 0.583941\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.256431,\n\t\t\t\t\"y\": 0.580739\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.268748,\n\t\t\t\t\"y\": 0.578837\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.281191,\n\t\t\t\t\"y\": 0.578112\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.29365,\n\t\t\t\t\"y\": 0.578458\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.306044,\n\t\t\t\t\"y\": 0.579788\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.318307,\n\t\t\t\t\"y\": 0.582028\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.330384,\n\t\t\t\t\"y\": 0.585124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.342225,\n\t\t\t\t\"y\": 0.589029\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.353782,\n\t\t\t\t\"y\": 0.593709\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.365009,\n\t\t\t\t\"y\": 0.599138\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.375853,\n\t\t\t\t\"y\": 0.605299\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.386256,\n\t\t\t\t\"y\": 0.612179\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.396152,\n\t\t\t\t\"y\": 0.619774\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.405462,\n\t\t\t\t\"y\": 0.628079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.414086,\n\t\t\t\t\"y\": 0.637096\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.421904,\n\t\t\t\t\"y\": 0.646822\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.428764,\n\t\t\t\t\"y\": 0.657248\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.434473,\n\t\t\t\t\"y\": 0.668346\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.438795,\n\t\t\t\t\"y\": 0.680054\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.441448,\n\t\t\t\t\"y\": 0.692249\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.442126,\n\t\t\t\t\"y\": 0.704708\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.440561,\n\t\t\t\t\"y\": 0.717083\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.436687,\n\t\t\t\t\"y\": 0.728041\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.431142,\n\t\t\t\t\"y\": 0.716909\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.423373,\n\t\t\t\t\"y\": 0.707151\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.414584,\n\t\t\t\t\"y\": 0.698296\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.405176,\n\t\t\t\t\"y\": 0.690101\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.395333,\n\t\t\t\t\"y\": 0.682435\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.385153,\n\t\t\t\t\"y\": 0.675224\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.374696,\n\t\t\t\t\"y\": 0.668423\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.363997,\n\t\t\t\t\"y\": 0.662009\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.353082,\n\t\t\t\t\"y\": 0.655973\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.341964,\n\t\t\t\t\"y\": 0.650321\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.330651,\n\t\t\t\t\"y\": 0.645072\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.31915,\n\t\t\t\t\"y\": 0.64025\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.307484,\n\t\t\t\t\"y\": 0.635844\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.295672,\n\t\t\t\t\"y\": 0.631846\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.283728,\n\t\t\t\t\"y\": 0.628265\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.271661,\n\t\t\t\t\"y\": 0.625124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.25948,\n\t\t\t\t\"y\": 0.622467\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.24719,\n\t\t\t\t\"y\": 0.620369\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.234804,\n\t\t\t\t\"y\": 0.618956\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.22235,\n\t\t\t\t\"y\": 0.618458\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.209925,\n\t\t\t\t\"y\": 0.619349\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.437209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 3.4834e-10\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.437209\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.217437,\n\t\t\t\t\"y\": 0.209984\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.24475,\n\t\t\t\t\"y\": 0.219461\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.27269,\n\t\t\t\t\"y\": 0.226911\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.300941,\n\t\t\t\t\"y\": 0.233078\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.329388,\n\t\t\t\t\"y\": 0.238273\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.357971,\n\t\t\t\t\"y\": 0.242648\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.386658,\n\t\t\t\t\"y\": 0.24628\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.415427,\n\t\t\t\t\"y\": 0.249195\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.44426,\n\t\t\t\t\"y\": 0.251375\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.473142,\n\t\t\t\t\"y\": 0.252758\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.502053,\n\t\t\t\t\"y\": 0.253211\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.530961,\n\t\t\t\t\"y\": 0.252614\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.559838,\n\t\t\t\t\"y\": 0.251112\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.588663,\n\t\t\t\t\"y\": 0.248825\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.617421,\n\t\t\t\t\"y\": 0.245808\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.646095,\n\t\t\t\t\"y\": 0.242073\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.674661,\n\t\t\t\t\"y\": 0.237587\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.703084,\n\t\t\t\t\"y\": 0.232267\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.731301,\n\t\t\t\t\"y\": 0.225942\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.759179,\n\t\t\t\t\"y\": 0.218266\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.782531,\n\t\t\t\t\"y\": 0.214098\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.780488,\n\t\t\t\t\"y\": 0.242984\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.775292,\n\t\t\t\t\"y\": 0.271471\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767018,\n\t\t\t\t\"y\": 0.299218\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.755785,\n\t\t\t\t\"y\": 0.3259\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.741748,\n\t\t\t\t\"y\": 0.351214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.725095,\n\t\t\t\t\"y\": 0.374884\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.706043,\n\t\t\t\t\"y\": 0.396661\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.684827,\n\t\t\t\t\"y\": 0.416328\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.661699,\n\t\t\t\t\"y\": 0.433697\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.636924,\n\t\t\t\t\"y\": 0.448612\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.610771,\n\t\t\t\t\"y\": 0.460945\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.583518,\n\t\t\t\t\"y\": 0.470592\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.555443,\n\t\t\t\t\"y\": 0.477478\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.526825,\n\t\t\t\t\"y\": 0.481548\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.497947,\n\t\t\t\t\"y\": 0.482773\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.469089,\n\t\t\t\t\"y\": 0.481143\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.440531,\n\t\t\t\t\"y\": 0.47667\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.412555,\n\t\t\t\t\"y\": 0.469389\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.385442,\n\t\t\t\t\"y\": 0.459355\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.359468,\n\t\t\t\t\"y\": 0.446649\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.33491,\n\t\t\t\t\"y\": 0.431377\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.312038,\n\t\t\t\t\"y\": 0.413671\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.291114,\n\t\t\t\t\"y\": 0.393692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.272388,\n\t\t\t\t\"y\": 0.371633\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.256095,\n\t\t\t\t\"y\": 0.347714\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.242445,\n\t\t\t\t\"y\": 0.322187\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.231623,\n\t\t\t\t\"y\": 0.295335\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.223781,\n\t\t\t\t\"y\": 0.267463\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.219029,\n\t\t\t\t\"y\": 0.238898\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t]\n\t},\n\t\"open_mouth\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.708191,\n\t\t\t\t\"y\": 0.6214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.707865,\n\t\t\t\t\"y\": 0.614079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.706885,\n\t\t\t\t\"y\": 0.606817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.705245,\n\t\t\t\t\"y\": 0.599675\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.702935,\n\t\t\t\t\"y\": 0.592722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.699944,\n\t\t\t\t\"y\": 0.586036\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.696261,\n\t\t\t\t\"y\": 0.579706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.691878,\n\t\t\t\t\"y\": 0.573841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.6868,\n\t\t\t\t\"y\": 0.568571\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.681053,\n\t\t\t\t\"y\": 0.564045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.674695,\n\t\t\t\t\"y\": 0.560432\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.667839,\n\t\t\t\t\"y\": 0.557899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.66065,\n\t\t\t\t\"y\": 0.556591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.653343,\n\t\t\t\t\"y\": 0.556591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.646154,\n\t\t\t\t\"y\": 0.557899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.639298,\n\t\t\t\t\"y\": 0.560432\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.632941,\n\t\t\t\t\"y\": 0.564045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.627193,\n\t\t\t\t\"y\": 0.568571\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.622115,\n\t\t\t\t\"y\": 0.573841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.617732,\n\t\t\t\t\"y\": 0.579706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.614049,\n\t\t\t\t\"y\": 0.586036\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.611058,\n\t\t\t\t\"y\": 0.592722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.608748,\n\t\t\t\t\"y\": 0.599675\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.607108,\n\t\t\t\t\"y\": 0.606817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606128,\n\t\t\t\t\"y\": 0.614079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.605802,\n\t\t\t\t\"y\": 0.6214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606128,\n\t\t\t\t\"y\": 0.628721\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.607108,\n\t\t\t\t\"y\": 0.635983\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.608748,\n\t\t\t\t\"y\": 0.643125\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.611058,\n\t\t\t\t\"y\": 0.650077\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.614049,\n\t\t\t\t\"y\": 0.656764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.617732,\n\t\t\t\t\"y\": 0.663094\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.622115,\n\t\t\t\t\"y\": 0.668959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.627193,\n\t\t\t\t\"y\": 0.674229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.632941,\n\t\t\t\t\"y\": 0.678755\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.639298,\n\t\t\t\t\"y\": 0.682368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.646154,\n\t\t\t\t\"y\": 0.684901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.653343,\n\t\t\t\t\"y\": 0.686209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.66065,\n\t\t\t\t\"y\": 0.686209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.667839,\n\t\t\t\t\"y\": 0.684901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.674695,\n\t\t\t\t\"y\": 0.682368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.681053,\n\t\t\t\t\"y\": 0.678755\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.6868,\n\t\t\t\t\"y\": 0.674229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.691878,\n\t\t\t\t\"y\": 0.668959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.696261,\n\t\t\t\t\"y\": 0.663094\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.699944,\n\t\t\t\t\"y\": 0.656764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.702935,\n\t\t\t\t\"y\": 0.650077\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.705245,\n\t\t\t\t\"y\": 0.643125\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.706885,\n\t\t\t\t\"y\": 0.635983\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.707865,\n\t\t\t\t\"y\": 0.628721\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.291809,\n\t\t\t\t\"y\": 0.6214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.292135,\n\t\t\t\t\"y\": 0.614079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.293115,\n\t\t\t\t\"y\": 0.606817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.294755,\n\t\t\t\t\"y\": 0.599675\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.297065,\n\t\t\t\t\"y\": 0.592722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.300056,\n\t\t\t\t\"y\": 0.586036\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.303739,\n\t\t\t\t\"y\": 0.579706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.308122,\n\t\t\t\t\"y\": 0.573841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.3132,\n\t\t\t\t\"y\": 0.568571\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.318947,\n\t\t\t\t\"y\": 0.564045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.325305,\n\t\t\t\t\"y\": 0.560432\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.332161,\n\t\t\t\t\"y\": 0.557899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.33935,\n\t\t\t\t\"y\": 0.556591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.346657,\n\t\t\t\t\"y\": 0.556591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.353846,\n\t\t\t\t\"y\": 0.557899\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.360702,\n\t\t\t\t\"y\": 0.560432\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.367059,\n\t\t\t\t\"y\": 0.564045\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.372807,\n\t\t\t\t\"y\": 0.568571\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.377885,\n\t\t\t\t\"y\": 0.573841\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.382268,\n\t\t\t\t\"y\": 0.579706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.385951,\n\t\t\t\t\"y\": 0.586036\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.388942,\n\t\t\t\t\"y\": 0.592722\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.391252,\n\t\t\t\t\"y\": 0.599675\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.392892,\n\t\t\t\t\"y\": 0.606817\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.393872,\n\t\t\t\t\"y\": 0.614079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.394198,\n\t\t\t\t\"y\": 0.6214\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.393872,\n\t\t\t\t\"y\": 0.628721\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.392892,\n\t\t\t\t\"y\": 0.635983\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.391252,\n\t\t\t\t\"y\": 0.643125\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.388942,\n\t\t\t\t\"y\": 0.650077\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.385951,\n\t\t\t\t\"y\": 0.656764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.382268,\n\t\t\t\t\"y\": 0.663094\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.377885,\n\t\t\t\t\"y\": 0.668959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.372807,\n\t\t\t\t\"y\": 0.674229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.367059,\n\t\t\t\t\"y\": 0.678755\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.360702,\n\t\t\t\t\"y\": 0.682368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.353846,\n\t\t\t\t\"y\": 0.684901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.346657,\n\t\t\t\t\"y\": 0.686209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.33935,\n\t\t\t\t\"y\": 0.686209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.332161,\n\t\t\t\t\"y\": 0.684901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.325305,\n\t\t\t\t\"y\": 0.682368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.318947,\n\t\t\t\t\"y\": 0.678755\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.3132,\n\t\t\t\t\"y\": 0.674229\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.308122,\n\t\t\t\t\"y\": 0.668959\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.303739,\n\t\t\t\t\"y\": 0.663094\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.300056,\n\t\t\t\t\"y\": 0.656764\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.297065,\n\t\t\t\t\"y\": 0.650077\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.294755,\n\t\t\t\t\"y\": 0.643125\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.293115,\n\t\t\t\t\"y\": 0.635983\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.292135,\n\t\t\t\t\"y\": 0.628721\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.437209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 3.4834e-10\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.437209\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.393082,\n\t\t\t\t\"y\": 0.300992\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.393955,\n\t\t\t\t\"y\": 0.287796\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.396555,\n\t\t\t\t\"y\": 0.27483\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.400828,\n\t\t\t\t\"y\": 0.262317\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.40669,\n\t\t\t\t\"y\": 0.250467\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.414024,\n\t\t\t\t\"y\": 0.239472\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.422695,\n\t\t\t\t\"y\": 0.229499\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.432546,\n\t\t\t\t\"y\": 0.220697\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.443411,\n\t\t\t\t\"y\": 0.213185\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.455113,\n\t\t\t\t\"y\": 0.207064\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.467468,\n\t\t\t\t\"y\": 0.202408\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.480293,\n\t\t\t\t\"y\": 0.199275\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.4934,\n\t\t\t\t\"y\": 0.197699\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5066,\n\t\t\t\t\"y\": 0.197699\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.519707,\n\t\t\t\t\"y\": 0.199275\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.532532,\n\t\t\t\t\"y\": 0.202408\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.544887,\n\t\t\t\t\"y\": 0.207064\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.556589,\n\t\t\t\t\"y\": 0.213185\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.567454,\n\t\t\t\t\"y\": 0.220697\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.577305,\n\t\t\t\t\"y\": 0.229499\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.585976,\n\t\t\t\t\"y\": 0.239472\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.59331,\n\t\t\t\t\"y\": 0.250467\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.599172,\n\t\t\t\t\"y\": 0.262317\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.603445,\n\t\t\t\t\"y\": 0.27483\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606045,\n\t\t\t\t\"y\": 0.287796\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606918,\n\t\t\t\t\"y\": 0.300992\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606045,\n\t\t\t\t\"y\": 0.314188\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.603445,\n\t\t\t\t\"y\": 0.327154\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.599172,\n\t\t\t\t\"y\": 0.339667\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.59331,\n\t\t\t\t\"y\": 0.351517\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.585976,\n\t\t\t\t\"y\": 0.362512\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.577305,\n\t\t\t\t\"y\": 0.372485\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.567454,\n\t\t\t\t\"y\": 0.381287\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.556589,\n\t\t\t\t\"y\": 0.388799\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.544887,\n\t\t\t\t\"y\": 0.39492\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.532532,\n\t\t\t\t\"y\": 0.399576\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.519707,\n\t\t\t\t\"y\": 0.402709\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5066,\n\t\t\t\t\"y\": 0.404285\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.4934,\n\t\t\t\t\"y\": 0.404285\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.480293,\n\t\t\t\t\"y\": 0.402709\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.467468,\n\t\t\t\t\"y\": 0.399576\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.455113,\n\t\t\t\t\"y\": 0.39492\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.443411,\n\t\t\t\t\"y\": 0.388799\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.432546,\n\t\t\t\t\"y\": 0.381287\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.422695,\n\t\t\t\t\"y\": 0.372485\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.414024,\n\t\t\t\t\"y\": 0.362512\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.40669,\n\t\t\t\t\"y\": 0.351517\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.400828,\n\t\t\t\t\"y\": 0.339667\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.396555,\n\t\t\t\t\"y\": 0.327154\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.393955,\n\t\t\t\t\"y\": 0.314188\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t]\n\t},\n\t\"hushed\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.841084,\n\t\t\t\t\"y\": 0.665623\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.834425,\n\t\t\t\t\"y\": 0.672666\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.827528,\n\t\t\t\t\"y\": 0.679475\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.820405,\n\t\t\t\t\"y\": 0.686047\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.813068,\n\t\t\t\t\"y\": 0.692377\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.805527,\n\t\t\t\t\"y\": 0.698463\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.797793,\n\t\t\t\t\"y\": 0.704299\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.789875,\n\t\t\t\t\"y\": 0.709883\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.781782,\n\t\t\t\t\"y\": 0.715209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.773524,\n\t\t\t\t\"y\": 0.720275\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.76511,\n\t\t\t\t\"y\": 0.725075\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.756548,\n\t\t\t\t\"y\": 0.729605\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.747846,\n\t\t\t\t\"y\": 0.73386\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.739013,\n\t\t\t\t\"y\": 0.737834\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.730057,\n\t\t\t\t\"y\": 0.741522\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.720987,\n\t\t\t\t\"y\": 0.744917\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.711811,\n\t\t\t\t\"y\": 0.748013\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.702537,\n\t\t\t\t\"y\": 0.750803\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.693176,\n\t\t\t\t\"y\": 0.753279\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.683735,\n\t\t\t\t\"y\": 0.755434\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.674225,\n\t\t\t\t\"y\": 0.757259\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.664657,\n\t\t\t\t\"y\": 0.758745\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.655042,\n\t\t\t\t\"y\": 0.759882\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.64539,\n\t\t\t\t\"y\": 0.760659\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.647298,\n\t\t\t\t\"y\": 0.764004\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.65599,\n\t\t\t\t\"y\": 0.768272\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.665024,\n\t\t\t\t\"y\": 0.771754\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.674321,\n\t\t\t\t\"y\": 0.774457\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.683806,\n\t\t\t\t\"y\": 0.776392\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.693414,\n\t\t\t\t\"y\": 0.777578\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.703085,\n\t\t\t\t\"y\": 0.778032\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.712762,\n\t\t\t\t\"y\": 0.777777\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.722397,\n\t\t\t\t\"y\": 0.776834\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.731944,\n\t\t\t\t\"y\": 0.775223\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.741359,\n\t\t\t\t\"y\": 0.772967\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.750603,\n\t\t\t\t\"y\": 0.770085\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.759637,\n\t\t\t\t\"y\": 0.766597\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.768422,\n\t\t\t\t\"y\": 0.762521\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.776921,\n\t\t\t\t\"y\": 0.757876\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.785096,\n\t\t\t\t\"y\": 0.752679\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.792907,\n\t\t\t\t\"y\": 0.746948\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.800315,\n\t\t\t\t\"y\": 0.740703\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.807276,\n\t\t\t\t\"y\": 0.733963\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.813748,\n\t\t\t\t\"y\": 0.726748\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.819682,\n\t\t\t\t\"y\": 0.719084\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.825029,\n\t\t\t\t\"y\": 0.710998\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.829737,\n\t\t\t\t\"y\": 0.702523\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.833752,\n\t\t\t\t\"y\": 0.693697\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.837018,\n\t\t\t\t\"y\": 0.684567\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.839479,\n\t\t\t\t\"y\": 0.675187\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.158916,\n\t\t\t\t\"y\": 0.665623\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.165575,\n\t\t\t\t\"y\": 0.672666\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.172472,\n\t\t\t\t\"y\": 0.679475\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.179595,\n\t\t\t\t\"y\": 0.686047\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.186932,\n\t\t\t\t\"y\": 0.692377\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.194473,\n\t\t\t\t\"y\": 0.698463\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.202207,\n\t\t\t\t\"y\": 0.704299\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.210125,\n\t\t\t\t\"y\": 0.709883\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.218218,\n\t\t\t\t\"y\": 0.715209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.226476,\n\t\t\t\t\"y\": 0.720275\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.23489,\n\t\t\t\t\"y\": 0.725075\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.243452,\n\t\t\t\t\"y\": 0.729605\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.252154,\n\t\t\t\t\"y\": 0.73386\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.260987,\n\t\t\t\t\"y\": 0.737834\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.269943,\n\t\t\t\t\"y\": 0.741522\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.279013,\n\t\t\t\t\"y\": 0.744917\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.288189,\n\t\t\t\t\"y\": 0.748013\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.297463,\n\t\t\t\t\"y\": 0.750803\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.306824,\n\t\t\t\t\"y\": 0.753279\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.316265,\n\t\t\t\t\"y\": 0.755434\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.325775,\n\t\t\t\t\"y\": 0.757259\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.335343,\n\t\t\t\t\"y\": 0.758745\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.344958,\n\t\t\t\t\"y\": 0.759882\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.35461,\n\t\t\t\t\"y\": 0.760659\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.352702,\n\t\t\t\t\"y\": 0.764004\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.34401,\n\t\t\t\t\"y\": 0.768272\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.334976,\n\t\t\t\t\"y\": 0.771754\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.325679,\n\t\t\t\t\"y\": 0.774457\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.316194,\n\t\t\t\t\"y\": 0.776392\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.306586,\n\t\t\t\t\"y\": 0.777578\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.296915,\n\t\t\t\t\"y\": 0.778032\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.287238,\n\t\t\t\t\"y\": 0.777777\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.277603,\n\t\t\t\t\"y\": 0.776834\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.268056,\n\t\t\t\t\"y\": 0.775223\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.258641,\n\t\t\t\t\"y\": 0.772967\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.249397,\n\t\t\t\t\"y\": 0.770085\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.240363,\n\t\t\t\t\"y\": 0.766597\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.231578,\n\t\t\t\t\"y\": 0.762521\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.223079,\n\t\t\t\t\"y\": 0.757876\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.214904,\n\t\t\t\t\"y\": 0.752679\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.207093,\n\t\t\t\t\"y\": 0.746948\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.199685,\n\t\t\t\t\"y\": 0.740703\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.192724,\n\t\t\t\t\"y\": 0.733963\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.186252,\n\t\t\t\t\"y\": 0.726748\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.180318,\n\t\t\t\t\"y\": 0.719084\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.174971,\n\t\t\t\t\"y\": 0.710998\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.170263,\n\t\t\t\t\"y\": 0.702523\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.166248,\n\t\t\t\t\"y\": 0.693697\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.162982,\n\t\t\t\t\"y\": 0.684567\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.160521,\n\t\t\t\t\"y\": 0.675187\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.742431,\n\t\t\t\t\"y\": 0.518479\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.742105,\n\t\t\t\t\"y\": 0.511157\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.741124,\n\t\t\t\t\"y\": 0.503895\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.739484,\n\t\t\t\t\"y\": 0.496754\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.737174,\n\t\t\t\t\"y\": 0.489801\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.734183,\n\t\t\t\t\"y\": 0.483114\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.7305,\n\t\t\t\t\"y\": 0.476785\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.726118,\n\t\t\t\t\"y\": 0.47092\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.72104,\n\t\t\t\t\"y\": 0.46565\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.715292,\n\t\t\t\t\"y\": 0.461124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.708935,\n\t\t\t\t\"y\": 0.45751\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.702078,\n\t\t\t\t\"y\": 0.454978\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.694889,\n\t\t\t\t\"y\": 0.45367\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.687583,\n\t\t\t\t\"y\": 0.45367\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.680394,\n\t\t\t\t\"y\": 0.454978\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.673537,\n\t\t\t\t\"y\": 0.45751\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.66718,\n\t\t\t\t\"y\": 0.461124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.661432,\n\t\t\t\t\"y\": 0.46565\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.656355,\n\t\t\t\t\"y\": 0.47092\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.651972,\n\t\t\t\t\"y\": 0.476785\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.648289,\n\t\t\t\t\"y\": 0.483114\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.645298,\n\t\t\t\t\"y\": 0.489801\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.642988,\n\t\t\t\t\"y\": 0.496754\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.641348,\n\t\t\t\t\"y\": 0.503895\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.640368,\n\t\t\t\t\"y\": 0.511157\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.640041,\n\t\t\t\t\"y\": 0.518479\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.640368,\n\t\t\t\t\"y\": 0.5258\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.641348,\n\t\t\t\t\"y\": 0.533062\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.642988,\n\t\t\t\t\"y\": 0.540203\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.645298,\n\t\t\t\t\"y\": 0.547156\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.648289,\n\t\t\t\t\"y\": 0.553843\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.651972,\n\t\t\t\t\"y\": 0.560172\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.656355,\n\t\t\t\t\"y\": 0.566037\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.661432,\n\t\t\t\t\"y\": 0.571307\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.66718,\n\t\t\t\t\"y\": 0.575833\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.673537,\n\t\t\t\t\"y\": 0.579447\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.680394,\n\t\t\t\t\"y\": 0.581979\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.687583,\n\t\t\t\t\"y\": 0.583288\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.694889,\n\t\t\t\t\"y\": 0.583288\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.702078,\n\t\t\t\t\"y\": 0.581979\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.708935,\n\t\t\t\t\"y\": 0.579447\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.715292,\n\t\t\t\t\"y\": 0.575833\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.72104,\n\t\t\t\t\"y\": 0.571307\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.726118,\n\t\t\t\t\"y\": 0.566037\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.7305,\n\t\t\t\t\"y\": 0.560172\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.734183,\n\t\t\t\t\"y\": 0.553843\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.737174,\n\t\t\t\t\"y\": 0.547156\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.739484,\n\t\t\t\t\"y\": 0.540203\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.741124,\n\t\t\t\t\"y\": 0.533062\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.742105,\n\t\t\t\t\"y\": 0.5258\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.257569,\n\t\t\t\t\"y\": 0.518479\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.257895,\n\t\t\t\t\"y\": 0.511157\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.258876,\n\t\t\t\t\"y\": 0.503895\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.260516,\n\t\t\t\t\"y\": 0.496754\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.262826,\n\t\t\t\t\"y\": 0.489801\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.265817,\n\t\t\t\t\"y\": 0.483114\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.2695,\n\t\t\t\t\"y\": 0.476785\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.273882,\n\t\t\t\t\"y\": 0.47092\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.27896,\n\t\t\t\t\"y\": 0.46565\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.284708,\n\t\t\t\t\"y\": 0.461124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.291065,\n\t\t\t\t\"y\": 0.45751\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.297922,\n\t\t\t\t\"y\": 0.454978\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.305111,\n\t\t\t\t\"y\": 0.45367\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.312417,\n\t\t\t\t\"y\": 0.45367\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.319606,\n\t\t\t\t\"y\": 0.454978\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.326463,\n\t\t\t\t\"y\": 0.45751\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.33282,\n\t\t\t\t\"y\": 0.461124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.338568,\n\t\t\t\t\"y\": 0.46565\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.343645,\n\t\t\t\t\"y\": 0.47092\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.348028,\n\t\t\t\t\"y\": 0.476785\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.351711,\n\t\t\t\t\"y\": 0.483114\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.354702,\n\t\t\t\t\"y\": 0.489801\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.357012,\n\t\t\t\t\"y\": 0.496754\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.358652,\n\t\t\t\t\"y\": 0.503895\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.359632,\n\t\t\t\t\"y\": 0.511157\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.359959,\n\t\t\t\t\"y\": 0.518479\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.359632,\n\t\t\t\t\"y\": 0.5258\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.358652,\n\t\t\t\t\"y\": 0.533062\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.357012,\n\t\t\t\t\"y\": 0.540203\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.354702,\n\t\t\t\t\"y\": 0.547156\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.351711,\n\t\t\t\t\"y\": 0.553843\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.348028,\n\t\t\t\t\"y\": 0.560172\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.343645,\n\t\t\t\t\"y\": 0.566037\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.338568,\n\t\t\t\t\"y\": 0.571307\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.33282,\n\t\t\t\t\"y\": 0.575833\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.326463,\n\t\t\t\t\"y\": 0.579447\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.319606,\n\t\t\t\t\"y\": 0.581979\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.312417,\n\t\t\t\t\"y\": 0.583288\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.305111,\n\t\t\t\t\"y\": 0.583288\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.297922,\n\t\t\t\t\"y\": 0.581979\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.291065,\n\t\t\t\t\"y\": 0.579447\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.284708,\n\t\t\t\t\"y\": 0.575833\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.27896,\n\t\t\t\t\"y\": 0.571307\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.273882,\n\t\t\t\t\"y\": 0.566037\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.2695,\n\t\t\t\t\"y\": 0.560172\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.265817,\n\t\t\t\t\"y\": 0.553843\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.262826,\n\t\t\t\t\"y\": 0.547156\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.260516,\n\t\t\t\t\"y\": 0.540203\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.258876,\n\t\t\t\t\"y\": 0.533062\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.257895,\n\t\t\t\t\"y\": 0.5258\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.437209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 3.4834e-10\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.437209\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.411641,\n\t\t\t\t\"y\": 0.255964\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.412362,\n\t\t\t\t\"y\": 0.245058\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.414511,\n\t\t\t\t\"y\": 0.234343\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.418043,\n\t\t\t\t\"y\": 0.224002\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.422886,\n\t\t\t\t\"y\": 0.214209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.428948,\n\t\t\t\t\"y\": 0.205122\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.436113,\n\t\t\t\t\"y\": 0.196881\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.444255,\n\t\t\t\t\"y\": 0.189606\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.453234,\n\t\t\t\t\"y\": 0.183399\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.462904,\n\t\t\t\t\"y\": 0.17834\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.473115,\n\t\t\t\t\"y\": 0.174492\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.483714,\n\t\t\t\t\"y\": 0.171903\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.494545,\n\t\t\t\t\"y\": 0.1706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.505455,\n\t\t\t\t\"y\": 0.1706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.516286,\n\t\t\t\t\"y\": 0.171903\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.526885,\n\t\t\t\t\"y\": 0.174492\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.537096,\n\t\t\t\t\"y\": 0.17834\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.546766,\n\t\t\t\t\"y\": 0.183399\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.555745,\n\t\t\t\t\"y\": 0.189606\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.563887,\n\t\t\t\t\"y\": 0.196881\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.571052,\n\t\t\t\t\"y\": 0.205122\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.577114,\n\t\t\t\t\"y\": 0.214209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.581957,\n\t\t\t\t\"y\": 0.224002\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.585489,\n\t\t\t\t\"y\": 0.234343\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.587638,\n\t\t\t\t\"y\": 0.245058\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.588359,\n\t\t\t\t\"y\": 0.255964\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.587638,\n\t\t\t\t\"y\": 0.266869\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.585489,\n\t\t\t\t\"y\": 0.277585\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.581957,\n\t\t\t\t\"y\": 0.287925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.577114,\n\t\t\t\t\"y\": 0.297718\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.571052,\n\t\t\t\t\"y\": 0.306805\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.563887,\n\t\t\t\t\"y\": 0.315047\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.555745,\n\t\t\t\t\"y\": 0.322321\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.546766,\n\t\t\t\t\"y\": 0.328529\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.537096,\n\t\t\t\t\"y\": 0.333588\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.526885,\n\t\t\t\t\"y\": 0.337435\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.516286,\n\t\t\t\t\"y\": 0.340025\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.505455,\n\t\t\t\t\"y\": 0.341327\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.494545,\n\t\t\t\t\"y\": 0.341327\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.483714,\n\t\t\t\t\"y\": 0.340025\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.473115,\n\t\t\t\t\"y\": 0.337435\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.462904,\n\t\t\t\t\"y\": 0.333588\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.453234,\n\t\t\t\t\"y\": 0.328529\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.444255,\n\t\t\t\t\"y\": 0.322321\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.436113,\n\t\t\t\t\"y\": 0.315047\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.428948,\n\t\t\t\t\"y\": 0.306805\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.422886,\n\t\t\t\t\"y\": 0.297718\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.418043,\n\t\t\t\t\"y\": 0.287925\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.414511,\n\t\t\t\t\"y\": 0.277585\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.412362,\n\t\t\t\t\"y\": 0.266869\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t]\n\t},\n\t\"frowning\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.742431,\n\t\t\t\t\"y\": 0.518479\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.742105,\n\t\t\t\t\"y\": 0.511157\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.741124,\n\t\t\t\t\"y\": 0.503895\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.739484,\n\t\t\t\t\"y\": 0.496754\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.737174,\n\t\t\t\t\"y\": 0.489801\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.734183,\n\t\t\t\t\"y\": 0.483114\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.7305,\n\t\t\t\t\"y\": 0.476785\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.726118,\n\t\t\t\t\"y\": 0.47092\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.72104,\n\t\t\t\t\"y\": 0.46565\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.715292,\n\t\t\t\t\"y\": 0.461124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.708935,\n\t\t\t\t\"y\": 0.45751\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.702078,\n\t\t\t\t\"y\": 0.454978\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.694889,\n\t\t\t\t\"y\": 0.45367\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.687583,\n\t\t\t\t\"y\": 0.45367\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.680394,\n\t\t\t\t\"y\": 0.454978\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.673537,\n\t\t\t\t\"y\": 0.45751\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.66718,\n\t\t\t\t\"y\": 0.461124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.661432,\n\t\t\t\t\"y\": 0.46565\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.656355,\n\t\t\t\t\"y\": 0.47092\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.651972,\n\t\t\t\t\"y\": 0.476785\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.648289,\n\t\t\t\t\"y\": 0.483114\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.645298,\n\t\t\t\t\"y\": 0.489801\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.642988,\n\t\t\t\t\"y\": 0.496754\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.641348,\n\t\t\t\t\"y\": 0.503895\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.640368,\n\t\t\t\t\"y\": 0.511157\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.640041,\n\t\t\t\t\"y\": 0.518479\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.640368,\n\t\t\t\t\"y\": 0.5258\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.641348,\n\t\t\t\t\"y\": 0.533062\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.642988,\n\t\t\t\t\"y\": 0.540203\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.645298,\n\t\t\t\t\"y\": 0.547156\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.648289,\n\t\t\t\t\"y\": 0.553843\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.651972,\n\t\t\t\t\"y\": 0.560172\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.656355,\n\t\t\t\t\"y\": 0.566037\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.661432,\n\t\t\t\t\"y\": 0.571307\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.66718,\n\t\t\t\t\"y\": 0.575833\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.673537,\n\t\t\t\t\"y\": 0.579447\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.680394,\n\t\t\t\t\"y\": 0.581979\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.687583,\n\t\t\t\t\"y\": 0.583288\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.694889,\n\t\t\t\t\"y\": 0.583288\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.702078,\n\t\t\t\t\"y\": 0.581979\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.708935,\n\t\t\t\t\"y\": 0.579447\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.715292,\n\t\t\t\t\"y\": 0.575833\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.72104,\n\t\t\t\t\"y\": 0.571307\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.726118,\n\t\t\t\t\"y\": 0.566037\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.7305,\n\t\t\t\t\"y\": 0.560172\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.734183,\n\t\t\t\t\"y\": 0.553843\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.737174,\n\t\t\t\t\"y\": 0.547156\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.739484,\n\t\t\t\t\"y\": 0.540203\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.741124,\n\t\t\t\t\"y\": 0.533062\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.742105,\n\t\t\t\t\"y\": 0.5258\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.257569,\n\t\t\t\t\"y\": 0.518479\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.257895,\n\t\t\t\t\"y\": 0.511157\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.258876,\n\t\t\t\t\"y\": 0.503895\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.260516,\n\t\t\t\t\"y\": 0.496754\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.262826,\n\t\t\t\t\"y\": 0.489801\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.265817,\n\t\t\t\t\"y\": 0.483114\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.2695,\n\t\t\t\t\"y\": 0.476785\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.273882,\n\t\t\t\t\"y\": 0.47092\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.27896,\n\t\t\t\t\"y\": 0.46565\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.284708,\n\t\t\t\t\"y\": 0.461124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.291065,\n\t\t\t\t\"y\": 0.45751\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.297922,\n\t\t\t\t\"y\": 0.454978\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.305111,\n\t\t\t\t\"y\": 0.45367\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.312417,\n\t\t\t\t\"y\": 0.45367\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.319606,\n\t\t\t\t\"y\": 0.454978\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.326463,\n\t\t\t\t\"y\": 0.45751\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.33282,\n\t\t\t\t\"y\": 0.461124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.338568,\n\t\t\t\t\"y\": 0.46565\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.343645,\n\t\t\t\t\"y\": 0.47092\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.348028,\n\t\t\t\t\"y\": 0.476785\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.351711,\n\t\t\t\t\"y\": 0.483114\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.354702,\n\t\t\t\t\"y\": 0.489801\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.357012,\n\t\t\t\t\"y\": 0.496754\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.358652,\n\t\t\t\t\"y\": 0.503895\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.359632,\n\t\t\t\t\"y\": 0.511157\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.359959,\n\t\t\t\t\"y\": 0.518479\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.359632,\n\t\t\t\t\"y\": 0.5258\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.358652,\n\t\t\t\t\"y\": 0.533062\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.357012,\n\t\t\t\t\"y\": 0.540203\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.354702,\n\t\t\t\t\"y\": 0.547156\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.351711,\n\t\t\t\t\"y\": 0.553843\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.348028,\n\t\t\t\t\"y\": 0.560172\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.343645,\n\t\t\t\t\"y\": 0.566037\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.338568,\n\t\t\t\t\"y\": 0.571307\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.33282,\n\t\t\t\t\"y\": 0.575833\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.326463,\n\t\t\t\t\"y\": 0.579447\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.319606,\n\t\t\t\t\"y\": 0.581979\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.312417,\n\t\t\t\t\"y\": 0.583288\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.305111,\n\t\t\t\t\"y\": 0.583288\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.297922,\n\t\t\t\t\"y\": 0.581979\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.291065,\n\t\t\t\t\"y\": 0.579447\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.284708,\n\t\t\t\t\"y\": 0.575833\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.27896,\n\t\t\t\t\"y\": 0.571307\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.273882,\n\t\t\t\t\"y\": 0.566037\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.2695,\n\t\t\t\t\"y\": 0.560172\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.265817,\n\t\t\t\t\"y\": 0.553843\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.262826,\n\t\t\t\t\"y\": 0.547156\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.260516,\n\t\t\t\t\"y\": 0.540203\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.258876,\n\t\t\t\t\"y\": 0.533062\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.257895,\n\t\t\t\t\"y\": 0.5258\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.437209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 3.4834e-10\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.437209\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.364222,\n\t\t\t\t\"y\": 0.266079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.356036,\n\t\t\t\t\"y\": 0.252957\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.350177,\n\t\t\t\t\"y\": 0.238652\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.347724,\n\t\t\t\t\"y\": 0.223404\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.349488,\n\t\t\t\t\"y\": 0.208071\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.355779,\n\t\t\t\t\"y\": 0.194\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.366523,\n\t\t\t\t\"y\": 0.182993\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.380618,\n\t\t\t\t\"y\": 0.176875\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.395993,\n\t\t\t\t\"y\": 0.176073\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.411216,\n\t\t\t\t\"y\": 0.178681\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.426137,\n\t\t\t\t\"y\": 0.182719\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.440936,\n\t\t\t\t\"y\": 0.187192\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.455783,\n\t\t\t\t\"y\": 0.1915\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.470801,\n\t\t\t\t\"y\": 0.195154\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.486049,\n\t\t\t\t\"y\": 0.197664\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.501474,\n\t\t\t\t\"y\": 0.198487\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.516876,\n\t\t\t\t\"y\": 0.197298\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.53208,\n\t\t\t\t\"y\": 0.194529\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.547059,\n\t\t\t\t\"y\": 0.190714\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.561886,\n\t\t\t\t\"y\": 0.186336\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.576693,\n\t\t\t\t\"y\": 0.181893\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.59166,\n\t\t\t\t\"y\": 0.178031\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606949,\n\t\t\t\t\"y\": 0.175879\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.622235,\n\t\t\t\t\"y\": 0.177614\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.635837,\n\t\t\t\t\"y\": 0.184762\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.645776,\n\t\t\t\t\"y\": 0.196508\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.651191,\n\t\t\t\t\"y\": 0.210945\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.65212,\n\t\t\t\t\"y\": 0.226354\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.648931,\n\t\t\t\t\"y\": 0.241467\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.642556,\n\t\t\t\t\"y\": 0.255552\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.634016,\n\t\t\t\t\"y\": 0.268447\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.623943,\n\t\t\t\t\"y\": 0.280184\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.612705,\n\t\t\t\t\"y\": 0.290809\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.600515,\n\t\t\t\t\"y\": 0.300323\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.587493,\n\t\t\t\t\"y\": 0.308657\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.57373,\n\t\t\t\t\"y\": 0.315694\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.559353,\n\t\t\t\t\"y\": 0.321368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.544508,\n\t\t\t\t\"y\": 0.325662\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.529337,\n\t\t\t\t\"y\": 0.328606\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.513973,\n\t\t\t\t\"y\": 0.330266\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.498526,\n\t\t\t\t\"y\": 0.330727\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.483087,\n\t\t\t\t\"y\": 0.330044\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.467751,\n\t\t\t\t\"y\": 0.328146\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.452631,\n\t\t\t\t\"y\": 0.324949\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.437864,\n\t\t\t\t\"y\": 0.320392\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.423594,\n\t\t\t\t\"y\": 0.314456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.409963,\n\t\t\t\t\"y\": 0.307164\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.397094,\n\t\t\t\t\"y\": 0.298596\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.385073,\n\t\t\t\t\"y\": 0.288867\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.374037,\n\t\t\t\t\"y\": 0.278032\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t]\n\t},\n\t\"anguished\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.841084,\n\t\t\t\t\"y\": 0.665623\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.834425,\n\t\t\t\t\"y\": 0.672666\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.827528,\n\t\t\t\t\"y\": 0.679475\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.820405,\n\t\t\t\t\"y\": 0.686047\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.813068,\n\t\t\t\t\"y\": 0.692377\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.805527,\n\t\t\t\t\"y\": 0.698463\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.797793,\n\t\t\t\t\"y\": 0.704299\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.789875,\n\t\t\t\t\"y\": 0.709883\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.781782,\n\t\t\t\t\"y\": 0.715209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.773524,\n\t\t\t\t\"y\": 0.720275\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.76511,\n\t\t\t\t\"y\": 0.725075\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.756548,\n\t\t\t\t\"y\": 0.729605\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.747846,\n\t\t\t\t\"y\": 0.73386\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.739013,\n\t\t\t\t\"y\": 0.737834\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.730057,\n\t\t\t\t\"y\": 0.741522\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.720987,\n\t\t\t\t\"y\": 0.744917\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.711811,\n\t\t\t\t\"y\": 0.748013\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.702537,\n\t\t\t\t\"y\": 0.750803\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.693176,\n\t\t\t\t\"y\": 0.753279\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.683735,\n\t\t\t\t\"y\": 0.755434\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.674225,\n\t\t\t\t\"y\": 0.757259\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.664657,\n\t\t\t\t\"y\": 0.758745\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.655042,\n\t\t\t\t\"y\": 0.759882\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.64539,\n\t\t\t\t\"y\": 0.760659\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.647298,\n\t\t\t\t\"y\": 0.764004\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.65599,\n\t\t\t\t\"y\": 0.768272\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.665024,\n\t\t\t\t\"y\": 0.771754\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.674321,\n\t\t\t\t\"y\": 0.774457\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.683806,\n\t\t\t\t\"y\": 0.776392\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.693414,\n\t\t\t\t\"y\": 0.777578\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.703085,\n\t\t\t\t\"y\": 0.778032\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.712762,\n\t\t\t\t\"y\": 0.777777\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.722397,\n\t\t\t\t\"y\": 0.776834\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.731944,\n\t\t\t\t\"y\": 0.775223\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.741359,\n\t\t\t\t\"y\": 0.772967\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.750603,\n\t\t\t\t\"y\": 0.770085\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.759637,\n\t\t\t\t\"y\": 0.766597\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.768422,\n\t\t\t\t\"y\": 0.762521\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.776921,\n\t\t\t\t\"y\": 0.757876\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.785096,\n\t\t\t\t\"y\": 0.752679\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.792907,\n\t\t\t\t\"y\": 0.746948\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.800315,\n\t\t\t\t\"y\": 0.740703\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.807276,\n\t\t\t\t\"y\": 0.733963\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.813748,\n\t\t\t\t\"y\": 0.726748\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.819682,\n\t\t\t\t\"y\": 0.719084\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.825029,\n\t\t\t\t\"y\": 0.710998\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.829737,\n\t\t\t\t\"y\": 0.702523\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.833752,\n\t\t\t\t\"y\": 0.693697\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.837018,\n\t\t\t\t\"y\": 0.684567\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.839479,\n\t\t\t\t\"y\": 0.675187\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.158916,\n\t\t\t\t\"y\": 0.665623\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.165575,\n\t\t\t\t\"y\": 0.672666\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.172472,\n\t\t\t\t\"y\": 0.679475\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.179595,\n\t\t\t\t\"y\": 0.686047\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.186932,\n\t\t\t\t\"y\": 0.692377\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.194473,\n\t\t\t\t\"y\": 0.698463\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.202207,\n\t\t\t\t\"y\": 0.704299\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.210125,\n\t\t\t\t\"y\": 0.709883\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.218218,\n\t\t\t\t\"y\": 0.715209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.226476,\n\t\t\t\t\"y\": 0.720275\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.23489,\n\t\t\t\t\"y\": 0.725075\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.243452,\n\t\t\t\t\"y\": 0.729605\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.252154,\n\t\t\t\t\"y\": 0.73386\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.260987,\n\t\t\t\t\"y\": 0.737834\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.269943,\n\t\t\t\t\"y\": 0.741522\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.279013,\n\t\t\t\t\"y\": 0.744917\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.288189,\n\t\t\t\t\"y\": 0.748013\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.297463,\n\t\t\t\t\"y\": 0.750803\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.306824,\n\t\t\t\t\"y\": 0.753279\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.316265,\n\t\t\t\t\"y\": 0.755434\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.325775,\n\t\t\t\t\"y\": 0.757259\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.335343,\n\t\t\t\t\"y\": 0.758745\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.344958,\n\t\t\t\t\"y\": 0.759882\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.35461,\n\t\t\t\t\"y\": 0.760659\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.352702,\n\t\t\t\t\"y\": 0.764004\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.34401,\n\t\t\t\t\"y\": 0.768272\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.334976,\n\t\t\t\t\"y\": 0.771754\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.325679,\n\t\t\t\t\"y\": 0.774457\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.316194,\n\t\t\t\t\"y\": 0.776392\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.306586,\n\t\t\t\t\"y\": 0.777578\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.296915,\n\t\t\t\t\"y\": 0.778032\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.287238,\n\t\t\t\t\"y\": 0.777777\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.277603,\n\t\t\t\t\"y\": 0.776834\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.268056,\n\t\t\t\t\"y\": 0.775223\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.258641,\n\t\t\t\t\"y\": 0.772967\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.249397,\n\t\t\t\t\"y\": 0.770085\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.240363,\n\t\t\t\t\"y\": 0.766597\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.231578,\n\t\t\t\t\"y\": 0.762521\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.223079,\n\t\t\t\t\"y\": 0.757876\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.214904,\n\t\t\t\t\"y\": 0.752679\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.207093,\n\t\t\t\t\"y\": 0.746948\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.199685,\n\t\t\t\t\"y\": 0.740703\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.192724,\n\t\t\t\t\"y\": 0.733963\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.186252,\n\t\t\t\t\"y\": 0.726748\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.180318,\n\t\t\t\t\"y\": 0.719084\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.174971,\n\t\t\t\t\"y\": 0.710998\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.170263,\n\t\t\t\t\"y\": 0.702523\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.166248,\n\t\t\t\t\"y\": 0.693697\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.162982,\n\t\t\t\t\"y\": 0.684567\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.160521,\n\t\t\t\t\"y\": 0.675187\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.742431,\n\t\t\t\t\"y\": 0.518479\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.742105,\n\t\t\t\t\"y\": 0.511157\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.741124,\n\t\t\t\t\"y\": 0.503895\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.739484,\n\t\t\t\t\"y\": 0.496754\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.737174,\n\t\t\t\t\"y\": 0.489801\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.734183,\n\t\t\t\t\"y\": 0.483114\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.7305,\n\t\t\t\t\"y\": 0.476785\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.726118,\n\t\t\t\t\"y\": 0.47092\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.72104,\n\t\t\t\t\"y\": 0.46565\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.715292,\n\t\t\t\t\"y\": 0.461124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.708935,\n\t\t\t\t\"y\": 0.45751\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.702078,\n\t\t\t\t\"y\": 0.454978\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.694889,\n\t\t\t\t\"y\": 0.45367\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.687583,\n\t\t\t\t\"y\": 0.45367\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.680394,\n\t\t\t\t\"y\": 0.454978\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.673537,\n\t\t\t\t\"y\": 0.45751\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.66718,\n\t\t\t\t\"y\": 0.461124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.661432,\n\t\t\t\t\"y\": 0.46565\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.656355,\n\t\t\t\t\"y\": 0.47092\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.651972,\n\t\t\t\t\"y\": 0.476785\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.648289,\n\t\t\t\t\"y\": 0.483114\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.645298,\n\t\t\t\t\"y\": 0.489801\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.642988,\n\t\t\t\t\"y\": 0.496754\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.641348,\n\t\t\t\t\"y\": 0.503895\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.640368,\n\t\t\t\t\"y\": 0.511157\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.640041,\n\t\t\t\t\"y\": 0.518479\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.640368,\n\t\t\t\t\"y\": 0.5258\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.641348,\n\t\t\t\t\"y\": 0.533062\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.642988,\n\t\t\t\t\"y\": 0.540203\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.645298,\n\t\t\t\t\"y\": 0.547156\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.648289,\n\t\t\t\t\"y\": 0.553843\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.651972,\n\t\t\t\t\"y\": 0.560172\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.656355,\n\t\t\t\t\"y\": 0.566037\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.661432,\n\t\t\t\t\"y\": 0.571307\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.66718,\n\t\t\t\t\"y\": 0.575833\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.673537,\n\t\t\t\t\"y\": 0.579447\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.680394,\n\t\t\t\t\"y\": 0.581979\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.687583,\n\t\t\t\t\"y\": 0.583288\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.694889,\n\t\t\t\t\"y\": 0.583288\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.702078,\n\t\t\t\t\"y\": 0.581979\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.708935,\n\t\t\t\t\"y\": 0.579447\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.715292,\n\t\t\t\t\"y\": 0.575833\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.72104,\n\t\t\t\t\"y\": 0.571307\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.726118,\n\t\t\t\t\"y\": 0.566037\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.7305,\n\t\t\t\t\"y\": 0.560172\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.734183,\n\t\t\t\t\"y\": 0.553843\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.737174,\n\t\t\t\t\"y\": 0.547156\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.739484,\n\t\t\t\t\"y\": 0.540203\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.741124,\n\t\t\t\t\"y\": 0.533062\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.742105,\n\t\t\t\t\"y\": 0.5258\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.257569,\n\t\t\t\t\"y\": 0.518479\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.257895,\n\t\t\t\t\"y\": 0.511157\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.258876,\n\t\t\t\t\"y\": 0.503895\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.260516,\n\t\t\t\t\"y\": 0.496754\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.262826,\n\t\t\t\t\"y\": 0.489801\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.265817,\n\t\t\t\t\"y\": 0.483114\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.2695,\n\t\t\t\t\"y\": 0.476785\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.273882,\n\t\t\t\t\"y\": 0.47092\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.27896,\n\t\t\t\t\"y\": 0.46565\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.284708,\n\t\t\t\t\"y\": 0.461124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.291065,\n\t\t\t\t\"y\": 0.45751\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.297922,\n\t\t\t\t\"y\": 0.454978\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.305111,\n\t\t\t\t\"y\": 0.45367\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.312417,\n\t\t\t\t\"y\": 0.45367\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.319606,\n\t\t\t\t\"y\": 0.454978\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.326463,\n\t\t\t\t\"y\": 0.45751\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.33282,\n\t\t\t\t\"y\": 0.461124\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.338568,\n\t\t\t\t\"y\": 0.46565\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.343645,\n\t\t\t\t\"y\": 0.47092\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.348028,\n\t\t\t\t\"y\": 0.476785\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.351711,\n\t\t\t\t\"y\": 0.483114\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.354702,\n\t\t\t\t\"y\": 0.489801\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.357012,\n\t\t\t\t\"y\": 0.496754\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.358652,\n\t\t\t\t\"y\": 0.503895\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.359632,\n\t\t\t\t\"y\": 0.511157\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.359959,\n\t\t\t\t\"y\": 0.518479\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.359632,\n\t\t\t\t\"y\": 0.5258\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.358652,\n\t\t\t\t\"y\": 0.533062\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.357012,\n\t\t\t\t\"y\": 0.540203\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.354702,\n\t\t\t\t\"y\": 0.547156\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.351711,\n\t\t\t\t\"y\": 0.553843\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.348028,\n\t\t\t\t\"y\": 0.560172\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.343645,\n\t\t\t\t\"y\": 0.566037\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.338568,\n\t\t\t\t\"y\": 0.571307\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.33282,\n\t\t\t\t\"y\": 0.575833\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.326463,\n\t\t\t\t\"y\": 0.579447\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.319606,\n\t\t\t\t\"y\": 0.581979\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.312417,\n\t\t\t\t\"y\": 0.583288\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.305111,\n\t\t\t\t\"y\": 0.583288\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.297922,\n\t\t\t\t\"y\": 0.581979\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.291065,\n\t\t\t\t\"y\": 0.579447\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.284708,\n\t\t\t\t\"y\": 0.575833\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.27896,\n\t\t\t\t\"y\": 0.571307\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.273882,\n\t\t\t\t\"y\": 0.566037\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.2695,\n\t\t\t\t\"y\": 0.560172\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.265817,\n\t\t\t\t\"y\": 0.553843\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.262826,\n\t\t\t\t\"y\": 0.547156\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.260516,\n\t\t\t\t\"y\": 0.540203\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.258876,\n\t\t\t\t\"y\": 0.533062\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.257895,\n\t\t\t\t\"y\": 0.5258\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.437209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 3.4834e-10\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.437209\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.364222,\n\t\t\t\t\"y\": 0.266079\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.356036,\n\t\t\t\t\"y\": 0.252957\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.350177,\n\t\t\t\t\"y\": 0.238652\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.347724,\n\t\t\t\t\"y\": 0.223404\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.349488,\n\t\t\t\t\"y\": 0.208071\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.355779,\n\t\t\t\t\"y\": 0.194\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.366523,\n\t\t\t\t\"y\": 0.182993\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.380618,\n\t\t\t\t\"y\": 0.176875\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.395993,\n\t\t\t\t\"y\": 0.176073\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.411216,\n\t\t\t\t\"y\": 0.178681\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.426137,\n\t\t\t\t\"y\": 0.182719\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.440936,\n\t\t\t\t\"y\": 0.187192\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.455783,\n\t\t\t\t\"y\": 0.1915\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.470801,\n\t\t\t\t\"y\": 0.195154\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.486049,\n\t\t\t\t\"y\": 0.197664\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.501474,\n\t\t\t\t\"y\": 0.198487\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.516876,\n\t\t\t\t\"y\": 0.197298\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.53208,\n\t\t\t\t\"y\": 0.194529\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.547059,\n\t\t\t\t\"y\": 0.190714\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.561886,\n\t\t\t\t\"y\": 0.186336\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.576693,\n\t\t\t\t\"y\": 0.181893\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.59166,\n\t\t\t\t\"y\": 0.178031\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.606949,\n\t\t\t\t\"y\": 0.175879\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.622235,\n\t\t\t\t\"y\": 0.177614\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.635837,\n\t\t\t\t\"y\": 0.184762\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.645776,\n\t\t\t\t\"y\": 0.196508\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.651191,\n\t\t\t\t\"y\": 0.210945\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.65212,\n\t\t\t\t\"y\": 0.226354\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.648931,\n\t\t\t\t\"y\": 0.241467\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.642556,\n\t\t\t\t\"y\": 0.255552\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.634016,\n\t\t\t\t\"y\": 0.268447\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.623943,\n\t\t\t\t\"y\": 0.280184\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.612705,\n\t\t\t\t\"y\": 0.290809\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.600515,\n\t\t\t\t\"y\": 0.300323\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.587493,\n\t\t\t\t\"y\": 0.308657\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.57373,\n\t\t\t\t\"y\": 0.315694\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.559353,\n\t\t\t\t\"y\": 0.321368\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.544508,\n\t\t\t\t\"y\": 0.325662\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.529337,\n\t\t\t\t\"y\": 0.328606\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.513973,\n\t\t\t\t\"y\": 0.330266\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.498526,\n\t\t\t\t\"y\": 0.330727\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.483087,\n\t\t\t\t\"y\": 0.330044\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.467751,\n\t\t\t\t\"y\": 0.328146\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.452631,\n\t\t\t\t\"y\": 0.324949\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.437864,\n\t\t\t\t\"y\": 0.320392\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.423594,\n\t\t\t\t\"y\": 0.314456\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.409963,\n\t\t\t\t\"y\": 0.307164\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.397094,\n\t\t\t\t\"y\": 0.298596\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.385073,\n\t\t\t\t\"y\": 0.288867\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.374037,\n\t\t\t\t\"y\": 0.278032\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t]\n\t},\n\t\"dizzy_face\": {\n\t\t\"lb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.827877,\n\t\t\t\t\"y\": 0.755618\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.820405,\n\t\t\t\t\"y\": 0.761788\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.812725,\n\t\t\t\t\"y\": 0.767696\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.80485,\n\t\t\t\t\"y\": 0.773341\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.796792,\n\t\t\t\t\"y\": 0.77872\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.788562,\n\t\t\t\t\"y\": 0.783831\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.78017,\n\t\t\t\t\"y\": 0.78867\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.771627,\n\t\t\t\t\"y\": 0.793237\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.762943,\n\t\t\t\t\"y\": 0.797527\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.754126,\n\t\t\t\t\"y\": 0.801537\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.745187,\n\t\t\t\t\"y\": 0.805265\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.736134,\n\t\t\t\t\"y\": 0.808706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.726976,\n\t\t\t\t\"y\": 0.811857\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.717723,\n\t\t\t\t\"y\": 0.814713\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.708383,\n\t\t\t\t\"y\": 0.81727\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.698965,\n\t\t\t\t\"y\": 0.819522\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.689478,\n\t\t\t\t\"y\": 0.821465\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.679933,\n\t\t\t\t\"y\": 0.823092\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.670338,\n\t\t\t\t\"y\": 0.824397\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.660705,\n\t\t\t\t\"y\": 0.825373\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.651044,\n\t\t\t\t\"y\": 0.826013\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.641366,\n\t\t\t\t\"y\": 0.826309\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.631684,\n\t\t\t\t\"y\": 0.826253\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.62201,\n\t\t\t\t\"y\": 0.825836\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.623493,\n\t\t\t\t\"y\": 0.82939\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.631595,\n\t\t\t\t\"y\": 0.834696\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.640134,\n\t\t\t\t\"y\": 0.839265\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.649029,\n\t\t\t\t\"y\": 0.843092\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.658205,\n\t\t\t\t\"y\": 0.846181\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.667595,\n\t\t\t\t\"y\": 0.84854\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.677136,\n\t\t\t\t\"y\": 0.850182\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.686771,\n\t\t\t\t\"y\": 0.85112\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.696449,\n\t\t\t\t\"y\": 0.851371\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.706121,\n\t\t\t\t\"y\": 0.850948\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.715742,\n\t\t\t\t\"y\": 0.849869\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.725269,\n\t\t\t\t\"y\": 0.848147\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.734662,\n\t\t\t\t\"y\": 0.845797\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.743881,\n\t\t\t\t\"y\": 0.842834\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.752885,\n\t\t\t\t\"y\": 0.839271\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.761635,\n\t\t\t\t\"y\": 0.83512\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.77009,\n\t\t\t\t\"y\": 0.830395\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.778208,\n\t\t\t\t\"y\": 0.825109\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.785943,\n\t\t\t\t\"y\": 0.819277\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.793251,\n\t\t\t\t\"y\": 0.812914\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.80008,\n\t\t\t\t\"y\": 0.806039\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.806378,\n\t\t\t\t\"y\": 0.798673\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.81209,\n\t\t\t\t\"y\": 0.790842\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.817157,\n\t\t\t\t\"y\": 0.782577\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.821518,\n\t\t\t\t\"y\": 0.773918\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.825112,\n\t\t\t\t\"y\": 0.764912\n\t\t\t}\n\t\t],\n\t\t\"rb\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.172123,\n\t\t\t\t\"y\": 0.755618\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.179595,\n\t\t\t\t\"y\": 0.761788\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.187275,\n\t\t\t\t\"y\": 0.767696\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.19515,\n\t\t\t\t\"y\": 0.773341\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.203208,\n\t\t\t\t\"y\": 0.77872\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.211438,\n\t\t\t\t\"y\": 0.783831\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.21983,\n\t\t\t\t\"y\": 0.78867\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.228373,\n\t\t\t\t\"y\": 0.793237\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.237057,\n\t\t\t\t\"y\": 0.797527\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.245874,\n\t\t\t\t\"y\": 0.801537\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.254813,\n\t\t\t\t\"y\": 0.805265\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.263866,\n\t\t\t\t\"y\": 0.808706\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.273024,\n\t\t\t\t\"y\": 0.811857\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.282277,\n\t\t\t\t\"y\": 0.814713\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.291617,\n\t\t\t\t\"y\": 0.81727\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.301035,\n\t\t\t\t\"y\": 0.819522\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.310522,\n\t\t\t\t\"y\": 0.821465\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.320067,\n\t\t\t\t\"y\": 0.823092\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.329662,\n\t\t\t\t\"y\": 0.824397\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.339295,\n\t\t\t\t\"y\": 0.825373\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.348956,\n\t\t\t\t\"y\": 0.826013\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.358634,\n\t\t\t\t\"y\": 0.826309\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.368316,\n\t\t\t\t\"y\": 0.826253\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.37799,\n\t\t\t\t\"y\": 0.825836\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.376507,\n\t\t\t\t\"y\": 0.82939\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.368405,\n\t\t\t\t\"y\": 0.834696\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.359866,\n\t\t\t\t\"y\": 0.839265\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.350971,\n\t\t\t\t\"y\": 0.843092\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.341795,\n\t\t\t\t\"y\": 0.846181\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.332405,\n\t\t\t\t\"y\": 0.84854\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.322864,\n\t\t\t\t\"y\": 0.850182\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.313229,\n\t\t\t\t\"y\": 0.85112\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.303551,\n\t\t\t\t\"y\": 0.851371\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.293879,\n\t\t\t\t\"y\": 0.850948\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.284258,\n\t\t\t\t\"y\": 0.849869\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.274731,\n\t\t\t\t\"y\": 0.848147\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.265338,\n\t\t\t\t\"y\": 0.845797\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.256119,\n\t\t\t\t\"y\": 0.842834\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.247115,\n\t\t\t\t\"y\": 0.839271\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.238365,\n\t\t\t\t\"y\": 0.83512\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.22991,\n\t\t\t\t\"y\": 0.830395\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.221792,\n\t\t\t\t\"y\": 0.825109\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.214057,\n\t\t\t\t\"y\": 0.819277\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.206749,\n\t\t\t\t\"y\": 0.812914\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.19992,\n\t\t\t\t\"y\": 0.806039\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.193622,\n\t\t\t\t\"y\": 0.798673\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.18791,\n\t\t\t\t\"y\": 0.790842\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.182843,\n\t\t\t\t\"y\": 0.782577\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.178482,\n\t\t\t\t\"y\": 0.773918\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.174888,\n\t\t\t\t\"y\": 0.764912\n\t\t\t}\n\t\t],\n\t\t\"le\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.756852,\n\t\t\t\t\"y\": 0.486857\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.742382,\n\t\t\t\t\"y\": 0.476199\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.723672,\n\t\t\t\t\"y\": 0.483189\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.708534,\n\t\t\t\t\"y\": 0.496633\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.6948,\n\t\t\t\t\"y\": 0.511553\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.680965,\n\t\t\t\t\"y\": 0.526378\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.666554,\n\t\t\t\t\"y\": 0.540642\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.652155,\n\t\t\t\t\"y\": 0.542478\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.637712,\n\t\t\t\t\"y\": 0.528245\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.623795,\n\t\t\t\t\"y\": 0.513498\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.610117,\n\t\t\t\t\"y\": 0.498526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.59528,\n\t\t\t\t\"y\": 0.484736\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.577064,\n\t\t\t\t\"y\": 0.476411\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.560294,\n\t\t\t\t\"y\": 0.484257\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.567243,\n\t\t\t\t\"y\": 0.502628\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.580983,\n\t\t\t\t\"y\": 0.517523\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.595878,\n\t\t\t\t\"y\": 0.531279\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.611112,\n\t\t\t\t\"y\": 0.544658\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.626102,\n\t\t\t\t\"y\": 0.558308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.63682,\n\t\t\t\t\"y\": 0.575005\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.625687,\n\t\t\t\t\"y\": 0.591217\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.609769,\n\t\t\t\t\"y\": 0.603766\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.59364,\n\t\t\t\t\"y\": 0.616048\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.577979,\n\t\t\t\t\"y\": 0.628918\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.563881,\n\t\t\t\t\"y\": 0.643455\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.555162,\n\t\t\t\t\"y\": 0.661529\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.567869,\n\t\t\t\t\"y\": 0.671771\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.586363,\n\t\t\t\t\"y\": 0.663653\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.603393,\n\t\t\t\t\"y\": 0.652673\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.619625,\n\t\t\t\t\"y\": 0.640533\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.635221,\n\t\t\t\t\"y\": 0.627581\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.650207,\n\t\t\t\t\"y\": 0.613926\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.664733,\n\t\t\t\t\"y\": 0.612114\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.679643,\n\t\t\t\t\"y\": 0.625852\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.695158,\n\t\t\t\t\"y\": 0.638901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.711305,\n\t\t\t\t\"y\": 0.651155\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.728211,\n\t\t\t\t\"y\": 0.662328\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.746438,\n\t\t\t\t\"y\": 0.671086\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.761794,\n\t\t\t\t\"y\": 0.664148\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.75452,\n\t\t\t\t\"y\": 0.645559\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.740807,\n\t\t\t\t\"y\": 0.630671\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.725261,\n\t\t\t\t\"y\": 0.617663\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.709159,\n\t\t\t\t\"y\": 0.605347\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.693154,\n\t\t\t\t\"y\": 0.592906\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.680301,\n\t\t\t\t\"y\": 0.577607\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.688886,\n\t\t\t\t\"y\": 0.560169\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.703754,\n\t\t\t\t\"y\": 0.546389\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.718996,\n\t\t\t\t\"y\": 0.533019\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.733965,\n\t\t\t\t\"y\": 0.519344\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.747948,\n\t\t\t\t\"y\": 0.504671\n\t\t\t}\n\t\t],\n\t\t\"re\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.243148,\n\t\t\t\t\"y\": 0.486857\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.257618,\n\t\t\t\t\"y\": 0.476199\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.276328,\n\t\t\t\t\"y\": 0.483189\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.291466,\n\t\t\t\t\"y\": 0.496633\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.3052,\n\t\t\t\t\"y\": 0.511553\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.319035,\n\t\t\t\t\"y\": 0.526378\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.333446,\n\t\t\t\t\"y\": 0.540642\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.347845,\n\t\t\t\t\"y\": 0.542478\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.362288,\n\t\t\t\t\"y\": 0.528245\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.376205,\n\t\t\t\t\"y\": 0.513498\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.389883,\n\t\t\t\t\"y\": 0.498526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.40472,\n\t\t\t\t\"y\": 0.484736\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.422936,\n\t\t\t\t\"y\": 0.476411\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.439706,\n\t\t\t\t\"y\": 0.484257\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.432757,\n\t\t\t\t\"y\": 0.502628\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.419017,\n\t\t\t\t\"y\": 0.517523\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.404122,\n\t\t\t\t\"y\": 0.531279\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.388888,\n\t\t\t\t\"y\": 0.544658\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.373898,\n\t\t\t\t\"y\": 0.558308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.36318,\n\t\t\t\t\"y\": 0.575005\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.374313,\n\t\t\t\t\"y\": 0.591217\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.390231,\n\t\t\t\t\"y\": 0.603766\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.40636,\n\t\t\t\t\"y\": 0.616048\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.422021,\n\t\t\t\t\"y\": 0.628918\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.436119,\n\t\t\t\t\"y\": 0.643455\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.444838,\n\t\t\t\t\"y\": 0.661529\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.432131,\n\t\t\t\t\"y\": 0.671771\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.413637,\n\t\t\t\t\"y\": 0.663653\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.396607,\n\t\t\t\t\"y\": 0.652673\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.380375,\n\t\t\t\t\"y\": 0.640533\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.364779,\n\t\t\t\t\"y\": 0.627581\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.349793,\n\t\t\t\t\"y\": 0.613926\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.335267,\n\t\t\t\t\"y\": 0.612114\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.320357,\n\t\t\t\t\"y\": 0.625852\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.304842,\n\t\t\t\t\"y\": 0.638901\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.288695,\n\t\t\t\t\"y\": 0.651155\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.271789,\n\t\t\t\t\"y\": 0.662328\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.253562,\n\t\t\t\t\"y\": 0.671086\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.238206,\n\t\t\t\t\"y\": 0.664148\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.24548,\n\t\t\t\t\"y\": 0.645559\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.259193,\n\t\t\t\t\"y\": 0.630671\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.274739,\n\t\t\t\t\"y\": 0.617663\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.290841,\n\t\t\t\t\"y\": 0.605347\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.306846,\n\t\t\t\t\"y\": 0.592906\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.319699,\n\t\t\t\t\"y\": 0.577607\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.311114,\n\t\t\t\t\"y\": 0.560169\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.296246,\n\t\t\t\t\"y\": 0.546389\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.281004,\n\t\t\t\t\"y\": 0.533019\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.266035,\n\t\t\t\t\"y\": 0.519344\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.252052,\n\t\t\t\t\"y\": 0.504671\n\t\t\t}\n\t\t],\n\t\t\"head\": [\n\t\t\t{\n\t\t\t\t\"x\": 1,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.992115\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.976468\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.953308\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.922999\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.886018\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.84295\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.794474\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.741353\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.684426\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.624591\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.562791\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.003943,\n\t\t\t\t\"y\": 0.437209\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.015708,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.035112,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.061847,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.095492,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.135516,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.181288,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.232087,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.28711,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.345492,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.406309,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.468605,\n\t\t\t\t\"y\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.531395,\n\t\t\t\t\"y\": 3.4834e-10\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.593691,\n\t\t\t\t\"y\": 0.007885\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654508,\n\t\t\t\t\"y\": 0.023532\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.71289,\n\t\t\t\t\"y\": 0.046692\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.767913,\n\t\t\t\t\"y\": 0.077001\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.818712,\n\t\t\t\t\"y\": 0.113982\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.864484,\n\t\t\t\t\"y\": 0.15705\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.904508,\n\t\t\t\t\"y\": 0.205526\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.938153,\n\t\t\t\t\"y\": 0.258647\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.964888,\n\t\t\t\t\"y\": 0.315574\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.984292,\n\t\t\t\t\"y\": 0.375409\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.996057,\n\t\t\t\t\"y\": 0.437209\n\t\t\t}\n\t\t],\n\t\t\"mouth\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.345081,\n\t\t\t\t\"y\": 0.254813\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.346346,\n\t\t\t\t\"y\": 0.235693\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.350113,\n\t\t\t\t\"y\": 0.216906\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.356305,\n\t\t\t\t\"y\": 0.198776\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.364798,\n\t\t\t\t\"y\": 0.181606\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.375425,\n\t\t\t\t\"y\": 0.165674\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.387989,\n\t\t\t\t\"y\": 0.151224\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.402263,\n\t\t\t\t\"y\": 0.13847\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.418006,\n\t\t\t\t\"y\": 0.127586\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.43496,\n\t\t\t\t\"y\": 0.118716\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.452863,\n\t\t\t\t\"y\": 0.111971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.471446,\n\t\t\t\t\"y\": 0.10743\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.490436,\n\t\t\t\t\"y\": 0.105147\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.509564,\n\t\t\t\t\"y\": 0.105147\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.528554,\n\t\t\t\t\"y\": 0.10743\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.547137,\n\t\t\t\t\"y\": 0.111971\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.56504,\n\t\t\t\t\"y\": 0.118716\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.581994,\n\t\t\t\t\"y\": 0.127586\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.597737,\n\t\t\t\t\"y\": 0.13847\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.612011,\n\t\t\t\t\"y\": 0.151224\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.624575,\n\t\t\t\t\"y\": 0.165674\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.635202,\n\t\t\t\t\"y\": 0.181606\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.643695,\n\t\t\t\t\"y\": 0.198776\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.649887,\n\t\t\t\t\"y\": 0.216906\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.653654,\n\t\t\t\t\"y\": 0.235693\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.654919,\n\t\t\t\t\"y\": 0.254813\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.653654,\n\t\t\t\t\"y\": 0.273934\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.649887,\n\t\t\t\t\"y\": 0.292721\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.643695,\n\t\t\t\t\"y\": 0.310851\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.635202,\n\t\t\t\t\"y\": 0.328021\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.624575,\n\t\t\t\t\"y\": 0.343953\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.612011,\n\t\t\t\t\"y\": 0.358402\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.597737,\n\t\t\t\t\"y\": 0.371157\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.581994,\n\t\t\t\t\"y\": 0.382041\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.56504,\n\t\t\t\t\"y\": 0.390911\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.547137,\n\t\t\t\t\"y\": 0.397656\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.528554,\n\t\t\t\t\"y\": 0.402197\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.509564,\n\t\t\t\t\"y\": 0.40448\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.490436,\n\t\t\t\t\"y\": 0.40448\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.471446,\n\t\t\t\t\"y\": 0.402197\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.452863,\n\t\t\t\t\"y\": 0.397656\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.43496,\n\t\t\t\t\"y\": 0.390911\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.418006,\n\t\t\t\t\"y\": 0.382041\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.402263,\n\t\t\t\t\"y\": 0.371157\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.387989,\n\t\t\t\t\"y\": 0.358402\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.375425,\n\t\t\t\t\"y\": 0.343953\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.364798,\n\t\t\t\t\"y\": 0.328021\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.356305,\n\t\t\t\t\"y\": 0.310851\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.350113,\n\t\t\t\t\"y\": 0.292721\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.346346,\n\t\t\t\t\"y\": 0.273934\n\t\t\t}\n\t\t],\n\t\t\"tongue\": [\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"x\": 0.5,\n\t\t\t\t\"y\": 0.5\n\t\t\t}\n\t\t]\n\t}\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./public/emotions.json\n// module id = 145\n// module chunks = 0","module.exports = __webpack_public_path__ + \"EmojiBackground.5da8c62d.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./public/EmojiBackground.png\n// module id = 146\n// module chunks = 0"],"sourceRoot":""}